var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbstractAuthGuard.html",[0,3.374,1,3.578]],["body/guards/AbstractAuthGuard.html",[1,5.529,2,5.924,3,0.116,4,0.094,5,0.024,6,7.814,7,4.113,8,0.075,9,2.586,10,0.151,11,6.354,12,3.673,13,1.379,14,7.283,15,0.304,16,0.559,17,5.295,18,2.935,19,3.97,20,5.65,21,3.152,22,4.222,23,1.565,24,3.059,25,2.656,26,6.354,27,6.354,28,5.65,29,5.953,30,0.672,31,4.625,32,6.354,33,3.651,34,3.964,35,3.31,36,6.948,37,6.948,38,2.623,39,6.354,40,3.964,41,3.925,42,5.707,43,1.244,44,0.007,45,0.435,46,0.159,47,1.221,48,5.613,49,5.186,50,1.804,51,2.346,52,1.306,53,3.136,54,6.354,55,4.625,56,6.354,57,5.924,58,1.13,59,4.564,60,5.953,61,3.954,62,6.354,63,0.435,64,4.625,65,3.964,66,3.327,67,6.354,68,4.136,69,3.327,70,4.84,71,2.622,72,6.354,73,4.136,74,0.24,75,4.625,76,1.022,77,3.775,78,3.775,79,3.775,80,4.625,81,1.51,82,3.775,83,3.523,84,3.523,85,3.322,86,0.109,87,1.623,88,2.192,89,2.935,90,4.113,91,4.625,92,6.354,93,2.45,94,4.625,95,4.625,96,4.113,97,3.964,98,2.204,99,6.354,100,4.625,101,4.625,102,4.625,103,2.242,104,4.113,105,4.625,106,4.625,107,4.625,108,4.625,109,4.625,110,4.625,111,4.625,112,4.625,113,4.625,114,4.625,115,0.005,116,0.005]],["title/classes/AbstractProcess.html",[10,0.091,117,3.834]],["body/classes/AbstractProcess.html",[3,0.086,4,0.07,5,0.017,8,0.065,9,2.49,10,0.148,15,0.226,16,0.621,17,5.61,18,2.656,21,3.089,23,1.265,24,3.393,25,2.618,30,0.817,34,4.255,43,1.054,44,0.007,45,0.369,46,0.168,47,1.228,49,4.193,50,1.81,51,1.897,63,0.369,74,0.236,76,0.76,86,0.081,88,2.205,89,1.782,93,3.53,98,2.133,103,1.629,115,0.004,116,0.004,117,4.193,118,0.981,119,8.905,120,3.439,121,1.288,122,4.177,123,2.868,124,2.775,125,2.969,126,5.019,127,4.684,128,5.567,129,6.065,130,4.568,131,6.065,132,6.065,133,4.568,134,3.708,135,5.243,136,5.468,137,2.177,138,5.137,139,3.439,140,4.003,141,3.439,142,4.003,143,3.439,144,1.177,145,3.439,146,3.913,147,4.417,148,4.568,149,4.155,150,3.439,151,6.352,152,4.275,153,6.809,154,4.568,155,6.809,156,6.809,157,6.809,158,4.568,159,4.568,160,3.439,161,4.568,162,3.439,163,5.196,164,4.568,165,3.439,166,3.504,167,3.081,168,3.439,169,3.913,170,3.913,171,3.439,172,2.775,173,3.058,174,1.735,175,4.74,176,3.439,177,4.568,178,5.311,179,3.913,180,2.466,181,3.612,182,1.822,183,0.911,184,1.387,185,2.868,186,6.491,187,2.346,188,2.62,189,2.807,190,2.62,191,3.439,192,3.439,193,3.439,194,2.346,195,2.807,196,2.807,197,3.058,198,3.439,199,3.439,200,3.439,201,3.439,202,2.807,203,1.265,204,7.935,205,3.058,206,2.807,207,3.058,208,7.299,209,3.439,210,3.439,211,3.439,212,2.063,213,3.439,214,5.137,215,3.439,216,4.568,217,3.439,218,2.662,219,2.146,220,3.69,221,3.439,222,3.439,223,3.058,224,5.137,225,3.439,226,3.439,227,3.439,228,3.439,229,3.439,230,7.299,231,3.439,232,6.491,233,3.439,234,3.439,235,3.439,236,3.439,237,3.439,238,3.439,239,3.439,240,1.242,241,7.657,242,3.058,243,5.137,244,5.137,245,3.439,246,3.439,247,1.988,248,3.058,249,3.439,250,3.439,251,3.439,252,3.439,253,3.439,254,3.058,255,3.439,256,6.149,257,6.149,258,6.149,259,3.439,260,3.439]],["title/classes/AbstractUserSubscriber.html",[10,0.091,261,3.834]],["body/classes/AbstractUserSubscriber.html",[3,0.123,4,0.099,5,0.025,8,0.076,9,2.454,10,0.144,15,0.321,16,0.797,17,5.584,18,2.589,23,1.624,24,3.276,30,0.74,43,1.279,44,0.007,45,0.448,46,0.2,47,1.256,50,1.704,51,1.804,63,0.536,65,4.114,70,5.023,71,2.932,74,0.244,76,1.079,86,0.115,88,2.255,89,2.589,93,3.219,97,3.047,98,1.694,103,1.747,115,0.005,116,0.005,118,1.394,203,0.807,261,5.382,262,8.347,263,4.343,264,1.144,265,5.382,266,4.293,267,2.03,268,5.382,269,6.594,270,6.594,271,6.594,272,4.884,273,6.594,274,4.884,275,7.108,276,4.28,277,3.955,278,7.108,279,3.682,280,6.594,281,6.594,282,7.108,283,7.108,284,4.884,285,3.812,286,6.359,287,5.382,288,3.682,289,6.594,290,4.884,291,4.293,292,3.082,293,6.094,294,4.343,295,1.203,296,1.504,297,2.639,298,2.929,299,3.987,300,3.987,301,4.884,302,4.343,303,4.343,304,4.884,305,4.884,306,4.884,307,4.884,308,4.884,309,4.884,310,4.884,311,3.987,312,3.18,313,8.601,314,0.792,315,4.884,316,4.884,317,3.331,318,6.594,319,1.627,320,4.884,321,4.343,322,4.884,323,6.594,324,6.594,325,4.884,326,3.331]],["title/interfaces/AudioFileMetadata.html",[327,0.653,328,2.817]],["body/interfaces/AudioFileMetadata.html",[3,0.06,4,0.048,5,0.045,8,0.037,10,0.118,15,0.253,16,0.674,33,2.268,38,0.98,40,1.482,44,0.007,45,0.335,46,0.195,52,0.488,53,3.773,58,0.422,63,0.59,69,2.541,74,0.138,86,0.175,115,0.003,116,0.003,121,2.062,122,1.054,123,1.326,134,1.207,147,1.14,152,3.424,174,1.71,175,3.116,183,1.286,203,1.291,240,1.588,279,2.149,292,2.304,296,0.731,314,1.538,327,1.184,328,2.91,329,0.746,330,1.482,331,3.116,332,2.455,333,3.482,334,3.482,335,3.678,336,3.678,337,3.482,338,3.678,339,3.545,340,3.482,341,3.482,342,3.482,343,3.482,344,3.347,345,3.482,346,3.482,347,1.132,348,1.004,349,2.079,350,2.015,351,1.373,352,0.446,353,1.054,354,1.172,355,1.718,356,0.936,357,1.424,358,1.666,359,0.791,360,4.52,361,4.36,362,3.678,363,2.401,364,1.546,365,1.752,366,0.98,367,1.004,368,1.546,369,4.406,370,1.546,371,1.482,372,4.815,373,1.546,374,5.356,375,1.546,376,4.932,377,2.079,378,0.958,379,2.308,380,3.795,381,2.506,382,4.02,383,1.028,384,3.028,385,3.028,386,1.546,387,2.308,388,3.62,389,2.91,390,3.159,391,4.952,392,1.028,393,4.274,394,1.799,395,2.308,396,3.938,397,1.546,398,1.482,399,1.482,400,1.546,401,4.977,402,3.159,403,2.506,404,2.709,405,1.172,406,2.308,407,2.506,408,2.401,409,1.546,410,1.546,411,1.482,412,2.304,413,3.992,414,2.304,415,2.506,416,1.482,417,2.401,418,1.546,419,3.666,420,2.401,421,2.401,422,1.482,423,1.546,424,1.546,425,1.482,426,3.826,427,1.482,428,2.401,429,1.546,430,3.633,431,1.482,432,1.373,433,1.546,434,1.283,435,4.274,436,1.546,437,1.546,438,1.546,439,2.079,440,1.482,441,1.75,442,2.506,443,2.079,444,1.482,445,2.33,446,3.028,447,1.482,448,1.482,449,1.482,450,1.424,451,3.159,452,1.546,453,1.482,454,1.482,455,1.482,456,0.775,457,1.546,458,1.546,459,1.546,460,1.482,461,1.482,462,1.546,463,1.11,464,1.482,465,1.482,466,3.159,467,1.482,468,1.482,469,3.028,470,2.506,471,2.506,472,2.225,473,2.506,474,1.482,475,1.482,476,1.955,477,1.546,478,1.482,479,1.546,480,1.482,481,0.704,482,1.482,483,1.546,484,1.482,485,1.482,486,1.424,487,2.506,488,1.546,489,2.225,490,2.506,491,1.546,492,2.506,493,1.546,494,1.546,495,1.141,496,1.546,497,1.283,498,1.546,499,1.546,500,1.546,501,1.546,502,2.506,503,1.546,504,2.506,505,1.546,506,2.401,507,2.506,508,1.482,509,1.546,510,1.546,511,3.159,512,1.546,513,3.633,514,3.159,515,3.159,516,3.159,517,1.546,518,4.688,519,1.546,520,3.347,521,4.501,522,1.546,523,1.546,524,1.546,525,2.506,526,2.506,527,1.546,528,1.546,529,1.546,530,1.546,531,1.546,532,1.546,533,1.546,534,1.546,535,2.506,536,1.546,537,1.546,538,1.028,539,1.546,540,2.506,541,2.401,542,1.546,543,1.546,544,1.546,545,1.546,546,1.424,547,2.506,548,4.274,549,1.546,550,1.546,551,3.159,552,1.546,553,1.546,554,1.546,555,2.401,556,1.546,557,1.546,558,1.546,559,1.546,560,3.159,561,2.506,562,1.546,563,1.546,564,2.506,565,1.546,566,2.506,567,1.546,568,1.482,569,1.14,570,1.546,571,3.992,572,1.546,573,1.546,574,1.546,575,1.373,576,1.546,577,1.14,578,1.546,579,3.482,580,1.546,581,1.546,582,2.506,583,2.506,584,2.506,585,1.546,586,1.546,587,1.546,588,1.546,589,1.546,590,1.482,591,1.14,592,1.482,593,1.546,594,1.546,595,1.546,596,2.401,597,1.482,598,1.546,599,1.546,600,1.546,601,3.159,602,2.401,603,1.482,604,1.482,605,1.482,606,1.482,607,1.482,608,0.534,609,0.691,610,1.243,611,1.424]],["title/entities/AudioFileMetadataEntity.html",[264,0.72,612,3.578]],["body/entities/AudioFileMetadataEntity.html",[3,0.114,4,0.092,5,0.048,8,0.043,10,0.087,13,0.984,15,0.619,16,0.757,30,0.868,44,0.007,45,0.505,46,0.205,61,2.118,63,0.57,74,0.178,86,0.106,87,2.489,115,0.005,116,0.005,182,1.857,203,1.186,218,1.963,264,1.1,295,1.116,314,1.491,326,4.274,328,3.759,331,3.499,332,1.93,333,4.481,334,4.481,335,4.308,336,4.308,337,4.481,338,4.308,339,4.152,340,4.481,341,4.481,342,4.481,343,4.481,344,4.308,345,4.481,346,4.481,612,4.774,613,1.27,614,9.417,615,3.092,616,2.219,617,2.831,618,4.819,619,3.747,620,3.701,621,4.031,622,4.834,623,3.454,624,3.454,625,6.267,626,3.701,627,3.454,628,3.701,629,5.115,630,5.115,631,5.115,632,4.031,633,4.533,634,2.303,635,3.256,636,4.533,637,6.267,638,3.454,639,6.267,640,3.256,641,4.031,642,3.454,643,4.031,644,1.423,645,3.093,646,2.531,647,4.533,648,2.303,649,3.862,650,4.326,651,3.701]],["title/injectables/AuthGuard.html",[652,1.475,653,4.177]],["body/injectables/AuthGuard.html",[0,5.676,1,6.941,3,0.162,4,0.131,5,0.033,8,0.062,9,1.847,10,0.153,12,5.136,17,5.117,18,2.959,19,4.768,21,3.786,22,5.07,30,0.6,43,1.109,44,0.007,45,0.388,46,0.142,47,1.089,71,2.53,74,0.258,76,1.43,82,5.283,83,4.93,86,0.152,115,0.006,116,0.006,137,2.798,369,3.794,383,3.422,652,2.481,653,7.587,654,2.946,655,6.472,656,4.152,657,6.451,658,7.028,659,3.614,660,6.472,661,2.735,662,5.755,663,5.755,664,3.389,665,3.882]],["title/modules/AuthModule.html",[666,1.076,667,3.834]],["body/modules/AuthModule.html",[3,0.138,4,0.111,5,0.036,8,0.052,10,0.106,19,4.018,23,1.351,24,1.984,30,0.508,43,0.94,44,0.007,45,0.329,46,0.12,47,0.923,50,1.169,74,0.267,76,1.212,81,1.791,86,0.129,93,2.747,103,1.887,115,0.005,116,0.005,122,3.161,182,1.626,183,1.453,267,1.689,441,1.566,481,1.626,495,1.626,608,1.602,661,2.319,666,1.987,667,6.455,668,2.319,669,5.486,670,5.115,671,7.122,672,3.618,673,4.636,674,3.572,675,6.011,676,5.486,677,1.602,678,7.907,679,4.743,680,1.865,681,1.827,682,1.827,683,1.865,684,2.687,685,1.827,686,2.954,687,2.325,688,1.689,689,1.865,690,1.865,691,1.865,692,1.865,693,1.865,694,1.865,695,1.756,696,1.865,697,1.865,698,1.865,699,1.791,700,2.42,701,1.865,702,1.827,703,1.865,704,1.865,705,1.865,706,1.865,707,1.865,708,1.689,709,1.865,710,1.827,711,1.865,712,5.486,713,4.879,714,7.122,715,4.879,716,5.486,717,4.879,718,4.571,719,3.742,720,3.328,721,3.423,722,3.063,723,5.486,724,3.742,725,5.486,726,3.742,727,5.486,728,5.393,729,4.179,730,3.328,731,5.486,732,5.486,733,3.572,734,5.486,735,4.478,736,5.486,737,5.486,738,4.478,739,5.486,740,5.486,741,2.498,742,2.708,743,3.171,744,3.941,745,2.498]],["title/classes/AuthService.html",[10,0.091,728,3.204]],["body/classes/AuthService.html",[3,0.106,4,0.085,5,0.021,8,0.072,9,2.59,10,0.133,12,3.437,15,0.277,23,1.846,30,0.639,41,4.015,42,5.702,43,1.182,44,0.007,45,0.414,46,0.151,47,1.161,50,1.895,51,2.196,58,1.057,63,0.539,71,2.532,74,0.119,77,3.433,78,3.433,79,3.433,86,0.213,87,1.519,88,2.605,89,3.119,98,2.601,103,1.575,115,0.004,116,0.004,118,1.2,144,2.037,149,3.926,174,1.158,180,2.855,181,2.707,291,4.268,299,4.854,388,3.113,677,1.687,717,3.74,728,4.056,746,3.74,747,4.854,748,4.854,749,5.946,750,5.288,751,7.498,752,5.946,753,5.946,754,5.946,755,5.899,756,4.205,757,5.386,758,4.271,759,3.39,760,4.955,761,3.169,762,6.52,763,5.386,764,5.946,765,4.205,766,5.712,767,5.386,768,5.946,769,5.946,770,4.205,771,7.498,772,5.601,773,5.946,774,5.946,775,4.53,776,4.53,777,6.891,778,3.74,779,3.74,780,3.74,781,3.74,782,4.955,783,3.74,784,3.74,785,4.186,786,4.056,787,5.91,788,5.386,789,3.74,790,3.74,791,3.74,792,5.255,793,4.491,794,3.204,795,3.74,796,3.74,797,4.678,798,4.14,799,5.114,800,3.74,801,3.74,802,3.74,803,3.74,804,4.854,805,4.854,806,3.74,807,3.74,808,3.74,809,4.271,810,4.271,811,3.74,812,3.74]],["title/classes/BadRequestMsException.html",[10,0.091,813,4.177]],["body/classes/BadRequestMsException.html",[3,0.173,4,0.14,5,0.035,8,0.066,10,0.133,30,0.637,35,3.102,43,1.179,44,0.007,45,0.413,46,0.151,47,1.158,63,0.526,74,0.232,76,1.52,86,0.162,115,0.006,116,0.006,118,1.963,137,2.436,181,3.733,184,2.775,569,3.937,656,3.832,813,7.292,814,8.2,815,4.693,816,5.116,817,4.74,818,7.79,819,5.593,820,5.338,821,5.174,822,5.593,823,4.693,824,4.479,825,4.693,826,6.881]],["title/injectables/BasicUserService.html",[652,1.475,827,3.834]],["body/injectables/BasicUserService.html",[3,0.108,4,0.087,5,0.022,8,0.079,10,0.116,15,0.282,16,0.728,18,1.487,22,4.682,23,1.863,24,3.434,25,1.346,30,0.766,43,1.416,44,0.007,45,0.496,46,0.181,47,1.391,50,1.903,58,1.345,59,6.412,63,0.561,71,3.148,74,0.234,76,0.948,86,0.101,87,1.095,88,2.496,89,2.091,93,3.274,97,2.675,98,2.418,103,2.111,115,0.004,116,0.004,137,2.134,144,2.13,180,2.059,203,1.582,218,3.275,288,3.366,291,4.075,295,1.056,297,3.766,298,2.572,299,3.5,317,2.925,321,3.813,382,3.366,443,4.465,652,1.892,654,1.952,656,2.817,665,2.572,677,1.356,806,7.706,827,5.691,828,6.028,829,4.288,830,3.156,831,6.028,832,5.936,833,5.361,834,5.361,835,5.361,836,5.361,837,4.288,838,4.288,839,6.028,840,3.925,841,5.435,842,4.288,843,3.925,844,4.288,845,4.086,846,3.925,847,4.288,848,3.925,849,4.288,850,3.925,851,3.156,852,3.925,853,4.288,854,4.223,855,5.361,856,3.267,857,3.08,858,2.245,859,6.199,860,4.288,861,4.288,862,6.028,863,2.675,864,3.257,865,6.028,866,4.288,867,6.028,868,4.288,869,4.288,870,4.288,871,4.288,872,4.288]],["title/modules/CacheModule.html",[666,1.076,718,2.715]],["body/modules/CacheModule.html",[3,0.141,4,0.114,5,0.037,8,0.054,10,0.108,19,4.684,21,3.525,44,0.007,74,0.258,76,1.242,81,1.835,86,0.132,103,1.489,115,0.005,116,0.005,267,1.731,276,2.627,277,4.339,441,1.604,481,1.666,495,1.666,577,3.473,661,2.376,666,2.002,668,2.376,680,1.91,681,1.872,682,1.872,683,1.91,684,2.719,685,1.872,686,2.971,687,2.362,688,1.731,689,1.91,690,1.91,691,1.91,692,1.91,693,1.91,694,1.91,695,1.799,696,1.91,697,1.91,698,1.91,699,1.835,700,2.458,701,1.91,702,1.872,703,1.91,704,1.91,705,1.91,706,1.91,707,1.91,708,1.731,709,1.91,710,1.872,711,1.91,718,5.383,720,4.252,730,3.738,733,3.659,741,3.293,742,2.774,743,3.249,745,3.642,830,3.787,873,3.037,874,3.371,875,3.371,876,3.371,877,4.998,878,4.998,879,4.998,880,5.689,881,3.371,882,3.138,883,5.621,884,7.234,885,4.513,886,4.798,887,5.621,888,4.037,889,3.507,890,4.037,891,4.037,892,4.998,893,5.905,894,5.621,895,4.588,896,3.834,897,3.834,898,3.834,899,4.588,900,4.037,901,4.588,902,4.037,903,4.588,904,4.282,905,4.588,906,4.588]],["title/classes/CacheService.html",[10,0.091,19,2.387]],["body/classes/CacheService.html",[3,0.139,4,0.112,5,0.028,8,0.053,9,2.805,10,0.138,15,0.364,19,3.639,23,1.956,30,0.851,43,1.575,44,0.007,45,0.551,46,0.201,47,1.546,50,1.959,63,0.591,86,0.13,115,0.005,116,0.005,118,1.579,144,2.209,167,4.763,183,2.104,184,2.233,314,1.505,738,6.482,787,3.603,788,3.976,798,4.353,907,5.535,908,4.217,909,4.518,910,6.369,911,6.369,912,6.369,913,6.369,914,6.369,915,6.369,916,6.369,917,5.535,918,6.369,919,5.535,920,6.369,921,5.535,922,6.369,923,5.535,924,6.369,925,5.535,926,3.976,927,6.369,928,5.535,929,6.369,930,5.535,931,4.922,932,5.17,933,5.535]],["title/modules/CaptchaModule.html",[666,1.076,934,3.834]],["body/modules/CaptchaModule.html",[3,0.138,4,0.112,5,0.036,8,0.052,10,0.106,23,1.353,30,0.66,43,1.222,44,0.007,45,0.428,46,0.183,47,1.199,50,1.519,74,0.246,76,1.214,81,1.794,86,0.129,89,1.905,103,1.888,115,0.005,116,0.005,144,1.258,182,1.628,183,1.455,267,1.691,441,1.568,481,1.628,495,1.628,608,1.884,661,3.344,666,2.037,668,2.322,672,4.254,673,4.64,674,3.576,677,1.604,679,5.204,680,1.867,681,1.83,682,1.83,683,1.867,684,2.689,685,1.83,686,2.955,687,2.327,688,1.691,689,1.867,690,1.867,691,1.867,692,1.867,693,1.867,694,1.867,695,1.758,696,1.867,697,1.867,698,1.867,699,1.794,700,2.422,701,1.867,702,1.83,703,1.867,704,1.867,705,1.867,706,1.867,707,1.867,708,1.691,709,1.867,710,1.83,711,1.867,718,4.12,719,3.747,720,3.331,721,3.427,730,4.054,733,5.151,741,3.245,742,3.518,743,3.175,744,3.946,745,3.245,934,6.835,935,5.493,936,5.43,937,3.851,938,6.378,939,5.493,940,6.459,941,4.885,942,6.338,943,4.861,944,5.493,945,4.885,946,5.493,947,6.064,948,4.484,949,4.885]],["title/classes/CaptchaRequest.html",[10,0.091,950,3.374]],["body/classes/CaptchaRequest.html",[3,0.138,4,0.112,5,0.028,8,0.053,9,2.393,10,0.175,15,0.363,16,0.863,30,0.662,33,2.577,35,2.807,44,0.007,46,0.205,50,1.523,52,1.134,58,1.271,63,0.521,65,3.44,70,6.038,73,3.59,74,0.202,86,0.197,87,1.408,88,1.665,115,0.005,116,0.005,118,1.573,121,1.792,144,2.039,174,1.847,203,1.385,296,1.698,319,2.64,377,3.86,391,3.741,456,2.588,476,4.027,489,3.187,608,1.241,609,1.603,617,2.158,666,1.263,670,3.961,677,1.783,759,2.949,797,3.44,937,5.271,938,4.201,947,3.761,950,6.023,951,4.501,952,2.818,953,6.023,954,5.514,955,4.903,956,5.514,957,5.132,958,3.44,959,3.741,960,4.903,961,4.903,962,4.501,963,4.201,964,3.961,965,3.307,966,4.201,967,3.761,968,3.079,969,3.961,970,4.652,971,2.174]],["title/classes/CaptchaService.html",[10,0.091,947,3.204]],["body/classes/CaptchaService.html",[3,0.135,4,0.109,5,0.027,8,0.067,9,2.636,10,0.176,15,0.354,23,1.731,30,0.651,33,2.513,35,2.773,43,0.922,44,0.007,45,0.323,46,0.202,47,0.905,50,1.77,52,1.106,58,0.956,63,0.498,65,4.386,70,5.966,73,4.577,74,0.199,86,0.195,87,1.795,88,1.624,115,0.005,116,0.005,118,1.535,121,1.964,144,2.135,174,1.815,203,1.161,296,1.656,319,2.341,377,2.906,391,3.681,456,2.295,476,3.572,489,3.109,608,1.21,609,1.564,666,1.232,670,3.863,677,1.869,759,3.428,797,4.386,937,5.286,938,4.097,947,4.795,950,6.19,951,4.39,952,2.121,953,5.625,957,5.049,958,3.355,959,3.681,960,4.782,961,4.782,962,4.39,963,6.327,964,5.049,965,4.216,966,5.355,967,3.668,968,3.003,969,3.863,970,4.577,971,2.121,972,5.738,973,5.378,974,5.378]],["title/entities/CategoryEntity.html",[264,0.72,975,3.374]],["body/entities/CategoryEntity.html",[3,0.126,4,0.102,5,0.034,8,0.048,10,0.097,15,0.531,16,0.811,30,0.844,44,0.007,45,0.454,46,0.199,58,1.193,61,2.343,63,0.485,74,0.229,81,1.637,86,0.118,87,2.388,115,0.005,116,0.005,167,3.007,182,2.394,203,1.249,218,2.171,264,1.159,267,1.544,295,1.235,314,1.309,319,2.235,352,1.421,356,2.983,441,1.43,456,1.637,481,1.486,495,1.486,613,1.404,616,2.376,617,2.751,619,3.343,622,3.128,634,2.547,644,1.574,645,3.312,648,2.547,649,2.906,650,2.799,680,1.704,681,1.67,682,1.67,683,1.704,684,2.571,685,1.67,686,2.89,687,2.191,688,1.544,689,1.704,690,1.704,691,1.704,692,1.704,693,1.704,694,1.704,695,1.605,696,1.704,697,1.704,698,1.704,699,1.637,700,2.281,701,1.704,702,1.67,703,1.704,704,1.704,705,1.704,706,1.704,707,1.704,708,1.544,709,1.704,710,1.67,711,1.704,975,6.225,976,5.013,977,5.112,978,6.711,979,6.726,980,3.843,981,7.564,982,4.087,983,7.564,984,7.564,985,5.013,986,2.407,987,2.898,988,5.013,989,3.414,990,2.547,991,4.187,992,5.013,993,5.013,994,4.104,995,3.007,996,3.625,997,3.007,998,5.013,999,3.601,1000,4.187,1001,2.327,1002,5.159,1003,5.013,1004,7.564,1005,5.013,1006,3.879,1007,5.112,1008,5.013,1009,3.819,1010,5.013,1011,3.513,1012,3.513,1013,3.409,1014,4.458,1015,5.013,1016,2.708,1017,5.013,1018,3.601,1019,4.092,1020,5.013,1021,5.013,1022,3.601]],["title/modules/CategoryModule.html",[666,1.076,1023,3.578]],["body/modules/CategoryModule.html",[3,0.15,4,0.122,5,0.038,8,0.057,10,0.115,44,0.007,74,0.252,76,1.322,81,1.954,86,0.141,115,0.005,116,0.005,267,1.842,441,1.707,481,1.773,495,1.773,577,3.614,666,2.04,668,2.529,680,2.033,681,1.993,682,1.993,683,2.033,684,2.799,685,1.993,686,3.013,687,2.458,688,1.842,689,2.033,690,2.033,691,2.033,692,2.033,693,2.033,694,2.033,695,1.915,696,2.033,697,2.033,698,2.033,699,1.954,700,2.558,701,2.033,702,1.993,703,2.033,704,2.033,705,2.033,706,2.033,707,2.033,708,1.842,709,2.033,710,1.993,711,2.033,720,4.249,730,3.518,741,3.749,745,3.749,830,3.941,858,3.133,873,3.233,874,3.589,875,3.589,876,3.589,881,3.589,882,3.341,888,4.298,975,4.298,1023,7.174,1024,5.321,1025,5.983,1026,5.321,1027,5.321,1028,7.306,1029,5.983,1030,5.734,1031,6.145,1032,6.145,1033,6.145,1034,5.983,1035,3.895,1036,5.321,1037,5.983]],["title/entities/CategoryRestrictionEntity.html",[264,0.72,1038,4.177]],["body/entities/CategoryRestrictionEntity.html",[3,0.143,4,0.115,5,0.037,8,0.054,10,0.11,15,0.529,16,0.88,30,0.785,41,3.153,44,0.007,46,0.186,63,0.437,71,2.331,74,0.228,81,1.854,86,0.133,87,2.239,115,0.005,116,0.005,203,1.328,264,1.231,267,1.749,295,1.399,314,1.18,319,2.426,352,1.51,441,1.621,456,1.854,481,1.683,495,1.683,613,1.591,616,2.578,617,2.561,619,2.809,634,2.886,644,1.783,645,3.595,648,2.886,649,2.459,680,1.93,681,1.892,682,1.892,683,1.93,684,2.732,685,1.892,686,2.978,687,2.378,688,1.749,689,1.93,690,1.93,691,1.93,692,1.93,693,1.93,694,1.93,695,1.818,696,1.93,697,1.93,698,1.93,699,1.854,700,2.475,701,1.93,702,1.892,703,1.93,704,1.93,705,1.93,706,1.93,707,1.93,708,1.749,709,1.93,710,1.892,711,1.93,975,6.09,977,6.124,986,2.726,987,3.283,990,2.886,1011,3.813,1012,3.813,1013,3.7,1033,5.944,1038,6.476,1039,8.767,1040,5.679,1041,4.741,1042,7.282,1043,3.7,1044,8.039,1045,4.439,1046,4.326,1047,5.679,1048,4.741,1049,5.679,1050,5.679,1051,5.679,1052,5.679,1053,5.679,1054,3.171,1055,5.679]],["title/injectables/CategoryService.html",[652,1.475,1028,3.578]],["body/injectables/CategoryService.html",[3,0.135,4,0.109,5,0.027,8,0.075,10,0.104,15,0.354,18,2.44,21,3.685,23,1.733,24,2.833,25,2.706,30,0.726,43,1.343,44,0.007,45,0.47,46,0.172,47,1.451,50,1.67,51,1.989,63,0.47,74,0.255,76,1.19,86,0.126,88,2.367,89,2.44,93,2.713,103,1.427,115,0.005,116,0.005,137,2.491,144,1.612,184,2.172,190,4.102,264,1.078,295,1.326,314,1.27,352,1.692,394,4.209,538,3.046,652,2.209,654,2.451,661,2.276,664,2.819,677,1.583,759,2.904,857,3.868,858,2.819,864,3.801,889,3.359,975,5.968,977,7.101,979,7.389,982,4.234,1014,7.389,1028,5.36,1032,5.743,1033,5.743,1036,4.788,1056,5.385,1057,7.036,1058,5.36,1059,5.385,1060,8.309,1061,5.385,1062,7.036,1063,7.036,1064,5.385,1065,8.309,1066,4.799,1067,7.036,1068,7.036,1069,5.385,1070,7.036,1071,7.836,1072,7.036,1073,7.036,1074,7.036,1075,3.23,1076,6.968,1077,5.385,1078,4.395,1079,5.385,1080,5.385,1081,5.743,1082,5.385,1083,5.385,1084,5.385,1085,5.385,1086,5.385,1087,2.223]],["title/interfaces/ConfigItem.html",[327,0.653,1088,3.834]],["body/interfaces/ConfigItem.html",[3,0.17,4,0.138,5,0.034,8,0.065,15,0.446,16,0.982,44,0.007,46,0.178,63,0.562,86,0.159,115,0.006,116,0.006,183,2.548,327,0.944,329,2.13,377,4.393,476,4.131,575,4.7,798,4.616,971,3.812,1088,6.637,1089,6.784,1090,4.069,1091,5.063,1092,6.033,1093,6.784,1094,6.033,1095,5.538]],["title/modules/ConfigModule.html",[666,1.076,1096,3.374]],["body/modules/ConfigModule.html",[3,0.151,4,0.122,5,0.038,8,0.057,10,0.116,44,0.007,74,0.245,76,1.326,81,1.959,86,0.141,115,0.005,116,0.005,267,1.847,441,1.712,463,3.524,481,1.778,495,1.778,577,3.62,666,2.042,668,2.536,680,2.039,681,1.998,682,1.998,683,2.039,684,2.803,685,1.998,686,3.015,687,2.462,688,1.847,689,2.039,690,2.039,691,2.039,692,2.039,693,2.039,694,2.039,695,1.921,696,2.039,697,2.039,698,2.039,699,1.959,700,2.563,701,2.039,702,1.998,703,2.039,704,2.039,705,2.039,706,2.039,707,2.039,708,1.847,709,2.039,710,1.998,711,2.039,718,5.259,719,4.092,720,4.252,721,3.743,730,3.524,741,3.754,745,3.754,873,3.241,874,3.598,875,3.598,876,3.598,881,3.598,882,3.35,936,5.744,971,2.974,1096,6.857,1097,5.335,1098,6,1099,5.335,1100,5.335,1101,6.891,1102,6,1103,6]],["title/injectables/ConfigService.html",[652,1.475,1101,3.374]],["body/injectables/ConfigService.html",[3,0.051,4,0.069,5,0.045,8,0.069,10,0.04,15,0.135,16,1.104,18,2.355,19,3.295,21,2.616,23,1.257,24,3.15,25,2.835,30,0.744,33,2.385,38,2.525,43,1.376,44,0.007,45,0.467,46,0.182,47,1.256,50,1.773,51,0.757,52,1.049,53,2.519,58,1.088,59,1.472,61,3.03,63,0.563,65,2.127,69,1.785,74,0.192,76,0.453,86,0.103,87,1.447,88,2.39,89,3.266,93,3.339,97,1.278,98,1.182,103,1.977,115,0.002,116,0.002,124,1.842,134,1.732,137,1.207,144,1.748,166,2.325,167,2.045,174,1.323,180,2.45,182,1.297,183,2.181,184,0.826,212,1.229,219,1.278,220,1.472,232,1.822,247,2.531,254,3.032,302,3.032,303,1.822,353,2.878,365,3.942,431,2.127,434,1.842,497,1.842,546,3.061,568,4.237,616,1.207,652,1.07,654,0.933,659,1.144,661,0.866,664,1.073,677,1.376,688,1.05,724,1.397,757,2.449,759,2.525,761,2.585,785,1.904,787,2.22,797,3.184,798,3.855,799,3.865,830,1.785,850,3.323,897,3.865,943,3.481,962,2.783,971,3.392,980,2.593,1006,2.531,1031,2.783,1058,2.597,1087,0.846,1088,4.626,1091,1.842,1101,3.666,1104,2.049,1105,2.597,1106,3.032,1107,3.306,1108,2.597,1109,3.032,1110,3.409,1111,4.378,1112,4.378,1113,4.378,1114,3.409,1115,5.104,1116,4.378,1117,4.378,1118,3.409,1119,4.378,1120,3.409,1121,4.378,1122,3.409,1123,4.378,1124,3.409,1125,3.409,1126,3.409,1127,2.049,1128,2.783,1129,3.409,1130,3.666,1131,5.359,1132,5.104,1133,2.049,1134,2.049,1135,6.485,1136,2.049,1137,5.371,1138,2.783,1139,6.117,1140,2.783,1141,2.049,1142,2.757,1143,2.049,1144,1.732,1145,3.164,1146,3.669,1147,3.409,1148,2.783,1149,3.409,1150,2.049,1151,2.597,1152,3.409,1153,3.409,1154,3.032,1155,2.049,1156,5.104,1157,2.049,1158,3.409,1159,3.666,1160,4.166,1161,4.378,1162,3.409,1163,3.409,1164,2.049,1165,2.597,1166,3.59,1167,3.032,1168,2.597,1169,2.049,1170,6.117,1171,2.049,1172,3.184,1173,3.982,1174,3.409,1175,2.049,1176,1.842,1177,4.538,1178,2.049,1179,7.272,1180,2.049,1181,3.409,1182,2.783,1183,3.032,1184,3.409,1185,2.049,1186,2.049,1187,2.049,1188,2.597,1189,1.822,1190,1.822,1191,5.039,1192,3.893,1193,3.032,1194,4.538,1195,5.039,1196,2.049,1197,2.049,1198,1.334,1199,1.107,1200,1.229,1201,3.409,1202,2.049,1203,1.561,1204,2.049,1205,3.409,1206,2.049,1207,2.049,1208,1.822,1209,2.049,1210,2.049,1211,2.049,1212,2.049,1213,2.049,1214,2.049,1215,2.049,1216,2.049,1217,3.888,1218,3.335,1219,2.049,1220,2.049,1221,2.049,1222,2.049,1223,2.049,1224,1.822,1225,2.049,1226,2.049,1227,2.049,1228,2.049,1229,1.561,1230,2.049,1231,2.049,1232,2.049,1233,2.783,1234,2.049,1235,3.032,1236,2.049,1237,2.049,1238,2.049,1239,2.049,1240,2.049,1241,1.822,1242,2.049,1243,2.049,1244,3.409,1245,2.049,1246,2.049,1247,2.049,1248,2.049,1249,2.049,1250,3.409,1251,4.378,1252,2.597,1253,3.409,1254,5.667,1255,2.049,1256,4.378,1257,2.049,1258,5.104,1259,3.032,1260,3.409,1261,5.104,1262,3.409,1263,4.378,1264,5.667,1265,3.409,1266,2.049,1267,2.049,1268,6.791,1269,2.049,1270,2.049,1271,2.049,1272,2.049,1273,3.032,1274,2.049,1275,3.893,1276,2.049,1277,2.049,1278,4.166,1279,2.049,1280,4.378,1281,2.049,1282,2.049,1283,4.378,1284,2.049,1285,2.049,1286,2.049,1287,2.049,1288,2.049,1289,2.049,1290,2.049,1291,2.049,1292,2.049,1293,3.409,1294,2.049,1295,3.409,1296,2.049,1297,2.049,1298,2.049,1299,2.049,1300,7.272,1301,2.049,1302,2.049,1303,2.049,1304,2.049,1305,5.104,1306,2.049,1307,2.049,1308,2.049,1309,2.049,1310,3.409,1311,2.049,1312,2.049,1313,1.561,1314,2.049,1315,2.049,1316,2.049,1317,2.049,1318,3.409,1319,2.049,1320,2.049,1321,2.049,1322,3.409,1323,2.049,1324,1.822,1325,2.049,1326,2.049,1327,2.049,1328,3.409,1329,3.409,1330,2.049,1331,3.409,1332,2.049,1333,2.049,1334,2.049,1335,2.049,1336,3.409,1337,2.049,1338,2.049,1339,1.561,1340,2.049,1341,2.049,1342,3.409,1343,2.049,1344,3.409,1345,2.049,1346,2.049,1347,2.049,1348,2.049,1349,2.049,1350,2.049,1351,2.049]],["title/classes/DbExceptionFilter.html",[10,0.091,1352,4.177]],["body/classes/DbExceptionFilter.html",[3,0.161,4,0.13,5,0.033,8,0.061,10,0.124,13,1.704,15,0.421,23,1.934,30,0.593,43,1.098,44,0.007,45,0.384,46,0.14,47,1.078,50,1.81,74,0.241,76,1.415,86,0.15,89,2.222,115,0.006,116,0.006,118,1.828,149,4.112,181,3.866,219,5.298,266,5.112,295,2.091,434,4.783,776,6.744,817,5.252,818,6.983,898,5.793,967,5.793,1075,3.842,1352,7.873,1353,7.853,1354,6.405,1355,3.876,1356,5.356,1357,6.983,1358,7.853,1359,7.853,1360,7.853,1361,7.853,1362,7.853,1363,8.853,1364,8.853,1365,6.405,1366,6.405,1367,6.405,1368,6.405,1369,6.405,1370,6.405,1371,6.405]],["title/interfaces/DirectoryStructure.html",[327,0.653,1372,4.177]],["body/interfaces/DirectoryStructure.html",[3,0.116,4,0.094,5,0.047,8,0.044,24,2.959,30,0.428,44,0.007,46,0.185,47,0.777,50,1.745,58,1.289,61,2.965,63,0.537,74,0.246,86,0.199,87,1.179,88,2.554,89,3.061,93,3.453,103,2.168,115,0.005,116,0.005,121,1.591,144,1.788,146,3.516,149,2.416,212,2.768,218,2.747,219,2.879,279,4.048,312,3.004,327,1.008,329,1.449,353,3.845,389,4.682,443,2.493,608,1.038,666,1.875,759,1.905,788,4.557,797,2.879,798,3.046,965,3.805,1106,5.642,1107,2.736,1108,4.833,1131,5.506,1137,3.516,1173,3.004,1188,4.833,1324,5.642,1339,3.516,1372,7.703,1373,4.104,1374,5.918,1375,6.373,1376,6.344,1377,3.805,1378,2.816,1379,4.615,1380,4.615,1381,6.344,1382,6.344,1383,4.615,1384,6.344,1385,4.615,1386,3.767,1387,5.179,1388,4.104,1389,6.447,1390,4.104,1391,4.104,1392,4.615,1393,4.615,1394,5.196,1395,4.615,1396,4.615,1397,6.344,1398,6.344,1399,4.615,1400,4.615,1401,4.615,1402,3.516,1403,4.104,1404,4.615,1405,6.344,1406,6.344,1407,3.554,1408,4.615,1409,4.615,1410,4.615,1411,4.615,1412,4.615,1413,4.615,1414,4.615,1415,3.004,1416,4.615,1417,4.615,1418,4.615,1419,4.615,1420,4.615,1421,4.945,1422,5.179,1423,4.104,1424,4.615,1425,4.104,1426,3.767,1427,4.615,1428,4.615,1429,4.104,1430,4.615,1431,4.615,1432,4.615,1433,4.615,1434,4.615,1435,4.615,1436,4.615,1437,4.104,1438,4.615,1439,6.344,1440,4.615,1441,4.615,1442,4.615,1443,4.615,1444,7.807,1445,4.615,1446,4.615,1447,4.615]],["title/injectables/DtoInterceptor.html",[652,1.475,1448,4.177]],["body/injectables/DtoInterceptor.html",[3,0.16,4,0.13,5,0.033,8,0.061,10,0.178,13,1.388,15,0.421,18,2.218,23,1.932,29,6.741,30,0.727,43,1.345,44,0.007,45,0.471,46,0.14,47,1.32,48,4.594,50,1.363,74,0.241,76,1.413,86,0.15,98,2.218,103,1.694,115,0.006,116,0.006,137,2.265,174,1.246,180,3.766,266,4.164,319,2.613,652,2.463,654,2.912,688,1.969,959,3.349,1001,2.218,1356,5.351,1378,3.482,1448,7.547,1449,6.396,1450,7.846,1451,7.846,1452,6.977,1453,6.404,1454,6.928,1455,7.846,1456,6.396,1457,6.396,1458,7.846,1459,7.846,1460,6.741,1461,8.849,1462,6.396,1463,7.846,1464,5.221,1465,4.594,1466,6.396,1467,5.688,1468,4.594,1469,6.396,1470,6.396]],["title/interfaces/EntitySaveHandler.html",[327,0.653,1471,2.715]],["body/interfaces/EntitySaveHandler.html",[3,0.084,4,0.068,5,0.017,8,0.069,9,2.403,10,0.13,15,0.219,23,1.235,30,0.309,38,1.375,41,3.118,43,1.417,44,0.007,45,0.52,46,0.192,47,0.844,50,1.722,51,1.23,52,1.901,58,1.498,63,0.569,66,1.744,71,2.305,74,0.229,86,0.204,88,2.717,115,0.004,116,0.004,121,2.174,144,2.126,172,1.8,174,1.666,180,2.408,203,1.297,240,0.806,264,1.468,266,3.265,285,1.926,295,0.82,296,1.026,314,1.405,319,2.615,327,1.242,329,1.046,347,1.17,348,1.408,352,0.942,355,1.776,356,1.314,383,1.442,392,2.172,394,2.344,405,2.476,445,1.599,456,1.088,538,1.442,591,1.599,608,0.749,609,0.969,613,0.933,644,1.894,666,0.763,677,1.128,759,3.241,761,2.12,785,1.86,845,1.8,851,2.626,854,2.8,864,3.259,959,1.744,980,3.411,982,2.71,1045,3.158,1054,1.86,1091,1.8,1142,3.259,1144,3.411,1146,1.998,1166,1.644,1176,1.8,1199,2.71,1200,1.998,1355,1.644,1377,1.998,1378,1.479,1471,2.899,1472,1.998,1473,2.71,1474,3.008,1475,3.129,1476,3.008,1477,3.008,1478,3.008,1479,3.368,1480,3.331,1481,4.569,1482,1.86,1483,2.805,1484,1.23,1485,1.998,1486,4.279,1487,1.926,1488,1.744,1489,1.926,1490,1.8,1491,3.008,1492,1.998,1493,4.539,1494,1.998,1495,1.86,1496,3.88,1497,1.744,1498,2.8,1499,1.998,1500,1.998,1501,1.998,1502,1.998,1503,1.926,1504,1.926,1505,1.998,1506,1.998,1507,1.998,1508,1.998,1509,1.998,1510,1.998,1511,1.998,1512,1.998,1513,1.998,1514,1.998,1515,1.998,1516,3.487,1517,1.998,1518,2.8,1519,2.899,1520,2.078,1521,2.899,1522,1.8,1523,3.008,1524,1.479,1525,2.078,1526,3.008,1527,5.131,1528,2.626,1529,2.078,1530,2.078,1531,2.078,1532,2.078,1533,1.998,1534,1.998,1535,1.926,1536,2.078,1537,2.078,1538,1.926,1539,1.926,1540,1.693,1541,1.86,1542,1.998,1543,1.926,1544,2.078,1545,2.078,1546,2.8,1547,1.998,1548,5.255,1549,4.709,1550,4.492,1551,2.078,1552,1.998,1553,3.008,1554,2.078,1555,2.078,1556,3.764,1557,1.998,1558,1.998,1559,1.8,1560,3.129,1561,2.078,1562,2.078,1563,2.078,1564,2.078,1565,2.078,1566,1.926,1567,1.998,1568,1.644,1569,2.078,1570,2.078,1571,2.078]],["title/classes/ExchangeTokenPayload.html",[10,0.091,1572,3.578]],["body/classes/ExchangeTokenPayload.html",[3,0.129,4,0.104,5,0.026,8,0.049,10,0.175,12,4.424,15,0.337,16,0.823,30,0.475,41,3.314,42,5.713,44,0.007,46,0.186,47,1.288,58,1.509,63,0.549,71,2.85,74,0.247,76,1.134,86,0.191,98,2.364,115,0.005,116,0.005,118,1.464,174,1.653,203,0.847,240,1.972,276,3.185,291,3.914,361,4.025,388,3.568,608,1.154,609,1.492,617,1.55,666,1.175,675,3.686,677,1.722,695,1.643,728,3.5,729,3.909,755,3.686,758,5.857,760,5.497,762,6.096,763,4.895,766,5.192,767,3.686,772,3.5,782,3.686,786,3.5,809,3.686,810,3.686,932,4.982,937,3.682,952,3.215,953,5.497,957,6.267,958,3.201,1001,1.78,1130,5.497,1166,2.533,1356,3.5,1488,2.687,1572,5.192,1573,3.909,1574,6.656,1575,5.563,1576,4.563,1577,5.131,1578,5.563,1579,6.928,1580,3.53,1581,4.424,1582,4.188,1583,4.188,1584,4.007,1585,3.686,1586,4.188,1587,4.188,1588,4.188,1589,4.188,1590,3.909,1591,4.188,1592,5.563,1593,4.188,1594,4.188]],["title/interfaces/ExplorerAction.html",[327,0.653,1498,2.623]],["body/interfaces/ExplorerAction.html",[3,0.083,4,0.067,5,0.017,8,0.077,9,2.397,10,0.129,15,0.217,16,0.601,38,1.362,41,3.104,43,1.381,44,0.007,45,0.53,46,0.202,47,0.555,50,1.668,51,1.218,52,1.898,58,1.538,63,0.568,66,1.727,71,1.92,74,0.228,86,0.203,88,2.713,115,0.004,116,0.004,121,2.169,144,2.124,172,1.782,174,1.606,180,2.39,203,1.292,240,0.798,264,1.465,285,1.907,295,0.812,296,1.016,314,1.432,319,2.225,327,1.24,329,1.035,347,1.161,348,1.394,352,1.347,355,1.763,356,1.301,383,1.428,392,1.428,394,2.326,405,1.628,445,1.583,456,1.077,538,1.428,591,1.583,608,0.742,609,0.959,613,0.924,644,1.882,666,0.756,677,1.12,759,3.23,761,2.104,785,1.842,845,1.782,851,2.607,854,2.78,864,3.24,959,1.727,980,3.976,982,3.873,1045,3.14,1054,1.842,1091,1.782,1142,3.24,1144,3.394,1146,1.978,1166,1.628,1176,1.782,1199,2.69,1200,1.978,1355,1.628,1377,1.978,1378,1.464,1471,1.907,1472,1.978,1473,1.782,1474,1.978,1475,2.058,1476,1.978,1477,1.978,1478,1.978,1479,1.842,1481,4.565,1482,1.842,1483,2.943,1484,1.218,1485,1.978,1486,4.319,1487,1.907,1488,1.727,1489,1.907,1490,1.782,1491,2.986,1492,1.978,1493,4.523,1494,1.978,1495,1.842,1496,3.861,1497,1.727,1498,3.348,1499,1.978,1500,1.978,1501,1.978,1502,1.978,1503,1.907,1504,1.907,1505,1.978,1506,1.978,1507,1.978,1508,1.978,1509,1.978,1510,1.978,1511,1.978,1512,1.978,1513,1.978,1514,1.978,1515,1.978,1516,3.466,1517,1.978,1518,2.78,1519,2.878,1520,2.058,1521,3.861,1522,2.69,1523,2.986,1524,1.464,1525,2.058,1526,2.986,1527,5.119,1528,2.607,1529,2.058,1530,2.058,1531,2.058,1532,2.058,1533,1.978,1534,1.978,1535,1.907,1536,2.058,1537,2.058,1538,1.907,1539,1.907,1540,1.676,1541,1.842,1542,1.978,1543,1.907,1544,2.058,1545,2.058,1546,2.78,1547,1.978,1548,5.242,1549,4.693,1550,4.473,1551,2.058,1552,1.978,1553,2.986,1554,2.058,1555,2.058,1556,3.741,1557,1.978,1558,1.978,1559,1.782,1560,3.106,1561,2.058,1562,2.058,1563,2.058,1564,2.058,1565,2.058,1566,1.907,1567,1.978,1568,1.628,1569,2.058,1570,2.058,1571,2.058]],["title/entities/ExplorerActionEntity.html",[264,0.72,1595,3.834]],["body/entities/ExplorerActionEntity.html",[3,0.129,4,0.104,5,0.035,8,0.078,10,0.099,13,1.112,15,0.536,16,0.823,30,0.808,44,0.007,45,0.459,46,0.202,58,1.36,61,3.182,63,0.409,74,0.24,81,1.673,86,0.12,87,2.309,115,0.005,116,0.005,182,2.585,218,3.312,264,1.172,267,1.578,295,1.262,314,1.104,352,1.437,441,1.462,463,3.182,481,1.519,495,1.519,613,2.142,616,2.411,617,2.634,619,3.143,622,3.197,644,2.138,650,2.862,680,1.742,681,1.707,682,1.707,683,1.742,684,2.599,685,1.707,686,2.906,687,2.223,688,1.578,689,1.742,690,1.742,691,1.742,692,1.742,693,1.742,694,1.742,695,1.641,696,1.742,697,1.742,698,1.742,699,1.673,700,2.314,701,1.742,702,1.707,703,1.742,704,1.742,705,1.742,706,1.742,707,1.742,708,1.578,709,1.742,710,1.707,711,1.742,980,3.886,982,4.132,994,4.522,995,4.084,996,4.403,997,4.084,999,3.681,1000,4.249,1001,2.362,1002,5.217,1006,3.937,1007,5.188,1011,4.004,1012,4.004,1016,2.769,1018,3.681,1022,3.681,1094,6.056,1486,2.53,1487,2.963,1497,3.566,1498,3.802,1521,3.937,1524,2.275,1528,2.683,1595,5.559,1596,6.393,1597,5.125,1598,4.645,1599,5.188,1600,5.188,1601,6.056,1602,5.559,1603,3.904,1604,5.125,1605,5.125,1606,5.125,1607,5.125,1608,5.125,1609,4.184,1610,5.559,1611,5.125,1612,3.337,1613,3.197,1614,3.904,1615,5.125,1616,2.862]],["title/interfaces/ExplorerColumn.html",[327,0.653,1496,2.715]],["body/interfaces/ExplorerColumn.html",[3,0.076,4,0.062,5,0.015,8,0.075,9,2.345,10,0.123,15,0.199,16,0.564,38,1.252,41,2.99,43,1.345,44,0.007,45,0.521,46,0.209,47,0.51,50,1.62,51,1.12,52,1.968,58,1.461,63,0.572,66,1.588,71,1.823,74,0.222,86,0.199,88,2.673,115,0.004,116,0.003,121,2.128,144,2.1,172,1.638,174,1.568,180,2.241,203,1.357,240,0.733,264,1.454,285,1.753,295,0.747,296,0.934,314,1.434,319,2.13,327,1.22,329,0.952,347,1.089,348,1.282,352,0.877,355,1.653,356,1.196,383,1.313,392,1.313,394,2.182,405,1.497,445,3.07,456,2.088,538,1.313,591,3.07,608,0.682,609,0.882,613,0.849,644,2.008,666,0.695,677,1.051,759,3.137,761,1.973,785,1.693,845,1.638,851,2.445,854,2.607,864,3.076,959,1.588,980,3.249,982,2.523,1045,2.981,1054,1.693,1091,1.638,1142,3.076,1144,3.249,1146,1.819,1166,3.157,1176,1.638,1199,2.523,1200,1.819,1355,1.497,1377,1.819,1378,1.346,1471,1.753,1472,1.819,1473,1.638,1474,1.819,1475,1.892,1476,1.819,1477,1.819,1478,1.819,1479,1.693,1481,4.556,1482,1.693,1483,2.894,1484,1.12,1485,1.819,1486,4.243,1487,1.753,1488,1.588,1489,1.753,1490,1.638,1491,3.836,1492,1.819,1493,4.652,1494,1.819,1495,1.693,1496,3.992,1497,1.588,1498,2.607,1499,1.819,1500,1.819,1501,1.819,1502,1.819,1503,1.753,1504,1.753,1505,3.836,1506,3.836,1507,3.836,1508,3.836,1509,3.836,1510,3.836,1511,3.836,1512,3.836,1513,3.836,1514,3.836,1515,3.836,1516,4.393,1517,3.836,1518,3.856,1519,3.697,1520,1.892,1521,2.699,1522,1.638,1523,2.8,1524,1.346,1525,1.892,1526,2.8,1527,5.016,1528,2.445,1529,1.892,1530,1.892,1531,1.892,1532,1.892,1533,1.819,1534,1.819,1535,1.753,1536,1.892,1537,1.892,1538,1.753,1539,1.753,1540,1.541,1541,1.693,1542,1.819,1543,1.753,1544,1.892,1545,1.892,1546,2.607,1547,1.819,1548,5.127,1549,4.558,1550,4.308,1551,1.892,1552,1.819,1553,2.8,1554,1.892,1555,1.892,1556,3.552,1557,1.819,1558,1.819,1559,1.638,1560,2.913,1561,1.892,1562,1.892,1563,1.892,1564,1.892,1565,1.892,1566,1.753,1567,1.819,1568,1.497,1569,1.892,1570,1.892,1571,1.892]],["title/entities/ExplorerColumnEntity.html",[264,0.72,1617,3.578]],["body/entities/ExplorerColumnEntity.html",[3,0.084,4,0.068,5,0.026,8,0.064,10,0.065,13,0.727,15,0.603,16,0.609,30,0.867,44,0.007,45,0.559,46,0.207,52,1.875,58,1.197,61,2.355,63,0.506,74,0.223,81,1.094,86,0.079,87,2.381,115,0.004,116,0.004,182,2.789,203,1,218,2.182,264,0.928,267,1.032,295,0.825,314,1.092,319,2.696,332,1.551,360,2.913,439,2.722,441,0.956,445,2.907,456,2.198,481,0.993,495,0.993,591,2.907,613,0.939,616,2.384,617,2.826,618,3.271,619,3.347,622,3.144,644,1.582,649,2.622,650,2.813,680,1.139,681,1.116,682,1.116,683,1.139,684,2.058,685,1.116,686,2.569,687,1.645,688,1.032,689,1.139,690,1.139,691,1.139,692,1.139,693,1.139,694,1.139,695,1.073,696,1.139,697,1.139,698,1.139,699,1.094,700,1.712,701,1.139,702,1.116,703,1.139,704,1.139,705,1.139,706,1.139,707,1.139,708,1.032,709,1.139,710,1.116,711,1.139,971,1.987,986,1.609,990,2.56,991,4.201,994,3.997,995,3.022,996,3.638,997,3.022,999,3.619,1000,4.201,1001,2.335,1002,4.924,1006,3.892,1007,5.13,1011,3.17,1012,3.17,1013,3.668,1016,1.811,1018,2.407,1022,3.619,1048,3.28,1087,3.659,1166,2.989,1355,2.487,1481,2.907,1486,2.989,1495,2.813,1496,2.913,1505,3.631,1506,3.631,1507,3.631,1508,3.631,1509,3.631,1510,3.631,1511,3.631,1512,3.631,1513,3.631,1514,3.631,1515,3.631,1517,3.631,1518,3.381,1524,1.488,1547,3.022,1596,6.741,1599,3.839,1600,3.839,1602,4.113,1612,2.182,1613,2.091,1614,2.553,1616,1.871,1617,3.839,1618,3.352,1619,6.055,1620,6.055,1621,3.352,1622,2.182,1623,3.352,1624,6.308,1625,3.352,1626,3.352,1627,3.352,1628,5.039,1629,3.352,1630,5.039,1631,3.352,1632,6.422,1633,5.039,1634,3.352,1635,5.039,1636,3.352,1637,5.039,1638,3.352,1639,3.352,1640,3.352,1641,5.039,1642,3.352,1643,5.039,1644,3.352,1645,5.039,1646,3.352,1647,5.039,1648,3.352,1649,3.352,1650,5.039,1651,3.352,1652,5.039,1653,3.352,1654,5.496,1655,3.352,1656,4.837,1657,4.481,1658,3.352,1659,2.736,1660,3.352,1661,3.352,1662,3.352,1663,2.736,1664,3.352,1665,3.352,1666,3.352,1667,2.736,1668,5.648]],["title/interfaces/ExplorerColumnRenderer.html",[327,0.653,1516,2.715]],["body/interfaces/ExplorerColumnRenderer.html",[3,0.083,4,0.067,5,0.017,8,0.077,9,2.401,10,0.129,15,0.218,16,0.604,38,1.37,41,3.112,43,1.383,44,0.007,45,0.531,46,0.201,47,0.558,50,1.671,51,1.226,52,1.9,58,1.54,63,0.568,66,1.737,71,1.927,74,0.229,86,0.203,88,2.715,115,0.004,116,0.004,121,2.172,144,2.125,172,1.793,174,1.608,180,2.401,203,1.295,240,0.803,264,1.463,285,1.918,295,0.817,296,1.022,314,1.404,319,2.232,327,1.241,329,1.042,347,1.167,348,1.403,352,1.35,355,1.771,356,1.309,383,1.437,392,1.437,394,2.337,405,1.638,445,1.593,456,1.084,538,1.437,591,1.593,608,0.747,609,0.965,613,0.929,644,2.103,666,0.76,677,1.125,759,3.237,761,2.114,785,1.853,845,1.793,851,2.619,854,2.792,864,3.252,959,1.737,980,3.984,982,2.702,1045,3.151,1054,1.853,1091,1.793,1142,3.252,1144,3.404,1146,1.99,1166,1.638,1176,1.793,1199,2.702,1200,1.99,1355,1.638,1377,1.99,1378,1.473,1471,1.918,1472,1.99,1473,1.793,1474,1.99,1475,2.07,1476,1.99,1477,1.99,1478,1.99,1479,1.853,1481,4.558,1482,1.853,1483,2.946,1484,1.226,1485,1.99,1486,4.324,1487,1.918,1488,1.737,1489,1.918,1490,1.793,1491,3,1492,1.99,1493,4.533,1494,1.99,1495,1.853,1496,3.873,1497,1.737,1498,2.792,1499,1.99,1500,1.99,1501,1.99,1502,1.99,1503,1.918,1504,1.918,1505,1.99,1506,1.99,1507,1.99,1508,1.99,1509,1.99,1510,1.99,1511,1.99,1512,1.99,1513,1.99,1514,1.99,1515,1.99,1516,3.873,1517,1.99,1518,2.792,1519,2.891,1520,3.12,1521,3.873,1522,1.793,1523,3,1524,1.473,1525,2.07,1526,3,1527,5.126,1528,2.619,1529,2.07,1530,2.07,1531,2.07,1532,2.07,1533,1.99,1534,1.99,1535,1.918,1536,2.07,1537,2.07,1538,1.918,1539,1.918,1540,1.686,1541,1.853,1542,1.99,1543,1.918,1544,2.07,1545,2.07,1546,2.792,1547,1.99,1548,5.25,1549,4.703,1550,4.485,1551,2.07,1552,1.99,1553,3,1554,2.07,1555,2.07,1556,3.755,1557,1.99,1558,1.99,1559,1.793,1560,3.12,1561,2.07,1562,2.07,1563,2.07,1564,2.07,1565,2.07,1566,1.918,1567,1.99,1568,1.638,1569,2.07,1570,2.07,1571,2.07]],["title/entities/ExplorerColumnRendererEntity.html",[264,0.72,1632,3.834]],["body/entities/ExplorerColumnRendererEntity.html",[3,0.132,4,0.107,5,0.035,8,0.079,10,0.101,13,1.14,15,0.509,16,0.836,30,0.792,43,1.187,44,0.007,45,0.465,46,0.201,58,1.377,61,3.235,63,0.415,74,0.242,81,1.716,86,0.123,87,2.243,115,0.005,116,0.005,182,2.439,218,3.353,264,1.31,267,2.634,295,1.294,327,0.963,352,1.454,441,1.499,469,4.32,481,1.557,495,1.557,613,1.472,616,2.451,617,2.584,619,3.174,644,2.914,680,1.786,681,1.75,682,1.75,683,1.786,684,2.632,685,1.75,686,2.924,687,2.261,688,1.618,689,1.786,690,1.786,691,1.786,692,1.786,693,1.786,694,1.786,695,1.682,696,1.786,697,1.786,698,1.786,699,1.716,700,2.353,701,1.786,702,1.75,703,1.786,704,1.786,705,1.786,706,1.786,707,1.786,708,1.618,709,1.786,710,1.75,711,1.786,980,3.934,994,4.55,995,4.153,996,4.447,997,4.153,999,3.774,1000,4.32,1001,2.401,1002,5.281,1011,4.054,1012,4.054,1016,2.839,1018,3.774,1022,3.774,1486,2.594,1487,3.038,1516,4.002,1521,4.002,1524,2.332,1528,2.751,1596,6.309,1603,4.003,1609,4.289,1610,5.614,1612,3.421,1613,3.278,1614,4.003,1616,2.934,1632,5.652,1669,5.255,1670,6.924,1671,5.255,1672,5.255,1673,5.255,1674,5.255,1675,5.255,1676,5.255]],["title/modules/ExplorerModule.html",[666,1.076,1677,3.578]],["body/modules/ExplorerModule.html",[3,0.139,4,0.113,5,0.036,8,0.053,10,0.107,13,1.204,18,1.925,23,1.367,24,2.594,30,0.665,43,0.951,44,0.007,45,0.333,46,0.121,47,0.934,50,1.529,74,0.257,76,1.226,81,1.812,86,0.13,93,2.14,103,1.47,115,0.005,116,0.005,182,1.644,183,1.47,267,1.709,441,1.583,481,1.644,495,1.644,608,1.614,666,2.078,668,2.345,672,3.645,673,4.671,674,3.613,677,1.789,679,4.768,680,1.886,681,1.848,682,1.848,683,1.886,684,2.702,685,1.848,686,2.962,687,2.342,688,1.709,689,1.886,690,1.886,691,1.886,692,1.886,693,1.886,694,1.886,695,1.776,696,1.886,697,1.886,698,1.886,699,1.812,700,2.438,701,1.886,702,1.848,703,1.886,704,1.886,705,1.886,706,1.886,707,1.886,708,1.709,709,1.886,710,1.848,711,1.886,720,3.353,721,3.462,730,2.593,741,2.526,742,2.739,743,3.208,744,3.986,745,2.526,858,2.905,1035,3.613,1151,5.465,1355,4.149,1468,3.986,1535,4.859,1538,4.859,1539,4.147,1540,3.645,1541,4.006,1612,3.613,1617,5.465,1656,3.986,1663,4.53,1677,6.057,1678,5.549,1679,7.174,1680,7.174,1681,5.549,1682,7.951,1683,8.704,1684,5.549,1685,4.53,1686,5.549,1687,7.174,1688,4.935,1689,5.549,1690,5.549]],["title/classes/ExplorerService.html",[10,0.091,1538,2.715]],["body/classes/ExplorerService.html",[3,0.067,4,0.055,5,0.014,8,0.077,9,2.625,10,0.126,15,0.177,23,1.047,30,0.698,38,1.755,41,3.439,43,1.536,44,0.007,45,0.543,46,0.194,47,1.268,50,1.825,51,0.993,52,1.843,58,1.523,63,0.57,66,2.225,71,1.687,74,0.213,86,0.194,88,2.612,115,0.004,116,0.003,118,0.767,121,2.067,144,2.162,172,2.296,174,1.668,180,2.876,184,2.931,203,1.361,240,0.65,264,1.482,285,2.457,295,0.662,296,0.828,314,1.425,319,2.42,327,1.178,347,0.991,348,1.136,352,0.798,355,1.505,356,1.06,383,1.84,392,1.164,394,2.8,405,1.327,445,1.29,456,0.878,538,1.84,591,1.29,608,0.605,609,0.782,613,1.19,644,1.655,666,0.616,677,1.186,759,3.496,761,2.532,785,1.501,845,1.452,851,3.137,854,3.345,864,3.748,959,1.407,980,3.525,982,2.296,1045,2.76,1054,1.501,1091,2.296,1142,3.525,1144,3.828,1146,2.549,1166,1.327,1176,2.296,1199,2.848,1200,1.612,1355,2.098,1377,2.549,1378,1.886,1471,1.554,1472,1.612,1473,1.452,1474,1.612,1475,1.677,1476,1.612,1477,1.612,1478,1.612,1479,1.501,1481,4.599,1482,1.501,1483,2.645,1484,0.993,1485,1.612,1486,4.18,1487,1.554,1488,1.407,1489,1.554,1490,1.452,1491,2.549,1492,1.612,1493,4.591,1494,1.612,1495,1.501,1496,3.463,1497,1.407,1498,2.373,1499,1.612,1500,1.612,1501,1.612,1502,1.612,1503,1.554,1504,1.554,1505,1.612,1506,1.612,1507,1.612,1508,1.612,1509,1.612,1510,1.612,1511,1.612,1512,1.612,1513,1.612,1514,1.612,1515,1.612,1516,3.047,1517,1.612,1518,2.373,1519,2.457,1520,1.677,1521,2.457,1522,1.452,1523,3.162,1524,1.193,1525,1.677,1526,3.162,1527,5.375,1528,2.225,1529,1.677,1530,1.677,1531,1.677,1532,1.677,1533,1.612,1534,1.612,1535,1.554,1536,1.677,1537,1.677,1538,2.457,1539,2.457,1540,2.159,1541,2.373,1542,2.549,1543,2.457,1544,2.652,1545,3.738,1546,3.345,1547,2.549,1548,5.559,1549,5.079,1550,4.955,1551,3.289,1552,2.549,1553,3.593,1554,3.289,1555,3.289,1556,4.328,1557,2.549,1558,2.549,1559,2.296,1560,3.738,1561,2.652,1562,2.652,1563,3.289,1564,3.289,1565,2.652,1566,2.457,1567,2.549,1568,2.098,1569,3.738,1570,2.652,1571,2.652,1691,4.25,1692,2.688,1693,2.688,1694,2.688,1695,2.688,1696,2.688,1697,2.688,1698,2.688,1699,2.688,1700,2.688,1701,2.688,1702,2.688,1703,2.688,1704,2.688]],["title/interfaces/ExplorerTab.html",[327,0.653,1519,2.715]],["body/interfaces/ExplorerTab.html",[3,0.083,4,0.067,5,0.017,8,0.069,9,2.401,10,0.129,15,0.218,16,0.604,38,1.369,41,3.111,43,1.383,44,0.007,45,0.531,46,0.198,47,0.558,50,1.671,51,1.225,52,1.9,58,1.54,63,0.568,66,1.736,71,1.926,74,0.229,86,0.203,88,2.715,115,0.004,116,0.004,121,2.172,144,2.125,172,1.792,174,1.608,180,2.4,203,1.389,240,0.802,264,1.465,285,1.917,295,0.817,296,1.021,314,1.434,319,2.231,327,1.241,329,1.041,347,1.166,348,1.402,352,0.939,355,2.544,356,1.308,383,1.436,392,1.436,394,2.336,405,1.637,445,1.592,456,1.083,538,1.436,591,1.592,608,0.746,609,0.964,613,0.929,644,1.888,666,0.76,677,1.125,759,3.236,761,2.113,785,1.851,845,1.792,851,2.617,854,2.791,864,3.25,959,1.736,980,3.403,982,3.882,1045,3.15,1054,1.851,1091,1.792,1142,3.25,1144,3.403,1146,1.989,1166,1.637,1176,1.792,1199,2.7,1200,1.989,1355,1.637,1377,1.989,1378,1.472,1471,1.917,1472,1.989,1473,1.792,1474,1.989,1475,2.069,1476,1.989,1477,1.989,1478,1.989,1479,1.851,1481,4.592,1482,1.851,1483,2.884,1484,1.225,1485,1.989,1486,4.323,1487,1.917,1488,1.736,1489,1.917,1490,1.792,1491,2.998,1492,1.989,1493,4.773,1494,1.989,1495,1.851,1496,3.872,1497,1.736,1498,2.791,1499,1.989,1500,1.989,1501,1.989,1502,1.989,1503,1.917,1504,1.917,1505,1.989,1506,1.989,1507,1.989,1508,1.989,1509,1.989,1510,1.989,1511,1.989,1512,1.989,1513,1.989,1514,1.989,1515,1.989,1516,3.478,1517,1.989,1518,3.359,1519,3.478,1520,2.069,1521,2.889,1522,1.792,1523,2.998,1524,1.472,1525,2.069,1526,2.998,1527,5.125,1528,2.617,1529,2.069,1530,2.069,1531,2.069,1532,2.069,1533,1.989,1534,1.989,1535,1.917,1536,2.069,1537,2.069,1538,1.917,1539,1.917,1540,1.685,1541,1.851,1542,1.989,1543,1.917,1544,2.069,1545,2.069,1546,2.791,1547,1.989,1548,5.249,1549,4.702,1550,4.483,1551,2.069,1552,1.989,1553,2.998,1554,2.069,1555,2.069,1556,3.753,1557,1.989,1558,1.989,1559,1.792,1560,3.118,1561,2.069,1562,2.069,1563,2.069,1564,2.069,1565,2.069,1566,1.917,1567,1.989,1568,1.637,1569,2.069,1570,2.069,1571,2.069]],["title/entities/ExplorerTabEntity.html",[264,0.72,1654,3.834]],["body/entities/ExplorerTabEntity.html",[3,0.134,4,0.108,5,0.036,8,0.051,10,0.103,13,1.156,15,0.544,16,0.844,30,0.796,43,1.197,44,0.007,45,0.468,46,0.188,58,1.242,61,2.489,63,0.419,74,0.243,81,1.739,86,0.125,87,2.252,115,0.005,116,0.005,182,2.452,203,1.287,218,2.306,264,1.316,267,1.64,295,1.311,314,1.132,319,2.326,327,0.972,355,2.76,439,3.774,441,1.52,456,1.739,481,1.578,495,1.578,613,1.491,616,2.473,617,2.595,619,2.694,622,3.322,644,1.672,650,2.973,680,1.81,681,1.774,682,1.774,683,1.81,684,2.649,685,1.774,686,2.933,687,2.28,688,1.64,689,1.81,690,1.81,691,1.81,692,1.81,693,1.81,694,1.81,695,1.705,696,1.81,697,1.81,698,1.81,699,1.739,700,2.374,701,1.81,702,1.774,703,1.81,704,1.81,705,1.81,706,1.81,707,1.81,708,1.64,709,1.81,710,1.774,711,1.81,982,4.211,986,2.557,990,2.706,994,4.204,995,3.194,996,3.774,997,3.194,999,3.825,1000,4.358,1001,2.423,1002,5.316,1006,4.038,1007,5.321,1011,3.657,1012,3.657,1013,3.549,1016,2.877,1018,3.825,1022,3.825,1481,3.742,1486,2.629,1519,4.038,1524,2.364,1596,6.332,1601,6.211,1612,3.467,1613,3.322,1614,4.057,1616,2.973,1622,3.467,1654,5.702,1656,5.943,1657,6.211,1663,4.347,1705,5.325,1706,6.985,1707,5.325,1708,5.325,1709,5.325,1710,5.325,1711,5.325,1712,5.325]],["title/interfaces/ExplorerTarget.html",[327,0.653,1493,2.715]],["body/interfaces/ExplorerTarget.html",[3,0.079,4,0.064,5,0.016,8,0.076,9,2.371,10,0.126,15,0.208,16,0.582,38,1.305,41,3.047,43,1.363,44,0.007,45,0.526,46,0.205,47,0.983,50,1.644,51,1.168,52,1.939,58,1.478,63,0.568,66,1.656,71,1.871,74,0.225,86,0.201,88,2.693,115,0.004,116,0.003,121,2.149,144,2.112,172,1.708,174,1.587,180,2.315,203,1.274,240,0.765,264,1.459,285,1.828,295,0.779,296,0.974,314,1.421,319,2.177,327,1.23,329,0.993,347,1.525,348,1.336,352,0.906,355,2.492,356,2.578,383,1.369,392,1.369,394,2.253,405,1.561,445,1.518,456,1.032,538,1.369,591,1.518,608,0.711,609,0.919,613,0.886,644,1.834,666,0.724,677,1.085,759,3.184,761,2.038,785,1.766,845,1.708,851,2.524,854,2.692,864,3.157,959,1.656,980,3.321,982,2.605,1045,4.038,1054,1.766,1091,1.708,1142,3.157,1144,3.321,1146,1.897,1166,1.561,1176,1.708,1199,2.605,1200,1.897,1355,1.561,1377,1.897,1378,1.403,1471,1.828,1472,1.897,1473,1.708,1474,1.897,1475,1.973,1476,1.897,1477,1.897,1478,1.897,1479,1.766,1481,4.574,1482,1.766,1483,2.919,1484,1.168,1485,1.897,1486,4.281,1487,1.828,1488,1.656,1489,1.828,1490,1.708,1491,2.892,1492,1.897,1493,4.596,1494,3.92,1495,3.65,1496,4.287,1497,3.422,1498,3.65,1499,3.92,1500,3.92,1501,3.92,1502,3.92,1503,3.779,1504,3.779,1505,1.897,1506,1.897,1507,1.897,1508,1.897,1509,1.897,1510,1.897,1511,1.897,1512,1.897,1513,1.897,1514,1.897,1515,1.897,1516,3.378,1517,1.897,1518,2.692,1519,2.787,1520,1.973,1521,2.787,1522,1.708,1523,2.892,1524,1.403,1525,1.973,1526,2.892,1527,5.068,1528,2.524,1529,1.973,1530,1.973,1531,1.973,1532,1.973,1533,1.897,1534,1.897,1535,1.828,1536,1.973,1537,1.973,1538,1.828,1539,1.828,1540,1.607,1541,1.766,1542,1.897,1543,1.828,1544,1.973,1545,1.973,1546,2.692,1547,1.897,1548,5.185,1549,4.626,1550,4.39,1551,1.973,1552,1.897,1553,2.892,1554,1.973,1555,1.973,1556,3.646,1557,1.897,1558,1.897,1559,1.708,1560,3.008,1561,1.973,1562,1.973,1563,1.973,1564,1.973,1565,1.973,1566,1.828,1567,1.897,1568,1.561,1569,1.973,1570,1.973,1571,1.973]],["title/entities/ExplorerTargetEntity.html",[264,0.72,1656,3.374]],["body/entities/ExplorerTargetEntity.html",[3,0.103,4,0.083,5,0.03,8,0.078,10,0.079,13,0.892,15,0.564,16,0.707,30,0.851,44,0.007,45,0.547,46,0.201,52,1.763,58,1.04,63,0.489,74,0.238,81,1.342,86,0.097,87,2.442,115,0.004,116,0.004,182,2.54,264,1.201,267,1.266,295,1.012,319,1.949,332,1.801,356,2.686,439,3.161,441,1.173,456,1.91,481,1.218,495,1.218,613,1.151,616,2.628,617,2.774,619,3.486,644,1.29,649,2.533,680,1.397,681,1.369,682,1.369,683,1.397,684,2.315,685,1.369,686,2.738,687,1.91,688,1.266,689,1.397,690,1.397,691,1.397,692,1.397,693,1.397,694,1.397,695,1.316,696,1.397,697,1.397,698,1.397,699,1.342,700,1.988,701,1.397,702,1.369,703,1.397,704,1.397,705,1.397,706,1.397,707,1.397,708,1.266,709,1.397,710,1.369,711,1.397,971,2.307,986,2.809,987,3.382,989,3.137,990,2.088,991,3.65,994,4.261,995,3.509,996,4.404,997,3.509,1011,4.268,1012,4.268,1013,2.972,1016,2.221,1045,4.391,1046,5.189,1054,2.295,1087,2.415,1355,2.888,1481,3.27,1485,2.465,1486,2.888,1493,3.382,1494,4.085,1495,3.803,1497,3.566,1498,3.803,1499,4.085,1500,4.085,1501,4.085,1502,4.085,1503,3.938,1504,3.938,1524,1.824,1543,3.382,1595,4.776,1596,6.638,1599,4.457,1600,5.654,1602,4.776,1603,3.131,1612,2.676,1613,2.564,1616,2.295,1617,5.654,1624,5.654,1656,4.202,1668,5.062,1688,3.655,1713,4.11,1714,5.202,1715,6.812,1716,4.11,1717,4.11,1718,4.11,1719,4.11,1720,3.355,1721,4.776,1722,5.85,1723,4.11,1724,5.85,1725,4.11,1726,5.85,1727,4.11,1728,5.85,1729,4.11,1730,5.85,1731,4.11,1732,4.11,1733,4.11,1734,4.11,1735,5.85,1736,4.11,1737,4.11,1738,4.776,1739,3.355,1740,4.11,1741,4.11]],["title/interfaces/File.html",[5,0.024,327,0.653]],["body/interfaces/File.html",[3,0.061,4,0.049,5,0.045,8,0.037,10,0.12,15,0.257,16,0.682,33,2.299,38,1,40,1.512,44,0.007,45,0.418,46,0.19,52,1.012,53,3.798,58,0.431,63,0.589,69,2.576,74,0.139,86,0.176,115,0.003,116,0.003,121,2.073,122,1.076,123,1.353,134,1.231,147,1.163,152,3.46,174,1.716,175,3.153,183,1.304,203,1.299,240,1.755,279,2.185,292,2.331,296,0.746,314,1.52,327,1.189,328,2.347,329,0.761,330,1.512,331,2.747,332,2.545,333,1.512,334,1.512,335,2.347,336,2.347,337,1.512,338,2.347,339,2.262,340,1.512,341,1.512,342,1.512,343,1.512,344,1.454,345,1.512,346,1.512,347,1.626,348,1.024,349,2.114,350,2.049,351,1.401,352,1.061,353,2.507,354,2.788,355,2.346,356,2.227,357,3.387,358,2.445,359,1.881,360,4.548,361,4.375,362,3.717,363,2.441,364,1.578,365,1.781,366,1,367,1.024,368,1.578,369,4.417,370,1.578,371,1.512,372,4.837,373,1.578,374,5.378,375,1.578,376,4.957,377,2.114,378,0.978,379,2.347,380,3.831,381,2.547,382,4.051,383,1.049,384,3.07,385,3.07,386,1.578,387,2.347,388,3.65,389,2.951,390,3.203,391,4.961,392,1.049,393,4.314,394,1.828,395,2.347,396,3.975,397,1.578,398,1.512,399,1.512,400,1.578,401,5.009,402,3.203,403,2.547,404,2.747,405,1.196,406,2.347,407,2.547,408,2.441,409,1.578,410,1.578,411,1.512,412,2.331,413,4.034,414,2.331,415,2.547,416,1.512,417,2.441,418,1.578,419,3.7,420,2.441,421,2.441,422,1.512,423,1.578,424,1.578,425,1.512,426,3.866,427,1.512,428,2.441,429,1.578,430,3.677,431,1.512,432,1.401,433,1.578,434,1.309,435,4.314,436,1.578,437,1.578,438,1.578,439,2.114,440,1.512,441,1.768,442,2.547,443,2.114,444,1.512,445,2.362,446,3.07,447,1.512,448,1.512,449,1.512,450,1.454,451,3.203,452,1.578,453,1.512,454,1.512,455,1.512,456,0.791,457,1.578,458,1.578,459,1.578,460,1.512,461,1.512,462,1.578,463,1.133,464,1.512,465,1.512,466,3.203,467,1.512,468,1.512,469,3.07,470,2.547,471,2.547,472,2.262,473,2.547,474,1.512,475,1.512,476,1.988,477,1.578,478,1.512,479,1.578,480,1.512,481,0.718,482,1.512,483,1.578,484,1.512,485,1.512,486,1.454,487,2.547,488,1.578,489,2.262,490,2.547,491,1.578,492,2.547,493,1.578,494,1.578,495,1.159,496,1.578,497,1.309,498,1.578,499,1.578,500,1.578,501,1.578,502,2.547,503,1.578,504,2.547,505,1.578,506,2.441,507,2.547,508,1.512,509,1.578,510,1.578,511,3.203,512,1.578,513,3.677,514,3.203,515,3.203,516,3.203,517,1.578,518,4.724,519,1.578,520,3.387,521,4.539,522,1.578,523,1.578,524,1.578,525,2.547,526,2.547,527,1.578,528,1.578,529,1.578,530,1.578,531,1.578,532,1.578,533,1.578,534,1.578,535,2.547,536,1.578,537,1.578,538,1.049,539,1.578,540,2.547,541,2.441,542,1.578,543,1.578,544,1.578,545,1.578,546,1.454,547,2.547,548,4.314,549,1.578,550,1.578,551,3.203,552,1.578,553,1.578,554,1.578,555,2.441,556,1.578,557,1.578,558,1.578,559,1.578,560,3.203,561,2.547,562,1.578,563,1.578,564,2.547,565,1.578,566,2.547,567,1.578,568,1.512,569,1.163,570,1.578,571,4.034,572,1.578,573,1.578,574,1.578,575,1.401,576,1.578,577,1.163,578,1.578,579,3.523,580,1.578,581,1.578,582,2.547,583,2.547,584,2.547,585,1.578,586,1.578,587,1.578,588,1.578,589,1.578,590,1.512,591,1.163,592,1.512,593,1.578,594,1.578,595,1.578,596,2.441,597,1.512,598,1.578,599,1.578,600,1.578,601,3.203,602,2.441,603,1.512,604,1.512,605,1.512,606,1.512,607,1.512,608,0.545,609,0.705,610,1.269,611,1.454]],["title/entities/FileEntity.html",[264,0.72,1742,3.204]],["body/entities/FileEntity.html",[3,0.129,4,0.104,5,0.041,8,0.049,10,0.132,13,1.115,15,0.536,16,0.824,30,0.856,44,0.007,45,0.509,46,0.207,52,1.402,63,0.524,74,0.231,86,0.121,87,2.423,115,0.005,116,0.005,174,1.328,182,2.021,203,1.265,240,1.65,264,1.173,295,1.265,314,1.322,319,2.907,332,2.358,352,1.438,353,3.399,354,3.78,355,2.711,356,3.02,357,4.593,359,2.55,456,1.677,613,1.439,616,2.415,617,2.792,619,3.53,634,2.61,644,2.141,645,3.367,646,2.868,648,2.61,649,3.316,650,2.868,986,2.466,987,2.97,989,3.764,990,3.465,991,5.089,996,4.137,1009,5.196,1013,3.89,1048,4.44,1087,2.816,1107,2.574,1668,3.504,1739,4.193,1742,4.652,1743,5.137,1744,6.821,1745,5.137,1746,5.137,1747,5.137,1748,5.311,1749,4.193,1750,5.568,1751,4.193,1752,5.137,1753,5.137,1754,5.137,1755,5.137,1756,4.568,1757,5.137,1758,4.193,1759,5.137,1760,3.504,1761,4.652,1762,4.652,1763,5.137,1764,4.652,1765,5.568,1766,5.568,1767,5.568,1768,3.504,1769,5.137,1770,4.193]],["title/classes/FileManager.html",[10,0.091,349,2.538]],["body/classes/FileManager.html",[3,0.133,4,0.107,5,0.048,8,0.051,9,2.8,10,0.165,15,0.348,23,1.713,30,0.831,43,1.538,44,0.007,45,0.558,46,0.196,47,1.509,50,1.912,52,1.598,63,0.569,74,0.22,86,0.163,115,0.005,116,0.005,118,1.51,121,1.949,144,2.19,184,3.135,203,1.363,314,1.55,332,1.63,349,3.758,350,2.771,352,1.55,366,3.208,378,2.806,646,2.955,677,1.748,850,4.529,1173,3.446,1407,3.758,1742,3.61,1748,3.446,1768,3.61,1771,4.707,1772,6.343,1773,5.679,1774,6.186,1775,5.679,1776,5.679,1777,6.186,1778,4.707,1779,6.343,1780,3.948,1781,5.293,1782,3.535,1783,5.293,1784,5.679,1785,5.293,1786,3.535,1787,5.293,1788,3.535,1789,5.293,1790,5.679,1791,5.293,1792,3.535,1793,5.293,1794,4.032,1795,4.321,1796,4.321,1797,4.321]],["title/classes/FileMd.html",[10,0.091,350,2.459]],["body/classes/FileMd.html",[3,0.157,4,0.127,5,0.047,8,0.06,9,2.78,10,0.174,15,0.411,23,1.905,30,0.579,43,1.071,44,0.007,45,0.464,46,0.137,47,1.051,50,1.332,52,1.285,63,0.559,74,0.238,86,0.182,115,0.006,116,0.006,118,1.783,121,2.107,144,2.174,184,2.521,314,1.462,332,2.381,349,3.376,350,4.05,352,1.174,366,2.58,378,2.521,646,3.489,677,1.89,1173,5.469,1407,3.996,1742,4.262,1748,4.068,1768,4.262,1771,5.557,1772,5.101,1779,5.101,1780,3.175,1782,3.175,1784,5.101,1786,3.175,1788,3.175,1790,5.101,1792,3.175,1794,4.761,1795,5.101,1796,6.857,1797,6.314,1798,5.557,1799,6.249]],["title/interfaces/FileMetadata.html",[327,0.653,358,2.034]],["body/interfaces/FileMetadata.html",[3,0.058,4,0.047,5,0.046,8,0.036,10,0.117,15,0.247,16,0.783,33,2.223,38,0.952,40,1.439,44,0.007,45,0.329,46,0.19,52,0.474,53,3.903,58,0.41,63,0.587,69,3.391,74,0.135,86,0.173,115,0.003,116,0.003,121,2.047,122,1.024,123,1.288,134,1.172,147,1.107,152,3.373,174,1.731,175,3.063,183,1.26,203,1.28,240,1.567,279,3.617,292,2.82,296,0.71,314,1.51,327,1.176,328,3.29,329,0.724,330,1.439,331,3.814,332,2.477,333,1.439,334,1.439,335,2.255,336,2.255,337,1.439,338,2.255,339,2.173,340,1.439,341,1.439,342,1.439,343,1.439,344,1.384,345,1.439,346,1.439,347,1.11,348,0.975,349,2.031,350,1.968,351,1.334,352,0.433,353,1.024,354,1.139,355,1.942,356,0.91,357,1.384,358,2.06,359,0.768,360,4.782,361,4.364,362,4.097,363,4.041,364,2.447,365,2.497,366,1.552,367,2.319,368,2.447,369,4.451,370,2.447,371,2.345,372,4.975,373,2.447,374,5.448,375,2.447,376,4.961,377,2.964,378,1.516,379,3.29,380,4.378,381,3.097,382,4.228,383,1.628,384,3.422,385,3.422,386,2.447,387,3.29,388,3.965,389,3.885,390,3.933,391,4.986,392,1.628,393,4.447,394,2.223,395,3.29,396,4.542,397,2.447,398,2.345,399,2.345,400,2.447,401,5.046,402,3.571,403,3.571,404,3.814,405,1.856,406,3.29,407,2.447,408,2.345,409,1.502,410,1.502,411,1.439,412,2.265,413,3.933,414,2.265,415,2.447,416,1.439,417,2.345,418,1.502,419,3.617,420,2.345,421,2.345,422,1.439,423,1.502,424,1.502,425,1.439,426,3.769,427,1.439,428,2.345,429,1.502,430,3.571,431,1.439,432,1.334,433,1.502,434,1.246,435,4.217,436,1.502,437,1.502,438,1.502,439,2.031,440,1.439,441,1.724,442,2.447,443,2.031,444,1.439,445,2.284,446,2.968,447,1.439,448,1.439,449,1.439,450,1.384,451,3.097,452,1.502,453,1.439,454,1.439,455,1.439,456,0.753,457,1.502,458,1.502,459,1.502,460,1.439,461,1.439,462,1.502,463,1.078,464,1.439,465,1.439,466,3.097,467,1.439,468,1.439,469,2.968,470,2.447,471,2.447,472,2.173,473,2.447,474,1.439,475,1.439,476,1.91,477,1.502,478,1.439,479,1.502,480,1.439,481,0.684,482,1.439,483,1.502,484,1.439,485,1.439,486,1.384,487,2.447,488,1.502,489,2.173,490,2.447,491,1.502,492,2.447,493,1.502,494,1.502,495,1.114,496,1.502,497,1.246,498,1.502,499,1.502,500,1.502,501,1.502,502,2.447,503,1.502,504,2.447,505,1.502,506,2.345,507,2.447,508,1.439,509,1.502,510,1.502,511,3.097,512,1.502,513,3.571,514,3.097,515,3.097,516,3.097,517,1.502,518,4.636,519,1.502,520,3.29,521,4.447,522,1.502,523,1.502,524,1.502,525,2.447,526,2.447,527,1.502,528,1.502,529,1.502,530,1.502,531,1.502,532,1.502,533,1.502,534,1.502,535,2.447,536,1.502,537,1.502,538,0.999,539,1.502,540,2.447,541,2.345,542,1.502,543,1.502,544,1.502,545,1.502,546,1.384,547,2.447,548,4.217,549,1.502,550,1.502,551,3.097,552,1.502,553,1.502,554,1.502,555,2.345,556,1.502,557,1.502,558,1.502,559,1.502,560,3.097,561,2.447,562,1.502,563,1.502,564,2.447,565,1.502,566,2.447,567,1.502,568,1.439,569,1.107,570,1.502,571,3.933,572,1.502,573,1.502,574,1.502,575,1.334,576,1.502,577,1.107,578,1.502,579,3.422,580,1.502,581,1.502,582,2.447,583,2.447,584,2.447,585,1.502,586,1.502,587,1.502,588,1.502,589,1.502,590,1.439,591,1.107,592,1.439,593,1.502,594,1.502,595,1.502,596,2.345,597,1.439,598,1.502,599,1.502,600,1.502,601,3.097,602,2.345,603,1.439,604,1.439,605,1.439,606,1.439,607,1.439,608,0.519,609,0.671,610,1.208,611,1.384]],["title/entities/FileMetadataEntity.html",[264,0.72,1748,3.058]],["body/entities/FileMetadataEntity.html",[3,0.118,4,0.095,5,0.046,8,0.045,10,0.091,13,1.019,15,0.309,16,0.775,30,0.842,44,0.007,46,0.199,63,0.51,74,0.251,86,0.11,87,2.449,115,0.005,116,0.005,203,1.208,264,1.121,279,4.084,295,1.156,314,1.041,319,3.081,331,4.39,332,1.976,358,2.779,363,4.563,367,3.092,372,4.545,380,4.545,391,4.117,396,4.716,404,4.39,612,5.99,613,1.315,615,3.202,616,2.273,617,2.746,619,3.278,620,3.832,634,2.385,640,3.372,642,3.576,644,1.474,645,3.169,646,2.621,648,2.385,649,3.167,996,5.149,1009,5.572,1048,6.022,1685,5.24,1748,4.179,1749,6.939,1750,7.551,1751,6.939,1765,7.104,1766,7.104,1768,5.798,1800,9.177,1801,4.175,1802,6.992,1803,4.175,1804,5.99,1805,4.695,1806,4.695,1807,5.99,1808,4.695,1809,5.99,1810,4.695,1811,5.99,1812,4.695,1813,4.695]],["title/injectables/FileMetadataService.html",[652,1.475,1814,3.834]],["body/injectables/FileMetadataService.html",[3,0.106,4,0.054,5,0.046,8,0.066,10,0.052,15,0.176,16,0.723,23,1.045,24,2.802,25,2.585,30,0.604,43,1.188,44,0.007,45,0.391,46,0.152,47,1.221,50,1.547,51,0.99,58,1.291,63,0.436,66,3.941,74,0.245,76,0.593,86,0.063,87,1.083,88,2.341,89,2.753,93,2.514,98,2.688,103,2.053,115,0.003,116,0.003,124,2.292,144,0.972,166,4.727,167,4.157,174,1.35,183,1.394,184,1.082,212,1.608,218,1.837,219,1.673,220,1.926,240,0.649,247,1.55,300,3.463,312,2.762,319,2.643,331,3.639,332,2.684,350,3.132,351,1.55,353,3.439,376,2.544,382,2.368,383,1.837,391,3.132,404,3.639,426,1.673,506,3.283,575,2.452,612,4.009,652,1.332,654,1.221,656,1.982,672,1.362,677,0.954,759,1.751,761,2.929,798,1.287,841,1.829,965,2.544,1006,2.452,1075,1.608,1108,3.232,1173,5.167,1402,2.043,1403,2.385,1407,4.078,1415,2.762,1748,5.988,1768,4.951,1795,2.189,1796,3.463,1797,6.723,1798,3.772,1802,3.772,1804,3.232,1807,3.232,1809,3.232,1811,3.232,1814,3.463,1815,6.518,1816,2.682,1817,3.772,1818,4.242,1819,4.242,1820,4.242,1821,4.242,1822,2.682,1823,4.242,1824,2.682,1825,7.527,1826,4.242,1827,2.682,1828,4.242,1829,2.682,1830,4.242,1831,2.682,1832,4.242,1833,3.463,1834,3.772,1835,6.144,1836,4.242,1837,4.242,1838,2.682,1839,2.385,1840,3.772,1841,4.68,1842,2.682,1843,2.189,1844,2.682,1845,2.682,1846,2.682,1847,2.682,1848,2.682,1849,2.682,1850,2.682,1851,2.682,1852,2.682,1853,4.242,1854,2.682,1855,2.682,1856,2.682,1857,2.682,1858,2.682,1859,2.682,1860,2.682,1861,2.682,1862,2.682,1863,2.682,1864,2.682,1865,2.682,1866,2.682,1867,2.682,1868,4.242,1869,2.682,1870,2.682,1871,2.682,1872,2.189,1873,2.682,1874,2.682,1875,2.682,1876,4.242,1877,2.682,1878,2.682,1879,4.242,1880,4.242,1881,4.242,1882,4.242,1883,4.242,1884,2.682,1885,4.242,1886,2.682,1887,4.242,1888,2.682,1889,4.242,1890,2.682,1891,4.242,1892,2.682,1893,4.242,1894,2.682,1895,2.682,1896,2.682,1897,2.682,1898,2.682,1899,2.682,1900,2.682,1901,2.682,1902,2.682,1903,2.682,1904,2.682,1905,2.682,1906,2.682,1907,2.682,1908,2.682,1909,2.682,1910,2.682,1911,2.682,1912,2.682,1913,2.682,1914,2.682,1915,2.682,1916,2.682,1917,2.682,1918,2.682,1919,4.242,1920,2.682,1921,2.682,1922,2.682,1923,2.682,1924,2.682,1925,2.682,1926,2.682,1927,2.682,1928,2.682,1929,2.682,1930,2.682,1931,2.682,1932,2.682,1933,2.682,1934,2.682,1935,2.682,1936,2.682,1937,2.682,1938,2.682,1939,2.682,1940,2.682,1941,2.682,1942,2.682,1943,2.682,1944,4.242,1945,2.682,1946,2.682,1947,2.682,1948,2.682,1949,2.682,1950,2.682,1951,2.189,1952,2.682,1953,4.242,1954,4.242,1955,4.242,1956,4.242,1957,4.242,1958,2.682,1959,2.682,1960,2.682,1961,2.682,1962,2.682,1963,2.682,1964,4.242,1965,2.682,1966,2.682,1967,2.682,1968,2.682,1969,2.682,1970,2.682,1971,2.682,1972,2.682,1973,2.682,1974,2.682,1975,2.682,1976,2.682,1977,2.682,1978,2.682,1979,2.682,1980,2.682,1981,2.682,1982,2.682,1983,2.682,1984,2.682,1985,2.682,1986,2.682,1987,2.682,1988,4.242,1989,2.682,1990,2.682,1991,4.242,1992,2.682,1993,2.682,1994,2.682,1995,2.682,1996,2.682,1997,2.682,1998,4.242,1999,2.682,2000,4.242,2001,5.983,2002,2.682,2003,2.682,2004,2.682,2005,2.682,2006,2.682,2007,2.682,2008,2.682,2009,4.242,2010,2.682,2011,2.682,2012,2.682,2013,2.682,2014,4.242,2015,2.682,2016,2.682,2017,2.682,2018,2.682,2019,2.682,2020,2.682,2021,2.682,2022,2.682,2023,2.682,2024,2.682,2025,2.682,2026,2.682,2027,2.682,2028,2.682,2029,2.682,2030,2.682,2031,2.682,2032,2.682,2033,2.682,2034,2.682,2035,2.682,2036,2.682,2037,2.682,2038,2.682,2039,2.682,2040,2.682,2041,2.682,2042,2.682,2043,2.682,2044,5.263,2045,2.682,2046,2.682,2047,2.682,2048,2.682,2049,2.682,2050,2.682,2051,2.682,2052,2.682,2053,2.682,2054,2.682,2055,2.682,2056,2.682,2057,2.682,2058,2.682,2059,2.682,2060,2.682,2061,2.682,2062,2.682,2063,2.682,2064,2.682,2065,2.682,2066,2.682,2067,2.682,2068,2.682,2069,2.682,2070,2.682,2071,2.682,2072,2.682,2073,2.682,2074,2.682,2075,2.682,2076,2.682,2077,2.682,2078,2.682,2079,2.682,2080,2.682,2081,2.682,2082,2.682,2083,2.682,2084,2.682,2085,2.682,2086,2.682,2087,2.682,2088,2.682,2089,2.682,2090,2.682,2091,2.682,2092,2.682,2093,2.682,2094,2.682,2095,2.682,2096,2.682,2097,2.682,2098,2.682,2099,2.682,2100,2.682,2101,2.682,2102,2.682,2103,2.682,2104,2.682,2105,2.682,2106,2.682,2107,2.682,2108,2.682,2109,2.682,2110,2.682,2111,2.682,2112,2.682,2113,2.682,2114,2.682,2115,2.682,2116,2.682,2117,2.682,2118,2.682]],["title/modules/FileModule.html",[610,2.459,666,1.076]],["body/modules/FileModule.html",[3,0.143,4,0.116,5,0.041,8,0.054,10,0.11,23,1.404,30,0.528,43,0.977,44,0.007,45,0.342,46,0.125,47,0.959,50,1.215,74,0.265,76,1.26,81,1.862,86,0.134,103,1.511,115,0.005,116,0.005,124,3.944,182,1.69,183,1.511,267,1.756,349,4.742,350,4.596,351,3.296,441,1.627,481,1.69,495,1.69,608,1.643,610,4.217,611,5.093,646,3.183,666,2.011,668,2.41,672,3.709,673,4.753,674,3.712,679,4.83,680,1.938,681,1.899,682,1.899,683,1.938,684,2.737,685,1.899,686,2.981,687,2.384,688,1.756,689,1.938,690,1.938,691,1.938,692,1.938,693,1.938,694,1.938,695,1.825,696,1.938,697,1.938,698,1.938,699,1.862,700,2.481,701,1.938,702,1.899,703,1.938,704,1.938,705,1.938,706,1.938,707,1.938,708,1.756,709,1.938,710,1.899,711,1.938,718,4.22,719,3.889,720,3.412,721,3.557,730,2.664,741,2.596,742,3.604,743,4.22,745,2.596,858,2.985,1035,3.712,1107,2.755,1742,3.889,1794,4.343,1814,6.574,2119,5.702,2120,5.702,2121,6.574,2122,5.702,2123,5.702,2124,5.702,2125,5.702,2126,5.702]],["title/injectables/FileService.html",[652,1.475,2121,3.834]],["body/injectables/FileService.html",[3,0.055,4,0.044,5,0.049,8,0.071,10,0.042,15,0.144,17,1.313,18,1.844,19,3.394,21,2.694,23,0.887,24,3.304,25,2.931,30,0.735,38,1.487,43,1.276,44,0.007,45,0.519,46,0.163,47,1.252,50,1.878,51,1.963,52,1.719,53,3.444,58,0.945,59,5.192,63,0.507,66,1.886,74,0.231,76,0.484,86,0.051,87,2.086,88,2.497,89,2.701,93,3.477,97,3.317,98,2.317,103,2.063,115,0.003,116,0.003,124,1.946,125,2.082,137,1.275,144,2.087,147,3.034,152,3.896,180,3.034,182,1.067,183,0.954,184,1.851,203,1.529,218,2.302,264,1.357,267,1.109,293,2.94,295,0.539,314,1.324,317,2.457,332,1.809,349,4.021,350,2.784,351,1.266,352,1.534,353,3.67,354,4.081,356,0.864,357,1.313,362,2.161,366,2.984,382,3.729,383,1.56,443,3.414,613,1.009,646,1.223,652,1.131,654,0.997,656,1.683,657,4.34,659,1.223,661,0.926,664,1.147,665,1.313,677,0.81,688,1.109,724,1.494,726,1.494,759,3.485,761,1.523,775,2.744,793,2.345,832,3.819,841,4.556,845,3.77,850,3.461,851,2.403,854,1.223,855,1.947,857,1.573,858,1.147,971,2.097,1087,2.88,1107,2.939,1128,2.94,1131,5.795,1144,2.701,1173,2.345,1176,1.946,1188,2.744,1198,1.426,1252,2.744,1259,4.081,1313,5.315,1339,2.744,1355,1.778,1402,1.668,1407,2.675,1415,2.345,1426,5.695,1552,3.189,1553,2.161,1742,5.899,1772,3.746,1773,2.94,1774,3.203,1775,2.94,1776,2.94,1777,3.203,1778,1.947,1779,6.953,1780,3.545,1782,1.83,1784,2.94,1786,1.83,1788,1.83,1790,2.94,1792,1.83,1794,1.668,1833,2.94,1843,1.788,2121,2.94,2127,2.19,2128,3.203,2129,6.319,2130,5.317,2131,4.589,2132,3.602,2133,5.317,2134,5.317,2135,4.589,2136,4.589,2137,2.19,2138,2.19,2139,6.977,2140,4.728,2141,5.317,2142,2.19,2143,5.876,2144,2.19,2145,6.319,2146,3.602,2147,2.19,2148,2.19,2149,3.602,2150,5.317,2151,4.589,2152,2.19,2153,6.319,2154,2.19,2155,2.19,2156,2.19,2157,2.19,2158,3.203,2159,2.19,2160,3.461,2161,4.728,2162,2.19,2163,2.19,2164,3.602,2165,4.081,2166,2.19,2167,2.19,2168,2.19,2169,2.19,2170,2.19,2171,2.19,2172,2.19,2173,2.19,2174,2.19,2175,3.602,2176,3.602,2177,2.19,2178,1.788,2179,4.589,2180,5.317,2181,4.589,2182,4.589,2183,3.602,2184,3.602,2185,3.602,2186,3.602,2187,2.345,2188,2.19,2189,2.19,2190,2.19,2191,3.602,2192,2.19,2193,2.19,2194,2.19,2195,2.19,2196,2.19,2197,2.19,2198,2.19,2199,2.19,2200,2.19,2201,2.19,2202,2.19,2203,2.19,2204,2.19,2205,2.19,2206,2.19,2207,2.19,2208,2.19,2209,2.19,2210,2.19,2211,2.19,2212,4.589,2213,3.602,2214,2.19,2215,2.19,2216,2.19,2217,2.19,2218,2.19,2219,2.19,2220,2.19,2221,2.19,2222,2.19,2223,2.19,2224,2.19,2225,2.19,2226,2.19,2227,2.19,2228,2.19,2229,2.19,2230,2.19,2231,2.19,2232,2.19,2233,2.19,2234,2.19,2235,2.19,2236,2.19,2237,2.19,2238,2.19,2239,2.19,2240,2.19,2241,2.19,2242,2.19,2243,2.19,2244,2.19,2245,2.19,2246,2.19,2247,2.19,2248,2.19,2249,2.19,2250,2.19,2251,2.19,2252,2.19,2253,2.19,2254,2.19,2255,2.19,2256,2.19,2257,2.19,2258,2.19,2259,2.19,2260,2.19,2261,2.19,2262,2.19,2263,2.19,2264,2.19,2265,2.19,2266,2.19,2267,2.19,2268,3.203,2269,2.19]],["title/classes/ForbiddenMsException.html",[10,0.091,2270,4.177]],["body/classes/ForbiddenMsException.html",[3,0.173,4,0.14,5,0.035,8,0.066,10,0.133,30,0.64,43,1.185,44,0.007,45,0.415,46,0.151,47,1.163,63,0.527,74,0.233,76,1.528,86,0.162,115,0.006,116,0.006,118,1.973,137,2.448,181,3.744,184,2.789,569,3.948,656,3.843,815,4.715,816,5.13,817,4.754,819,5.609,820,5.354,821,5.18,822,5.609,823,4.715,824,4.501,825,4.715,2270,7.313,2271,8.223,2272,8.778,2273,6.913]],["title/classes/GoogleCaptchaService.html",[10,0.091,2274,4.177]],["body/classes/GoogleCaptchaService.html",[3,0.126,4,0.102,5,0.026,8,0.064,10,0.163,15,0.33,18,2.625,19,4.498,21,3.571,23,1.654,24,3.135,25,2.376,30,0.78,33,3.138,35,3.07,43,1.151,44,0.007,45,0.403,46,0.184,47,1.13,50,1.723,52,1.381,53,3.315,58,1.194,65,4.19,68,4.372,73,4.372,74,0.251,76,1.109,86,0.118,88,1.516,89,2.922,93,3.249,98,2.329,103,2.005,104,4.463,115,0.005,116,0.005,118,1.432,137,2.378,144,2.109,203,1.335,218,2.173,354,3.315,371,4.19,656,3.777,659,2.802,661,2.121,664,2.628,665,3.01,677,1.511,724,3.423,726,3.423,757,4.824,761,2.838,797,4.19,798,3.224,841,4.58,937,4.861,947,6.039,948,4.097,950,6.051,963,6.157,964,4.824,966,5.116,967,4.58,969,5.436,971,2.648,972,5.482,1144,3.412,1198,3.267,1357,6.73,1465,3.605,2274,7.187,2275,6.716,2276,4.463,2277,5.972,2278,7.227,2279,7.077,2280,5.972,2281,5.116,2282,6.716,2283,8.082,2284,5.019,2285,5.019,2286,6.597,2287,5.019,2288,6.716,2289,5.972,2290,4.463,2291,5.019,2292,4.463,2293,4.463,2294,5.972,2295,4.463,2296,4.463,2297,5.019,2298,5.019,2299,5.019,2300,5.019,2301,5.019,2302,5.019,2303,5.019]],["title/interfaces/GpsFileMetadata.html",[327,0.653,387,2.817]],["body/interfaces/GpsFileMetadata.html",[3,0.062,4,0.05,5,0.045,8,0.038,10,0.12,15,0.26,16,0.687,33,2.319,38,1.013,40,1.532,44,0.007,45,0.341,46,0.179,52,0.505,53,3.814,58,0.703,63,0.588,69,2.599,74,0.141,86,0.177,115,0.003,116,0.003,121,2.167,122,1.09,123,1.371,134,1.247,147,1.179,152,3.483,174,1.73,175,3.177,183,1.315,203,1.304,240,1.612,279,2.207,292,2.349,296,0.756,314,1.533,327,1.192,328,2.371,329,0.771,330,1.532,331,2.771,332,2.477,333,1.532,334,1.532,335,2.371,336,2.371,337,1.532,338,2.371,339,2.285,340,1.532,341,1.532,342,1.532,343,1.532,344,1.472,345,1.532,346,1.532,347,1.158,348,1.038,349,2.136,350,2.07,351,1.419,352,0.461,353,1.09,354,1.212,355,1.757,356,0.968,357,1.472,358,1.712,359,0.818,360,4.565,361,4.384,362,3.741,363,2.467,364,1.598,365,1.8,366,1.013,367,1.038,368,1.598,369,4.424,370,1.598,371,1.532,372,4.852,373,1.598,374,5.392,375,1.598,376,4.973,377,2.136,378,0.99,379,2.371,380,4.466,381,2.574,382,4.071,383,1.063,384,4.373,385,4.373,386,1.598,387,2.977,388,3.67,389,2.977,390,3.231,391,4.966,392,1.063,393,4.34,394,1.847,395,2.371,396,3.998,397,1.598,398,1.532,399,1.532,400,1.598,401,5.03,402,3.231,403,2.574,404,2.771,405,1.212,406,2.371,407,2.574,408,2.467,409,1.598,410,1.598,411,1.532,412,2.349,413,4.061,414,2.349,415,2.574,416,1.532,417,2.467,418,1.598,419,3.722,420,2.467,421,2.467,422,1.532,423,1.598,424,1.598,425,1.532,426,3.892,427,1.532,428,2.467,429,1.598,430,3.704,431,1.532,432,1.419,433,1.598,434,1.326,435,4.34,436,1.598,437,1.598,438,1.598,439,2.136,440,1.532,441,1.78,442,2.574,443,2.136,444,1.532,445,2.383,446,3.096,447,1.532,448,1.532,449,1.532,450,1.472,451,3.231,452,1.598,453,1.532,454,1.532,455,1.532,456,0.802,457,1.598,458,1.598,459,1.598,460,1.532,461,1.532,462,1.598,463,1.147,464,1.532,465,1.532,466,3.231,467,1.532,468,1.532,469,3.096,470,2.574,471,2.574,472,2.285,473,2.574,474,1.532,475,1.532,476,2.522,477,1.598,478,1.532,479,1.598,480,1.532,481,0.728,482,1.532,483,1.598,484,1.532,485,1.532,486,1.472,487,2.574,488,1.598,489,2.285,490,2.574,491,1.598,492,2.574,493,1.598,494,1.598,495,1.172,496,1.598,497,1.326,498,1.598,499,1.598,500,1.598,501,1.598,502,2.574,503,1.598,504,2.574,505,1.598,506,2.467,507,2.574,508,1.532,509,1.598,510,1.598,511,3.231,512,1.598,513,3.704,514,3.231,515,3.231,516,3.231,517,1.598,518,4.747,519,1.598,520,3.413,521,4.563,522,1.598,523,1.598,524,1.598,525,2.574,526,2.574,527,1.598,528,1.598,529,1.598,530,1.598,531,1.598,532,1.598,533,1.598,534,1.598,535,2.574,536,1.598,537,1.598,538,1.063,539,1.598,540,2.574,541,2.467,542,1.598,543,1.598,544,1.598,545,1.598,546,1.472,547,2.574,548,4.34,549,1.598,550,1.598,551,3.231,552,1.598,553,1.598,554,1.598,555,2.467,556,1.598,557,1.598,558,1.598,559,1.598,560,3.231,561,2.574,562,1.598,563,1.598,564,2.574,565,1.598,566,2.574,567,1.598,568,1.532,569,1.179,570,1.598,571,4.061,572,1.598,573,1.598,574,1.598,575,1.419,576,1.598,577,1.179,578,1.598,579,3.55,580,1.598,581,1.598,582,2.574,583,2.574,584,2.574,585,1.598,586,1.598,587,1.598,588,1.598,589,1.598,590,1.532,591,1.179,592,1.532,593,1.598,594,1.598,595,1.598,596,2.467,597,1.532,598,1.598,599,1.598,600,2.574,601,4.34,602,4.159,603,1.532,604,1.532,605,1.532,606,1.532,607,1.532,608,0.552,609,0.714,610,1.285,611,1.472]],["title/entities/GpsFileMetadataEntity.html",[264,0.72,1804,3.578]],["body/entities/GpsFileMetadataEntity.html",[3,0.15,4,0.121,5,0.047,8,0.057,10,0.115,13,1.293,15,0.585,16,0.907,30,0.799,44,0.007,46,0.189,61,3.841,74,0.213,86,0.14,87,2.382,115,0.005,116,0.005,182,2.691,203,1.358,218,3.559,264,1.259,295,1.467,314,1.512,326,6.195,332,2.312,380,4.34,384,5.129,385,5.129,387,4.503,602,5.129,613,1.669,615,4.064,616,2.658,617,2.607,619,3.503,628,6.71,629,7.414,630,7.414,631,7.414,634,3.028,635,4.28,644,1.871,645,3.706,646,3.327,648,3.028,651,6.71,1803,5.299,1804,5.72,2304,8.896,2305,5.959,2306,5.959,2307,5.959]],["title/classes/GraphicCaptchaService.html",[10,0.091,940,3.834]],["body/classes/GraphicCaptchaService.html",[3,0.091,4,0.074,5,0.018,8,0.067,10,0.144,15,0.238,18,1.853,19,4.43,21,3.517,23,1.315,24,3.335,25,2.863,30,0.826,33,2.496,35,2.764,43,1.087,44,0.007,45,0.381,46,0.153,47,1.067,50,1.881,51,2.584,52,1.098,53,2.637,58,0.95,63,0.468,65,3.332,68,3.477,73,3.477,74,0.253,76,0.801,86,0.085,87,0.926,88,2.114,89,3.06,93,3.316,96,3.223,98,1.853,103,2.194,115,0.004,116,0.004,118,1.034,125,4.046,137,1.891,144,2.141,182,1.074,183,1.854,203,1.368,218,1.57,353,3.464,374,3.332,391,4.502,419,3.541,616,1.891,656,3.27,659,2.024,661,1.532,664,1.898,665,2.174,724,2.472,726,2.472,757,5.027,761,2.258,787,3.477,797,4.655,798,1.74,841,3.643,932,4.129,937,5.099,940,5.713,945,4.75,947,5.505,948,2.959,950,5.359,963,5.331,964,3.837,966,4.069,969,2.604,971,2.942,972,4.36,1006,3.088,1087,2.205,1144,3.791,1198,2.36,1241,3.223,1252,2.761,1313,2.761,2161,4.75,2268,3.223,2276,3.223,2277,4.75,2280,4.75,2281,4.069,2286,7.202,2289,4.75,2292,3.223,2293,3.223,2294,4.75,2295,3.223,2296,3.223,2308,8.072,2309,5.713,2310,6.998,2311,6.343,2312,6.998,2313,6.998,2314,6.998,2315,5.341,2316,3.625,2317,3.625,2318,5.341,2319,3.625,2320,3.625,2321,5.341,2322,3.625,2323,3.625,2324,7.366,2325,6.635,2326,3.625,2327,5.341,2328,5.341,2329,3.625,2330,6.941,2331,5.341,2332,5.341,2333,5.341,2334,3.625,2335,5.341,2336,3.625,2337,5.341,2338,3.223,2339,3.625,2340,3.625,2341,4.75,2342,3.223,2343,3.625,2344,3.625,2345,3.625,2346,3.625,2347,3.625,2348,3.625,2349,3.625,2350,3.625,2351,3.625,2352,6.941,2353,3.625,2354,3.223,2355,3.625,2356,5.341,2357,3.625,2358,3.625,2359,3.625,2360,3.625,2361,3.625,2362,3.625,2363,5.341,2364,3.625,2365,3.625,2366,3.625,2367,3.223,2368,2.959,2369,3.625,2370,6.343,2371,3.625,2372,3.625,2373,3.625,2374,3.625,2375,3.625,2376,3.625,2377,3.625,2378,3.625,2379,3.625,2380,3.625,2381,3.625,2382,3.625,2383,3.625,2384,3.625,2385,3.625,2386,3.625]],["title/interfaces/IccFileMetadata.html",[327,0.653,379,2.817]],["body/interfaces/IccFileMetadata.html",[3,0.056,4,0.045,5,0.044,8,0.044,10,0.13,15,0.241,16,0.651,33,2.178,38,0.924,40,2.289,44,0.007,45,0.405,46,0.196,52,0.46,53,3.939,58,0.398,63,0.59,69,2.44,74,0.132,86,0.171,115,0.003,116,0.003,121,2.06,122,0.994,123,1.25,134,1.138,147,1.075,152,3.32,174,1.692,175,3.009,183,1.235,203,1.269,240,1.762,279,2.049,292,2.225,296,0.69,314,1.508,327,1.169,328,2.201,329,0.703,330,1.397,331,2.602,332,2.414,333,1.397,334,1.397,335,2.201,336,2.201,337,1.397,338,2.201,339,2.121,340,1.397,341,1.397,342,1.397,343,1.397,344,1.343,345,1.397,346,1.397,347,1.087,348,0.947,349,1.982,350,1.921,351,1.295,352,0.421,353,0.994,354,1.105,355,1.65,356,0.883,357,1.343,358,1.589,359,0.746,360,4.532,361,4.342,362,3.831,363,2.289,364,1.458,365,1.67,366,0.924,367,0.947,368,1.458,369,4.436,370,1.458,371,1.397,372,5.208,373,1.458,374,5.487,375,1.458,376,5.381,377,1.982,378,0.903,379,2.795,380,3.692,381,2.389,382,4.377,383,0.97,384,2.908,385,2.908,386,1.458,387,2.201,388,3.686,389,2.795,390,3.508,391,4.926,392,0.97,393,4.158,394,1.714,395,2.201,396,3.831,397,1.458,398,1.397,399,1.397,400,1.458,401,4.882,402,3.871,403,2.389,404,2.602,405,1.105,406,2.201,407,2.389,408,2.289,409,1.458,410,1.458,411,1.397,412,2.225,413,3.871,414,2.225,415,2.389,416,1.397,417,2.289,418,1.458,419,3.766,420,2.908,421,2.908,422,1.397,423,1.458,424,1.458,425,1.397,426,3.985,427,1.397,428,2.289,429,1.458,430,3.871,431,1.397,432,1.295,433,1.458,434,1.21,435,4.391,436,1.458,437,1.458,438,1.458,439,1.982,440,1.397,441,1.924,442,3.034,443,2.518,444,3.362,445,3.066,446,3.985,447,3.362,448,2.289,449,3.362,450,2.201,451,3.871,452,2.389,453,2.289,454,3.362,455,3.362,456,1.198,457,2.389,458,2.389,459,2.389,460,3.362,461,2.289,462,2.389,463,1.714,464,2.289,465,3.362,466,3.508,467,3.362,468,3.362,469,3.71,470,3.508,471,3.508,472,3.115,473,3.508,474,3.362,475,3.362,476,2.368,477,2.389,478,3.362,479,2.389,480,3.362,481,1.087,482,2.289,483,2.389,484,2.289,485,3.362,486,1.343,487,2.389,488,1.458,489,2.121,490,2.389,491,1.458,492,2.389,493,1.458,494,1.458,495,1.087,496,1.458,497,1.21,498,1.458,499,1.458,500,1.458,501,1.458,502,2.389,503,1.458,504,2.389,505,1.458,506,2.289,507,2.389,508,1.397,509,1.458,510,1.458,511,3.034,512,1.458,513,3.508,514,3.034,515,3.034,516,3.034,517,1.458,518,4.583,519,1.458,520,3.232,521,4.391,522,1.458,523,1.458,524,1.458,525,2.389,526,2.389,527,1.458,528,1.458,529,1.458,530,1.458,531,1.458,532,1.458,533,1.458,534,1.458,535,2.389,536,1.458,537,1.458,538,0.97,539,1.458,540,2.389,541,2.289,542,1.458,543,1.458,544,1.458,545,1.458,546,1.343,547,2.389,548,4.158,549,1.458,550,1.458,551,3.034,552,1.458,553,1.458,554,1.458,555,2.289,556,1.458,557,1.458,558,1.458,559,1.458,560,3.034,561,2.389,562,1.458,563,1.458,564,2.389,565,1.458,566,2.389,567,1.458,568,1.397,569,1.075,570,1.458,571,3.871,572,1.458,573,1.458,574,1.458,575,1.295,576,1.458,577,1.075,578,1.458,579,3.362,580,1.458,581,1.458,582,2.389,583,2.389,584,2.389,585,1.458,586,1.458,587,1.458,588,1.458,589,1.458,590,1.397,591,1.075,592,1.397,593,1.458,594,1.458,595,1.458,596,2.289,597,1.397,598,1.458,599,1.458,600,1.458,601,3.034,602,2.289,603,1.397,604,1.397,605,1.397,606,1.397,607,1.397,608,0.504,609,0.651,610,1.172,611,1.343]],["title/entities/IccFileMetadataEntity.html",[264,0.72,1807,3.578]],["body/entities/IccFileMetadataEntity.html",[3,0.11,4,0.089,5,0.048,8,0.042,10,0.085,13,0.952,15,0.617,16,0.74,30,0.864,44,0.007,45,0.581,46,0.204,63,0.579,74,0.174,86,0.103,87,2.483,115,0.004,116,0.004,203,1.166,240,1.481,264,1.081,295,1.08,314,0.993,332,1.886,372,3.541,379,3.674,444,4.403,447,4.403,449,4.403,454,4.403,455,4.403,460,4.403,465,4.403,467,4.403,468,4.403,474,4.403,475,4.403,478,4.403,480,4.403,485,4.403,613,1.229,615,2.992,616,2.169,617,2.818,618,4.941,619,3.738,622,2.737,623,3.342,624,3.342,626,3.581,627,3.342,634,2.229,635,3.151,638,3.342,640,3.151,642,3.342,644,1.377,645,3.024,646,2.45,648,2.229,649,3.96,650,2.45,1801,3.901,1807,4.667,2387,9.377,2388,6.126,2389,6.126,2390,3.901,2391,6.126,2392,3.901,2393,6.126,2394,6.126,2395,4.387,2396,3.901,2397,6.126,2398,6.126,2399,6.126,2400,6.126,2401,6.126,2402,6.126,2403,4.387,2404,6.126,2405,6.126,2406,3.901,2407,6.126,2408,3.901,2409,4.387,2410,3.901]],["title/interfaces/ImageFileMetadata.html",[327,0.653,395,2.817]],["body/interfaces/ImageFileMetadata.html",[3,0.058,4,0.047,5,0.045,8,0.036,10,0.116,15,0.247,16,0.662,33,2.56,38,0.95,40,1.436,44,0.007,45,0.329,46,0.192,52,0.473,53,3.968,58,0.409,63,0.588,69,2.487,74,0.135,86,0.173,115,0.003,116,0.003,121,2.046,122,1.666,123,1.285,134,1.17,147,1.105,152,3.973,174,1.711,175,3.059,183,1.259,203,1.279,240,1.78,279,2.095,292,2.262,296,0.709,314,1.542,327,1.176,328,2.251,329,0.723,330,1.436,331,2.652,332,2.433,333,1.436,334,1.436,335,2.251,336,2.251,337,1.436,338,2.251,339,2.169,340,1.436,341,1.436,342,1.436,343,1.436,344,1.381,345,1.436,346,1.436,347,1.108,348,0.973,349,2.027,350,1.965,351,1.331,352,0.432,353,1.022,354,1.136,355,1.94,356,0.908,357,1.381,358,1.625,359,0.767,360,4.568,361,4.386,362,3.881,363,2.341,364,1.499,365,1.708,366,0.95,367,0.973,368,1.499,369,4.479,370,1.499,371,1.436,372,4.779,373,1.499,374,5.571,375,1.499,376,4.894,377,2.027,378,0.929,379,2.251,380,3.741,381,2.443,382,4.109,383,0.997,384,2.964,385,2.964,386,1.499,387,2.251,388,3.725,389,2.849,390,3.093,391,5.012,392,0.997,393,4.213,394,2.22,395,2.849,396,3.881,397,1.499,398,1.436,399,1.436,400,1.499,401,4.927,402,3.093,403,2.443,404,2.652,405,1.136,406,2.251,407,3.567,408,3.418,409,2.443,410,2.443,411,3.418,412,2.937,413,4.443,414,2.937,415,3.093,416,3.418,417,4.037,418,2.443,419,3.81,420,2.964,421,2.964,422,3.418,423,2.443,424,2.443,425,3.418,426,4.037,427,3.418,428,4.037,429,2.443,430,3.928,431,2.341,432,2.169,433,2.443,434,2.96,435,4.443,436,2.443,437,2.443,438,2.443,439,2.566,440,3.418,441,1.722,442,2.443,443,2.027,444,1.436,445,2.28,446,2.964,447,1.436,448,1.436,449,1.436,450,1.381,451,3.093,452,1.499,453,1.436,454,1.436,455,1.436,456,0.752,457,1.499,458,1.499,459,1.499,460,1.436,461,1.436,462,1.499,463,1.076,464,1.436,465,1.436,466,3.093,467,1.436,468,1.436,469,2.964,470,2.443,471,2.443,472,2.169,473,2.443,474,1.436,475,1.436,476,1.907,477,1.499,478,1.436,479,1.499,480,1.436,481,0.682,482,1.436,483,1.499,484,1.436,485,1.436,486,1.381,487,2.443,488,1.499,489,2.169,490,2.443,491,1.499,492,2.443,493,1.499,494,1.499,495,1.112,496,1.499,497,1.244,498,1.499,499,1.499,500,1.499,501,1.499,502,2.443,503,1.499,504,2.443,505,1.499,506,2.341,507,2.443,508,1.436,509,1.499,510,1.499,511,3.093,512,1.499,513,3.567,514,3.093,515,3.093,516,3.093,517,1.499,518,4.632,519,1.499,520,3.286,521,4.443,522,1.499,523,1.499,524,1.499,525,2.443,526,2.443,527,1.499,528,1.499,529,1.499,530,1.499,531,1.499,532,1.499,533,1.499,534,1.499,535,2.443,536,1.499,537,1.499,538,0.997,539,1.499,540,2.443,541,2.341,542,1.499,543,1.499,544,1.499,545,1.499,546,1.381,547,2.443,548,4.213,549,1.499,550,1.499,551,3.093,552,1.499,553,1.499,554,1.499,555,2.341,556,1.499,557,1.499,558,1.499,559,1.499,560,3.093,561,2.443,562,1.499,563,1.499,564,2.443,565,1.499,566,2.443,567,1.499,568,1.436,569,1.105,570,1.499,571,3.928,572,1.499,573,1.499,574,1.499,575,1.331,576,1.499,577,1.105,578,1.499,579,3.418,580,1.499,581,1.499,582,2.443,583,2.443,584,2.443,585,1.499,586,1.499,587,1.499,588,1.499,589,1.499,590,1.436,591,1.105,592,1.436,593,1.499,594,1.499,595,1.499,596,2.341,597,1.436,598,1.499,599,1.499,600,1.499,601,3.093,602,2.341,603,1.436,604,1.436,605,1.436,606,1.436,607,1.436,608,0.518,609,0.669,610,1.205,611,1.381]],["title/entities/ImageFileMetadataEntity.html",[264,0.72,1809,3.578]],["body/entities/ImageFileMetadataEntity.html",[3,0.122,4,0.099,5,0.048,8,0.046,10,0.094,13,1.056,15,0.616,16,0.795,30,0.862,44,0.007,45,0.479,46,0.204,61,3.73,63,0.549,74,0.186,86,0.114,87,2.479,115,0.005,116,0.005,182,2.648,203,1.231,218,3.456,240,1.591,264,1.142,295,1.199,314,1.508,332,2.026,391,3.444,395,3.946,411,4.649,412,3.076,414,3.076,416,4.649,417,4.649,422,4.649,425,4.649,427,4.649,428,4.649,434,4.026,440,4.649,613,1.363,615,3.32,616,2.329,617,2.81,618,4.642,619,3.729,622,4.98,623,3.708,624,3.708,626,3.973,627,3.708,634,2.473,635,3.496,638,3.708,640,3.496,642,3.708,644,1.528,645,3.247,646,2.718,648,2.473,649,3.721,650,4.457,1809,5.012,2390,4.328,2392,4.328,2396,4.328,2406,4.328,2408,4.328,2410,4.328,2411,9.365,2412,6.579,2413,6.579,2414,4.868]],["title/classes/InvalidTokenMsException.html",[10,0.091,2415,4.177]],["body/classes/InvalidTokenMsException.html",[3,0.173,4,0.14,5,0.035,8,0.066,10,0.133,30,0.637,42,5.558,43,1.179,44,0.007,45,0.413,46,0.151,47,1.158,63,0.526,74,0.232,76,1.52,86,0.162,115,0.006,116,0.006,118,1.963,137,2.436,181,3.733,184,2.775,300,7.151,569,3.937,656,3.832,815,4.693,816,5.116,817,4.74,820,5.338,821,5.174,822,5.593,823,4.693,824,4.479,825,4.693,2415,7.292,2416,8.2,2417,6.119]],["title/classes/JwtDto.html",[10,0.091,760,3.374]],["body/classes/JwtDto.html",[3,0.121,4,0.098,5,0.025,8,0.046,10,0.172,12,4.291,15,0.318,16,0.791,30,0.77,41,3.712,42,5.61,44,0.007,46,0.198,47,1.249,58,1.525,63,0.548,71,2.952,74,0.243,76,1.067,86,0.187,98,1.675,115,0.005,116,0.005,118,1.378,174,1.67,203,0.798,240,2.157,276,3.058,291,3.82,361,3.927,388,3.886,608,1.087,609,1.404,617,2.512,666,1.106,675,3.469,677,1.67,695,1.546,728,3.294,729,3.679,755,3.469,758,5.331,760,5.331,762,6.297,763,5.715,766,3.679,767,5.331,772,5.063,782,3.469,786,4.464,809,3.469,810,3.469,932,5.581,937,3.536,952,3.138,953,5.331,957,6.158,958,3.013,1001,1.675,1130,5.331,1166,2.384,1356,3.294,1488,2.529,1572,3.679,1573,3.679,1574,5.342,1575,3.942,1578,5.342,1579,6.788,1580,3.712,1581,4.599,1582,3.942,1583,3.942,1584,3.886,1585,3.469,1586,3.942,1587,3.942,1588,3.942,1589,3.942,1590,4.985,1591,5.342,1592,6.495,1593,6.059,1594,6.059,2418,4.83,2419,4.83,2420,4.83,2421,4.83,2422,3.469,2423,4.83]],["title/interfaces/Language.html",[327,0.653,708,1.446]],["body/interfaces/Language.html",[3,0.165,4,0.133,5,0.033,8,0.063,15,0.431,16,0.963,44,0.007,45,0.536,46,0.188,63,0.577,74,0.186,86,0.202,115,0.006,116,0.006,183,2.111,203,1.536,264,1.367,314,1.292,327,1.309,329,2.059,347,2.169,352,1.497,356,3.52,708,2.863,1090,5.353,1483,2.185,2424,5.355,2425,5.355,2426,5.723,2427,5.723,2428,4.712]],["title/entities/LanguageEntity.html",[264,0.72,2429,3.204]],["body/entities/LanguageEntity.html",[3,0.144,4,0.117,5,0.037,8,0.055,10,0.111,13,1.247,15,0.579,16,0.886,30,0.789,44,0.007,45,0.485,46,0.186,63,0.54,74,0.229,81,1.876,86,0.135,87,2.175,115,0.005,116,0.005,203,1.335,264,1.238,267,1.769,295,1.415,319,2.444,352,1.518,356,3.188,441,1.64,456,2.396,463,3.429,481,1.703,495,1.703,613,1.609,616,2.598,617,2.572,618,3.105,619,3.284,644,1.804,649,3.177,680,1.953,681,1.914,682,1.914,683,1.953,684,2.747,685,1.914,686,2.986,687,2.396,688,1.769,689,1.953,690,1.953,691,1.953,692,1.953,693,1.953,694,1.953,695,1.84,696,1.953,697,1.953,698,1.953,699,1.876,700,2.494,701,1.953,702,1.914,703,1.953,704,1.953,705,1.953,706,1.953,707,1.953,708,2.489,709,1.953,710,1.914,711,1.953,986,3.522,987,3.322,989,3.599,990,2.92,991,4.578,1013,3.728,1019,4.691,1087,3.029,1524,2.551,1616,3.209,1622,3.741,2429,5.005,2430,5.747,2431,6.525,2432,5.747,2433,5.747,2434,5.747,2435,5.747,2436,4.691,2437,5.747]],["title/injectables/LiteAuthGuard.html",[652,1.475,2438,4.177]],["body/injectables/LiteAuthGuard.html",[0,5.575,1,6.883,3,0.158,4,0.128,5,0.032,7,5.589,8,0.06,9,1.794,10,0.15,12,5.084,15,0.413,16,0.938,17,5.52,18,2.921,19,4.739,20,7.489,21,3.762,22,5.039,30,0.719,43,1.077,44,0.007,45,0.377,46,0.138,47,1.058,71,2.485,74,0.256,76,1.389,82,5.131,83,4.788,86,0.148,115,0.006,116,0.006,137,2.748,182,1.863,183,1.665,369,3.726,652,2.437,654,2.861,656,4.11,658,6.902,659,3.509,661,2.657,662,5.589,663,5.589,664,3.291,665,3.77,702,2.585,1087,3.204,2438,7.489,2439,8.422,2440,7.762,2441,7.762]],["title/modules/LocaleModule.html",[666,1.076,2442,3.578]],["body/modules/LocaleModule.html",[3,0.15,4,0.121,5,0.038,8,0.057,10,0.115,44,0.007,74,0.257,76,1.317,81,1.946,86,0.14,115,0.005,116,0.005,267,1.835,441,1.7,481,1.766,495,1.766,577,3.604,666,2.038,668,2.519,680,2.025,681,1.985,682,1.985,683,2.025,684,2.794,685,1.985,686,3.01,687,2.451,688,1.835,689,2.025,690,2.025,691,2.025,692,2.025,693,2.025,694,2.025,695,1.908,696,2.025,697,2.025,698,2.025,699,1.946,700,2.552,701,2.025,702,1.985,703,2.025,704,2.025,705,2.025,706,2.025,707,2.025,708,1.835,709,2.025,710,1.985,711,2.025,730,2.785,741,3.742,745,3.742,830,3.931,858,3.12,873,3.219,874,3.574,875,3.574,876,3.574,881,3.574,882,3.327,994,3.815,1016,3.219,1030,5.72,1031,6.129,1035,3.879,2429,5.121,2442,7.024,2443,5.299,2444,5.299,2445,5.299,2446,7.301,2447,5.959,2448,5.393,2449,6.676,2450,5.299,2451,6.676,2452,5.393,2453,4.539,2454,5.959,2455,5.299]],["title/injectables/LocaleService.html",[652,1.475,2446,3.578]],["body/injectables/LocaleService.html",[3,0.138,4,0.112,5,0.028,8,0.068,10,0.106,15,0.363,18,2.749,23,1.76,24,2.866,25,2.488,30,0.662,43,1.225,44,0.007,45,0.429,46,0.156,47,1.411,50,1.523,63,0.534,74,0.252,76,1.218,86,0.129,88,2.158,89,3.013,93,3.057,98,1.913,103,1.461,115,0.005,116,0.005,137,2.53,144,1.921,183,2.358,184,2.224,295,1.358,352,1.725,369,3.43,652,2.243,654,2.51,677,1.608,708,2.2,759,2.949,832,6.723,857,3.961,858,2.887,909,5.832,994,4.413,1016,2.979,1081,5.832,1095,6.845,1378,3.171,1415,4.652,1568,3.527,1598,4.873,2426,6.393,2429,3.761,2431,7.456,2446,5.443,2448,5.132,2449,6.354,2450,4.903,2451,6.354,2452,3.961,2453,4.201,2456,5.514,2457,7.927,2458,5.514,2459,7.927,2460,7.927,2461,5.514,2462,7.145,2463,5.514,2464,5.514,2465,5.514,2466,5.514,2467,5.514,2468,5.514,2469,5.514,2470,5.514,2471,5.514,2472,7.145,2473,5.514,2474,5.514,2475,5.514,2476,5.514,2477,5.514,2478,5.514,2479,5.514]],["title/injectables/LocaleSubscriber.html",[652,1.475,2480,4.177]],["body/injectables/LocaleSubscriber.html",[3,0.108,4,0.087,5,0.022,8,0.067,10,0.135,13,0.931,15,0.282,17,2.572,18,2.091,21,3.601,23,1.485,24,2.521,25,1.346,30,0.558,41,2.61,43,1.033,44,0.007,45,0.362,46,0.132,47,1.014,50,1.285,74,0.234,76,0.948,86,0.101,87,1.54,88,2.106,89,3.055,93,2.325,98,2.623,103,1.847,115,0.004,116,0.004,125,5.01,137,2.134,144,1.733,203,1.365,263,3.813,264,1.367,265,4.921,268,4.921,286,5.761,295,1.056,369,3.631,377,3.257,388,3.156,392,2.61,450,3.616,613,2.118,652,1.892,654,1.952,659,2.394,661,1.812,664,2.245,759,2.489,761,2.548,775,6.602,850,4.924,851,4.769,858,2.245,889,2.675,994,4.854,996,3.257,1006,4.372,1011,3.156,1012,3.156,1016,2.317,1453,7.287,1476,3.616,1541,4.223,1584,3.156,1833,6.174,1872,4.921,2158,5.361,2426,4.33,2452,6.412,2453,3.267,2480,7.938,2481,6.972,2482,6.028,2483,6.028,2484,7.563,2485,8.264,2486,3.761,2487,6.028,2488,6.028,2489,7.563,2490,8.927,2491,4.288,2492,4.592,2493,4.112,2494,6.028,2495,8.264,2496,4.288,2497,6.028,2498,5.361,2499,5.361,2500,6.028,2501,4.288,2502,4.288,2503,6.028,2504,6.028,2505,6.028,2506,6.028,2507,6.028,2508,4.288,2509,8.264,2510,6.028,2511,6.028,2512,7.563,2513,6.028,2514,7.563,2515,6.028,2516,6.028,2517,4.288]],["title/interfaces/LocalizedMedia.html",[327,0.653,2428,3.374]],["body/interfaces/LocalizedMedia.html",[3,0.163,4,0.132,5,0.033,8,0.062,15,0.426,16,0.956,44,0.007,45,0.389,46,0.195,63,0.569,74,0.184,86,0.2,115,0.006,116,0.006,183,2.415,203,1.531,264,1.362,314,1.441,327,1.306,329,2.035,347,2.19,352,1.712,356,2.556,708,2.855,1090,5.332,1483,2.159,2424,5.291,2425,5.291,2426,6.132,2427,6.547,2428,5.682]],["title/entities/LocalizedMediaEntity.html",[264,0.72,2452,3.374]],["body/entities/LocalizedMediaEntity.html",[3,0.142,4,0.115,5,0.037,8,0.054,10,0.109,13,1.228,15,0.528,16,0.878,30,0.784,44,0.007,46,0.185,63,0.436,74,0.24,81,1.847,86,0.133,87,2.049,115,0.005,116,0.005,183,2.126,203,1.325,264,1.229,267,1.742,295,1.393,314,1.178,319,2.82,347,1.694,352,1.507,441,1.614,456,1.847,481,1.676,495,1.676,613,1.584,616,2.572,617,2.557,619,2.802,634,2.874,644,1.776,645,3.586,648,2.874,649,2.45,680,1.923,681,1.884,682,1.884,683,1.923,684,2.727,685,1.884,686,2.975,687,2.372,688,1.742,689,1.923,690,1.923,691,1.923,692,1.923,693,1.923,694,1.923,695,1.811,696,1.923,697,1.923,698,1.923,699,1.847,700,2.469,701,1.923,702,1.884,703,1.923,704,1.923,705,1.923,706,1.923,707,1.923,708,1.742,709,1.923,710,1.884,711,1.923,986,2.716,987,3.27,989,3.578,990,3.691,991,4.532,1013,4.077,1019,4.618,1048,4.729,1087,2.999,1378,3.224,2427,5.763,2428,5.218,2429,5.775,2436,4.618,2452,5.218,2518,7.787,2519,5.657,2520,7.264,2521,5.657,2522,5.657,2523,5.657,2524,5.657,2525,5.031,2526,5.657]],["title/interfaces/LocalizedString.html",[327,0.653,1483,1.565]],["body/interfaces/LocalizedString.html",[3,0.163,4,0.132,5,0.033,8,0.062,15,0.426,16,0.956,44,0.007,45,0.389,46,0.195,63,0.579,74,0.184,86,0.2,115,0.006,116,0.006,183,2.415,203,1.531,264,1.362,314,1.441,327,1.306,329,2.035,347,2.073,352,1.712,356,2.556,708,2.855,1090,5.332,1483,2.635,2424,5.291,2425,5.291,2426,6.132,2427,6.547,2428,4.656]],["title/entities/LocalizedStringEntity.html",[264,0.72,994,2.387]],["body/entities/LocalizedStringEntity.html",[3,0.144,4,0.116,5,0.037,8,0.055,10,0.11,13,1.242,15,0.531,16,0.884,30,0.788,44,0.007,46,0.186,63,0.51,74,0.229,81,1.869,86,0.134,87,2.244,115,0.005,116,0.005,183,2.138,203,1.333,264,1.236,267,1.762,295,1.41,314,1.186,319,2.438,352,1.515,441,1.633,456,1.869,481,1.696,495,1.696,613,1.603,616,2.591,617,2.568,619,3.28,634,2.908,644,1.797,645,3.613,648,2.908,649,2.478,680,1.945,681,1.907,682,1.907,683,1.945,684,2.742,685,1.907,686,2.983,687,2.39,688,1.762,689,1.945,690,1.945,691,1.945,692,1.945,693,1.945,694,1.945,695,1.832,696,1.945,697,1.945,698,1.945,699,1.869,700,2.487,701,1.945,702,1.907,703,1.945,704,1.945,705,1.945,706,1.945,707,1.945,708,1.762,709,1.945,710,1.907,711,1.945,986,2.748,987,3.309,990,2.908,994,3.719,1013,3.719,1048,4.765,1087,3.021,1483,2.438,1659,4.672,1667,4.672,2427,5.795,2429,5.8,2436,4.672,2518,7.815,2525,5.09,2527,5.724,2528,7.319,2529,6.508,2530,5.724,2531,5.724,2532,5.724,2533,5.724,2534,5.724]],["title/modules/LogModule.html",[666,1.076,720,2.195]],["body/modules/LogModule.html",[3,0.177,4,0.143,5,0.036,8,0.067,10,0.136,21,3.569,44,0.007,74,0.251,76,1.557,86,0.166,115,0.006,116,0.006,277,4.989,666,2.094,668,2.979,720,3.887,741,3.208,742,3.479,743,4.074,745,3.208,830,4.355,885,5.189,2492,6.336,2535,7.048,2536,6.964,2537,7.048,2538,7.048]],["title/classes/LogService.html",[10,0.091,2536,3.578]],["body/classes/LogService.html",[3,0.087,4,0.071,5,0.037,8,0.078,10,0.067,15,0.228,21,2.957,23,1.275,25,2.625,30,0.758,43,1.499,44,0.007,45,0.518,46,0.195,47,1.407,48,6.282,50,1.841,51,2.285,58,1.219,63,0.568,74,0.175,76,0.768,86,0.082,88,2.67,89,2.996,98,1.205,103,1.816,115,0.004,116,0.004,118,0.991,121,1.298,149,4.024,152,3.828,174,1.879,175,2.89,178,6.151,181,4.407,184,2.088,185,4.982,190,2.647,195,2.836,196,2.836,218,1.504,242,3.09,247,2.009,248,3.09,314,1.111,319,3.083,353,3.254,439,2.797,590,3.23,656,3.203,670,3.718,677,1.165,761,2.188,885,3.23,943,3.531,1075,4.397,1078,2.836,1144,2.63,1159,4.924,1173,4.773,1273,3.09,1275,6.835,2368,6.499,2493,3.531,2536,3.943,2539,3.475,2540,4.603,2541,5.177,2542,6.835,2543,6.855,2544,5.177,2545,5.177,2546,6.835,2547,4.603,2548,5.177,2549,3.475,2550,5.805,2551,5.177,2552,8.512,2553,3.475,2554,6.519,2555,3.475,2556,8.362,2557,7.331,2558,7.331,2559,5.177,2560,3.475,2561,5.177,2562,3.475,2563,5.177,2564,5.177,2565,5.177,2566,3.475,2567,5.177,2568,5.177,2569,5.177,2570,3.475,2571,5.177,2572,3.475,2573,6.855,2574,7.331,2575,3.475,2576,3.475,2577,3.475,2578,6.855,2579,3.475,2580,3.475,2581,3.475,2582,6.855,2583,3.475,2584,3.475,2585,3.475,2586,6.855,2587,5.177,2588,5.177,2589,3.475,2590,3.475,2591,5.177,2592,3.475,2593,3.475,2594,2.836,2595,3.475,2596,3.475,2597,3.09,2598,5.177,2599,3.475,2600,3.475,2601,2.647,2602,3.475,2603,3.475,2604,3.475,2605,3.475,2606,3.475]],["title/classes/LoginPayload.html",[10,0.091,755,3.374]],["body/classes/LoginPayload.html",[3,0.12,4,0.097,5,0.024,8,0.046,10,0.172,12,4.587,15,0.315,16,0.787,30,0.769,41,3.203,42,5.415,44,0.007,46,0.198,47,1.536,58,1.475,63,0.561,71,2.949,74,0.242,76,1.06,86,0.186,98,1.664,115,0.005,116,0.005,118,1.369,174,1.616,203,1.076,240,1.919,276,3.877,291,4.334,361,3.917,388,3.873,608,1.079,609,1.395,617,2.506,666,1.099,675,3.446,677,1.664,695,2.086,728,3.272,729,3.655,755,4.68,758,5.959,760,4.68,762,5.699,763,4.68,766,3.655,767,3.446,772,3.272,782,4.68,786,3.272,809,4.68,810,5.313,932,4.816,937,4.287,952,3.129,953,5.313,955,5.793,957,6.146,958,2.993,1001,1.664,1130,5.313,1166,2.368,1356,3.272,1488,2.512,1572,3.655,1573,3.655,1574,5.318,1575,3.916,1576,5.793,1578,5.318,1579,6.772,1580,3.436,1581,4.276,1582,3.916,1583,3.916,1584,4.48,1585,4.68,1586,5.318,1587,5.318,1588,6.038,1589,6.038,1590,3.655,1591,3.916,1592,5.318,1593,3.916,1594,3.916,2607,4.798,2608,4.798,2609,4.798,2610,4.798,2611,4.798,2612,4.798]],["title/interfaces/Media.html",[327,0.653,347,1.096]],["body/interfaces/Media.html",[3,0.107,4,0.086,5,0.04,8,0.041,9,2.542,10,0.17,13,1.634,15,0.279,16,0.723,25,1.879,35,1.504,44,0.007,45,0.55,46,0.209,52,1.694,58,1.505,63,0.58,74,0.225,86,0.214,115,0.004,116,0.004,121,2.168,144,1.98,174,1.467,203,1.428,240,1.821,292,3.278,296,1.307,314,1.543,327,1.275,329,1.333,332,2.445,347,2.22,352,1.734,355,2.12,358,3.438,359,2.644,366,1.753,367,2.53,378,1.713,412,3.109,414,3.109,608,0.955,609,1.235,677,1.347,952,2.97,989,1.795,1001,1.473,1107,2.996,1407,2.726,1483,2.82,1484,1.568,1580,4.17,1780,2.157,1782,2.157,1786,2.157,1788,2.157,1792,2.157,2613,2.294,2614,4.313,2615,4.313,2616,2.798,2617,2.371,2618,2.294,2619,3.235,2620,3.135,2621,3.631,2622,2.955,2623,3.943,2624,2.371,2625,2.294,2626,2.371,2627,2.371,2628,3.235,2629,4.29,2630,2.294,2631,3.235,2632,2.223,2633,2.371,2634,2.371,2635,2.371,2636,2.371,2637,2.371,2638,2.371,2639,2.039,2640,2.223]],["title/classes/MediaDto.html",[10,0.091,2630,2.538]],["body/classes/MediaDto.html",[3,0.104,4,0.084,5,0.04,8,0.04,9,2.53,10,0.169,13,1.709,15,0.273,16,0.712,25,1.85,30,0.779,35,1.471,44,0.007,45,0.543,46,0.208,52,1.682,58,1.496,63,0.578,74,0.223,86,0.213,115,0.004,116,0.004,118,1.185,121,2.11,144,1.969,174,1.534,203,1.389,240,1.657,292,3.25,296,1.279,314,1.534,327,1.26,332,2.296,347,2.214,352,1.715,355,2.087,358,3.229,359,2.483,366,1.715,367,2.491,378,1.675,412,3.078,414,3.078,608,0.934,609,1.208,617,2.541,677,1.326,952,3.105,989,1.755,1001,1.441,1107,2.813,1407,2.683,1483,2.724,1484,1.534,1580,4.198,1780,2.11,1782,2.11,1786,2.11,1788,2.11,1792,2.11,2422,4.233,2613,2.244,2614,4.122,2615,4.122,2616,2.754,2617,2.319,2618,2.244,2619,3.184,2620,3.086,2621,3.587,2622,2.909,2623,3.904,2624,2.319,2625,2.244,2626,2.319,2627,2.319,2628,3.184,2629,4.254,2630,3.184,2631,3.184,2632,2.175,2633,2.319,2634,2.319,2635,2.319,2636,2.319,2637,2.319,2638,2.319,2639,1.994,2640,2.175,2641,4.153,2642,4.153,2643,4.153,2644,4.153,2645,4.153,2646,4.153,2647,4.153]],["title/entities/MediaEntity.html",[264,0.72,989,1.985]],["body/entities/MediaEntity.html",[3,0.134,4,0.108,5,0.027,8,0.051,10,0.135,13,1.159,15,0.545,16,0.845,30,0.833,44,0.007,45,0.516,46,0.21,63,0.42,74,0.25,86,0.125,87,2.395,115,0.005,116,0.005,203,1.289,240,1.692,264,1.195,295,1.315,314,1.134,319,2.33,332,2.403,347,2.058,352,1.466,359,2.599,456,1.743,613,1.495,616,2.477,617,2.715,619,3.01,634,2.712,644,2.196,645,3.453,648,2.712,649,2.312,986,2.563,987,3.086,989,2.957,990,2.712,994,4.208,995,3.202,996,4.857,997,3.202,1011,3.663,1012,3.663,1013,3.554,1016,2.884,1048,4.555,1107,2.944,1378,3.105,1613,3.331,1720,4.358,1738,5.711,1748,5.391,1749,4.358,1750,5.711,1751,4.358,1760,3.641,1761,4.772,1762,4.772,1764,4.772,1765,5.711,1766,5.711,1767,5.711,1768,3.641,1770,4.358,2529,6.221,2648,5.339,2649,5.339,2650,6.309,2651,6.996,2652,6.996,2653,5.339,2654,5.339,2655,5.339,2656,5.339,2657,5.339,2658,6.309,2659,6.221,2660,5.339,2661,4.747,2662,4.747,2663,3.641,2664,5.339,2665,5.339]],["title/interfaces/MediaExt.html",[327,0.653,2621,2.459]],["body/interfaces/MediaExt.html",[3,0.11,4,0.089,5,0.041,8,0.042,9,2.56,10,0.171,13,1.659,15,0.289,16,0.741,25,1.926,35,1.557,44,0.007,45,0.553,46,0.204,52,1.713,58,1.481,63,0.583,74,0.228,86,0.215,115,0.004,116,0.004,121,2.187,144,1.998,174,1.489,203,1.328,240,1.484,292,3.32,296,1.354,314,1.539,327,1.282,329,1.38,332,1.889,347,2.221,352,1.743,355,2.172,358,3.059,359,2.043,366,2.532,367,2.593,378,1.773,412,3.156,414,3.156,608,0.989,609,1.278,677,1.38,952,3.015,989,1.858,1001,1.525,1107,2.315,1407,2.793,1483,2.679,1484,1.624,1580,4.183,1780,2.234,1782,2.234,1786,2.234,1788,2.234,1792,2.234,2613,2.375,2614,4.003,2615,4.003,2616,2.867,2617,2.455,2618,2.375,2619,3.314,2620,3.212,2621,4.003,2622,3.028,2623,4.003,2624,2.455,2625,2.375,2626,2.455,2627,2.455,2628,3.314,2629,4.345,2630,2.375,2631,3.314,2632,2.302,2633,2.455,2634,2.455,2635,2.455,2636,2.455,2637,2.455,2638,2.455,2639,2.11,2640,2.302]],["title/entities/MediaExtEntity.html",[264,0.72,2666,3.834]],["body/entities/MediaExtEntity.html",[3,0.168,4,0.136,5,0.034,8,0.064,10,0.13,13,1.457,15,0.591,16,0.976,30,0.748,44,0.007,45,0.52,46,0.177,63,0.54,74,0.229,86,0.158,87,1.714,115,0.006,116,0.006,264,1.328,295,1.653,347,1.884,352,1.628,456,2.191,613,1.88,616,2.86,617,2.44,618,3.626,619,3.116,644,2.107,649,2.906,986,3.222,1087,3.335,1378,3.586,1524,2.979,1616,3.747,1622,4.369,2621,4.23,2663,4.577,2666,6.594,2667,6.603,2668,6.711,2669,7.184,2670,6.711,2671,6.711,2672,6.711]],["title/interfaces/MediaFile.html",[327,0.653,2614,2.459]],["body/interfaces/MediaFile.html",[3,0.106,4,0.086,5,0.042,8,0.04,9,2.538,10,0.169,13,1.629,15,0.277,16,0.72,25,1.87,35,1.493,44,0.007,45,0.549,46,0.208,52,1.69,58,1.462,63,0.582,74,0.224,86,0.213,115,0.004,116,0.004,121,2.164,144,1.977,174,1.462,203,1.425,240,1.441,292,3.562,296,1.299,314,1.563,327,1.274,329,1.324,332,1.835,347,2.241,352,1.732,355,2.804,358,2.991,359,1.985,366,1.741,367,2.518,378,1.701,412,3.488,414,3.488,608,0.949,609,1.226,677,1.341,952,2.961,989,1.783,1001,1.463,1107,2.248,1407,2.713,1483,2.638,1484,1.558,1580,4.168,1780,2.143,1782,2.143,1786,2.143,1788,2.143,1792,2.143,2613,2.279,2614,4.146,2615,3.931,2616,2.784,2617,2.355,2618,2.279,2619,3.219,2620,3.12,2621,3.617,2622,2.941,2623,4.304,2624,2.355,2625,2.279,2626,2.355,2627,2.355,2628,3.219,2629,4.279,2630,2.279,2631,3.219,2632,2.208,2633,2.355,2634,2.355,2635,2.355,2636,2.355,2637,2.355,2638,2.355,2639,2.025,2640,2.208]],["title/classes/MediaFileDto.html",[10,0.091,2631,2.538]],["body/classes/MediaFileDto.html",[3,0.103,4,0.083,5,0.041,8,0.039,9,2.524,10,0.168,13,1.702,15,0.27,16,0.707,25,1.837,30,0.794,35,1.455,44,0.007,45,0.542,46,0.208,52,1.676,58,1.491,63,0.578,74,0.222,86,0.212,115,0.004,116,0.004,118,1.173,121,2.103,144,1.964,174,1.528,203,1.385,240,1.415,292,3.462,296,1.266,314,1.546,327,1.257,332,1.801,347,2.225,352,1.712,355,2.628,358,2.949,359,1.949,366,1.697,367,2.473,378,1.658,412,3.365,414,3.365,608,0.925,609,1.195,617,2.589,677,1.316,952,3.093,989,1.737,1001,1.426,1107,2.207,1407,2.663,1483,2.612,1484,1.518,1580,4.2,1780,2.088,1782,2.088,1786,2.088,1788,2.088,1792,2.088,2422,2.952,2613,2.221,2614,4.106,2615,3.886,2616,3.183,2617,2.295,2618,2.221,2619,3.161,2620,3.063,2621,3.566,2622,2.888,2623,3.886,2624,2.295,2625,2.221,2626,2.295,2627,2.295,2628,3.161,2629,4.404,2630,2.221,2631,3.68,2632,2.152,2633,2.295,2634,2.295,2635,2.295,2636,2.295,2637,2.295,2638,2.295,2639,1.973,2640,2.152,2673,4.11,2674,4.11,2675,4.11,2676,4.11,2677,4.11,2678,4.11,2679,4.11,2680,4.11]],["title/entities/MediaFileEntity.html",[264,0.72,2650,3.578]],["body/entities/MediaFileEntity.html",[3,0.139,4,0.113,5,0.028,8,0.053,10,0.107,13,1.204,15,0.553,16,0.867,30,0.852,44,0.007,45,0.477,46,0.205,58,1.276,63,0.504,74,0.238,86,0.13,87,2.436,115,0.005,116,0.005,203,1.313,264,1.218,292,3.282,295,1.367,314,1.49,347,2.079,352,1.493,355,2.815,412,3.282,414,3.282,456,1.812,613,1.554,616,2.54,617,2.777,618,2.998,619,3.614,634,2.819,644,1.742,645,3.541,648,2.819,649,3.106,650,3.098,986,2.664,987,3.208,989,3.553,990,3.645,1013,4.039,1107,2.707,1758,4.53,2453,4.227,2614,3.756,2650,5.465,2659,6.38,2663,3.785,2667,7.078,2681,5.549,2682,7.174,2683,5.549,2684,6.037,2685,5.549,2686,6.38,2687,5.549,2688,5.549,2689,5.549,2690,5.549,2691,5.549,2692,5.549,2693,4.53,2694,5.549,2695,6.38]],["title/interfaces/MediaFormat.html",[327,0.653,2623,2.459]],["body/interfaces/MediaFormat.html",[3,0.109,4,0.088,5,0.041,8,0.041,9,2.553,10,0.17,13,1.649,15,0.285,16,0.734,25,1.907,35,1.535,44,0.007,45,0.552,46,0.206,52,1.705,58,1.475,63,0.586,74,0.227,86,0.214,115,0.004,116,0.004,121,2.179,144,1.991,174,1.48,203,1.321,240,1.469,292,3.423,296,1.335,314,1.536,327,1.279,329,1.361,332,1.87,347,2.218,352,1.739,355,2.151,358,3.036,359,2.023,366,1.79,367,2.568,378,1.749,412,3.515,414,3.515,608,0.975,609,1.261,677,1.367,952,2.997,989,1.832,1001,1.504,1107,2.292,1407,2.765,1483,2.665,1484,1.601,1580,4.178,1780,2.203,1782,2.203,1786,2.203,1788,2.203,1792,2.203,2613,2.342,2614,3.979,2615,3.979,2616,2.839,2617,2.42,2618,2.342,2619,3.282,2620,3.18,2621,3.672,2622,2.999,2623,4.189,2624,2.42,2625,2.342,2626,2.42,2627,2.42,2628,3.282,2629,4.323,2630,2.342,2631,3.282,2632,2.27,2633,2.42,2634,2.42,2635,2.42,2636,2.42,2637,2.42,2638,2.42,2639,2.081,2640,2.27]],["title/classes/MediaFormatDto.html",[10,0.091,2629,2.538]],["body/classes/MediaFormatDto.html",[3,0.107,4,0.087,5,0.04,8,0.041,9,2.545,10,0.17,13,1.727,15,0.281,16,0.726,25,1.887,30,0.699,35,1.512,44,0.007,45,0.546,46,0.205,52,1.697,58,1.508,63,0.582,74,0.226,86,0.214,115,0.004,116,0.004,118,1.219,121,2.127,144,1.983,174,1.55,203,1.314,240,1.454,292,3.407,296,1.315,314,1.534,327,1.266,332,1.851,347,2.214,352,1.723,355,2.129,358,3.012,359,2.002,366,1.763,367,2.541,378,1.723,412,3.407,414,3.407,608,0.961,609,1.242,617,2.28,677,1.353,952,3.138,989,1.805,1001,1.481,1107,2.268,1407,2.737,1483,2.65,1484,1.577,1580,4.201,1780,2.17,1782,2.17,1786,2.17,1788,2.17,1792,2.17,2613,2.308,2614,3.953,2615,3.953,2616,2.809,2617,2.385,2618,2.308,2619,3.248,2620,3.148,2621,3.642,2622,2.967,2623,4.166,2624,2.385,2625,2.308,2626,2.385,2627,2.385,2628,3.248,2629,4.459,2630,2.308,2631,3.248,2632,2.236,2633,2.385,2634,2.385,2635,2.385,2636,2.385,2637,2.385,2638,2.385,2639,2.05,2640,2.236,2696,4.271,2697,4.271,2698,4.271,2699,4.271]],["title/entities/MediaFormatEntity.html",[264,0.72,2684,3.374]],["body/entities/MediaFormatEntity.html",[3,0.159,4,0.128,5,0.032,8,0.06,10,0.122,13,1.372,15,0.58,16,0.941,30,0.816,44,0.007,45,0.507,46,0.193,63,0.566,74,0.221,86,0.148,87,2.312,115,0.006,116,0.006,264,1.293,295,1.557,347,1.817,352,1.586,412,3.485,414,3.485,456,2.064,613,1.77,616,2.758,617,2.662,618,3.415,619,3.555,644,1.985,649,2.737,986,3.035,1087,3.216,1378,3.457,1524,2.806,1616,3.53,1622,4.116,2622,3.845,2623,4.079,2663,4.312,2667,6.895,2684,5.595,2686,6.927,2695,6.927,2700,6.322,2701,6.322,2702,6.322,2703,6.322,2704,6.322,2705,6.322]],["title/classes/MediaManager.html",[10,0.091,2632,2.459]],["body/classes/MediaManager.html",[3,0.094,4,0.076,5,0.04,8,0.036,9,2.724,10,0.167,13,1.547,15,0.248,23,1.353,25,1.724,30,0.776,35,1.333,43,1.435,44,0.007,45,0.561,46,0.207,47,1.409,50,1.785,52,1.784,58,1.407,63,0.58,74,0.215,86,0.209,115,0.004,116,0.004,118,1.075,121,2.1,144,2.102,174,1.388,184,3.191,203,1.433,240,1.328,292,3.372,296,1.159,314,1.559,327,1.237,332,1.691,347,2.204,352,1.7,355,1.945,358,2.808,359,1.829,366,1.555,367,2.322,378,2.216,412,2.942,414,2.942,608,0.847,609,1.095,677,1.459,850,3.576,952,2.811,989,1.592,1001,1.306,1107,2.073,1407,3.245,1483,2.721,1484,1.391,1580,4.124,1773,4.484,1775,4.484,1776,4.484,1780,3.294,1782,2.791,1786,2.791,1788,2.791,1792,2.791,2613,2.035,2614,3.732,2615,3.732,2616,2.567,2617,2.103,2618,2.035,2619,2.968,2620,2.876,2621,3.395,2622,2.711,2623,3.732,2624,2.103,2625,2.035,2626,2.103,2627,2.103,2628,2.968,2629,4.094,2630,2.035,2631,2.968,2632,2.876,2633,3.62,2634,3.62,2635,3.067,2636,3.62,2637,3.62,2638,3.62,2639,1.808,2640,1.972,2706,5.493,2707,3.766,2708,3.766,2709,3.766,2710,3.766,2711,3.766,2712,3.766,2713,3.766,2714,3.766,2715,3.766,2716,3.766,2717,3.766]],["title/modules/MediaModule.html",[666,1.076,2639,2.255]],["body/modules/MediaModule.html",[3,0.141,4,0.114,5,0.037,8,0.054,10,0.108,23,1.384,30,0.521,43,0.963,44,0.007,45,0.337,46,0.123,47,0.946,50,1.198,74,0.268,76,1.242,81,1.835,86,0.132,103,1.489,115,0.005,116,0.005,182,1.666,183,1.489,267,1.731,347,1.687,378,2.918,441,1.604,463,3.38,481,1.666,495,1.666,608,1.628,610,2.943,666,2.002,668,2.376,672,3.675,673,4.709,674,3.659,677,1.628,679,4.798,680,1.91,681,1.872,682,1.872,683,1.91,684,2.719,685,1.872,686,2.971,687,2.362,688,1.731,689,1.91,690,1.91,691,1.91,692,1.91,693,1.91,694,1.91,695,1.799,696,1.91,697,1.91,698,1.91,699,1.835,700,2.458,701,1.91,702,1.872,703,1.91,704,1.91,705,1.91,706,1.91,707,1.91,708,1.731,709,1.91,710,1.872,711,1.91,718,4.182,719,3.834,720,3.38,721,3.507,730,2.627,741,2.559,742,2.774,743,3.249,744,4.037,745,2.559,858,2.943,989,3.058,1035,3.659,2455,4.998,2618,3.037,2632,4.188,2639,3.84,2640,4.422,2650,5.511,2658,5.511,2661,4.998,2662,4.998,2663,3.834,2684,5.196,2693,4.588,2718,5.621,2719,5.621,2720,7.999,2721,5.621,2722,7.999,2723,4.998,2724,4.998]],["title/interfaces/MediaType.html",[327,0.653,2615,2.459]],["body/interfaces/MediaType.html",[3,0.107,4,0.086,5,0.04,8,0.041,9,2.542,10,0.17,13,1.634,15,0.279,16,0.723,25,2.492,35,1.504,44,0.007,45,0.55,46,0.208,52,1.832,58,1.465,63,0.582,74,0.225,86,0.214,115,0.004,116,0.004,121,2.168,144,1.98,174,1.467,203,1.311,240,1.448,292,3.278,296,1.307,314,1.543,327,1.275,329,1.333,332,1.843,347,2.213,352,1.734,355,2.12,358,3.003,359,1.994,366,1.753,367,3.356,378,1.713,412,3.109,414,3.109,608,0.955,609,1.235,677,1.347,952,2.97,989,1.795,1001,1.473,1107,2.259,1407,2.726,1483,2.644,1484,1.568,1580,4.17,1780,2.157,1782,2.157,1786,2.157,1788,2.157,1792,2.157,2613,2.294,2614,3.943,2615,4.157,2616,2.798,2617,2.371,2618,2.294,2619,4.29,2620,4.157,2621,4.157,2622,3.919,2623,4.313,2624,2.371,2625,2.294,2626,2.371,2627,2.371,2628,3.235,2629,4.29,2630,2.294,2631,3.235,2632,2.223,2633,2.371,2634,2.371,2635,2.371,2636,2.371,2637,2.371,2638,2.371,2639,2.039,2640,2.223]],["title/classes/MediaTypeDto.html",[10,0.091,2628,2.538]],["body/classes/MediaTypeDto.html",[3,0.104,4,0.084,5,0.04,8,0.04,9,2.53,10,0.169,13,1.708,15,0.273,16,0.712,25,2.34,30,0.779,35,1.469,44,0.007,45,0.543,46,0.208,52,1.767,58,1.495,63,0.579,74,0.223,86,0.213,115,0.004,116,0.004,118,1.184,121,2.109,144,1.969,174,1.533,203,1.3,240,1.424,292,3.249,296,1.278,314,1.534,327,1.26,332,1.814,347,2.207,352,1.715,355,2.085,358,2.965,359,1.962,366,1.713,367,3.15,378,1.674,412,3.077,414,3.077,608,0.934,609,1.207,617,2.54,677,1.325,952,3.104,989,1.754,1001,1.439,1107,2.222,1407,2.681,1483,2.622,1484,1.532,1580,4.203,1780,2.108,1782,2.108,1786,2.108,1788,2.108,1792,2.108,2422,2.98,2613,2.242,2614,3.902,2615,4.121,2616,2.752,2617,2.317,2618,2.242,2619,4.027,2620,3.902,2621,3.902,2622,3.679,2623,3.902,2624,2.317,2625,2.242,2626,2.317,2627,2.317,2628,3.699,2629,4.417,2630,2.242,2631,3.182,2632,2.172,2633,2.317,2634,2.317,2635,2.317,2636,2.317,2637,2.317,2638,2.317,2639,1.992,2640,2.172,2725,4.149,2726,4.149,2727,4.149,2728,4.149,2729,4.149,2730,4.149,2731,4.149]],["title/entities/MediaTypeEntity.html",[264,0.72,2658,3.578]],["body/entities/MediaTypeEntity.html",[3,0.143,4,0.116,5,0.029,8,0.054,10,0.11,13,1.239,15,0.559,16,0.883,25,2.53,30,0.846,44,0.007,45,0.483,46,0.2,52,1.747,63,0.51,74,0.241,86,0.134,87,2.058,115,0.005,116,0.005,182,2.517,220,5.248,264,1.234,295,1.406,314,1.184,347,1.982,352,1.514,367,3.406,456,1.864,613,1.599,616,2.587,617,2.758,618,3.084,619,3.276,644,1.792,649,2.472,650,3.188,986,2.741,990,2.901,1011,3.826,1012,3.826,1013,3.712,1046,4.349,1087,3.708,1378,3.243,1490,3.948,1524,2.534,1616,3.188,1622,3.717,1668,4.984,1756,6.497,1758,4.66,2615,3.826,2619,4.354,2620,4.219,2622,3.978,2658,5.566,2663,3.894,2666,6.935,2667,7.045,2684,6.102,2693,4.66,2732,5.709,2733,5.709,2734,7.307,2735,5.709,2736,5.709,2737,5.709,2738,5.709,2739,5.709,2740,5.709,2741,5.709,2742,5.709]],["title/interfaces/MessageBus.html",[327,0.653,2743,3.834]],["body/interfaces/MessageBus.html",[3,0.149,4,0.121,5,0.03,8,0.057,15,0.391,23,1.847,30,0.761,43,1.556,44,0.007,45,0.493,46,0.204,47,1.382,50,1.751,74,0.169,86,0.176,115,0.005,116,0.005,144,1.718,174,1.833,181,3.415,184,3.662,314,0.965,327,1.143,329,1.868,608,1.339,908,5.715,926,6.521,968,3.322,1422,7.68,1465,4.274,2743,6.123,2744,6.196,2745,6.196,2746,5.292,2747,6.123,2748,6.671,2749,7.305,2750,6.258,2751,7.305,2752,5.292,2753,8.522,2754,7.737,2755,5.951,2756,7.305,2757,5.292,2758,5.951,2759,7.907,2760,5.292,2761,5.951,2762,4.857,2763,4.059,2764,4.857]],["title/interfaces/MessagesBroker.html",[327,0.653,2765,3.578]],["body/interfaces/MessagesBroker.html",[3,0.146,4,0.118,5,0.03,8,0.082,15,0.383,23,1.822,30,0.753,43,1.514,44,0.007,45,0.488,46,0.193,47,1.369,50,1.734,63,0.562,86,0.137,88,2.668,115,0.005,116,0.005,144,1.695,174,1.84,181,4.022,266,4.817,267,2.78,319,3.055,327,1.029,329,1.828,908,4.436,1075,4.438,1394,5.299,1473,5.016,2747,4.754,2750,6.878,2765,5.637,2766,6.519,2767,5.571,2768,5.824,2769,4.754,2770,7.61,2771,7.61,2772,6.58,2773,5.824,2774,6.04,2775,8.497,2776,8.029,2777,6.58,2778,5.824,2779,6.58,2780,6.58,2781,5.824,2782,6.58]],["title/modules/MessagesBrokerModule.html",[666,1.076,2783,3.374]],["body/modules/MessagesBrokerModule.html",[3,0.143,4,0.116,5,0.037,8,0.054,10,0.11,21,3.542,44,0.007,74,0.259,76,1.262,81,1.864,86,0.134,103,1.512,115,0.005,116,0.005,181,3.326,267,1.758,276,2.668,277,4.382,441,1.629,481,1.692,495,1.692,577,3.508,661,2.413,666,2.012,668,2.413,680,1.94,681,1.902,682,1.902,683,1.94,684,2.739,685,1.902,686,2.982,687,2.386,688,1.758,689,1.94,690,1.94,691,1.94,692,1.94,693,1.94,694,1.94,695,1.828,696,1.94,697,1.94,698,1.94,699,1.864,700,2.483,701,1.94,702,1.902,703,1.94,704,1.94,705,1.94,706,1.94,707,1.94,708,1.758,709,1.94,710,1.902,711,1.94,720,3.414,730,3.766,733,3.717,741,3.326,742,2.818,743,3.3,745,3.326,830,3.826,873,3.084,874,3.424,875,3.424,876,3.424,880,5.717,881,3.424,882,3.188,885,4.559,886,4.382,888,4.101,889,3.562,890,4.101,891,4.101,895,4.66,896,3.894,897,3.894,898,3.894,899,4.66,900,4.101,901,4.66,902,4.101,903,4.66,904,4.349,905,4.66,906,4.66,2493,4.984,2766,4.349,2767,3.717,2769,5.964,2783,6.452,2784,5.077,2785,5.709,2786,5.709,2787,6.139,2788,4.66,2789,5.077,2790,5.248,2791,5.077]],["title/injectables/MessagesBrokerService.html",[652,1.475,2790,3.374]],["body/injectables/MessagesBrokerService.html",[3,0.107,4,0.087,5,0.022,8,0.079,10,0.083,13,1.511,15,0.281,16,0.727,18,2.943,23,1.483,24,2.518,25,2.881,30,0.802,43,1.509,44,0.007,45,0.496,46,0.197,47,1.39,50,1.809,58,1.344,63,0.57,74,0.214,76,0.946,86,0.101,88,2.563,89,1.484,93,1.651,98,2.088,103,2.11,115,0.004,116,0.004,137,1.515,149,3.152,174,1.849,181,3.76,182,1.268,183,1.134,212,3.611,219,3.756,265,5.685,266,3.919,267,2.543,277,3.611,319,3.005,327,0.837,652,1.89,654,1.948,661,1.809,677,1.354,886,5.195,1000,5.404,1075,4.776,1394,4.776,1464,6.168,1473,4.757,2493,2.919,2750,6.292,2765,5.756,2766,6.708,2767,5.732,2769,4.914,2770,6.72,2771,6.72,2772,5.353,2774,4.914,2775,8.097,2776,7.545,2777,5.353,2779,5.353,2780,5.353,2782,5.353,2790,4.324,2792,4.28,2793,6.964,2794,6.02,2795,6.02,2796,4.28,2797,4.28,2798,6.02,2799,4.28,2800,6.02,2801,4.28,2802,7.557,2803,6.02,2804,6.02,2805,6.02,2806,6.02,2807,4.28,2808,6.02,2809,6.02,2810,6.02,2811,4.28,2812,4.28,2813,4.28,2814,4.28,2815,3.074,2816,3.806,2817,3.074,2818,3.806,2819,4.28,2820,4.28,2821,4.28,2822,4.28,2823,4.28,2824,4.28,2825,4.28,2826,4.28,2827,4.28,2828,4.28,2829,4.28,2830,4.28,2831,4.28,2832,4.28,2833,4.28,2834,4.28,2835,4.28]],["title/classes/MsClient.html",[10,0.091,2836,3.834]],["body/classes/MsClient.html",[3,0.094,4,0.173,5,0.019,8,0.072,10,0.073,13,1.192,15,0.248,18,1.905,21,3.295,23,1.353,25,2.379,30,0.702,35,2.524,43,1.463,44,0.007,45,0.455,46,0.187,47,1.51,50,1.785,51,1.391,58,0.977,66,4.142,74,0.242,76,0.832,85,2.705,86,0.088,88,2.711,89,2.472,97,3.427,98,2.249,103,2.008,115,0.004,116,0.004,118,1.075,124,2.968,137,1.945,144,1.633,149,3.968,170,4.184,174,1.887,181,4.355,182,1.116,183,0.998,184,2.875,190,2.869,195,3.074,196,3.074,319,1.254,472,3.175,608,1.884,659,2.103,661,1.592,664,1.972,776,4.184,816,2.349,817,2.177,821,3.067,824,2.452,889,2.349,926,6.932,965,5.121,968,4.844,971,3.302,1078,3.074,1422,7.569,1460,2.869,1465,2.705,2187,2.452,2286,4.484,2492,4.184,2493,3.746,2743,5.293,2744,5.683,2745,5.683,2749,5.766,2750,4.94,2751,6.739,2752,3.349,2753,7.906,2754,7.327,2756,5.766,2757,3.349,2759,8.158,2760,3.349,2763,4.861,2764,5.293,2774,4.484,2836,4.484,2837,3.766,2838,4.884,2839,6.484,2840,6.484,2841,6.338,2842,3.766,2843,3.766,2844,5.493,2845,5.493,2846,3.766,2847,5.493,2848,3.766,2849,3.766,2850,5.493,2851,3.766,2852,5.493,2853,2.869,2854,3.766,2855,3.766,2856,5.493,2857,3.349,2858,3.766,2859,4.184,2860,3.766,2861,2.705,2862,2.705,2863,5.493,2864,6.484,2865,3.766,2866,3.349,2867,3.766,2868,3.766,2869,3.766,2870,6.484,2871,3.766,2872,3.766,2873,3.349,2874,3.766,2875,3.766,2876,4.884,2877,3.766,2878,3.766,2879,3.766,2880,3.766,2881,3.766,2882,3.766,2883,3.766,2884,3.766,2885,3.766]],["title/modules/MsClientModule.html",[666,1.076,2886,3.578]],["body/modules/MsClientModule.html",[3,0.14,4,0.113,5,0.037,8,0.053,10,0.108,21,3.712,44,0.007,45,0.334,74,0.257,76,1.231,81,1.819,86,0.131,98,1.932,103,1.476,115,0.005,116,0.005,267,1.715,441,1.59,472,4.158,481,1.651,495,1.651,577,3.453,608,1.253,661,3.04,666,1.996,668,2.354,680,1.893,681,1.855,682,1.855,683,1.893,684,2.707,685,1.855,686,2.965,687,2.348,688,1.715,689,1.893,690,1.893,691,1.893,692,1.893,693,1.893,694,1.893,695,1.783,696,1.893,697,1.893,698,1.893,699,1.819,700,2.444,701,1.893,702,1.855,703,1.893,704,1.893,705,1.893,706,1.893,707,1.893,708,1.715,709,1.893,710,1.855,711,1.893,720,4.243,730,3.722,733,4.682,741,3.274,742,2.75,745,3.274,830,3.766,873,3.009,874,3.341,875,3.341,876,3.341,881,3.341,882,3.11,885,4.487,888,4.001,889,3.475,890,4.001,891,4.001,896,3.799,898,3.799,900,4.001,968,4.866,2493,4.905,2744,4.001,2745,4.001,2763,5.741,2764,4.547,2836,4.547,2838,6.396,2841,6.396,2853,4.244,2857,6.396,2873,4.953,2886,6.798,2887,4.953,2888,5.57,2889,5.57,2890,5.57,2891,7.083,2892,7.083,2893,5.57,2894,5.57,2895,5.57,2896,5.57,2897,5.57,2898,5.57,2899,5.57]],["title/classes/MsException.html",[10,0.091,821,2.623]],["body/classes/MsException.html",[3,0.169,4,0.137,5,0.034,8,0.064,10,0.168,18,3.01,30,0.624,43,1.154,44,0.007,45,0.404,46,0.177,47,1.133,63,0.521,74,0.229,85,4.835,86,0.158,115,0.006,116,0.006,118,1.921,137,2.866,181,4.099,184,2.715,218,2.915,314,1.407,352,1.63,569,3.885,656,3.782,665,4.038,816,5.049,820,5.269,821,4.519,2554,8.007,2853,5.128,2859,6.166,2900,6.732,2901,8.094,2902,8.094,2903,9.212,2904,6.732,2905,6.732]],["title/injectables/NotEmptyPipe.html",[652,1.475,2906,4.177]],["body/injectables/NotEmptyPipe.html",[3,0.168,4,0.136,5,0.034,8,0.064,10,0.13,13,1.457,15,0.441,18,2.328,23,1.989,30,0.748,43,1.385,44,0.007,45,0.485,46,0.177,47,1.359,50,1.431,63,0.52,74,0.19,76,1.483,86,0.158,97,4.187,98,2.328,103,1.778,115,0.006,116,0.006,137,2.376,183,2.438,293,5.478,652,2.536,654,3.055,1006,3.879,1356,5.51,1468,4.82,1834,7.707,2906,7.184,2907,8.667,2908,6.711,2909,8.079,2910,8.079,2911,6.711,2912,6.711,2913,7.184,2914,8.079,2915,6.711,2916,8.079,2917,6.711,2918,6.711]],["title/classes/NotFoundMsException.html",[10,0.091,2919,4.177]],["body/classes/NotFoundMsException.html",[3,0.173,4,0.14,5,0.035,8,0.066,10,0.133,30,0.638,43,1.181,44,0.007,45,0.413,46,0.151,47,1.16,59,6.659,63,0.526,74,0.233,76,1.523,86,0.162,115,0.006,116,0.006,118,1.966,137,2.44,181,3.737,184,2.78,569,3.94,656,3.836,815,4.7,816,5.121,817,4.745,819,5.598,820,5.344,821,5.176,822,5.598,823,4.7,824,4.487,825,4.7,2919,7.299,2920,8.208,2921,6.892]],["title/classes/PageableData.html",[10,0.091,1199,2.538]],["body/classes/PageableData.html",[3,0.133,4,0.107,5,0.027,8,0.066,10,0.173,18,2.863,30,0.49,34,5.15,43,1.192,44,0.007,45,0.318,46,0.207,47,1.389,63,0.538,74,0.197,86,0.183,88,2.493,103,1.843,115,0.005,116,0.005,118,1.51,125,4.022,137,2.463,174,1.514,182,2.062,247,4.022,314,1.584,319,2.856,360,3.06,434,3.758,538,2.292,748,4.321,958,3.302,959,2.771,1001,1.836,1058,6.288,1090,4.172,1142,2.86,1145,5.141,1148,4.321,1199,4.459,1217,4.032,1218,5.92,1229,5.3,1233,6.738,1415,4.529,1546,4.339,1598,4.745,1610,4.745,1951,6.343,2922,4.321,2923,5.293,2924,7.34,2925,7.34,2926,5.293,2927,7.773,2928,6.186,2929,4.707,2930,4.707,2931,6.186,2932,4.707,2933,6.186,2934,6.738,2935,4.707,2936,4.321,2937,4.707,2938,5.3]],["title/classes/PageableParams.html",[10,0.091,1142,2.538]],["body/classes/PageableParams.html",[3,0.129,4,0.104,5,0.026,8,0.049,10,0.172,15,0.338,16,0.824,18,2.829,30,0.787,34,4.255,43,1.169,44,0.007,46,0.21,47,1.54,63,0.549,74,0.193,86,0.18,88,2.464,103,1.807,115,0.005,116,0.005,118,1.466,125,2.97,137,1.819,174,1.328,182,2.417,183,1.807,247,4.426,314,1.555,319,2.55,360,2.97,434,4.407,538,2.224,617,2.564,748,5.568,958,3.205,959,2.69,1001,1.782,1058,6.649,1090,3.081,1142,3.685,1145,5.049,1148,5.568,1199,3.685,1217,5.833,1218,6.468,1229,5.196,1233,5.568,1415,3.344,1546,3.808,1598,3.504,1610,4.652,1951,5.568,2922,4.193,2924,6.065,2925,6.065,2927,7.546,2928,4.568,2929,4.568,2930,4.568,2931,6.065,2932,4.568,2933,6.809,2934,6.93,2935,4.568,2936,4.193,2937,4.568,2938,5.196,2939,7.657,2940,5.137,2941,5.137,2942,5.137,2943,5.137,2944,5.137,2945,5.137,2946,5.137]],["title/interfaces/ProcessLog.html",[327,0.653,2947,3.578]],["body/interfaces/ProcessLog.html",[3,0.162,4,0.131,5,0.033,8,0.075,15,0.426,16,0.955,44,0.007,46,0.199,52,1.331,63,0.547,74,0.224,86,0.186,115,0.006,116,0.006,121,2.14,122,4.205,123,3.614,147,3.107,178,5.145,179,6.02,187,4.414,194,4.414,203,1.467,240,2.27,314,1.383,327,1.267,329,2.032,352,1.216,359,3.035,365,4.045,970,4.213,1483,2.632,1484,2.39,2550,4.414,2947,6.499,2948,5.755,2949,6.768,2950,6.382,2951,5.283]],["title/entities/ProcessLogEntity.html",[140,3.058,264,0.72]],["body/entities/ProcessLogEntity.html",[3,0.14,4,0.113,5,0.037,8,0.053,10,0.108,13,1.212,15,0.554,16,0.87,30,0.808,44,0.007,45,0.432,46,0.204,63,0.432,74,0.226,81,1.823,86,0.131,87,2.152,115,0.005,116,0.005,122,3.54,140,4.69,203,1.317,240,2.038,264,1.222,267,1.72,295,1.375,314,1.168,319,2.399,359,2.656,365,3.631,441,1.594,463,3.366,481,1.655,495,1.655,613,1.564,616,2.551,617,2.634,619,2.778,634,2.837,644,1.753,645,3.556,648,2.837,680,1.898,681,1.86,682,1.86,683,1.898,684,2.71,685,1.86,686,2.966,687,2.352,688,1.72,689,1.898,690,1.898,691,1.898,692,1.898,693,1.898,694,1.898,695,1.788,696,1.898,697,1.898,698,1.898,699,1.823,700,2.448,701,1.898,702,1.86,703,1.898,704,1.898,705,1.898,706,1.898,707,1.898,708,1.72,709,1.898,710,1.86,711,1.898,990,2.837,991,4.494,1013,3.66,1172,4.494,1659,4.559,1667,4.559,1760,3.809,1761,4.914,1762,5.747,1764,4.914,2550,4.914,2947,5.488,2949,6.075,2952,5.585,2953,5.585,2954,5.585,2955,6.052,2956,5.585,2957,5.585,2958,5.585,2959,7.204,2960,5.585,2961,7.204,2962,5.585,2963,4.559,2964,5.585]],["title/injectables/ProcessManagerService.html",[142,3.058,652,1.475]],["body/injectables/ProcessManagerService.html",[3,0.071,4,0.057,5,0.014,8,0.078,10,0.054,15,0.185,16,0.532,18,2.313,21,3.087,23,1.085,24,3.309,25,2.575,30,0.792,33,2.058,34,2.748,43,1.406,44,0.007,45,0.492,46,0.182,47,1.38,50,1.889,51,2.005,52,0.906,63,0.549,74,0.242,76,0.622,86,0.066,87,1.954,88,2.553,89,2.845,93,3.163,97,3.387,98,2.313,103,2.027,115,0.003,116,0.003,122,4.292,123,4.494,124,2.38,125,4.944,126,3.596,134,2.238,135,3.164,137,1.56,140,5.627,142,2.868,146,5.83,147,4.255,163,3.356,166,3.004,167,2.642,169,3.356,172,2.38,174,1.378,178,4.982,182,1.82,183,1.167,187,1.919,189,2.296,194,4.19,202,2.296,203,1.221,206,2.296,288,2.459,295,0.693,311,4.431,314,1.198,352,1.797,365,1.281,382,2.459,420,2.748,538,1.907,608,0.991,613,1.234,652,1.383,654,1.281,661,1.189,664,1.473,672,2.758,677,1.382,793,4.813,832,5.31,854,2.459,857,2.021,858,1.473,864,1.52,970,5.122,980,2.238,1087,1.818,1151,3.356,1172,4.612,1198,1.831,1217,5.08,1218,2.143,1278,2.296,1415,2.868,1453,3.596,1518,1.571,1568,2.174,2165,4.828,2178,2.296,2550,4.19,2601,4.68,2765,4.68,2767,2.868,2787,2.143,2788,2.296,2816,2.502,2938,2.143,2949,2.143,2955,3.899,2965,7.686,2966,2.813,2967,5.429,2968,4.405,2969,4.405,2970,4.405,2971,4.405,2972,4.405,2973,6.143,2974,6.143,2975,4.405,2976,3.917,2977,3.917,2978,4.405,2979,4.405,2980,2.813,2981,4.68,2982,4.828,2983,5.429,2984,5.429,2985,4.405,2986,3.917,2987,4.405,2988,2.813,2989,6.669,2990,4.405,2991,2.813,2992,3.917,2993,4.405,2994,2.813,2995,3.356,2996,4.405,2997,4.405,2998,2.813,2999,4.405,3000,2.813,3001,2.813,3002,6.143,3003,5.462,3004,3.917,3005,2.813,3006,3.917,3007,4.405,3008,2.813,3009,4.405,3010,2.813,3011,4.405,3012,2.813,3013,4.405,3014,2.813,3015,4.405,3016,4.405,3017,4.405,3018,2.813,3019,2.502,3020,1.919,3021,2.502,3022,2.502,3023,3.596,3024,2.143,3025,2.502,3026,2.813,3027,2.813,3028,2.502,3029,2.502,3030,2.813,3031,2.813,3032,4.405,3033,2.813,3034,2.813,3035,2.813,3036,4.405,3037,4.405,3038,7.606,3039,2.502,3040,2.502,3041,4.828,3042,2.296,3043,2.502,3044,2.296,3045,2.502,3046,4.405,3047,6.143,3048,2.813,3049,2.813,3050,2.813,3051,2.813,3052,4.405,3053,5.429,3054,4.405,3055,2.813,3056,4.405,3057,2.813,3058,2.813,3059,2.813,3060,2.813,3061,2.813,3062,2.813,3063,2.813,3064,2.502]],["title/modules/ProcessModule.html",[666,1.076,3065,3.578]],["body/modules/ProcessModule.html",[3,0.132,4,0.107,5,0.035,8,0.05,10,0.102,13,1.143,18,1.827,23,1.297,24,2.507,30,0.488,44,0.007,50,1.123,74,0.263,76,1.164,81,1.72,86,0.124,93,2.032,115,0.005,116,0.005,122,3.078,124,3.747,127,4.013,140,4.515,142,6.166,188,4.013,189,4.3,267,1.622,441,1.503,481,1.561,495,1.561,497,3.747,577,3.329,666,1.961,668,2.226,680,1.79,681,1.754,682,1.754,683,1.79,684,2.635,685,1.754,686,2.926,687,2.264,688,1.622,689,1.79,690,1.79,691,1.79,692,1.79,693,1.79,694,1.79,695,1.686,696,1.79,697,1.79,698,1.79,699,1.72,700,2.357,701,1.79,702,1.754,703,1.79,704,1.79,705,1.79,706,1.79,707,1.79,708,1.622,709,1.79,710,1.754,711,1.79,720,4.107,721,3.286,730,3.241,741,3.529,745,3.529,858,2.758,873,2.846,874,3.159,875,3.159,876,3.159,881,3.159,882,2.941,1035,3.429,1105,5.283,1172,5.14,1182,5.661,1468,3.784,2767,3.429,2783,6.313,2955,3.784,3019,4.684,3023,4.3,3065,7.28,3066,4.684,3067,4.684,3068,4.684,3069,4.684,3070,6.313,3071,6.696,3072,5.268,3073,6.935,3074,6.167,3075,6.935,3076,6.935,3077,6.935,3078,8.96,3079,6.167,3080,6.167,3081,5.268,3082,5.268,3083,4.3,3084,5.268,3085,5.268,3086,5.268,3087,5.268,3088,5.268,3089,5.268]],["title/injectables/ProcessRegisterService.html",[652,1.475,3071,3.578]],["body/injectables/ProcessRegisterService.html",[3,0.102,4,0.082,5,0.021,8,0.074,10,0.078,15,0.267,18,2.706,21,3.369,23,1.426,24,3.088,25,2.926,30,0.723,43,1.337,44,0.007,45,0.468,46,0.171,47,1.312,50,1.729,51,2.139,60,5.618,74,0.26,76,0.896,86,0.095,87,2.072,88,2.227,89,2.706,93,2.234,98,1.406,103,2.263,115,0.004,116,0.004,122,4.173,124,3.129,127,5.149,134,2.943,135,4.16,137,2.051,142,4.801,147,1.946,163,4.412,169,4.412,174,1.756,187,2.764,188,3.087,194,2.764,202,5.517,207,5.151,352,1.088,652,1.818,654,1.845,659,2.263,661,1.713,664,2.122,677,1.303,1075,3.474,1087,3.448,1172,3.614,1198,2.639,1518,2.263,1566,5.026,2178,3.308,2767,3.771,2787,3.087,2788,3.308,2790,5.297,2791,3.604,2950,6.532,2963,3.308,2965,7.215,2976,5.151,2977,5.151,2981,5.618,2982,6.01,2986,6.01,3004,5.151,3020,2.764,3021,3.604,3022,3.604,3023,4.728,3024,3.087,3025,3.604,3028,3.604,3029,3.604,3038,7.595,3039,3.604,3040,7.731,3041,3.604,3042,7.423,3043,3.604,3044,7.479,3045,3.604,3064,3.604,3071,4.412,3083,3.308,3090,4.053,3091,5.792,3092,5.792,3093,5.792,3094,5.792,3095,8.352,3096,4.053,3097,5.792,3098,4.053,3099,6.01,3100,5.792,3101,4.053,3102,5.792,3103,4.053,3104,5.792,3105,4.053,3106,5.792,3107,6.01,3108,5.792,3109,4.053,3110,4.053,3111,4.053,3112,4.053,3113,4.053,3114,4.053,3115,4.053,3116,4.053,3117,4.053,3118,4.053,3119,4.053,3120,4.053,3121,8.113,3122,6.759,3123,6.759,3124,4.053,3125,5.792,3126,4.053,3127,5.792,3128,4.053,3129,4.053,3130,4.053,3131,4.053,3132,4.053,3133,4.053,3134,4.053,3135,4.053,3136,4.053,3137,4.053]],["title/interfaces/ProcessUnit.html",[327,0.653,2950,3.374]],["body/interfaces/ProcessUnit.html",[3,0.159,4,0.129,5,0.032,8,0.086,15,0.418,16,0.944,44,0.007,46,0.205,52,1.739,63,0.561,74,0.221,86,0.183,115,0.006,116,0.006,121,2.122,122,4.022,123,4.361,147,4.237,178,4.134,179,4.837,187,4.331,194,5.77,203,1.049,240,2.192,314,1.029,327,1.261,329,1.993,352,1.658,359,3.018,365,2.891,970,5.746,1483,2.94,1484,2.345,2550,6.02,2947,6.724,2948,5.646,2949,4.837,2950,6.076,2951,7.205]],["title/entities/ProcessUnitEntity.html",[264,0.72,2955,3.374]],["body/entities/ProcessUnitEntity.html",[3,0.128,4,0.103,5,0.034,8,0.078,10,0.098,13,1.106,15,0.573,16,0.82,30,0.823,44,0.007,45,0.458,46,0.202,52,1.395,61,2.381,63,0.488,74,0.24,81,1.664,86,0.12,87,2.27,115,0.005,116,0.005,122,2.261,140,5.293,147,3.661,182,2.409,187,3.475,194,4.627,218,2.937,240,1.641,264,1.168,267,1.569,295,1.255,352,1.432,359,2.54,441,1.454,463,3.17,481,1.51,495,1.51,613,1.427,616,2.402,617,2.684,618,2.753,619,3.136,644,2.13,649,2.206,680,1.732,681,1.697,682,1.697,683,1.732,684,2.592,685,1.697,686,2.902,687,2.215,688,1.569,689,1.732,690,1.732,691,1.732,692,1.732,693,1.732,694,1.732,695,1.631,696,1.732,697,1.732,698,1.732,699,1.664,700,2.305,701,1.732,702,1.697,703,1.732,704,1.732,705,1.732,706,1.732,707,1.732,708,1.569,709,1.732,710,1.697,711,1.732,970,4.965,971,2.675,994,4.131,995,3.056,996,4.393,997,3.056,1011,3.552,1012,3.552,1016,2.753,1087,2.8,1172,4.232,1524,2.261,1603,3.881,1609,4.159,1610,5.546,1613,3.179,1616,2.845,1624,3.881,1668,3.475,1720,4.159,1721,5.537,1738,5.537,1760,3.475,1761,4.627,1762,4.627,1764,4.627,2550,5.201,2950,4.873,2951,6.225,2955,4.873,2963,4.159,3138,5.095,3139,5.537,3140,5.095,3141,6.784,3142,5.095,3143,5.095,3144,5.095,3145,6.784,3146,5.095,3147,5.095,3148,5.095,3149,5.095,3150,5.095,3151,5.095,3152,5.095,3153,5.095]],["title/injectables/RedisCacheService.html",[652,1.475,893,3.834]],["body/injectables/RedisCacheService.html",[3,0.078,4,0.063,5,0.016,8,0.077,10,0.111,13,0.672,15,0.204,18,1.646,19,3.285,21,3.088,23,1.169,24,3.31,25,1.49,30,0.75,43,1.388,44,0.007,45,0.486,46,0.177,47,1.453,50,1.893,51,1.752,52,1.33,60,5.603,61,3.437,63,0.564,66,3.386,68,3.089,74,0.198,76,0.684,86,0.073,87,2.111,88,2.539,89,2.243,93,3.046,98,2.001,103,2.287,115,0.003,116,0.005,137,1.68,144,2.123,149,4.716,166,4.41,167,4.857,180,4.094,183,2.472,184,1.249,212,4.182,219,4.35,314,1.313,317,3.237,327,0.66,419,4.615,546,4.412,575,2.743,652,1.49,654,1.41,659,1.729,661,1.309,664,1.621,677,1.068,738,6.862,759,3.521,787,6.109,788,6.268,798,4.677,830,2.485,885,2.961,886,5.178,889,1.932,892,2.754,893,3.874,910,4.22,911,4.22,912,4.22,913,4.22,914,4.22,915,4.22,916,4.22,918,4.22,920,4.22,922,4.22,924,4.22,926,5.499,927,4.22,929,4.22,931,2.754,932,5.473,968,3.221,1087,3.343,1128,3.874,1144,4.013,1177,5.75,1208,7.76,1477,3.878,1568,2.342,2187,2.016,2352,5.75,2815,2.224,2817,2.224,2861,2.224,2862,2.224,2876,5.13,2992,6.541,2995,2.359,3154,8.265,3155,3.097,3156,4.745,3157,3.097,3158,3.097,3159,3.097,3160,4.926,3161,4.745,3162,3.097,3163,3.097,3164,3.097,3165,6.2,3166,3.097,3167,6.466,3168,3.097,3169,4.745,3170,4.745,3171,3.097,3172,2.754,3173,3.097,3174,3.097,3175,4.745,3176,4.745,3177,4.745,3178,3.097,3179,3.097,3180,3.097,3181,3.097,3182,3.097,3183,3.097,3184,3.097,3185,3.097,3186,3.097,3187,3.097,3188,2.754,3189,3.097,3190,3.097,3191,3.097,3192,3.097,3193,3.097,3194,2.359]],["title/modules/RedisModule.html",[666,1.076,880,3.058]],["body/modules/RedisModule.html",[3,0.139,4,0.113,5,0.036,8,0.053,10,0.107,21,3.205,23,1.365,24,2.004,25,1.74,30,0.513,43,0.95,44,0.007,45,0.333,46,0.174,47,0.932,50,1.181,61,3.35,63,0.477,74,0.238,76,1.225,81,1.809,86,0.13,89,2.756,98,1.922,103,1.899,115,0.005,116,0.005,267,1.706,276,2.59,314,1.162,441,1.581,481,1.642,495,1.642,608,1.613,661,3.358,666,1.993,668,2.342,672,4.037,679,4.766,680,1.883,681,1.846,682,1.846,683,1.883,684,2.7,685,1.846,686,2.961,687,2.341,688,1.706,689,1.883,690,1.883,691,1.883,692,1.883,693,1.883,694,1.883,695,1.774,696,1.883,697,1.883,698,1.883,699,1.809,700,2.436,701,1.883,702,1.846,703,1.883,704,1.883,705,1.883,706,1.883,707,1.883,708,1.706,709,1.883,710,1.846,711,1.883,730,3.926,733,5.173,741,2.523,742,2.736,745,2.523,830,3.753,880,5.173,886,5.039,890,3.981,891,3.981,896,3.78,897,3.78,898,3.78,900,3.981,902,3.981,904,4.222,941,4.928,942,6.375,943,4.889,949,6.375,968,4.002,971,2.827,1872,4.524,2815,3.981,2817,5.707,3172,4.928,3195,5.542,3196,7.169,3197,5.542,3198,5.542,3199,7.946,3200,5.542,3201,5.542,3202,5.542,3203,5.542,3204,5.542]],["title/classes/Roles.html",[10,0.091,1043,2.387]],["body/classes/Roles.html",[3,0.146,4,0.118,5,0.03,8,0.055,10,0.143,15,0.382,16,0.982,18,3.25,30,0.753,34,3.628,35,2.878,41,3.824,42,3.488,44,0.007,45,0.444,46,0.178,58,1.034,63,0.488,71,2.367,84,4.43,85,4.177,86,0.191,89,2.564,115,0.005,116,0.005,118,1.66,121,1.854,175,4.128,182,2.409,183,2.153,311,7.577,369,2.792,476,2.955,672,4.798,761,3.125,772,5.544,777,6.982,817,3.362,821,3.247,1043,4.13,1066,6.331,1090,5.413,1166,4.222,1479,4.538,1585,6.667,2448,4.177,2763,3.967,2859,4.43,3205,5.172,3206,4.747,3207,5.816,3208,5.218,3209,7.394,3210,5.816,3211,5.816,3212,7.394,3213,6.035]],["title/guards/RolesGuard.html",[0,3.374,3214,4.177]],["body/guards/RolesGuard.html",[0,5.459,2,4.959,3,0.152,4,0.123,5,0.031,8,0.058,10,0.147,13,1.318,14,7.728,15,0.399,18,2.107,23,1.872,28,6.758,29,6.62,30,0.704,38,3.137,41,3.291,43,1.303,44,0.007,45,0.456,46,0.166,47,1.279,48,4.364,50,1.295,52,1.563,57,4.959,74,0.262,76,1.342,83,4.628,84,4.628,85,4.364,86,0.143,87,2.118,89,3.014,90,5.402,103,2.302,115,0.005,116,0.005,137,2.151,247,3.512,652,2.386,1043,4.214,1087,2.508,1468,4.364,3208,4.794,3214,7.375,3215,6.075,3216,5.789,3217,6.075,3218,9.127,3219,6.075,3220,6.075,3221,5.402,3222,6.075,3223,6.075,3224,6.758,3225,6.075,3226,6.075,3227,4.558,3228,6.075,3229,6.075,3230,6.075,3231,6.075,3232,7.6,3233,6.075,3234,6.075,3235,5.402,3236,6.075]],["title/interfaces/TargetData.html",[327,0.653,1523,2.817]],["body/interfaces/TargetData.html",[3,0.084,4,0.068,5,0.017,8,0.069,9,2.408,10,0.13,15,0.221,16,0.609,38,1.385,41,3.127,43,1.388,44,0.007,45,0.514,46,0.196,47,0.564,50,1.677,51,1.239,52,1.903,58,1.5,63,0.566,66,1.756,71,1.939,74,0.229,86,0.204,88,2.72,115,0.004,116,0.004,121,2.177,144,2.128,172,1.812,174,1.643,180,2.42,203,1.3,240,0.811,264,1.471,285,1.939,295,0.826,296,1.033,314,1.407,319,2.244,327,1.243,329,1.053,347,1.176,348,1.418,352,0.947,355,1.785,356,1.323,383,1.452,392,1.452,394,2.356,405,1.656,445,1.61,456,1.095,538,1.452,591,1.61,608,0.755,609,0.975,613,0.939,644,1.902,666,0.768,677,1.134,759,3.249,761,2.131,785,1.873,845,1.812,851,2.64,854,2.815,864,3.273,959,1.756,980,3.422,982,2.724,1045,3.172,1054,1.873,1091,1.812,1142,3.273,1144,3.422,1146,2.012,1166,1.656,1176,1.812,1199,2.724,1200,2.012,1355,1.656,1377,2.012,1378,1.489,1471,1.939,1472,2.012,1473,1.812,1474,2.012,1475,2.093,1476,2.012,1477,2.012,1478,2.012,1479,1.873,1481,4.572,1482,1.873,1483,2.81,1484,1.239,1485,2.012,1486,4.333,1487,1.939,1488,1.756,1489,1.939,1490,1.812,1491,3.024,1492,2.012,1493,4.788,1494,2.012,1495,1.873,1496,4.68,1497,1.756,1498,2.815,1499,2.012,1500,2.012,1501,2.012,1502,2.012,1503,1.939,1504,1.939,1505,2.012,1506,2.012,1507,2.012,1508,2.012,1509,2.012,1510,2.012,1511,2.012,1512,2.012,1513,2.012,1514,2.012,1515,2.012,1516,3.502,1517,2.012,1518,2.815,1519,2.914,1520,2.093,1521,2.914,1522,1.812,1523,3.633,1524,2.99,1525,4.203,1526,3.024,1527,5.139,1528,2.64,1529,2.093,1530,2.093,1531,2.093,1532,2.093,1533,2.012,1534,2.012,1535,1.939,1536,2.093,1537,2.093,1538,1.939,1539,1.939,1540,1.704,1541,1.873,1542,2.012,1543,1.939,1544,2.093,1545,2.093,1546,2.815,1547,2.012,1548,5.264,1549,4.72,1550,4.505,1551,2.093,1552,2.012,1553,3.024,1554,2.093,1555,2.093,1556,3.779,1557,2.012,1558,2.012,1559,1.812,1560,3.145,1561,2.093,1562,2.093,1563,2.093,1564,2.093,1565,2.093,1566,1.939,1567,2.012,1568,1.656,1569,2.093,1570,2.093,1571,2.093]],["title/classes/TmpDirCleanerProcess.html",[10,0.091,3237,4.177]],["body/classes/TmpDirCleanerProcess.html",[3,0.099,4,0.08,5,0.034,8,0.074,9,2.203,10,0.129,15,0.26,16,0.686,17,5.57,18,2.874,19,4.21,21,3.537,23,1.399,24,3.388,25,2.753,30,0.845,34,3.545,43,1.323,44,0.007,45,0.463,46,0.192,47,1.353,49,3.221,50,1.892,51,1.457,58,1.01,63,0.482,74,0.245,76,0.872,86,0.093,87,1.451,88,1.192,89,2.527,93,3.101,98,1.369,103,1.505,115,0.004,116,0.004,117,7.497,118,1.126,122,4.049,126,4.639,127,5.881,128,5.947,129,5.922,130,5.053,131,5.922,132,5.922,133,5.053,134,3.383,135,4.783,136,5.053,137,2.012,140,2.569,142,5.026,146,5.073,147,4.071,148,3.509,149,3.814,151,5.073,152,3.718,153,5.922,154,3.509,155,5.922,156,5.922,157,5.922,158,3.509,159,3.509,161,3.509,163,4.329,164,3.509,166,2.692,167,2.367,169,3.006,170,3.006,172,2.132,173,3.509,174,1.419,175,4.067,177,3.509,178,4.743,179,3.006,180,1.895,181,3.032,182,1.684,183,1.046,184,1.592,185,2.203,186,5.053,188,3.006,212,2.367,216,3.509,314,1.181,317,3.876,389,3.408,656,2.655,659,2.203,661,1.668,664,2.066,665,2.367,724,2.692,726,2.692,761,2.402,793,2.569,798,1.895,841,6.119,943,3.876,1006,3.285,1107,2.513,1131,5.235,1188,4.329,1198,2.569,1252,3.006,1278,3.221,1313,5.55,1339,3.006,1402,3.006,1429,3.509,1437,3.509,1567,3.408,1843,3.221,3237,5.053,3238,6.659,3239,3.947,3240,5.683,3241,5.947,3242,5.683,3243,3.947,3244,3.947,3245,3.947,3246,3.947,3247,3.947,3248,5.683,3249,5.683,3250,5.683,3251,3.947,3252,5.683,3253,6.659,3254,5.683,3255,7.285,3256,7.285,3257,7.285,3258,4.329,3259,3.947,3260,3.947,3261,3.947,3262,3.947,3263,3.947,3264,3.947,3265,3.947,3266,3.947,3267,3.947,3268,3.947,3269,3.947,3270,3.947,3271,3.947,3272,3.947,3273,3.947,3274,3.947,3275,3.947,3276,5.053,3277,3.947,3278,3.947,3279,3.947,3280,3.947,3281,3.947,3282,3.947,3283,3.947]],["title/classes/TooManyRequestsMsException.html",[10,0.091,3284,4.177]],["body/classes/TooManyRequestsMsException.html",[3,0.17,4,0.138,5,0.034,8,0.065,10,0.131,30,0.628,43,1.163,44,0.007,45,0.407,46,0.149,47,1.141,63,0.522,74,0.23,76,1.499,86,0.159,115,0.006,116,0.006,118,1.936,137,2.402,181,3.702,184,2.737,212,4.069,569,3.903,656,3.8,665,4.069,815,4.627,816,5.073,817,4.7,819,6.296,820,5.294,821,5.154,822,5.546,823,4.627,824,4.417,825,4.627,3284,7.231,3285,8.131,3286,9.231,3287,6.784,3288,6.033,3289,6.033,3290,6.784,3291,6.784]],["title/classes/UnauthorizedMsException.html",[10,0.091,3292,4.177]],["body/classes/UnauthorizedMsException.html",[3,0.173,4,0.14,5,0.035,8,0.066,10,0.133,30,0.639,35,2.444,43,1.183,44,0.007,45,0.414,46,0.151,47,1.161,63,0.526,74,0.233,76,1.525,86,0.162,115,0.006,116,0.006,118,1.97,137,2.444,181,3.74,184,2.784,569,3.944,656,3.839,815,4.708,816,5.126,817,4.749,819,5.603,820,5.349,821,5.178,822,5.603,823,4.708,824,4.494,825,4.708,2417,6.138,3292,7.306,3293,8.216,3294,8.772]],["title/interfaces/UpsertMediaRequest.html",[327,0.653,2625,2.538]],["body/interfaces/UpsertMediaRequest.html",[3,0.107,4,0.087,5,0.044,8,0.041,9,2.545,10,0.17,13,1.639,15,0.281,16,0.726,25,1.887,35,2.129,44,0.007,45,0.535,46,0.208,47,1.389,52,1.697,58,1.508,63,0.582,74,0.226,86,0.214,115,0.004,116,0.004,121,2.171,144,1.983,174,1.471,203,1.314,240,1.454,292,3.285,296,1.315,314,1.544,327,1.276,329,1.341,332,1.851,347,2.214,352,1.735,355,2.129,358,3.012,359,2.002,366,1.763,367,2.541,378,1.723,412,3.117,414,3.117,608,0.961,609,1.242,677,1.353,952,2.977,989,1.805,1001,1.481,1107,2.268,1407,3.437,1483,2.824,1484,1.577,1580,4.172,1780,2.17,1782,2.17,1786,2.17,1788,2.17,1792,2.17,2613,2.308,2614,3.953,2615,3.953,2616,2.809,2617,2.385,2618,2.308,2619,3.248,2620,3.148,2621,3.642,2622,2.967,2623,3.953,2624,3.357,2625,3.248,2626,4.215,2627,4.215,2628,3.248,2629,4.299,2630,2.308,2631,3.248,2632,2.236,2633,2.385,2634,2.385,2635,2.385,2636,2.385,2637,2.385,2638,2.385,2639,2.05,2640,2.236]],["title/interfaces/User.html",[71,1.504,327,0.653]],["body/interfaces/User.html",[3,0.125,4,0.101,5,0.025,8,0.047,9,2.52,10,0.17,13,1.447,15,0.327,16,0.806,22,2.684,35,1.759,44,0.007,45,0.4,46,0.208,52,1.655,58,1.431,63,0.591,71,3.037,74,0.238,86,0.207,115,0.005,116,0.005,121,2.105,144,1.923,174,1.299,203,1.428,240,2.09,276,3.923,288,2.773,291,4.03,296,1.529,297,2.684,298,2.979,327,1.228,329,1.559,347,1.958,348,2.1,352,1.253,359,2.941,608,1.118,609,1.444,677,1.501,722,2.773,840,3.234,843,3.234,846,3.234,848,3.234,852,3.234,863,5.238,952,2.63,1001,1.723,1043,4.266,1483,2.508,1484,1.834,1580,4.042,1581,2.871,2486,5.238,2616,3.761,3208,3.855,3227,5.035,3295,3.234,3296,5.238,3297,5.466,3298,5.466,3299,5.466,3300,4.902,3301,3.234,3302,3.099]],["title/classes/UserDto.html",[10,0.091,1581,2.715]],["body/classes/UserDto.html",[3,0.12,4,0.097,5,0.024,8,0.046,9,2.495,10,0.169,13,1.602,15,0.314,16,0.785,22,2.581,30,0.853,35,1.691,44,0.007,45,0.39,46,0.207,52,1.518,58,1.408,63,0.585,71,3.022,74,0.235,86,0.205,115,0.005,116,0.005,118,1.363,121,1.986,144,1.898,174,1.438,203,1.368,240,2.003,276,3.701,288,2.667,291,3.802,296,1.471,297,2.581,298,2.865,327,1.189,347,1.847,348,2.019,352,1.22,359,2.846,608,1.075,609,1.389,617,2.78,677,1.461,722,2.667,840,3.11,843,3.11,846,3.11,848,3.11,852,3.11,863,4.941,952,2.911,1001,1.657,1043,4.024,1483,2.458,1484,1.764,1580,4.159,1581,3.755,2422,3.431,2486,4.941,2616,3.993,3208,3.755,3227,4.427,3295,3.11,3296,4.941,3297,5.156,3298,5.156,3299,5.156,3300,5.156,3301,3.11,3302,2.98,3303,4.777,3304,4.777,3305,4.777,3306,4.777,3307,4.777,3308,4.777,3309,4.777,3310,4.777,3311,4.777,3312,4.777,3313,4.777]],["title/entities/UserEntity.html",[264,0.72,297,2.538]],["body/entities/UserEntity.html",[3,0.119,4,0.096,5,0.033,8,0.045,10,0.124,13,1.025,15,0.583,16,0.779,30,0.851,44,0.007,45,0.511,46,0.205,52,1.326,63,0.563,71,2.349,74,0.223,81,1.543,86,0.111,87,2.365,115,0.005,116,0.005,182,1.911,203,1.212,240,1.559,264,1.124,267,1.455,276,3.43,291,3.523,295,1.164,297,3.483,319,2.147,359,2.444,441,1.348,456,2.396,463,3.013,481,1.4,495,1.4,613,1.323,616,2.283,617,2.775,618,3.965,619,3.596,644,2.024,645,3.623,649,3.688,680,1.606,681,1.574,682,1.574,683,1.606,684,2.494,685,1.574,686,2.846,687,2.105,688,1.455,689,1.606,690,1.606,691,1.606,692,1.606,693,1.606,694,1.606,695,1.513,696,1.606,697,1.606,698,1.606,699,1.543,700,2.191,701,1.606,702,1.574,703,1.606,704,1.606,705,1.606,706,1.606,707,1.606,708,1.455,709,1.606,710,1.574,711,1.606,856,3.6,863,4.579,986,2.268,987,2.731,989,3.333,990,2.401,991,4.022,1009,4.912,1011,3.376,1012,3.376,1013,3.276,1043,3.729,1045,4.128,1046,3.6,1054,2.638,1087,3.516,1624,3.6,1668,3.223,1739,3.857,1760,3.223,1761,4.398,1762,4.398,1764,4.398,1767,5.263,1770,3.857,2486,4.579,3296,4.579,3297,4.778,3298,4.778,3299,4.778,3314,4.725,3315,4.631,3316,4.725,3317,4.725,3318,4.725,3319,6.448,3320,4.725,3321,4.725,3322,6.448,3323,4.725,3324,4.725,3325,4.725,3326,4.725,3327,4.725,3328,4.725,3329,4.725]],["title/injectables/UserEntityPwdAndRolesSaveHandler.html",[652,1.475,3330,4.177]],["body/injectables/UserEntityPwdAndRolesSaveHandler.html",[3,0.16,4,0.13,5,0.033,8,0.061,10,0.123,13,1.388,15,0.421,23,1.932,30,0.593,43,1.096,44,0.007,45,0.384,46,0.14,47,1.076,50,1.363,63,0.509,71,3.068,74,0.251,76,1.413,86,0.15,103,1.694,115,0.006,116,0.006,264,1.202,266,5.108,317,5.789,579,4.895,597,4.895,613,2.197,652,2.463,654,2.912,710,2.613,758,6.356,1043,4.312,1471,4.535,1473,4.239,1474,4.706,1478,4.706,1479,4.739,1481,3.07,1488,3.349,1612,4.164,3235,5.688,3330,6.977,3331,7.846,3332,7.846,3333,7.846,3334,6.396,3335,6.977,3336,6.396,3337,6.396,3338,6.396,3339,6.396,3340,6.396,3341,6.396,3342,6.396,3343,6.396]],["title/modules/UserModule.html",[666,1.076,722,2.623]],["body/modules/UserModule.html",[3,0.148,4,0.12,5,0.038,8,0.056,10,0.114,22,4.427,23,1.457,30,0.548,43,1.014,44,0.007,45,0.355,46,0.13,47,0.996,50,1.262,71,1.895,74,0.252,76,1.308,81,1.932,86,0.139,103,1.568,115,0.005,116,0.005,124,4.039,182,1.754,183,1.568,267,1.822,297,3.197,298,3.55,441,1.689,463,3.493,481,1.754,495,1.754,497,4.039,608,1.682,666,2.034,668,2.501,672,3.798,673,4.867,674,3.853,677,1.844,679,4.915,680,2.011,681,1.971,682,1.971,683,2.011,684,2.785,685,1.971,686,3.006,687,2.441,688,1.822,689,2.011,690,2.011,691,2.011,692,2.011,693,2.011,694,2.011,695,1.895,696,2.011,697,2.011,698,2.011,699,1.932,700,2.541,701,2.011,702,1.971,703,2.011,704,2.011,705,2.011,706,2.011,707,2.011,708,1.822,709,2.011,710,1.971,711,2.011,722,4.575,730,2.766,741,2.694,742,2.921,743,3.421,744,4.251,745,2.694,827,6.689,856,4.509,858,3.099,1035,3.853,3302,5.371,3315,5.37,3344,5.918,3345,5.918,3346,5.918,3347,5.918]],["title/interfaces/UserRole.html",[327,0.653,3227,2.817]],["body/interfaces/UserRole.html",[3,0.133,4,0.108,5,0.027,8,0.051,9,2.561,10,0.173,13,1.512,15,0.349,16,0.842,22,2.867,35,1.879,44,0.007,45,0.515,46,0.196,52,1.433,58,1.384,63,0.586,71,3.049,74,0.243,86,0.211,115,0.005,116,0.005,121,2.152,144,1.966,174,1.357,203,1.285,240,2.13,276,3.256,288,2.963,291,3.345,296,1.634,297,2.867,298,3.182,327,1.249,329,1.666,347,1.815,348,2.243,352,1.612,359,2.99,608,1.194,609,1.543,677,1.568,722,2.963,840,3.454,843,3.454,846,3.454,848,3.454,852,3.454,863,4.347,952,2.748,1001,1.84,1043,3.54,1483,2.858,1484,1.959,1580,4.083,1581,3.067,2486,4.347,2616,3.861,3208,4.498,3227,4.955,3295,3.454,3296,4.347,3297,4.536,3298,4.536,3299,4.536,3300,5.065,3301,3.454,3302,3.31]],["title/classes/UserRoleDto.html",[10,0.091,3300,3.058]],["body/classes/UserRoleDto.html",[3,0.131,4,0.106,5,0.027,8,0.05,9,2.552,10,0.173,13,1.677,15,0.344,16,0.834,22,2.825,30,0.716,35,1.852,44,0.007,45,0.493,46,0.196,52,1.419,58,1.461,63,0.584,71,3.044,74,0.242,86,0.21,115,0.005,116,0.005,118,1.492,121,2.06,144,1.956,174,1.505,203,1.276,240,2.065,276,3.225,288,2.92,291,3.313,296,1.61,297,2.825,298,3.137,327,1.22,347,1.802,348,2.21,352,1.543,359,2.922,608,1.177,609,1.521,617,2.333,677,1.553,722,2.92,840,3.405,843,3.405,846,3.405,848,3.405,852,3.405,863,4.306,952,3.046,1001,1.814,1043,3.507,1483,2.736,1484,1.931,1580,4.117,1581,3.023,2486,4.306,2616,3.991,3208,4.466,3227,4.927,3295,3.405,3296,4.306,3297,4.493,3298,4.493,3299,4.493,3300,5.348,3301,3.405,3302,3.263,3348,5.23,3349,5.23,3350,5.23]],["title/entities/UserRoleEntity.html",[264,0.72,1045,2.459]],["body/entities/UserRoleEntity.html",[3,0.147,4,0.119,5,0.038,8,0.056,10,0.113,13,1.269,15,0.564,16,0.896,30,0.755,44,0.007,45,0.514,46,0.194,63,0.445,74,0.231,81,1.909,86,0.137,87,1.895,115,0.005,116,0.005,240,1.794,264,1.248,267,1.8,295,1.44,352,1.531,359,2.714,441,1.668,456,1.909,463,3.467,481,1.733,495,1.733,613,1.638,616,2.627,617,2.461,680,1.987,681,1.947,682,1.947,683,1.987,684,2.769,685,1.947,686,2.998,687,2.422,688,1.8,689,1.987,690,1.987,691,1.987,692,1.987,693,1.987,694,1.987,695,1.872,696,1.987,697,1.987,698,1.987,699,1.909,700,2.521,701,1.987,702,1.947,703,1.987,704,1.987,705,1.987,706,1.987,707,1.987,708,1.8,709,1.987,710,1.947,711,1.987,856,4.454,986,2.807,994,4.354,995,3.507,996,4.008,997,3.507,1011,3.884,1012,3.884,1016,3.159,1043,3.769,1045,3.884,1524,2.595,1613,3.648,1616,3.265,1622,3.806,1760,3.988,1761,5.06,1762,5.06,1764,5.06,3227,4.449,3315,5.329,3351,8.571,3352,5.847,3353,5.847,3354,5.847,3355,5.847,3356,5.847]],["title/classes/UserService.html",[10,0.091,22,2.538]],["body/classes/UserService.html",[3,0.122,4,0.099,5,0.025,8,0.046,9,2.731,10,0.172,13,1.428,15,0.32,22,3.554,23,1.62,30,0.772,35,1.723,43,1.429,44,0.007,45,0.527,46,0.198,47,1.403,50,1.777,52,1.353,58,1.325,63,0.587,71,3.088,74,0.236,86,0.206,115,0.005,116,0.005,118,1.389,121,2.091,144,2.097,174,1.281,203,1.419,240,1.93,276,3.074,288,2.718,291,3.577,296,1.499,297,2.63,298,2.919,327,1.195,347,1.738,348,2.057,352,1.236,359,2.659,443,3.554,608,1.095,609,1.415,677,1.677,722,2.718,833,5.85,834,5.85,835,5.85,836,5.85,840,4.283,843,4.283,846,4.283,848,4.283,852,4.283,863,4.104,952,2.594,1001,1.688,1043,3.343,1483,2.482,1484,1.798,1580,4.029,1581,2.814,2486,4.104,2616,3.73,3208,3.803,3227,4.47,3295,3.169,3296,4.104,3297,4.283,3298,4.283,3299,4.283,3300,4.852,3301,3.169,3302,3.037,3357,4.868,3358,4.868,3359,4.868,3360,4.868,3361,4.868]],["title/classes/UserSubscriber.html",[10,0.091,3362,4.177]],["body/classes/UserSubscriber.html",[3,0.15,4,0.122,5,0.03,8,0.057,9,1.707,10,0.115,13,1.634,15,0.393,16,0.909,17,4.94,18,2.857,23,1.854,24,3.287,30,0.801,43,1.29,44,0.007,45,0.452,46,0.195,47,1.267,50,1.756,65,4.696,71,1.915,74,0.245,86,0.141,93,3.333,103,1.585,115,0.005,116,0.005,118,1.707,170,5.734,182,1.773,183,1.585,261,6.145,264,1.153,268,7.055,275,6.694,276,3.518,282,7.685,283,7.685,286,5.734,287,6.145,288,4.203,291,3.614,294,5.321,295,1.473,297,4.912,392,3.259,432,4.351,656,2.796,2498,7.324,2499,6.694,3362,6.694,3363,5.983,3364,8.236,3365,7.528,3366,7.528,3367,8.643,3368,5.983,3369,7.528,3370,5.983,3371,7.528,3372,5.983,3373,5.983,3374,5.983,3375,7.528,3376,7.528,3377,5.983]],["title/interfaces/UserUpdateRequest.html",[327,0.653,3301,3.058]],["body/interfaces/UserUpdateRequest.html",[3,0.134,4,0.109,5,0.027,8,0.051,9,2.566,10,0.174,13,1.52,15,0.351,16,0.846,22,2.888,35,2.479,44,0.007,45,0.42,46,0.193,52,1.44,58,1.388,63,0.586,71,3.101,74,0.244,86,0.211,115,0.005,116,0.005,121,2.157,144,1.97,174,1.364,203,1.457,240,2.004,276,3.272,288,3.909,291,3.361,296,1.646,297,2.888,298,3.206,327,1.251,329,1.678,347,1.821,348,2.259,352,1.315,359,2.76,608,1.203,609,1.554,677,1.575,722,2.984,840,3.48,843,3.48,846,3.48,848,3.48,852,3.48,863,4.368,952,2.761,1001,1.854,1043,3.557,1483,2.601,1484,1.974,1580,4.087,1581,3.09,2486,4.368,2616,3.872,3208,4.047,3227,4.683,3295,3.48,3296,4.368,3297,4.558,3298,4.558,3299,4.558,3300,5.083,3301,4.558,3302,3.335]],["title/interfaces/VideoFileMetadata.html",[327,0.653,406,2.817]],["body/interfaces/VideoFileMetadata.html",[3,0.06,4,0.049,5,0.045,8,0.037,10,0.119,15,0.255,16,0.677,33,2.28,38,0.988,40,1.493,44,0.007,45,0.336,46,0.194,52,0.492,53,3.783,58,0.426,63,0.59,69,2.554,74,0.138,86,0.175,115,0.003,116,0.003,121,2.066,122,1.062,123,1.336,134,1.216,147,1.149,152,3.438,174,1.712,175,3.13,183,1.292,203,1.294,240,1.593,279,2.162,292,2.314,296,0.737,314,1.534,327,1.185,328,2.323,329,0.751,330,1.493,331,2.724,332,2.46,333,1.493,334,1.493,335,3.693,336,3.693,337,1.493,338,3.693,339,3.559,340,1.493,341,1.493,342,1.493,343,1.493,344,1.435,345,1.493,346,1.493,347,1.138,348,1.011,349,2.092,350,2.028,351,1.383,352,0.449,353,1.062,354,1.181,355,1.727,356,0.944,357,1.435,358,1.677,359,0.797,360,4.531,361,4.365,362,3.693,363,2.416,364,1.558,365,1.763,366,0.988,367,1.011,368,1.558,369,4.41,370,1.558,371,1.493,372,4.823,373,1.558,374,5.364,375,1.558,376,4.942,377,2.092,378,0.965,379,2.323,380,3.809,381,2.521,382,4.032,383,1.036,384,3.043,385,3.043,386,1.558,387,2.323,388,3.631,389,2.926,390,3.176,391,4.955,392,1.036,393,4.289,394,1.81,395,2.323,396,3.952,397,1.558,398,1.493,399,1.493,400,1.558,401,4.989,402,3.176,403,2.521,404,3.13,405,1.181,406,2.926,407,2.521,408,2.416,409,1.558,410,1.558,411,1.493,412,2.863,413,4.008,414,2.863,415,2.521,416,1.493,417,2.416,418,1.558,419,3.679,420,2.416,421,2.416,422,1.493,423,1.558,424,1.558,425,1.493,426,3.841,427,1.493,428,2.416,429,1.558,430,3.649,431,1.493,432,1.383,433,1.558,434,1.293,435,4.289,436,1.558,437,1.558,438,1.558,439,2.092,440,1.493,441,1.757,442,2.521,443,2.092,444,1.493,445,2.342,446,3.043,447,1.493,448,1.493,449,1.493,450,1.435,451,3.176,452,1.558,453,1.493,454,1.493,455,1.493,456,0.781,457,1.558,458,1.558,459,1.558,460,1.493,461,1.493,462,1.558,463,1.118,464,1.493,465,1.493,466,3.176,467,1.493,468,1.493,469,3.043,470,2.521,471,2.521,472,2.239,473,2.521,474,1.493,475,1.493,476,1.968,477,1.558,478,1.493,479,1.558,480,1.493,481,0.709,482,1.493,483,1.558,484,1.493,485,1.493,486,1.435,487,2.521,488,1.558,489,2.239,490,2.521,491,1.558,492,2.521,493,1.558,494,1.558,495,1.148,496,1.558,497,1.293,498,1.558,499,1.558,500,1.558,501,1.558,502,2.521,503,1.558,504,2.521,505,1.558,506,2.416,507,2.521,508,1.493,509,1.558,510,1.558,511,3.176,512,1.558,513,3.649,514,3.176,515,3.176,516,3.176,517,1.558,518,4.701,519,1.558,520,3.362,521,4.515,522,1.558,523,1.558,524,1.558,525,2.521,526,2.521,527,1.558,528,1.558,529,1.558,530,1.558,531,1.558,532,1.558,533,1.558,534,1.558,535,2.521,536,1.558,537,1.558,538,1.036,539,1.558,540,2.521,541,2.416,542,1.558,543,1.558,544,1.558,545,1.558,546,1.435,547,2.521,548,4.289,549,1.558,550,1.558,551,3.176,552,1.558,553,1.558,554,1.558,555,3.841,556,1.558,557,1.558,558,1.558,559,1.558,560,3.176,561,2.521,562,1.558,563,1.558,564,2.521,565,1.558,566,2.521,567,1.558,568,1.493,569,1.149,570,1.558,571,4.008,572,1.558,573,1.558,574,1.558,575,1.383,576,1.558,577,1.149,578,1.558,579,3.497,580,1.558,581,1.558,582,2.521,583,2.521,584,2.521,585,1.558,586,1.558,587,1.558,588,1.558,589,1.558,590,1.493,591,1.149,592,1.493,593,1.558,594,1.558,595,1.558,596,2.416,597,1.493,598,1.558,599,1.558,600,1.558,601,3.176,602,2.416,603,3.497,604,3.497,605,3.497,606,3.497,607,3.497,608,0.538,609,0.696,610,1.253,611,1.435]],["title/entities/VideoFileMetadataEntity.html",[264,0.72,1811,3.578]],["body/entities/VideoFileMetadataEntity.html",[3,0.117,4,0.095,5,0.048,8,0.045,10,0.09,13,1.013,15,0.616,16,0.773,30,0.862,44,0.007,45,0.545,46,0.204,61,3.409,63,0.567,74,0.181,86,0.11,87,2.479,115,0.005,116,0.005,182,2.515,203,1.205,218,3.158,264,1.117,295,1.15,314,1.472,326,4.362,332,1.969,335,4.375,336,4.375,338,4.375,339,4.217,404,3.571,406,3.836,412,3.011,414,3.011,555,4.551,603,4.551,604,4.551,605,4.551,606,4.551,607,4.551,613,1.308,615,3.185,616,2.264,617,2.811,618,4.781,619,3.731,620,3.812,621,4.152,622,4.551,623,3.557,624,3.557,627,3.557,628,3.812,629,5.221,630,5.221,631,5.221,632,4.152,634,2.372,635,3.354,638,3.557,640,3.354,641,4.152,643,4.152,644,1.466,645,3.157,646,2.607,648,2.372,649,3.831,650,4.073,651,3.812,1811,4.872,3378,9.362,3379,6.396,3380,6.396,3381,6.396,3382,4.669,3383,6.396,3384,6.396,3385,4.669,3386,4.669]],["title/modules/WarlockModule.html",[666,1.076,3070,3.374]],["body/modules/WarlockModule.html",[3,0.132,4,0.107,5,0.035,8,0.05,10,0.102,21,3.456,24,1.909,44,0.007,63,0.317,74,0.263,76,1.167,81,1.724,86,0.124,89,1.831,93,2.036,103,2.056,115,0.005,116,0.005,144,1.21,267,1.626,276,2.467,277,4.166,312,3.438,441,1.507,481,1.565,495,1.565,577,3.334,661,2.936,666,1.963,668,2.232,680,1.794,681,1.759,682,1.759,683,1.794,684,2.638,685,1.759,686,2.927,687,2.268,688,1.626,689,1.794,690,1.794,691,1.794,692,1.794,693,1.794,694,1.794,695,1.69,696,1.794,697,1.794,698,1.794,699,1.724,700,2.36,701,1.794,702,1.759,703,1.794,704,1.794,705,1.794,706,1.794,707,1.794,708,1.626,709,1.794,710,1.759,711,1.794,720,3.246,730,3.627,733,4.522,741,3.162,742,2.606,745,3.162,830,3.637,873,2.853,874,3.167,875,3.167,876,3.167,880,5.577,881,3.167,882,2.948,885,4.333,886,5.138,888,3.793,889,3.294,890,3.793,891,3.793,895,4.31,896,3.601,897,3.601,898,3.601,899,4.31,900,3.793,901,4.31,902,3.793,903,4.31,904,4.022,905,4.31,906,4.31,968,2.948,1394,4.166,2187,4.522,2789,4.695,2815,3.793,2817,4.989,2818,4.695,2981,5.291,3020,5.999,3070,6.317,3387,5.28,3388,5.28,3389,5.28,3390,6.176,3391,6.176,3392,3.793,3393,5.28,3394,5.28,3395,6.946,3396,5.28,3397,5.28,3398,5.28,3399,5.28,3400,5.28,3401,6.946,3402,5.28,3403,5.28,3404,7.762]],["title/classes/XdbExportService.html",[10,0.091,3405,3.374]],["body/classes/XdbExportService.html",[3,0.099,4,0.081,5,0.029,8,0.038,9,2.505,10,0.149,15,0.261,23,1.404,24,2.061,30,0.367,33,1.853,43,0.679,44,0.007,45,0.238,46,0.087,47,0.667,50,1.769,51,1.464,52,1.172,53,1.957,58,1.298,61,3.12,63,0.238,74,0.219,86,0.209,87,1.864,88,2.336,89,3.276,98,1.977,103,2.325,115,0.004,116,0.004,118,1.131,121,0.994,125,3.859,144,1.845,149,2.076,151,3.02,174,1.684,183,1.05,295,0.976,312,3.712,365,2.595,476,2.014,759,1.637,761,1.676,798,1.903,851,2.076,965,4.378,980,2.014,1030,5.086,1066,3.889,1075,3.419,1087,3.014,1091,3.944,1137,3.02,1165,4.343,1168,4.343,1176,2.142,1378,2.963,1394,4.639,1407,3.323,1421,4.979,1481,2.737,1482,3.728,1497,2.985,1522,3.607,1540,4.216,1559,3.08,1568,3.818,1835,4.654,2160,2.581,2187,4.346,2861,2.848,2862,2.848,3194,3.02,3392,2.848,3405,4.095,3406,3.712,3407,3.712,3408,3.236,3409,5.602,3410,5.701,3411,5.07,3412,5.561,3413,3.964,3414,4.343,3415,6.135,3416,3.02,3417,6.321,3418,4.343,3419,3.236,3420,4.654,3421,6.769,3422,3.525,3423,2.848,3424,3.525,3425,3.525,3426,3.236,3427,3.236,3428,3.525,3429,4.654,3430,3.236,3431,3.236,3432,3.236,3433,3.236,3434,3.525,3435,3.525,3436,3.525,3437,3.525,3438,3.525,3439,5.561,3440,3.525,3441,3.525,3442,5.07,3443,3.525,3444,3.525,3445,3.525,3446,3.525,3447,5.45,3448,4.654,3449,3.525,3450,3.525,3451,3.525,3452,5.07,3453,5.07,3454,3.525,3455,3.525,3456,3.525,3457,3.525,3458,3.525,3459,3.525,3460,3.525,3461,3.525,3462,3.525,3463,3.525,3464,3.525,3465,3.525,3466,3.525,3467,3.525,3468,3.525,3469,3.525,3470,3.525,3471,3.525,3472,3.525,3473,3.525,3474,3.236,3475,5.07,3476,5.07,3477,6.492,3478,3.525,3479,6.877,3480,3.525,3481,3.525,3482,5.07,3483,3.525,3484,3.525,3485,3.525,3486,3.525,3487,3.525,3488,3.525,3489,3.525,3490,3.525]],["title/classes/XdbImportService.html",[10,0.091,3423,3.374]],["body/classes/XdbImportService.html",[3,0.098,4,0.079,5,0.029,8,0.037,9,2.553,10,0.148,15,0.256,23,1.384,24,2.032,30,0.521,33,1.816,43,0.963,44,0.007,45,0.337,46,0.123,47,0.946,50,1.8,51,1.435,52,1.156,53,1.919,58,1.286,61,3.085,63,0.233,74,0.227,86,0.205,87,1.847,88,2.318,89,3.268,98,1.949,103,2.315,115,0.004,116,0.004,118,1.109,121,0.975,125,3.816,144,1.89,149,2.035,151,2.961,174,1.724,183,1.03,295,0.957,312,3.659,365,2.559,476,1.975,759,1.604,761,1.643,798,1.866,851,2.035,965,4.338,1030,5.029,1066,3.833,1075,3.371,1087,2.986,1091,3.908,1137,2.961,1165,4.282,1168,4.282,1176,2.1,1378,2.93,1394,4.603,1407,3.642,1421,4.934,1481,2.698,1482,3.686,1497,2.943,1522,3.567,1540,4.191,1559,3.036,1568,3.788,1835,4.588,2160,2.53,2187,4.298,2861,2.792,2862,2.792,3194,2.961,3392,2.792,3405,2.792,3406,4.298,3407,4.298,3408,3.173,3409,5.632,3411,3.456,3412,4.282,3414,4.282,3415,6.094,3416,2.961,3417,6.556,3418,4.282,3419,3.173,3420,4.588,3421,6.742,3422,3.456,3423,4.037,3424,4.998,3425,4.998,3426,3.173,3427,3.173,3428,3.456,3429,4.588,3430,3.173,3431,3.173,3432,3.173,3433,3.173,3434,3.456,3435,3.456,3436,3.456,3437,3.456,3438,3.456,3439,5.51,3440,3.456,3441,3.456,3442,4.998,3443,3.456,3444,3.456,3445,3.456,3446,3.456,3447,5.389,3448,4.588,3449,3.456,3450,3.456,3451,3.456,3452,4.998,3453,4.998,3454,3.456,3455,3.456,3456,3.456,3457,3.456,3458,3.456,3459,3.456,3460,3.456,3461,3.456,3462,3.456,3463,3.456,3464,3.456,3465,3.456,3466,3.456,3467,3.456,3468,3.456,3469,3.456,3470,3.456,3471,3.456,3472,3.456,3473,3.456,3474,3.173,3475,4.998,3476,4.998,3477,6.432,3478,3.456,3479,6.824,3480,3.456,3481,3.456,3482,4.998,3483,3.456,3484,3.456,3485,3.456,3486,3.456,3487,3.456,3488,3.456,3489,3.456,3490,3.456,3491,5.62,3492,5.62,3493,3.887,3494,3.887,3495,3.887]],["title/interfaces/XdbRequest.html",[327,0.653,3496,4.177]],["body/interfaces/XdbRequest.html",[3,0.121,4,0.098,5,0.044,8,0.046,10,0.143,15,0.317,16,0.789,35,2.312,43,0.825,44,0.007,45,0.392,46,0.213,52,1.343,58,0.856,63,0.585,71,2.372,74,0.243,86,0.22,115,0.005,116,0.005,121,2.312,144,1.103,174,1.855,183,1.73,203,1.372,264,0.737,295,1.185,296,1.482,314,0.78,327,1.031,329,1.511,332,1.482,347,1.523,352,1.226,353,2.137,354,2.376,365,2.191,394,2.249,520,2.887,608,1.083,609,1.4,679,3.916,730,2.249,798,3.135,850,3.134,1108,3.667,1140,3.929,1421,3.283,1454,3.929,1481,4.112,1482,3.646,1488,2.52,1522,3.528,1540,2.446,1559,4.293,1568,3.658,2140,4.281,2913,4.281,3405,3.458,3406,3.134,3407,3.134,3409,5.795,3412,3.667,3414,4.974,3415,3.667,3416,3.667,3417,3.667,3418,3.667,3423,3.458,3447,3.929,3448,5.33,3496,5.806,3497,4.281,3498,6.621,3499,4.814,3500,4.814,3501,6.53,3502,4.814,3503,4.814,3504,3.929,3505,6.589,3506,4.814,3507,4.814,3508,4.281,3509,4.281,3510,4.814,3511,3.458,3512,3.929,3513,4.281,3514,4.281,3515,4.814,3516,4.814,3517,4.281]],["title/injectables/XmlDataBridgeMiddleware.html",[652,1.475,3518,4.177]],["body/injectables/XmlDataBridgeMiddleware.html",[3,0.132,4,0.106,5,0.027,8,0.074,10,0.101,13,1.138,15,0.345,16,0.835,18,2.683,23,1.702,24,2.796,25,2.755,30,0.716,35,3.405,43,1.185,44,0.007,45,0.415,46,0.169,47,1.163,50,1.649,57,6.712,58,1.591,74,0.219,76,1.158,81,1.712,86,0.123,88,2.484,93,2.022,98,1.818,103,1.389,115,0.005,116,0.005,144,1.884,174,1.873,182,1.553,183,1.389,652,2.17,654,2.387,688,2.128,759,2.854,819,4.715,965,3.144,967,5.987,1081,6.712,1165,6.264,1168,5.266,1394,4.146,1460,6.818,2187,4.5,2861,3.765,2862,3.765,2866,4.662,3188,6.147,3194,3.993,3406,5.353,3407,5.353,3409,5.734,3421,5.892,3426,4.279,3429,5.643,3439,5.266,3504,4.279,3518,6.147,3519,5.242,3520,6.913,3521,6.913,3522,6.913,3523,6.913,3524,5.242,3525,6.913,3526,8.223,3527,5.242,3528,6.913,3529,6.913,3530,6.913,3531,5.242,3532,6.913,3533,5.242,3534,5.242,3535,6.913,3536,5.242,3537,5.242,3538,5.242,3539,5.242,3540,5.242]],["title/modules/XmlDataBridgeModule.html",[666,1.076,3511,3.374]],["body/modules/XmlDataBridgeModule.html",[3,0.136,4,0.11,5,0.036,8,0.052,10,0.104,23,1.331,30,0.501,43,0.926,44,0.007,45,0.324,46,0.118,47,0.909,50,1.152,74,0.268,76,1.194,81,1.765,86,0.184,103,1.432,115,0.005,116,0.005,174,1.781,182,1.602,183,1.432,267,1.664,441,1.542,481,1.602,495,1.602,497,3.81,608,1.587,610,2.83,666,1.977,668,2.284,672,3.583,673,4.591,674,3.519,679,4.708,680,1.837,681,1.8,682,1.8,683,1.837,684,2.668,685,1.8,686,2.944,687,2.303,688,1.664,689,1.837,690,1.837,691,1.837,692,1.837,693,1.837,694,1.837,695,1.73,696,1.837,697,1.837,698,1.837,699,1.765,700,2.397,701,1.837,702,1.8,703,1.837,704,1.837,705,1.837,706,1.837,707,1.837,708,1.664,709,1.837,710,1.8,711,1.837,718,4.538,719,3.686,720,3.668,721,3.372,730,3.668,741,2.46,742,3.481,743,4.077,745,2.46,971,2.781,1677,4.117,2639,2.595,2723,4.806,2724,6.271,3405,5.639,3406,4.591,3407,4.591,3409,5.522,3419,4.412,3423,5.639,3498,5.066,3504,4.412,3511,5.639,3512,6.792,3513,6.271,3514,6.271,3541,5.405,3542,5.405,3543,7.85,3544,7.85,3545,7.053,3546,7.053,3547,5.405,3548,5.405,3549,5.405,3550,5.405,3551,5.405,3552,5.405,3553,5.405]],["title/dependencies.html",[873,3.054,3554,3.484]],["body/dependencies.html",[5,0.033,10,0.152,44,0.007,46,0.141,58,1.147,76,1.426,115,0.006,116,0.006,247,4.925,278,5.738,279,3.603,295,1.589,326,6.209,332,2.429,672,3.279,713,5.738,715,5.738,873,3.486,886,3.87,958,4.026,1001,2.238,1465,4.635,1839,5.738,1840,5.738,1841,7.015,2290,5.738,2338,5.738,2341,5.738,2354,7.577,2597,7.015,2601,6.491,2815,4.635,2853,4.916,3020,4.401,3083,5.267,3221,5.738,3392,4.635,3420,5.267,3555,6.453,3556,6.453,3557,6.453,3558,7.889,3559,6.453,3560,6.439,3561,6.453,3562,6.453,3563,6.453,3564,6.453,3565,6.453,3566,6.453,3567,6.453,3568,5.738,3569,8.52,3570,6.453,3571,7.577,3572,6.453,3573,6.453,3574,6.453,3575,6.453,3576,6.453,3577,6.453,3578,6.453]],["title/miscellaneous/enumerations.html",[3579,2.672,3580,5.027]],["body/miscellaneous/enumerations.html",[15,0.442,44,0.007,115,0.006,116,0.006,122,3.589,128,6.601,134,3.415,135,4.828,147,3.882,149,4.234,178,5.646,183,2.594,197,7.19,223,7.19,1229,6.16,1610,5.915,2542,7.19,2546,7.19,2547,7.19,2922,5.487,2934,6.601,2938,6.16,3003,5.977,3006,7.19,3024,6.16,3099,5.977,3107,5.977,3579,4.584,3580,5.977,3581,7.712,3582,6.722,3583,5.977,3584,8.086,3585,6.722,3586,6.722,3587,6.722,3588,6.722,3589,6.722,3590,6.722]],["title/index.html",[15,0.258,2995,2.984,3591,3.484]],["body/index.html",[4,0.092,5,0.043,12,2.623,16,0.983,25,1.425,37,4.036,38,2.966,41,1.965,44,0.005,46,0.099,68,2.954,71,1.453,74,0.129,115,0.005,116,0.005,122,2.014,124,2.452,134,3.186,167,2.722,172,2.452,174,1.585,182,1.858,205,6.39,264,0.695,267,1.397,276,2.121,277,2.722,295,1.544,331,2.534,332,2.213,347,1.463,354,2.24,372,2.623,376,2.722,378,3.282,380,2.623,383,2.715,392,2.715,396,2.722,399,2.831,404,2.534,419,2.534,432,2.623,443,3.388,450,3.761,461,4.483,463,3.358,464,2.831,472,2.623,486,2.722,508,2.831,569,2.179,592,3.913,596,2.831,608,1.021,616,1.607,666,1.646,668,2.651,670,4.504,677,1.021,687,1.482,688,1.931,699,1.482,742,2.24,747,5.119,787,2.954,792,3.457,793,2.954,794,3.457,830,3.762,832,3.26,845,3.388,873,2.452,885,2.831,886,3.761,902,4.504,909,3.704,936,3.457,937,4.188,952,2.473,968,2.534,971,3.318,1032,3.704,1041,4.678,1066,3.095,1090,2.722,1105,6.197,1107,3.254,1109,4.036,1130,3.26,1131,4.083,1160,5.866,1172,2.831,1182,3.704,1355,3.547,1374,3.704,1375,3.704,1387,3.704,1421,4.277,1460,3.457,1486,2.24,1489,2.623,1490,3.388,1539,2.623,1540,2.306,1541,2.534,1542,2.722,1543,2.623,1546,2.534,1558,2.722,1584,2.376,1585,5.162,1600,3.457,1817,4.036,2128,5.577,2160,2.954,2278,3.704,2279,3.704,2281,3.457,2309,3.704,2448,3.26,2492,3.457,2540,4.036,2594,3.704,2622,2.24,3024,3.457,3042,3.704,3044,3.704,3074,4.036,3080,4.036,3139,5.119,3165,4.036,3206,5.119,3208,2.623,3213,5.866,3216,4.777,3258,3.457,3276,5.577,3289,5.577,3315,5.162,3409,4.483,3474,3.704,3498,3.26,3592,4.036,3593,4.036,3594,4.036,3595,5.577,3596,4.036,3597,4.538,3598,7.186,3599,4.538,3600,4.538,3601,4.538,3602,5.119,3603,4.538,3604,4.538,3605,6.271,3606,4.538,3607,4.538,3608,7.186,3609,4.538,3610,4.538,3611,4.538,3612,4.538,3613,4.538,3614,4.538,3615,4.538,3616,6.271,3617,4.538,3618,7.186,3619,6.271,3620,4.538,3621,4.538,3622,4.538,3623,4.538,3624,4.538,3625,5.577,3626,4.538,3627,4.538,3628,4.538,3629,4.036,3630,6.271,3631,4.538,3632,7.751,3633,4.036,3634,4.538,3635,5.577,3636,6.271,3637,4.538,3638,4.538,3639,6.271,3640,4.538,3641,3.704,3642,4.538,3643,4.538,3644,4.538,3645,4.538,3646,4.036,3647,4.036,3648,4.538,3649,4.538,3650,4.538,3651,4.538,3652,4.538,3653,7.186,3654,4.538,3655,3.704,3656,4.538,3657,4.538,3658,4.538,3659,4.538,3660,4.538,3661,4.036,3662,4.538,3663,6.271,3664,4.036,3665,4.538,3666,4.538,3667,6.271,3668,6.271,3669,4.538,3670,4.538,3671,4.538,3672,4.538,3673,4.538,3674,4.538,3675,4.036,3676,4.538,3677,7.186,3678,4.538,3679,4.538,3680,4.538,3681,4.538,3682,4.538,3683,4.538,3684,4.538,3685,4.538,3686,5.577,3687,6.271,3688,4.538,3689,4.538,3690,6.271,3691,4.538,3692,4.036,3693,4.538,3694,4.538,3695,4.538,3696,6.271,3697,8.135,3698,7.186,3699,4.538,3700,4.777,3701,4.538,3702,4.538,3703,4.538,3704,4.538,3705,4.036,3706,4.538,3707,4.538,3708,4.538,3709,6.271,3710,6.271,3711,4.538,3712,4.036,3713,4.538,3714,4.538,3715,4.538,3716,4.538,3717,3.26,3718,4.538,3719,4.036]],["title/license.html",[686,1.279,2995,2.984,3591,3.484]],["body/license.html",[4,0.172,5,0.04,8,0.028,10,0.057,30,0.275,33,2.957,38,1.227,44,0.005,45,0.276,58,1.287,60,5.512,68,2.993,74,0.084,81,1.501,115,0.003,116,0.003,185,3.821,206,2.426,240,0.719,247,1.718,264,1.252,267,0.915,277,1.783,285,1.718,286,2.264,292,1.227,329,0.933,344,1.783,347,0.693,352,1.056,362,1.783,365,1.353,377,1.606,378,1.199,383,3.464,388,1.556,392,3.874,398,1.854,408,1.854,421,1.854,439,2.484,441,1.604,446,3.508,448,1.854,453,1.854,481,2.503,482,2.868,484,1.854,486,1.783,495,1.362,497,1.606,541,2.868,613,0.832,677,0.669,680,1.01,681,0.99,682,0.99,683,1.01,684,2.719,685,2.108,686,3.093,687,1.836,688,2.517,689,1.911,690,1.01,691,1.01,692,1.911,693,1.01,694,2.151,695,2.026,696,1.911,697,1.911,698,1.911,699,2.066,700,1.911,701,1.563,702,2.279,703,1.911,704,2.908,705,1.563,706,1.563,707,1.01,708,0.915,709,1.01,710,1.873,711,1.01,742,1.467,750,2.643,757,4.915,799,3.136,804,2.426,830,2.407,882,1.66,936,7.217,952,1.172,965,1.783,971,1.172,1092,5.627,1107,2.122,1140,4.59,1145,1.66,1224,2.643,1235,2.643,1375,3.753,1386,2.426,1423,2.643,1467,2.643,1490,1.606,1528,1.556,1557,1.783,1584,3.313,1590,2.264,1598,2.027,1599,2.264,1714,7.609,1721,2.426,2330,5.627,2367,2.643,2747,3.753,2762,3.753,2936,3.753,3139,2.426,3206,2.426,3216,4.821,3288,4.088,3335,2.643,3571,2.643,3625,2.643,3629,5,3635,2.643,3641,2.426,3661,2.643,3664,5,3675,2.643,3719,4.088,3720,2.972,3721,2.972,3722,2.972,3723,8.001,3724,6.328,3725,6.843,3726,2.972,3727,8.74,3728,8.173,3729,2.972,3730,2.972,3731,8.173,3732,6.843,3733,4.088,3734,2.972,3735,6.843,3736,2.972,3737,2.972,3738,2.972,3739,2.426,3740,6.328,3741,4.598,3742,2.972,3743,5.623,3744,4.598,3745,4.598,3746,2.972,3747,2.972,3748,2.972,3749,2.972,3750,2.972,3751,2.972,3752,2.972,3753,2.972,3754,5.623,3755,2.972,3756,4.598,3757,2.972,3758,2.972,3759,7.236,3760,6.328,3761,2.972,3762,2.972,3763,2.972,3764,2.972,3765,5.623,3766,2.972,3767,8.001,3768,4.598,3769,4.598,3770,2.972,3771,8.946,3772,9.002,3773,2.972,3774,2.972,3775,2.972,3776,2.972,3777,4.598,3778,4.088,3779,2.972,3780,2.972,3781,2.972,3782,2.972,3783,2.972,3784,6.328,3785,6.843,3786,2.972,3787,4.598,3788,6.328,3789,4.598,3790,2.972,3791,6.843,3792,4.598,3793,2.972,3794,2.972,3795,2.972,3796,2.972,3797,2.972,3798,2.972,3799,2.972,3800,2.972,3801,2.972,3802,5.623,3803,2.972,3804,2.972,3805,2.972,3806,8.173,3807,2.972,3808,2.972,3809,4.598,3810,6.931,3811,5.623,3812,4.598,3813,4.598,3814,4.598,3815,4.598,3816,5.623,3817,4.598,3818,5.623,3819,4.598,3820,4.598,3821,4.598,3822,4.598,3823,2.972,3824,4.598,3825,2.972,3826,2.972,3827,6.843,3828,7.545,3829,4.598,3830,4.598,3831,4.598,3832,2.972,3833,5.623,3834,4.598,3835,2.972,3836,2.972,3837,2.972,3838,5.623,3839,2.972,3840,2.972,3841,2.972,3842,4.598,3843,2.972,3844,2.972,3845,2.972,3846,2.972,3847,2.972,3848,2.972,3849,2.972,3850,4.598,3851,2.972,3852,2.972,3853,2.972,3854,2.972,3855,2.972,3856,2.972,3857,5.623,3858,2.972,3859,2.972,3860,2.972,3861,2.972,3862,7.795,3863,2.972,3864,2.972,3865,2.972,3866,6.328,3867,4.598,3868,6.328,3869,2.972,3870,2.972,3871,2.972,3872,2.972,3873,2.972,3874,4.598,3875,4.598,3876,2.972,3877,2.972,3878,2.972,3879,4.598,3880,4.598,3881,2.972,3882,2.972,3883,2.972,3884,2.972,3885,2.972,3886,2.972,3887,2.972,3888,5.623,3889,2.972,3890,2.972,3891,2.972,3892,2.972,3893,2.972,3894,2.972,3895,2.972,3896,2.972,3897,2.972,3898,4.598,3899,2.972,3900,2.972,3901,2.972,3902,2.972,3903,2.972,3904,2.972,3905,2.972,3906,2.972,3907,2.972,3908,6.328,3909,4.598,3910,2.972,3911,2.972,3912,2.972,3913,2.972,3914,2.972,3915,2.972,3916,4.598,3917,2.972,3918,2.972,3919,2.972,3920,6.843,3921,2.972,3922,2.972,3923,2.972,3924,2.972,3925,2.972,3926,2.972,3927,2.972,3928,2.972,3929,6.843,3930,2.972,3931,2.972,3932,2.972,3933,2.972,3934,2.972,3935,2.972,3936,2.972,3937,2.972,3938,2.972,3939,2.972,3940,2.972,3941,2.972,3942,2.972,3943,2.972,3944,2.972,3945,2.972,3946,2.972,3947,5.623,3948,2.972,3949,2.972,3950,2.972,3951,2.972,3952,4.598,3953,2.972,3954,2.972,3955,2.972,3956,2.972,3957,2.972,3958,2.972,3959,2.972,3960,2.972,3961,2.972,3962,2.972,3963,2.972,3964,2.972,3965,2.972,3966,2.972,3967,2.972,3968,4.598,3969,4.598,3970,2.972,3971,2.972,3972,2.972,3973,2.972,3974,2.972,3975,2.972,3976,2.972,3977,2.972,3978,2.972,3979,2.972]],["title/modules.html",[668,2.714]],["body/modules.html",[44,0.006,115,0.006,116,0.006,610,3.558,667,5.546,668,2.872,718,3.928,720,3.175,722,3.794,880,4.424,934,5.546,1023,5.176,1096,4.881,1598,6.561,1677,5.176,2442,5.176,2639,3.262,2783,4.881,2886,5.176,3065,5.176,3070,4.881,3511,4.881,3641,7.801,3980,9.619,3981,9.86,3982,9.557,3983,8.498]],["title/overview.html",[3984,5.71]],["body/overview.html",[2,4.871,19,4.387,44,0.007,115,0.005,116,0.005,118,1.703,142,6.004,329,1.873,577,3.607,613,1.671,654,2.716,666,1.367,668,2.522,718,5.393,720,4.31,741,2.716,745,2.716,873,3.224,874,3.579,875,3.579,876,3.579,877,5.306,878,5.306,879,5.306,880,5.794,881,3.579,882,3.332,1023,7.026,1024,5.306,1026,5.306,1027,5.306,1028,7.026,1096,6.761,1097,5.306,1099,5.306,1100,5.306,1101,6.625,2442,6.779,2443,5.306,2444,5.306,2445,5.306,2446,7.026,2783,6.392,2784,5.306,2886,6.577,2887,5.306,3065,7.334,3066,5.306,3067,5.306,3068,5.306,3069,5.306,3070,6.392,3071,6.266,3568,5.306,3984,5.306,3985,5.967,3986,5.967,3987,5.967,3988,5.967,3989,5.967]],["title/properties.html",[16,0.683,3554,3.484]],["body/properties.html",[8,0.071,16,0.902,44,0.007,115,0.006,116,0.006,441,2.132,681,2.488,682,2.488,685,2.488,686,2.439,687,2.439,3592,6.643,3593,6.643,3594,6.643,3595,6.643,3596,6.643,3990,7.47,3991,7.47]],["title/miscellaneous/typealiases.html",[3579,2.672,3992,5.653]],["body/miscellaneous/typealiases.html",[5,0.026,12,2.938,15,0.334,43,1.306,44,0.006,46,0.216,51,1.877,52,1.045,58,1.204,63,0.305,86,0.159,115,0.005,116,0.005,121,2.375,174,1.897,183,1.347,240,1.229,264,1.167,314,0.824,330,3.171,347,1.186,369,2.44,489,2.938,520,3.049,608,2.03,609,2.583,610,2.661,611,4.062,644,1.596,666,1.745,675,4.865,722,2.838,845,2.746,937,3.659,938,5.16,943,6.592,951,4.149,967,3.467,968,3.782,969,4.865,1394,4.062,1454,4.149,1472,3.049,1486,4.01,1489,2.938,1490,2.746,1491,4.062,1492,3.049,1522,2.746,1526,3.049,1527,4.062,1528,2.661,1533,3.049,1534,4.062,1535,3.915,1549,3.049,1559,4.389,1573,3.872,2613,2.746,2639,2.44,2640,3.546,2744,3.651,2745,3.651,2746,6.023,2754,5.529,2762,5.529,2763,3.467,2981,5.16,3020,3.467,3295,3.309,3302,4.226,3390,4.52,3391,4.52,3406,3.309,3407,3.309,3409,5.699,3412,5.16,3414,5.16,3415,5.16,3416,5.16,3417,5.16,3418,5.16,3497,8.273,3498,6.561,3505,6.023,3508,6.023,3509,6.023,3511,3.651,3512,5.529,3517,4.52,3579,3.467,3993,5.083,3994,5.083,3995,6.773,3996,8.123,3997,5.083,3998,8.205,3999,5.083,4000,4.52,4001,5.083,4002,6.773,4003,4.52,4004,5.083,4005,4.52,4006,5.083]],["title/miscellaneous/variables.html",[1138,4.614,3579,2.672]],["body/miscellaneous/variables.html",[4,0.051,5,0.037,8,0.039,15,0.166,16,0.918,21,2.335,24,0.914,29,3.084,34,2.526,35,2.512,36,3.6,38,1.044,41,3.192,42,5.068,44,0.007,45,0.468,46,0.206,48,1.817,51,2.137,58,1.201,63,0.556,69,1.324,71,1.621,77,3.305,78,3.305,79,3.305,84,3.084,89,2.343,93,2.232,98,0.877,103,1.953,115,0.003,116,0.003,121,1.015,125,1.462,149,2.12,174,1.58,181,2.305,182,2.85,183,2.551,212,1.517,218,1.095,219,1.578,220,1.817,264,0.776,287,2.064,291,2.779,292,1.671,312,2.636,314,0.41,332,0.779,347,1.655,352,0.475,356,2.497,365,1.843,366,1.044,367,1.069,369,4.099,392,1.095,441,0.722,476,2.057,569,2.431,613,1.621,644,0.794,657,2.064,666,0.579,677,0.569,699,0.826,726,1.725,746,2.249,761,2.14,762,3.637,767,1.817,772,4.838,775,3.084,776,3.084,777,3.305,778,2.249,779,3.6,780,2.249,781,3.6,782,2.908,783,2.249,784,3.6,785,3.772,786,2.762,787,4.799,788,4.157,789,2.249,790,3.6,791,2.249,792,3.857,793,3.296,794,1.927,795,3.6,796,2.249,797,3.611,798,3.243,799,1.725,800,3.6,801,2.249,802,3.6,803,2.249,804,3.305,805,3.305,807,3.6,808,2.249,809,1.817,810,1.817,811,3.6,812,2.249,817,1.462,821,1.412,859,3.6,864,3.982,882,1.412,886,1.517,896,1.725,897,2.762,908,3.084,926,2.908,937,2.187,968,2.261,971,2.497,977,1.927,1000,2.526,1001,0.877,1002,2.762,1043,3.217,1066,3.453,1076,3.6,1090,3.037,1095,3.305,1096,1.817,1101,1.817,1105,1.927,1107,2.549,1131,1.647,1138,3.305,1151,3.084,1154,2.249,1159,1.817,1160,2.064,1166,2.857,1167,2.249,1172,1.578,1183,2.249,1189,3.6,1190,3.6,1191,3.6,1192,3.6,1193,3.6,1194,3.6,1195,3.6,1203,3.084,1355,1.999,1373,2.249,1378,1.123,1386,2.064,1387,3.305,1388,2.249,1389,3.6,1390,2.249,1391,2.249,1394,1.517,1421,2.762,1425,2.249,1452,2.249,1464,3.305,1473,1.366,1479,3.535,1481,2.779,1495,2.827,1497,2.651,1503,1.462,1504,1.462,1528,1.324,1540,1.285,1566,1.462,1568,2.857,1685,2.064,2160,2.636,2342,3.6,2368,3.305,2448,1.817,2536,1.927,2594,2.064,2620,1.324,2622,1.248,2669,3.6,2744,1.817,2745,1.817,2748,2.249,2763,2.762,2766,1.927,2767,1.647,2787,3.084,2790,1.817,2817,2.908,2859,3.084,2891,3.6,2892,3.6,2927,2.064,3020,3.453,3079,2.249,3205,2.249,3208,1.462,3213,4.725,3216,3.084,3224,3.6,3296,1.578,3392,1.817,3406,2.636,3407,2.636,3408,4.725,3409,3.159,3421,3.857,3427,3.305,3430,2.064,3431,2.064,3432,2.064,3433,3.305,3439,3.084,3498,2.908,3579,1.725,3581,2.249,3583,2.249,3633,2.249,3646,2.249,3686,3.6,3692,2.249,3700,1.927,3712,2.249,3778,5.147,3810,2.249,3983,5.147,3998,5.147,4000,3.6,4003,5.631,4005,2.249,4007,7.965,4008,2.529,4009,4.049,4010,4.049,4011,5.063,4012,4.049,4013,4.049,4014,2.529,4015,2.529,4016,7.094,4017,2.529,4018,4.049,4019,4.049,4020,7.094,4021,4.049,4022,4.049,4023,2.529,4024,5.063,4025,4.049,4026,2.529,4027,4.049,4028,2.529,4029,4.049,4030,4.049,4031,2.529,4032,4.049,4033,5.063,4034,4.049,4035,2.529,4036,4.049,4037,2.529,4038,4.049,4039,4.049,4040,4.049,4041,4.049,4042,4.049,4043,5.063,4044,2.529,4045,2.529,4046,2.529,4047,4.049,4048,4.049,4049,2.529,4050,5.063,4051,4.049,4052,2.529,4053,2.529,4054,2.529,4055,2.529,4056,2.529,4057,2.529,4058,2.529,4059,2.529,4060,2.529,4061,2.529,4062,2.529,4063,2.529,4064,6.332,4065,6.332,4066,6.332,4067,6.332,4068,6.332,4069,6.332,4070,6.755,4071,2.529,4072,2.529,4073,2.064,4074,2.529,4075,2.529,4076,2.529,4077,2.529,4078,1.927,4079,4.049,4080,2.529,4081,2.529,4082,2.529,4083,2.529,4084,2.529,4085,2.529,4086,2.529,4087,2.529,4088,2.529,4089,2.529,4090,2.529,4091,6.755,4092,2.529,4093,4.049,4094,5.063,4095,5.063,4096,2.529,4097,2.529,4098,4.049,4099,4.049,4100,4.049,4101,4.049,4102,4.049,4103,4.049,4104,4.049,4105,4.049,4106,4.049,4107,4.049,4108,4.049,4109,4.049,4110,4.049,4111,5.063,4112,5.063,4113,5.063,4114,5.063,4115,2.529,4116,2.529,4117,2.529,4118,2.529,4119,2.529,4120,2.529,4121,2.529,4122,2.529,4123,2.529,4124,2.529,4125,2.529,4126,2.529,4127,2.529,4128,2.529,4129,2.529,4130,2.529,4131,2.529,4132,2.529,4133,6.755,4134,2.529,4135,2.529,4136,2.529,4137,2.529,4138,2.529,4139,2.529,4140,2.529,4141,4.049,4142,2.529,4143,2.529,4144,2.529,4145,2.529,4146,2.529,4147,2.529,4148,2.529,4149,2.529,4150,2.529,4151,2.529,4152,2.529,4153,2.529,4154,2.529,4155,2.529,4156,2.529,4157,2.529,4158,2.529,4159,2.529]],["title/additional-documentation/properties.html",[16,0.473,185,2.187,1145,2.187]],["body/additional-documentation/properties.html",[5,0.048,8,0.08,16,1.017,44,0.006,46,0.184,63,0.505,69,3.769,115,0.006,116,0.006,347,1.679,353,3.738,672,4.279,799,4.91,971,3.629,1107,3.178,1159,5.171,1203,5.484,1584,4.409,3241,5.876,3258,5.484,3602,5.876,3655,5.876,3700,5.484,3739,5.876,4073,5.876,4078,5.484,4160,6.401,4161,6.401,4162,6.401]],["title/additional-documentation/properties/kp.properties.html",[185,2.187,1145,2.187,4078,2.984]],["body/additional-documentation/properties/kp.properties.html",[5,0.048,8,0.08,16,1.017,44,0.006,46,0.184,63,0.505,69,3.769,115,0.006,116,0.006,347,1.679,353,3.738,672,4.279,799,4.91,971,3.629,1107,3.178,1159,5.171,1203,5.484,1584,4.409,3241,5.876,3258,5.484,3602,5.876,3655,5.876,3700,5.484,3739,5.876,4073,5.876,4078,5.484,4160,6.401,4161,6.401,4162,6.401]],["title/additional-documentation/properties/auth.properties.html",[185,2.187,1145,2.187,4163,3.484]],["body/additional-documentation/properties/auth.properties.html",[5,0.035,8,0.084,12,4.028,41,3.578,42,5.463,44,0.006,46,0.193,63,0.418,73,5.379,115,0.006,116,0.006,247,4.028,277,4.18,288,3.891,314,1.339,326,4.753,361,3.44,369,3.345,735,5.688,747,6.744,763,5.005,786,5.635,798,3.345,971,3.258,1000,4.348,1041,4.537,1584,4.611,3160,6.294,3705,6.197,3717,5.935,4163,6.197,4164,6.969,4165,6.969,4166,6.969,4167,6.969,4168,8.262,4169,8.807,4170,5.688,4171,6.969,4172,6.969,4173,6.969,4174,6.969,4175,6.969]],["title/additional-documentation/properties/bruteforce.properties.html",[185,2.187,1145,2.187,4176,3.484]],["body/additional-documentation/properties/bruteforce.properties.html",[5,0.036,8,0.084,44,0.006,46,0.193,52,1.442,68,4.566,71,2.655,87,1.791,115,0.006,116,0.006,291,3.367,314,1.479,339,4.054,361,3.462,432,4.054,538,3.591,792,6.727,793,5.749,794,6.318,805,6.77,971,3.271,1041,4.566,1584,4.624,2601,5.343,3160,5.343,3560,5.725,3647,6.237,3717,5.038,4170,5.725,4176,6.237,4177,7.013,4178,7.013,4179,7.013,4180,7.013,4181,7.013,4182,7.013,4183,7.013,4184,8.294,4185,7.013,4186,7.375]],["title/additional-documentation/properties/captcha.properties.html",[185,2.187,1145,2.187,4187,3.484]],["body/additional-documentation/properties/captcha.properties.html",[5,0.041,8,0.09,44,0.006,46,0.208,52,1.653,53,3.287,63,0.551,73,4.336,87,1.701,115,0.006,116,0.006,182,1.974,314,1.08,353,2.956,354,3.287,361,3.287,369,4.147,419,3.718,735,5.436,798,3.86,932,4.336,937,5.145,964,4.784,970,4.336,971,3.171,1041,4.336,1426,5.436,1584,4.943,2278,6.564,2279,6.564,2281,5.073,2309,6.564,2324,7.151,2325,5.922,3160,5.073,3560,5.436,3717,4.784,4170,5.436,4186,7.151,4187,5.922,4188,6.66,4189,6.66,4190,6.66,4191,6.66,4192,6.66,4193,6.66,4194,6.66,4195,6.66,4196,6.66,4197,8.041,4198,6.66]],["title/additional-documentation/properties/file.properties.html",[185,2.187,1145,2.187,4199,3.484]],["body/additional-documentation/properties/file.properties.html",[5,0.037,8,0.081,25,2.306,44,0.006,46,0.187,63,0.441,69,3.845,115,0.006,116,0.006,314,1.191,353,3.782,354,3.625,361,3.625,971,3.36,1041,4.781,1107,3.495,1584,4.461,2160,5.547,4199,6.531,4200,7.344,4201,7.344,4202,7.344,4203,7.344]],["title/additional-documentation/properties/media.properties.html",[185,2.187,1145,2.187,4204,3.484]],["body/additional-documentation/properties/media.properties.html",[5,0.036,8,0.079,25,2.778,44,0.006,46,0.182,63,0.499,115,0.006,116,0.006,124,3.807,347,2.205,354,4.368,361,3.479,365,3.787,971,3.28,1041,4.588,1107,3.339,1131,5.951,1374,5.753,1584,4.355,2160,5.761,3315,5.974,3717,5.974,3733,6.267,4204,6.267,4205,7.048,4206,7.048,4207,8.318,4208,8.318,4209,7.048,4210,7.048,4211,7.048]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["0",{"_index":1006,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/NotEmptyPipe.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["0.0.1",{"_index":3990,"title":{},"body":{"properties.html":{}}}],["0.14",{"_index":3562,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":3574,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":3577,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":3576,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":3578,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":247,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10",{"_index":326,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"dependencies.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10000",{"_index":3396,"title":{},"body":{"modules/WarlockModule.html":{}}}],["15",{"_index":630,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["16",{"_index":3564,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3985,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3565,"title":{},"body":{"dependencies.html":{}}}],["192.168.0.1",{"_index":1587,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["2",{"_index":3568,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["2).join",{"_index":2603,"title":{},"body":{"classes/LogService.html":{}}}],["2.0",{"_index":687,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["2.11",{"_index":3561,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2933,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["2004",{"_index":3721,"title":{},"body":{"license.html":{}}}],["2023",{"_index":680,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["22",{"_index":3987,"title":{},"body":{"overview.html":{}}}],["256",{"_index":1406,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["27",{"_index":3986,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2601,"title":{},"body":{"classes/LogService.html":{},"injectables/ProcessManagerService.html":{},"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["300",{"_index":4186,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["30px",{"_index":2381,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["34",{"_index":3989,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":4172,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["4",{"_index":2597,"title":{},"body":{"classes/LogService.html":{},"dependencies.html":{}}}],["43",{"_index":3988,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3560,"title":{},"body":{"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["50",{"_index":2367,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["502",{"_index":1360,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["6",{"_index":4175,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["600",{"_index":4169,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["7",{"_index":2354,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["78",{"_index":4086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":4075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":3571,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["9]*$/.test(variablename",{"_index":1290,"title":{},"body":{"injectables/ConfigService.html":{}}}],["9_",{"_index":304,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["_a",{"_index":1288,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.localecompare(b",{"_index":1232,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a[sort",{"_index":1226,"title":{},"body":{"injectables/ConfigService.html":{}}}],["abc123456",{"_index":4197,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["abortable",{"_index":1384,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["above",{"_index":3891,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["abstractauthguard",{"_index":1,"title":{"guards/AbstractAuthGuard.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["abstractprocess",{"_index":117,"title":{"classes/AbstractProcess.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:140",{"_index":3261,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:148",{"_index":3262,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:157",{"_index":3260,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:165",{"_index":3259,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:173",{"_index":3263,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:31",{"_index":3244,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:32",{"_index":3246,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:33",{"_index":3245,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:42",{"_index":3247,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:44",{"_index":3264,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:80",{"_index":3265,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:94",{"_index":3266,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractusersubscriber",{"_index":261,"title":{"classes/AbstractUserSubscriber.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["acceptance",{"_index":3950,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":3947,"title":{},"body":{"license.html":{}}}],["access",{"_index":41,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["access_token",{"_index":789,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token_error_msg",{"_index":77,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accessible",{"_index":4207,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["accesstoken",{"_index":772,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["act",{"_index":3955,"title":{},"body":{"license.html":{}}}],["acting",{"_index":3737,"title":{},"body":{"license.html":{}}}],["action",{"_index":1522,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["action.entity",{"_index":1740,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["action.entity.ts",{"_index":1597,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:36",{"_index":1604,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:40",{"_index":1606,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:44",{"_index":1605,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:53",{"_index":1611,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:60",{"_index":1607,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:63",{"_index":1608,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action?.$?.content",{"_index":3446,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.read",{"_index":3445,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.target",{"_index":3444,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action[\"#name",{"_index":3443,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["actions",{"_index":1497,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["actions.description",{"_index":4113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.description.lang",{"_index":4114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name",{"_index":4111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name.lang",{"_index":4112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":863,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["acts",{"_index":3927,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3658,"title":{},"body":{"index.html":{}}}],["add",{"_index":3880,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":3882,"title":{},"body":{"license.html":{}}}],["additional",{"_index":185,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"license.html":{}}}],["additions",{"_index":3786,"title":{},"body":{"license.html":{}}}],["address",{"_index":809,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":783,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["adm",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1585,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"index.html":{}}}],["administrative",{"_index":3209,"title":{},"body":{"classes/Roles.html":{}}}],["advanced",{"_index":3626,"title":{},"body":{"index.html":{}}}],["advised",{"_index":3945,"title":{},"body":{"license.html":{}}}],["afterremove",{"_index":2489,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["afterremove(event",{"_index":2494,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["again",{"_index":3290,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["against",{"_index":68,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["agree",{"_index":3958,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":698,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["agreement",{"_index":3896,"title":{},"body":{"license.html":{}}}],["album",{"_index":333,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alexander",{"_index":681,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["alias",{"_index":1715,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["aliases",{"_index":3993,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":3847,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3656,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":36,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["allowedformetadatakey",{"_index":3224,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["allowfor",{"_index":1044,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["allowing",{"_index":437,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["allows",{"_index":3649,"title":{},"body":{"index.html":{}}}],["alone",{"_index":3839,"title":{},"body":{"license.html":{}}}],["along",{"_index":1590,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["alongside",{"_index":3881,"title":{},"body":{"license.html":{}}}],["already",{"_index":3128,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["altitude",{"_index":602,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["analysis",{"_index":1544,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzedatabase",{"_index":1545,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzes",{"_index":1539,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["analyzing",{"_index":1680,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["and/or",{"_index":3953,"title":{},"body":{"license.html":{}}}],["angular",{"_index":3660,"title":{},"body":{"index.html":{}}}],["annotate",{"_index":4054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["annotations",{"_index":3775,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":2606,"title":{},"body":{"classes/LogService.html":{}}}],["apache",{"_index":685,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["aperture",{"_index":518,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["app",{"_index":3700,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["app.close",{"_index":4126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":4121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(configmodule).get(configservice",{"_index":4123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(logmodule).get(logger",{"_index":4122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appear",{"_index":3877,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":3769,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":696,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["application",{"_index":1105,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/xml",{"_index":3534,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["applications",{"_index":3596,"title":{},"body":{"index.html":{},"properties.html":{}}}],["applied",{"_index":579,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["applies",{"_index":3832,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2936,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["applying",{"_index":593,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["appropriate",{"_index":3335,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"license.html":{}}}],["appropriateness",{"_index":3915,"title":{},"body":{"license.html":{}}}],["archives",{"_index":3979,"title":{},"body":{"license.html":{}}}],["arg",{"_index":3201,"title":{},"body":{"modules/RedisModule.html":{}}}],["args",{"_index":949,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["args.find((arg",{"_index":3200,"title":{},"body":{"modules/RedisModule.html":{}}}],["argumentshost",{"_index":1364,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["arising",{"_index":3934,"title":{},"body":{"license.html":{}}}],["array",{"_index":1568,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(obj",{"_index":1870,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["array.isarray(value",{"_index":2505,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["array.reverse().foreach((obj",{"_index":3468,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["arrays",{"_index":1376,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["artist",{"_index":334,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asc",{"_index":1229,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["asserted",{"_index":3963,"title":{},"body":{"license.html":{}}}],["associated",{"_index":377,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["assume",{"_index":3917,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":4079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":24,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["asynchronously",{"_index":4128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atexp",{"_index":1593,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["attach",{"_index":3965,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1557,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["attacks",{"_index":3647,"title":{},"body":{"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attempts",{"_index":805,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attribution",{"_index":3866,"title":{},"body":{"license.html":{}}}],["attrs",{"_index":3448,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["audio",{"_index":331,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["audiofilemetadata",{"_index":328,"title":{"interfaces/AudioFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadataentity",{"_index":612,"title":{"entities/AudioFileMetadataEntity.html":{}},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["audiomd",{"_index":1879,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.bit_rate",{"_index":1892,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.channels",{"_index":1890,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_long_name",{"_index":1886,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_name?.touppercase",{"_index":1884,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["auth",{"_index":671,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.access.token.expiration",{"_index":4167,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.constants",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["auth.guard",{"_index":662,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts",{"_index":7,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":2441,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:49",{"_index":31,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:74",{"_index":64,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:85",{"_index":55,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.jwt.secret",{"_index":4164,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.properties",{"_index":4163,"title":{"additional-documentation/properties/auth.properties.html":{}},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.refresh.token.expiration",{"_index":4171,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.types",{"_index":717,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["auth_access_token_prefix",{"_index":78,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix",{"_index":79,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${accesstoken",{"_index":801,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${token",{"_index":105,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth_jwt_cache_prefix}:${auth_refresh_token_prefix}:${accesstoken}:${refreshtoken",{"_index":803,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_refresh_token_prefix",{"_index":790,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":725,"title":{},"body":{"modules/AuthModule.html":{}}}],["authconfig.access_token_expiration",{"_index":740,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":751,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticate(data",{"_index":754,"title":{},"body":{"classes/AuthService.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authenticity",{"_index":459,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["authguard",{"_index":653,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":667,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authmoduleoptions",{"_index":675,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":3991,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":747,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authorization.service",{"_index":716,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorizationheader",{"_index":109,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationheader.match(/bearer\\s+(\\s+)\\s",{"_index":112,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationservice",{"_index":678,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorized",{"_index":3733,"title":{},"body":{"license.html":{},"additional-documentation/properties/media.properties.html":{}}}],["authorship",{"_index":3765,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":728,"title":{"classes/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["automates",{"_index":3606,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":3618,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":4146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1598,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{},"modules.html":{}}}],["avalue",{"_index":1225,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avalue.localecompare(bvalue",{"_index":1230,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avatar",{"_index":3296,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["avatar.files",{"_index":4152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.files.format",{"_index":4153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name",{"_index":4150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name.lang",{"_index":4151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type",{"_index":4154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type.ext",{"_index":4155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":93,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1224,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["b[sort",{"_index":1228,"title":{},"body":{"injectables/ConfigService.html":{}}}],["background",{"_index":3616,"title":{},"body":{"index.html":{}}}],["bad",{"_index":818,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{}}}],["badrequestexception",{"_index":293,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileService.html":{},"injectables/NotEmptyPipe.html":{}}}],["badrequestexception(`${this.fieldname",{"_index":2918,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["badrequestmsexception",{"_index":813,"title":{"classes/BadRequestMsException.html":{}},"body":{"classes/BadRequestMsException.html":{}}}],["balance",{"_index":574,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["base",{"_index":2901,"title":{},"body":{"classes/MsException.html":{}}}],["base64",{"_index":2332,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["based",{"_index":38,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basename(filepath",{"_index":1329,"title":{},"body":{"injectables/ConfigService.html":{}}}],["basic",{"_index":1685,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/FileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["basic.service",{"_index":3346,"title":{},"body":{"modules/UserModule.html":{}}}],["basic.service.ts",{"_index":829,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basic.service.ts:29",{"_index":838,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basicexplorerservice",{"_index":1682,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["basicuserservice",{"_index":827,"title":{"injectables/BasicUserService.html":{}},"body":{"injectables/BasicUserService.html":{},"modules/UserModule.html":{}}}],["basis",{"_index":701,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["bcrypt",{"_index":278,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":322,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["bcrypt.hash(password",{"_index":325,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["before",{"_index":432,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["beforeinsert",{"_index":3365,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":3369,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":3366,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":3371,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beginning",{"_index":505,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["behalf",{"_index":3791,"title":{},"body":{"license.html":{}}}],["being",{"_index":1536,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["below",{"_index":3770,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":3753,"title":{},"body":{"license.html":{}}}],["between",{"_index":472,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["bind",{"_index":3783,"title":{},"body":{"license.html":{}}}],["bit",{"_index":423,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitdepth",{"_index":425,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitrate",{"_index":335,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["bits",{"_index":407,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["block",{"_index":507,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["blocked",{"_index":4184,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["blocking",{"_index":4182,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["body",{"_index":3439,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["body.schema",{"_index":3441,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["body_token",{"_index":4012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":3966,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["bootstrap",{"_index":876,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["both",{"_index":1094,"title":{},"body":{"interfaces/ConfigItem.html":{},"entities/ExplorerActionEntity.html":{}}}],["bps",{"_index":411,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["brackets",{"_index":3969,"title":{},"body":{"license.html":{}}}],["break",{"_index":232,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["bridge",{"_index":3498,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants",{"_index":3504,"title":{},"body":{"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.constants.ts",{"_index":3408,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants.ts:33",{"_index":3495,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:35",{"_index":3493,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:41",{"_index":3413,"title":{},"body":{"classes/XdbExportService.html":{}}}],["bridge.middleware.ts",{"_index":3519,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:26",{"_index":3531,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:34",{"_index":3527,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:47",{"_index":3524,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.module.ts",{"_index":3541,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:36",{"_index":3542,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.types",{"_index":3419,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.types.ts",{"_index":3497,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["bridge/xml",{"_index":3407,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightness",{"_index":535,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["broker",{"_index":2982,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants",{"_index":2788,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants.ts",{"_index":4032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker.module",{"_index":3085,"title":{},"body":{"modules/ProcessModule.html":{}}}],["broker.module.ts",{"_index":2786,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["broker.service",{"_index":2791,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.service.ts",{"_index":2792,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:27",{"_index":2813,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:28",{"_index":2814,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:29",{"_index":2797,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:47",{"_index":2799,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:56",{"_index":2811,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:65",{"_index":2812,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:75",{"_index":2807,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:88",{"_index":2801,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.subscribe(command.register",{"_index":3113,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.start",{"_index":3117,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.stop",{"_index":3119,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.unregister",{"_index":3115,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.types",{"_index":2816,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["broker.types.ts",{"_index":2768,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:26",{"_index":2773,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:33",{"_index":2778,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:39",{"_index":2781,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker/messages",{"_index":2767,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["brokering",{"_index":2769,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{}}}],["browse",{"_index":3981,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3982,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":792,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce",{"_index":796,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce.block.duration",{"_index":4183,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.enabled",{"_index":4178,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.max.attempts",{"_index":4181,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.properties",{"_index":4176,"title":{"additional-documentation/properties/bruteforce.properties.html":{}},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce_jwt_cache_prefix",{"_index":795,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:ip:${ipaddress",{"_index":812,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:login:${login",{"_index":808,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceipkey",{"_index":811,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceloginkey",{"_index":807,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["buf",{"_index":1797,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["buffer",{"_index":1407,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["build",{"_index":3702,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2141,"title":{},"body":{"injectables/FileService.html":{}}}],["built",{"_index":2540,"title":{},"body":{"classes/LogService.html":{},"index.html":{}}}],["bus",{"_index":2748,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/variables.html":{}}}],["bvalue",{"_index":1227,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bvalue.localecompare(avalue",{"_index":1231,"title":{},"body":{"injectables/ConfigService.html":{}}}],["c",{"_index":1721,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["c.process",{"_index":3145,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["c.target",{"_index":1722,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["cache",{"_index":787,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cache.constants",{"_index":3172,"title":{},"body":{"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{}}}],["cache.service",{"_index":894,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.service.ts",{"_index":3155,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:102",{"_index":3158,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:121",{"_index":3168,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:139",{"_index":3159,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:157",{"_index":3164,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:27",{"_index":3157,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:39",{"_index":3162,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:54",{"_index":3163,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:65",{"_index":3166,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:78",{"_index":3171,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.types",{"_index":892,"title":{},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["cache/cache.constants",{"_index":2818,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{}}}],["cache/redis.module",{"_index":2789,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["cached",{"_index":2335,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["cachemodule",{"_index":718,"title":{"modules/CacheModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":19,"title":{"classes/CacheService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["caching",{"_index":884,"title":{},"body":{"modules/CacheModule.html":{}}}],["call",{"_index":3529,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["callback",{"_index":151,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["called",{"_index":153,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["caller",{"_index":3401,"title":{},"body":{"modules/WarlockModule.html":{}}}],["callhandler",{"_index":1461,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["calling",{"_index":2556,"title":{},"body":{"classes/LogService.html":{}}}],["camera",{"_index":401,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["can't",{"_index":207,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessRegisterService.html":{}}}],["canactivate",{"_index":14,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":28,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canread",{"_index":1503,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canread.name",{"_index":4115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canread.name.lang",{"_index":4116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":2341,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["canvas.getcontext(\"2d",{"_index":2369,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.height",{"_index":2379,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.width",{"_index":2378,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canwrite",{"_index":1504,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canwrite.name",{"_index":4117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canwrite.name.lang",{"_index":4118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":3631,"title":{},"body":{"index.html":{}}}],["capex",{"_index":2356,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontfamily",{"_index":2370,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontpath",{"_index":2372,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha",{"_index":937,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.constants",{"_index":2343,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.enabled",{"_index":4188,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.expiration",{"_index":4189,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.family",{"_index":4193,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.path",{"_index":4191,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.public.key",{"_index":4196,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.secret.key",{"_index":4198,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.properties",{"_index":4187,"title":{"additional-documentation/properties/captcha.properties.html":{}},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.service",{"_index":946,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.service.ts",{"_index":2276,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:129",{"_index":2319,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:137",{"_index":2322,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:145",{"_index":2323,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:153",{"_index":2326,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:33",{"_index":2284,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captcha.service.ts:39",{"_index":2316,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:96",{"_index":2329,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.type",{"_index":4195,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.types",{"_index":948,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha_cache_prefix",{"_index":2342,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["captcha_cache_prefix}:${request.id",{"_index":2361,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchabody",{"_index":960,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["captchaconfig",{"_index":2292,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.enabled",{"_index":2296,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.google_secret_key",{"_index":2299,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaenabled",{"_index":2294,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaid",{"_index":1588,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captchamodule",{"_index":934,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules.html":{}}}],["captchamoduleoptions",{"_index":938,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchapayload",{"_index":1589,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captcharequest",{"_index":950,"title":{"classes/CaptchaRequest.html":{}},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcharesponse",{"_index":969,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchas",{"_index":2310,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice",{"_index":947,"title":{"classes/CaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaservice:46",{"_index":2285,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:55",{"_index":2317,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice:62",{"_index":2287,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:76",{"_index":2334,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capture",{"_index":521,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["captured",{"_index":565,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["capturing",{"_index":516,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["carry",{"_index":3860,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":996,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["cascade'})@joincolumn",{"_index":1751,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["case",{"_index":230,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["cat",{"_index":1071,"title":{},"body":{"injectables/CategoryService.html":{}}}],["catch",{"_index":219,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":2185,"title":{},"body":{"injectables/FileService.html":{}}}],["catch(exception",{"_index":1362,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1368,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catcherror",{"_index":2854,"title":{},"body":{"classes/MsClient.html":{}}}],["catcherror((error",{"_index":2874,"title":{},"body":{"classes/MsClient.html":{}}}],["catches",{"_index":1359,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["categories",{"_index":1033,"title":{},"body":{"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":977,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["category.constants",{"_index":1077,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":1052,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["category.service",{"_index":1034,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category_relations",{"_index":1076,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["categoryentity",{"_index":975,"title":{"entities/CategoryEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":1023,"title":{"modules/CategoryModule.html":{}},"body":{"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrestrictionentity",{"_index":1038,"title":{"entities/CategoryRestrictionEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["categoryservice",{"_index":1028,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["catrep",{"_index":1062,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cause",{"_index":3745,"title":{},"body":{"license.html":{}}}],["caused",{"_index":158,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["cb",{"_index":500,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["certain",{"_index":3613,"title":{},"body":{"index.html":{}}}],["chanel",{"_index":2776,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["change",{"_index":3653,"title":{},"body":{"index.html":{}}}],["changed",{"_index":285,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["changes",{"_index":1570,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["changetarget",{"_index":1691,"title":{},"body":{"classes/ExplorerService.html":{}}}],["changetarget(target",{"_index":1571,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["channel",{"_index":2775,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["character",{"_index":3933,"title":{},"body":{"license.html":{}}}],["characteristics",{"_index":390,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["charat(0",{"_index":1333,"title":{},"body":{"injectables/ConfigService.html":{}}}],["charge",{"_index":3818,"title":{},"body":{"license.html":{}}}],["check",{"_index":1550,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["checking",{"_index":67,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["checks",{"_index":3473,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["checkuseraccess",{"_index":1532,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["child",{"_index":257,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["children",{"_index":979,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["choose",{"_index":3948,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":3188,"title":{},"body":{"injectables/RedisCacheService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["claim",{"_index":3844,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3834,"title":{},"body":{"license.html":{}}}],["class",{"_index":10,"title":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{}}}],["class\"]?.description",{"_index":1992,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["class\"]?.value",{"_index":1994,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"overview.html":{}}}],["clean",{"_index":3249,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaned",{"_index":3281,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts",{"_index":3239,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:30",{"_index":3243,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:63",{"_index":3251,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaning",{"_index":3240,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["client",{"_index":968,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["client.constants",{"_index":2893,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.constants.ts",{"_index":4033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.module.ts",{"_index":2889,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.ts",{"_index":2837,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:30",{"_index":2842,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:43",{"_index":2843,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:64",{"_index":2851,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:80",{"_index":2846,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:97",{"_index":2849,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types",{"_index":2858,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types.ts",{"_index":2746,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/typealiases.html":{}}}],["client.types.ts:30",{"_index":2755,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:36",{"_index":2761,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:42",{"_index":2758,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client/ms",{"_index":2745,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":2841,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["clientsmodule",{"_index":2890,"title":{},"body":{"modules/MsClientModule.html":{}}}],["clientsmodule.registerasync",{"_index":2894,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_cachemodule",{"_index":877,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":878,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_imports",{"_index":879,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":1024,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_exports",{"_index":1026,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":1025,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":1027,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":1097,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":1099,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_imports",{"_index":1098,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cluster_configmodule_providers",{"_index":1100,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_localemodule",{"_index":2443,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_exports",{"_index":2445,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_providers",{"_index":2444,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule",{"_index":2784,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule_imports",{"_index":2785,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["cluster_msclientmodule",{"_index":2887,"title":{},"body":{"modules/MsClientModule.html":{},"overview.html":{}}}],["cluster_msclientmodule_imports",{"_index":2888,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_processmodule",{"_index":3066,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_exports",{"_index":3069,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_imports",{"_index":3067,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_providers",{"_index":3068,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_warlockmodule",{"_index":3387,"title":{},"body":{"modules/WarlockModule.html":{}}}],["cluster_warlockmodule_imports",{"_index":3388,"title":{},"body":{"modules/WarlockModule.html":{}}}],["code",{"_index":352,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/MsException.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["codebase",{"_index":3669,"title":{},"body":{"index.html":{}}}],["codec",{"_index":336,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["codec_profile",{"_index":625,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["codecprofile",{"_index":337,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["code}_${language.id",{"_index":2473,"title":{},"body":{"injectables/LocaleService.html":{}}}],["color",{"_index":374,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["color_components",{"_index":2412,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["color_range",{"_index":3379,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["color_space",{"_index":3380,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["colorcomponents",{"_index":416,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorrange",{"_index":605,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colors",{"_index":471,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorspace",{"_index":555,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colortype",{"_index":427,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["column",{"_index":644,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["column(\"boolean",{"_index":1668,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["column(\"date",{"_index":2410,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["column(\"decimal",{"_index":651,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"int",{"_index":650,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/FileEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"simple",{"_index":1022,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column(\"smallint",{"_index":2695,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column(\"text",{"_index":1667,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column(\"varchar",{"_index":649,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column('boolean",{"_index":1756,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('int",{"_index":1758,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('simple",{"_index":999,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column('smallint",{"_index":2686,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column('text",{"_index":1659,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column('varchar",{"_index":1009,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/UserEntity.html":{}}}],["column.entity",{"_index":1688,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["column.entity.ts",{"_index":1618,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:103",{"_index":1629,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:107",{"_index":1653,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:111",{"_index":1638,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:115",{"_index":1649,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:119",{"_index":1634,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:127",{"_index":1651,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:135",{"_index":1636,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:138",{"_index":1655,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:41",{"_index":1623,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:45",{"_index":1640,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:49",{"_index":1626,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:53",{"_index":1621,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:56",{"_index":1658,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:59",{"_index":1660,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:63",{"_index":1662,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:67",{"_index":1639,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:71",{"_index":1661,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:75",{"_index":1625,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:79",{"_index":1627,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:83",{"_index":1642,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:87",{"_index":1644,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:91",{"_index":1648,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:95",{"_index":1631,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:99",{"_index":1646,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["columndatatype",{"_index":1491,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":1495,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["columns.description",{"_index":4096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.description.lang",{"_index":4097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name",{"_index":4094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name.lang",{"_index":4095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer",{"_index":4098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description",{"_index":4101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description.lang",{"_index":4102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name",{"_index":4099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name.lang",{"_index":4100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer",{"_index":4103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description",{"_index":4106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description.lang",{"_index":4107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name",{"_index":4104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name.lang",{"_index":4105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab",{"_index":4108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name",{"_index":4109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name.lang",{"_index":4110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":3840,"title":{},"body":{"license.html":{}}}],["combining",{"_index":590,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["command",{"_index":3024,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["commands",{"_index":3585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comment",{"_index":3973,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":3942,"title":{},"body":{"license.html":{}}}],["common",{"_index":3739,"title":{},"body":{"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["common/auth/auth.constants",{"_index":80,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["common/media/entity/media.entity",{"_index":1019,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{}}}],["common/media/media.types",{"_index":2425,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["common/user/entity/user",{"_index":1053,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["common/user/user.types",{"_index":83,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["communication",{"_index":3629,"title":{},"body":{"index.html":{},"license.html":{}}}],["compatibility",{"_index":561,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compensation",{"_index":536,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compiled",{"_index":3764,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2497,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["compliance",{"_index":690,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["complies",{"_index":3886,"title":{},"body":{"license.html":{}}}],["components",{"_index":415,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["components\"]?.value",{"_index":1960,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["composite",{"_index":589,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compositeimage",{"_index":595,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["comprehensive",{"_index":3620,"title":{},"body":{"index.html":{}}}],["compressing",{"_index":433,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compression",{"_index":428,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["computer",{"_index":3939,"title":{},"body":{"license.html":{}}}],["concat(config_file_ext_pattern",{"_index":1330,"title":{},"body":{"injectables/ConfigService.html":{}}}],["conditions",{"_index":704,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["config",{"_index":897,"title":{},"body":{"modules/CacheModule.html":{},"injectables/ConfigService.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["config.constants",{"_index":1196,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service",{"_index":1103,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.ts",{"_index":4073,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["config.types",{"_index":1197,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix",{"_index":1189,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["config_cache_prefix}:${!filter",{"_index":1221,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${filenameprefix}.${keywithoutprefix",{"_index":1294,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${item.key",{"_index":1245,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${key",{"_index":1248,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_file_ext_pattern",{"_index":1190,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configfilename",{"_index":1328,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configfilepath",{"_index":1331,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configitem",{"_index":1088,"title":{"interfaces/ConfigItem.html":{}},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{}}}],["configmodule",{"_index":1096,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1101,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.initwithpropertiesfiles(gencnfdir",{"_index":4125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":971,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["configurations",{"_index":1031,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{}}}],["configuring",{"_index":609,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["confirm",{"_index":458,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["connection",{"_index":450,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["connection_space",{"_index":2388,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["connectionspace",{"_index":454,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["consequential",{"_index":3932,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3954,"title":{},"body":{"license.html":{}}}],["consists",{"_index":1093,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["consortium",{"_index":375,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["conspicuously",{"_index":3803,"title":{},"body":{"license.html":{}}}],["const",{"_index":89,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":777,"title":{},"body":{"classes/AuthService.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":85,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{}}}],["constitutes",{"_index":3848,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(@inject(redis_client",{"_index":2819,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(catrep",{"_index":1059,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(code",{"_index":2904,"title":{},"body":{"classes/MsException.html":{}}}],["constructor(fieldname",{"_index":2911,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["constructor(items",{"_index":2923,"title":{},"body":{"classes/PageableData.html":{}}}],["constructor(languagerep",{"_index":2458,"title":{},"body":{"injectables/LocaleService.html":{}}}],["constructor(lockexec",{"_index":2980,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["constructor(logger",{"_index":659,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["constructor(message",{"_index":822,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(private",{"_index":1468,"title":{},"body":{"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/NotEmptyPipe.html":{},"modules/ProcessModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(pubclient",{"_index":2796,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(reflector",{"_index":3217,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(serializer",{"_index":1456,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["constructor(userrep",{"_index":837,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["constructs",{"_index":2158,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["construed",{"_index":3883,"title":{},"body":{"license.html":{}}}],["contain",{"_index":306,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["contained",{"_index":3871,"title":{},"body":{"license.html":{}}}],["container",{"_index":338,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["containing",{"_index":761,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["contains",{"_index":361,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content",{"_index":365,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content.split(\"\\n",{"_index":1274,"title":{},"body":{"injectables/ConfigService.html":{}}}],["contents",{"_index":1423,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["context",{"_index":48,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"classes/LogService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["context.gethandler",{"_index":3231,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":90,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["continue",{"_index":1278,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["contract",{"_index":2747,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"license.html":{}}}],["contrast",{"_index":582,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["contribution",{"_index":3785,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":3838,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":3888,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3806,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":3849,"title":{},"body":{"license.html":{}}}],["control",{"_index":3216,"title":{},"body":{"guards/RolesGuard.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":3738,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":4056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conversions",{"_index":453,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["convert",{"_index":3567,"title":{},"body":{"dependencies.html":{}}}],["converting",{"_index":470,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["coordinated",{"_index":531,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["copies",{"_index":3635,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":692,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright",{"_index":481,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright\"]?.description",{"_index":2023,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["corresponding",{"_index":2164,"title":{},"body":{"injectables/FileService.html":{}}}],["counterclaim",{"_index":3845,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1567,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["cr",{"_index":501,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["crash",{"_index":159,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crashed",{"_index":223,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["crashes",{"_index":154,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["create",{"_index":443,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/BasicUserService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/UserService.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["create(user",{"_index":840,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createbasicfindqb",{"_index":2130,"title":{},"body":{"injectables/FileService.html":{}}}],["createcanvas",{"_index":2339,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["createcanvas(200",{"_index":2366,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["created",{"_index":382,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/BasicUserService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["createdatecolumn",{"_index":1764,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["createdirectoriesifnotexist",{"_index":2172,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(dir",{"_index":2265,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(directorypath",{"_index":1418,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["createfiledirectory",{"_index":2131,"title":{},"body":{"injectables/FileService.html":{}}}],["createfiledirectory(ispublic",{"_index":2142,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity",{"_index":2132,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity(ispublic",{"_index":2146,"title":{},"body":{"injectables/FileService.html":{}}}],["createfilemetadataentity",{"_index":1796,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createfilemetadataentity(buf",{"_index":1798,"title":{},"body":{"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createlocalizedstrings",{"_index":2457,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createlocalizedstrings(value",{"_index":2463,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createloginstance",{"_index":2968,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createloginstance(processcode",{"_index":2987,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createorupdatefile",{"_index":1772,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["createorupdatefile(file",{"_index":1778,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["createorupdatemedia",{"_index":2636,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createorupdatemedia(file",{"_index":2707,"title":{},"body":{"classes/MediaManager.html":{}}}],["createparamdecorator",{"_index":4047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(\"file",{"_index":2229,"title":{},"body":{"injectables/FileService.html":{}}}],["creates",{"_index":1415,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["creating",{"_index":11,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["creation",{"_index":1817,"title":{},"body":{"injectables/FileMetadataService.html":{},"index.html":{}}}],["creator",{"_index":477,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["creator\"]?.description",{"_index":2019,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["criteria",{"_index":2935,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["cron",{"_index":3042,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["cron/dist/job",{"_index":3110,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cron_tab",{"_index":3141,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["cronjob",{"_index":3109,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cronjob(processdata.crontab",{"_index":3130,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["crontab",{"_index":2951,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["cross",{"_index":3843,"title":{},"body":{"license.html":{}}}],["crud",{"_index":3600,"title":{},"body":{"index.html":{}}}],["crutch",{"_index":1399,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto",{"_index":1381,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto.createhash(\"sha256",{"_index":1412,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["cryptographic",{"_index":368,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["cs",{"_index":734,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.get(authconfig.jwt_secret",{"_index":736,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.getnumber",{"_index":739,"title":{},"body":{"modules/AuthModule.html":{}}}],["ctx",{"_index":2368,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["ctx.fillrect(0",{"_index":2377,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.fillstyle",{"_index":2375,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.font",{"_index":2380,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.methodname",{"_index":2576,"title":{},"body":{"classes/LogService.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.textbaseline",{"_index":2382,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx?.filepath}:${ctx?.linenumber",{"_index":2583,"title":{},"body":{"classes/LogService.html":{}}}],["ctx?.methodname",{"_index":2584,"title":{},"body":{"classes/LogService.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["currentpage",{"_index":2924,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["currentpath",{"_index":1431,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["currentuser",{"_index":1479,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["currentuser.roles.find((v",{"_index":3338,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["custom",{"_index":569,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/BadRequestMsException.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":3904,"title":{},"body":{"license.html":{}}}],["customrendered",{"_index":570,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["d",{"_index":3869,"title":{},"body":{"license.html":{}}}],["d\\s()]*$/.test(processedvalue",{"_index":1303,"title":{},"body":{"injectables/ConfigService.html":{}}}],["damages",{"_index":3929,"title":{},"body":{"license.html":{}}}],["data",{"_index":174,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.tostring",{"_index":2834,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["data:image/png;base64,${image",{"_index":2360,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["database",{"_index":1355,"title":{},"body":{"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":2490,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["datasource.manager.connection.subscribers.push(this",{"_index":2501,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["date",{"_index":240,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["date\"]?.value",{"_index":2000,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date(exifdata.icc[\"icc",{"_index":1999,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date.tolocalestring",{"_index":253,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["date_time",{"_index":2413,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["dates",{"_index":1591,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["datetime",{"_index":422,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["db",{"_index":902,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["db.properties",{"_index":3691,"title":{},"body":{"index.html":{}}}],["dbexceptionfilter",{"_index":1352,"title":{"classes/DbExceptionFilter.html":{}},"body":{"classes/DbExceptionFilter.html":{}}}],["dbms",{"_index":3677,"title":{},"body":{"index.html":{}}}],["debug",{"_index":2542,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":2548,"title":{},"body":{"classes/LogService.html":{}}}],["declarations",{"_index":875,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["decomposed",{"_index":3517,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["decorator",{"_index":4050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":617,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["decorators/for",{"_index":3225,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deepequal(obj1",{"_index":3481,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(obj1[key",{"_index":3489,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(uniqueobj",{"_index":3470,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deeply",{"_index":3475,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["default",{"_index":182,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["default.env",{"_index":3679,"title":{},"body":{"index.html":{}}}],["default_action_create",{"_index":1724,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_delete",{"_index":1726,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_duplicate",{"_index":1728,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_save",{"_index":1730,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_media_quality",{"_index":4019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_media_type",{"_index":4021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultactioncreate",{"_index":1499,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactiondelete",{"_index":1501,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionduplicate",{"_index":1502,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionsave",{"_index":1500,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaults",{"_index":1561,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["defend",{"_index":3960,"title":{},"body":{"license.html":{}}}],["defined",{"_index":30,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["defines",{"_index":748,"title":{},"body":{"classes/AuthService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["defining",{"_index":908,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":2762,"title":{},"body":{"interfaces/MessageBus.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":3726,"title":{},"body":{"license.html":{}}}],["del",{"_index":910,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["del(...keys",{"_index":916,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["delete",{"_index":317,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["deleted",{"_index":3254,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["deleteexistingconfigtsfiles",{"_index":1114,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleteexistingconfigtsfiles(directory",{"_index":1126,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletes",{"_index":1128,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{}}}],["deleting",{"_index":3180,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["deliberate",{"_index":3924,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":873,"title":{"dependencies.html":{}},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":394,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["depth\"]?.value",{"_index":1967,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["derivative",{"_index":3771,"title":{},"body":{"license.html":{}}}],["derived",{"_index":750,"title":{},"body":{"classes/AuthService.html":{},"license.html":{}}}],["desc",{"_index":2938,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["descendants",{"_index":1065,"title":{},"body":{"injectables/CategoryService.html":{}}}],["describing",{"_index":448,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["description\"]?.description",{"_index":2021,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["description.lang",{"_index":4093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserialize",{"_index":2804,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserialized",{"_index":2805,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserializes",{"_index":2803,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["designated",{"_index":3805,"title":{},"body":{"license.html":{}}}],["desired",{"_index":3714,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1600,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"index.html":{}}}],["details",{"_index":3662,"title":{},"body":{"index.html":{}}}],["detect",{"_index":3431,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":32,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["determining",{"_index":3914,"title":{},"body":{"license.html":{}}}],["development",{"_index":3594,"title":{},"body":{"index.html":{},"properties.html":{}}}],["device",{"_index":402,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["device_manufacturer",{"_index":2389,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["device_model_number",{"_index":2391,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["devicemanufacturer",{"_index":467,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["devicemodelnumber",{"_index":468,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["different",{"_index":3206,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"license.html":{}}}],["digital",{"_index":566,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["digitalzoomratio",{"_index":580,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dir",{"_index":1313,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["direct",{"_index":3743,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3746,"title":{},"body":{"license.html":{}}}],["directories",{"_index":1374,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directory",{"_index":1131,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directorypath",{"_index":1417,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["directorystructure",{"_index":1372,"title":{"interfaces/DirectoryStructure.html":{}},"body":{"interfaces/DirectoryStructure.html":{}}}],["dirpath",{"_index":1324,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["dirs",{"_index":1206,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dirstruct",{"_index":3255,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["dirstruct[key].length",{"_index":3282,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["disables",{"_index":4180,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["disclaimer",{"_index":3907,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":3800,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":2749,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatch(pattern",{"_index":2752,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatched",{"_index":2845,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatches",{"_index":2844,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatching",{"_index":2838,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["display",{"_index":439,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["display_aspect_ratio",{"_index":3381,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["displayaspectratio",{"_index":604,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["displaying",{"_index":3601,"title":{},"body":{"index.html":{}}}],["distance",{"_index":540,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["distribute",{"_index":3827,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":700,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["distribution",{"_index":3725,"title":{},"body":{"license.html":{}}}],["document",{"_index":3730,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3664,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentations",{"_index":3667,"title":{},"body":{"index.html":{}}}],["don't",{"_index":3972,"title":{},"body":{"license.html":{}}}],["done",{"_index":3695,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":3563,"title":{},"body":{"dependencies.html":{}}}],["drawn",{"_index":2331,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["dto",{"_index":1454,"title":{},"body":{"injectables/DtoInterceptor.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["dtointerceptor",{"_index":1448,"title":{"injectables/DtoInterceptor.html":{}},"body":{"injectables/DtoInterceptor.html":{}}}],["duplicate",{"_index":3464,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duplicates",{"_index":3465,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duration",{"_index":339,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["during",{"_index":548,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dynamic",{"_index":3619,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":1387,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dynamicmodule",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["e",{"_index":220,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"entities/MediaTypeEntity.html":{},"miscellaneous/variables.html":{}}}],["e.code",{"_index":2734,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["each",{"_index":1092,"title":{},"body":{"interfaces/ConfigItem.html":{},"license.html":{}}}],["easier",{"_index":3978,"title":{},"body":{"license.html":{}}}],["easy",{"_index":3640,"title":{},"body":{"index.html":{}}}],["edit",{"_index":496,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["editing",{"_index":1601,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["editorial",{"_index":3773,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3650,"title":{},"body":{"index.html":{}}}],["effects",{"_index":594,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["efficient",{"_index":3622,"title":{},"body":{"index.html":{}}}],["elaborations",{"_index":3776,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3792,"title":{},"body":{"license.html":{}}}],["elevation",{"_index":386,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["email",{"_index":3297,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["embedded",{"_index":1489,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["emit",{"_index":2750,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emit(chanel",{"_index":2772,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["emit(pattern",{"_index":2757,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["emits",{"_index":2774,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emitted",{"_index":2847,"title":{},"body":{"classes/MsClient.html":{}}}],["empty",{"_index":1834,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts",{"_index":2908,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:23",{"_index":2912,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:26",{"_index":2915,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["enabled",{"_index":970,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["enables",{"_index":4179,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["enabling",{"_index":3621,"title":{},"body":{"index.html":{}}}],["enclosed",{"_index":3968,"title":{},"body":{"license.html":{}}}],["encoded",{"_index":2333,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["encoding",{"_index":1425,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["encrypting",{"_index":3644,"title":{},"body":{"index.html":{}}}],["end",{"_index":1235,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["ensure",{"_index":2910,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["ensuring",{"_index":597,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["entire",{"_index":4080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":613,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity(\"categories",{"_index":1020,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity(\"category_restriction",{"_index":1055,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["entity(\"explorer_actions",{"_index":1615,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["entity(\"explorer_column_renderers",{"_index":1676,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["entity(\"explorer_columns",{"_index":1666,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["entity(\"explorer_tabs",{"_index":1712,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["entity(\"explorer_targets",{"_index":1741,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["entity(\"file_metadata",{"_index":1813,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["entity(\"file_metadata_audio",{"_index":647,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["entity(\"file_metadata_gps",{"_index":2307,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["entity(\"file_metadata_icc",{"_index":2409,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["entity(\"file_metadata_image",{"_index":2414,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["entity(\"file_metadata_video",{"_index":3386,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["entity(\"files",{"_index":1769,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity(\"languages",{"_index":2437,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["entity(\"localized_medias",{"_index":2526,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["entity(\"localized_strings",{"_index":2534,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["entity(\"medias",{"_index":2665,"title":{},"body":{"entities/MediaEntity.html":{}}}],["entity(\"medias_ext",{"_index":2672,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["entity(\"medias_files",{"_index":2694,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["entity(\"medias_format",{"_index":2705,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["entity(\"medias_types",{"_index":2742,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["entity(\"process_logs",{"_index":2964,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["entity(\"process_units",{"_index":3150,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["entity(\"users",{"_index":3329,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity(\"users_roles",{"_index":3356,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["entity.code",{"_index":2196,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.constructor.name",{"_index":2510,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entity.id",{"_index":2203,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.id.tostring",{"_index":2182,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.metadata",{"_index":2198,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.name",{"_index":2195,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.path",{"_index":2194,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.public",{"_index":2179,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.size",{"_index":2192,"title":{},"body":{"injectables/FileService.html":{}}}],["entity/audio",{"_index":1844,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/category.entity",{"_index":1036,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["entity/exif",{"_index":1848,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/explorer",{"_index":1687,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["entity/file",{"_index":1795,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["entity/file.entity",{"_index":1794,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["entity/gps",{"_index":1847,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/icc",{"_index":1849,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/image",{"_index":1846,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/language.entity",{"_index":2450,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/localized",{"_index":2451,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/media",{"_index":2722,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/media.entity",{"_index":2618,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entity/process.log.entity",{"_index":189,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/process.unit.entity",{"_index":3019,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/user.entity",{"_index":298,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["entity/video",{"_index":1845,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity_save_handler",{"_index":4022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityid",{"_index":2143,"title":{},"body":{"injectables/FileService.html":{}}}],["entityidforpatch",{"_index":2626,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitymanager.remove(myentity",{"_index":2487,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entityname",{"_index":2627,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitysavehandler",{"_index":1471,"title":{"interfaces/EntitySaveHandler.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entitysubscriber",{"_index":2482,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entitysubscriberinterface",{"_index":2498,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["entries",{"_index":4190,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["entry",{"_index":179,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["enum",{"_index":1610,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessUnitEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":2937,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["enumerations",{"_index":3580,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":4130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments",{"_index":3659,"title":{},"body":{"index.html":{}}}],["envloader",{"_index":890,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["envloader.loadenvironment(logger",{"_index":896,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":3476,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["err",{"_index":2187,"title":{},"body":{"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["err.code",{"_index":2880,"title":{},"body":{"classes/MsClient.html":{}}}],["err.message",{"_index":2877,"title":{},"body":{"classes/MsClient.html":{}}}],["err.stack",{"_index":2878,"title":{},"body":{"classes/MsClient.html":{}}}],["err_token_a",{"_index":778,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["err_token_r",{"_index":780,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":149,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error().stack",{"_index":2592,"title":{},"body":{"classes/LogService.html":{}}}],["error(`invalid",{"_index":1292,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(message",{"_index":2551,"title":{},"body":{"classes/LogService.html":{}}}],["error.name",{"_index":2881,"title":{},"body":{"classes/MsClient.html":{}}}],["error?.type",{"_index":2875,"title":{},"body":{"classes/MsClient.html":{}}}],["errors",{"_index":776,"title":{},"body":{"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"classes/MsClient.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1397,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["etc",{"_index":3602,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["eval('import(\"file",{"_index":1401,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["eval(processedvalue",{"_index":1304,"title":{},"body":{"injectables/ConfigService.html":{}}}],["even",{"_index":3944,"title":{},"body":{"license.html":{}}}],["event",{"_index":286,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{},"license.html":{}}}],["event.entity",{"_index":2502,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.entity.login",{"_index":3377,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entityid",{"_index":2511,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.manager.remove(relatedentity",{"_index":2515,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["events",{"_index":268,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["eventsubscriber",{"_index":2499,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["ex",{"_index":3178,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["example",{"_index":1584,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"index.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["examples/web",{"_index":3689,"title":{},"body":{"index.html":{}}}],["exceeding",{"_index":4185,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["except",{"_index":689,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["exception",{"_index":817,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1371,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["exceptions",{"_index":2902,"title":{},"body":{"classes/MsException.html":{}}}],["exceptions/ms.exception",{"_index":2860,"title":{},"body":{"classes/MsClient.html":{}}}],["exchange",{"_index":766,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangeable",{"_index":397,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exchanged",{"_index":1574,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangetoken",{"_index":752,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetoken(refreshtoken",{"_index":764,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetokenpayload",{"_index":1572,"title":{"classes/ExchangeTokenPayload.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exclude",{"_index":2616,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["excludeproperties",{"_index":3516,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["excluding",{"_index":3802,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3817,"title":{},"body":{"license.html":{}}}],["execute",{"_index":128,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["executed",{"_index":206,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"license.html":{}}}],["executes",{"_index":3248,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["execution",{"_index":49,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["executioncontext",{"_index":29,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3919,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3755,"title":{},"body":{"license.html":{}}}],["exif",{"_index":396,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["exifdata",{"_index":1944,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif",{"_index":2024,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.aperturevalue?.description",{"_index":2062,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.brightnessvalue?.description",{"_index":2064,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.colorspace?.description",{"_index":2080,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.contrast?.description",{"_index":2102,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.customrendered?.description",{"_index":2092,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.digitalzoomratio?.description",{"_index":2098,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exifversion?.description",{"_index":2056,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposurebiasvalue?.description",{"_index":2066,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuremode?.description",{"_index":2094,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposureprogram?.description",{"_index":2052,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuretime?.description",{"_index":2048,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flash?.description",{"_index":2074,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flashpixversion?.description",{"_index":2078,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.fnumber?.description",{"_index":2050,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.focallength?.description",{"_index":2076,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.interoperabilityindex?.description",{"_index":2116,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.isospeedratings?.description",{"_index":2054,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmake?.description",{"_index":2110,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmodel?.description",{"_index":2112,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.make?.description",{"_index":2027,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.maxaperturevalue?.description",{"_index":2068,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.meteringmode?.description",{"_index":2072,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.model?.description",{"_index":2029,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.offsettime?.description",{"_index":2058,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.orientation?.description",{"_index":2031,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelxdimension?.description",{"_index":2082,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelydimension?.description",{"_index":2084,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.resolutionunit?.description",{"_index":2037,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.saturation?.description",{"_index":2104,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenecapturetype?.description",{"_index":2100,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenetype?.description",{"_index":2090,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sensingmethod?.description",{"_index":2088,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sharpness?.description",{"_index":2106,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.shutterspeedvalue?.description",{"_index":2060,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.software?.description",{"_index":2039,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistance?.description",{"_index":2070,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistancerange?.description",{"_index":2108,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.whitebalance?.description",{"_index":2096,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.xresolution?.description",{"_index":2033,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.ycbcrpositioning?.description",{"_index":2041,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.yresolution?.description",{"_index":2035,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"compositeimage\"]?.description",{"_index":2114,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"exif",{"_index":2043,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"gps",{"_index":2046,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperability",{"_index":2086,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperabilityversion\"]?.description",{"_index":2118,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"bits",{"_index":1950,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"color",{"_index":1959,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"image",{"_index":1954,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"subsampling\"]?.description",{"_index":1962,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps",{"_index":1977,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.altitude",{"_index":1980,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.latitude",{"_index":1984,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.longitude",{"_index":1982,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc",{"_index":1985,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"connection",{"_index":1996,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"device",{"_index":2009,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"icc",{"_index":2001,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"primary",{"_index":2006,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile",{"_index":1988,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile/device",{"_index":1991,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"rendering",{"_index":2014,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png",{"_index":1963,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"bit",{"_index":1966,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"color",{"_index":1969,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"compression\"]?.description",{"_index":1972,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"filter\"]?.description",{"_index":1974,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"image",{"_index":1964,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"interlace\"]?.description",{"_index":1976,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exiffilemetadata",{"_index":403,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exiffilemetadataentity",{"_index":1802,"title":{},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["exififdpointer",{"_index":510,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifreader",{"_index":1840,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["exifreader.load(buf",{"_index":1945,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifversion",{"_index":528,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exist",{"_index":1416,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["existed",{"_index":2474,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existed?.id",{"_index":2477,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existedentityid",{"_index":1780,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["existing",{"_index":1129,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exists",{"_index":2178,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["expanded",{"_index":1946,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["expiration",{"_index":932,"title":{},"body":{"classes/CacheService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["expire",{"_index":911,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expire(key",{"_index":918,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expiresin",{"_index":738,"title":{},"body":{"modules/AuthModule.html":{},"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["explaining",{"_index":479,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["explicitarray",{"_index":3436,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitchildren",{"_index":3438,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitly",{"_index":3889,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":1486,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["explorer.constants",{"_index":1487,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer.service",{"_index":1686,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.types",{"_index":1612,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["explorer.variation",{"_index":1521,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer/explorer.module",{"_index":3549,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exploreraction",{"_index":1498,"title":{"interfaces/ExplorerAction.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["exploreractionentity",{"_index":1595,"title":{"entities/ExplorerActionEntity.html":{}},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumn",{"_index":1496,"title":{"interfaces/ExplorerColumn.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnentity",{"_index":1617,"title":{"entities/ExplorerColumnEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumnrenderer",{"_index":1516,"title":{"interfaces/ExplorerColumnRenderer.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnrendererentity",{"_index":1632,"title":{"entities/ExplorerColumnRendererEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{}}}],["explorermodule",{"_index":1677,"title":{"modules/ExplorerModule.html":{}},"body":{"modules/ExplorerModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["explorermodule.forroot",{"_index":3545,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["explorermoduleoptions",{"_index":1535,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerselectparams",{"_index":1534,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerservice",{"_index":1538,"title":{"classes/ExplorerService.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertab",{"_index":1519,"title":{"interfaces/ExplorerTab.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertabentity",{"_index":1654,"title":{"entities/ExplorerTabEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["explorertarget",{"_index":1493,"title":{"interfaces/ExplorerTarget.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorertargetentity",{"_index":1656,"title":{"entities/ExplorerTargetEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorertargetparams",{"_index":1527,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["exploring",{"_index":1679,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["export",{"_index":86,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["export.service",{"_index":3548,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exporting",{"_index":3610,"title":{},"body":{"index.html":{}}}],["exports",{"_index":745,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["exportservice",{"_index":3514,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["exportxml",{"_index":3410,"title":{},"body":{"classes/XdbExportService.html":{}}}],["exportxml(params",{"_index":3411,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["expose",{"_index":1580,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["expose()@type(undefined",{"_index":2422,"title":{},"body":{"classes/JwtDto.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaTypeDto.html":{},"classes/UserDto.html":{}}}],["exposure",{"_index":513,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposurebias",{"_index":537,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuremode",{"_index":572,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposureprogram",{"_index":522,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuretime",{"_index":517,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["express",{"_index":81,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["expression",{"_index":1395,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ext",{"_index":367,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["ext.entity",{"_index":2741,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["ext.entity.ts",{"_index":2668,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:11",{"_index":2670,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:15",{"_index":2671,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["extend",{"_index":3639,"title":{},"body":{"index.html":{}}}],["extended",{"_index":3642,"title":{},"body":{"index.html":{}}}],["extending",{"_index":820,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["extends",{"_index":656,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserSubscriber.html":{}}}],["extensibility",{"_index":3604,"title":{},"body":{"index.html":{}}}],["extension",{"_index":366,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["extensions",{"_index":2669,"title":{},"body":{"entities/MediaExtEntity.html":{},"miscellaneous/variables.html":{}}}],["extracting",{"_index":4051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracts",{"_index":56,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["f",{"_index":2651,"title":{},"body":{"entities/MediaEntity.html":{}}}],["f.media",{"_index":2652,"title":{},"body":{"entities/MediaEntity.html":{}}}],["failed",{"_index":2186,"title":{},"body":{"injectables/FileService.html":{}}}],["failure",{"_index":3940,"title":{},"body":{"license.html":{}}}],["false",{"_index":1087,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["family",{"_index":2325,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["fast",{"_index":1109,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["features",{"_index":3617,"title":{},"body":{"index.html":{}}}],["fee",{"_index":3949,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1549,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["fetching",{"_index":658,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["fetchuser",{"_index":20,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["ffprobe",{"_index":1841,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["ffprobe(filepath",{"_index":1877,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd",{"_index":1876,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd.streams.find((v",{"_index":1880,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic",{"_index":1842,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic.path",{"_index":1878,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["field",{"_index":360,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["fieldname",{"_index":2913,"title":{},"body":{"injectables/NotEmptyPipe.html":{},"interfaces/XdbRequest.html":{}}}],["fields",{"_index":3967,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":3748,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["file's",{"_index":2150,"title":{},"body":{"injectables/FileService.html":{}}}],["file.constants",{"_index":351,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["file.entity",{"_index":2662,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["file.entity.ts",{"_index":2681,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:18",{"_index":2688,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:22",{"_index":2683,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:26",{"_index":2690,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:29",{"_index":2692,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:32",{"_index":2687,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:35",{"_index":2691,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:38",{"_index":2685,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:41",{"_index":2689,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.id.tostring",{"_index":2216,"title":{},"body":{"injectables/FileService.html":{}}}],["file.isdirectory",{"_index":1265,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.isfile",{"_index":1253,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.length",{"_index":2193,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata",{"_index":2217,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.audio",{"_index":2222,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.gps",{"_index":2220,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.image",{"_index":2218,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.video",{"_index":2224,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name",{"_index":1254,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.path",{"_index":2215,"title":{},"body":{"injectables/FileService.html":{}}}],["file.private.dir",{"_index":4202,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.properties",{"_index":4199,"title":{"additional-documentation/properties/file.properties.html":{}},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.public",{"_index":2213,"title":{},"body":{"injectables/FileService.html":{}}}],["file.public.dir",{"_index":4200,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.service",{"_index":2122,"title":{},"body":{"modules/FileModule.html":{}}}],["file.types",{"_index":646,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["file/entity/file",{"_index":2664,"title":{},"body":{"entities/MediaEntity.html":{}}}],["file/file.module",{"_index":2723,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["file/file.types",{"_index":2617,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["filebuffer",{"_index":1408,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fileconfig",{"_index":2166,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.private_dir",{"_index":2169,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.public_dir",{"_index":2171,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent",{"_index":1268,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filed",{"_index":3853,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3494,"title":{},"body":{"classes/XdbImportService.html":{}}}],["fileentity",{"_index":1742,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filemanager",{"_index":349,"title":{"classes/FileManager.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemanager:131",{"_index":2154,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:148",{"_index":2152,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:159",{"_index":2156,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:168",{"_index":2155,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:177",{"_index":2157,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:187",{"_index":2163,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:66",{"_index":2148,"title":{},"body":{"injectables/FileService.html":{}}}],["filemd",{"_index":350,"title":{"classes/FileMd.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemd:45",{"_index":1822,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filemetadata",{"_index":358,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemetadataentity",{"_index":1748,"title":{"entities/FileMetadataEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["filemetadataservice",{"_index":1814,"title":{"injectables/FileMetadataService.html":{}},"body":{"injectables/FileMetadataService.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":610,"title":{"modules/FileModule.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/MediaModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["filemodule.forroot",{"_index":2724,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["filemoduleoptions",{"_index":611,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":2191,"title":{},"body":{"injectables/FileService.html":{}}}],["filenameprefix",{"_index":1170,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filepath",{"_index":1173,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/LogService.html":{}}}],["filepromises",{"_index":1434,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filerep",{"_index":2135,"title":{},"body":{"injectables/FileService.html":{}}}],["filerow",{"_index":3509,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["files",{"_index":1107,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["files.format",{"_index":4089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files.map(async",{"_index":1435,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["files_encoding",{"_index":1191,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":3256,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fileservice",{"_index":2121,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filesutils",{"_index":1402,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["filesutils.createdirectoriesifnotexist",{"_index":2173,"title":{},"body":{"injectables/FileService.html":{}}}],["filesutils.filetype",{"_index":1852,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.gethashfrombuffer",{"_index":1851,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.readdirectoryrecursively",{"_index":3269,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["filetype",{"_index":1403,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{}}}],["filetype().filetypefrombuffer(buf",{"_index":1854,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata",{"_index":1853,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.ext",{"_index":1860,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.mime",{"_index":1858,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypemodule",{"_index":1389,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["filetypemodule.lib",{"_index":1404,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fill",{"_index":1542,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["filter",{"_index":434,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filter.ts",{"_index":1354,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filter.ts:27",{"_index":1365,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filtering",{"_index":431,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["find",{"_index":845,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["findbycode",{"_index":1773,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findbycode(code",{"_index":1782,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findbyid",{"_index":833,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbyid(id",{"_index":843,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findbylogin",{"_index":834,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbylogin(login",{"_index":846,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findfilebyid",{"_index":1774,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["findfilebyid(id",{"_index":1784,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["finding",{"_index":2129,"title":{},"body":{"injectables/FileService.html":{}}}],["findmediabyid",{"_index":2633,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findmediabyid(id",{"_index":2710,"title":{},"body":{"classes/MediaManager.html":{}}}],["findprivatebyid",{"_index":1775,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findprivatebyid(id",{"_index":1786,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findpublicbyid",{"_index":1776,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findpublicbyid(id",{"_index":1788,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["finds",{"_index":2153,"title":{},"body":{"injectables/FileService.html":{}}}],["finished",{"_index":217,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["finishes",{"_index":161,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["first",{"_index":3478,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["first_name",{"_index":3319,"title":{},"body":{"entities/UserEntity.html":{}}}],["firstname",{"_index":2486,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["fitness",{"_index":3911,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1426,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["flash",{"_index":547,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpix",{"_index":553,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpixversion",{"_index":554,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flexibility",{"_index":3603,"title":{},"body":{"index.html":{}}}],["flexibly",{"_index":3657,"title":{},"body":{"index.html":{}}}],["fn.ts",{"_index":4027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fnumber",{"_index":519,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focal",{"_index":549,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focallength",{"_index":552,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["folder",{"_index":3258,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["folders",{"_index":3253,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["folderscount",{"_index":3257,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["following",{"_index":3857,"title":{},"body":{"license.html":{}}}],["font",{"_index":2324,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["for_roles",{"_index":4053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":2272,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["forbiddenexception",{"_index":75,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenexception(access_token_error_msg",{"_index":99,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenmsexception",{"_index":2270,"title":{"classes/ForbiddenMsException.html":{}},"body":{"classes/ForbiddenMsException.html":{}}}],["force",{"_index":793,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["form",{"_index":1714,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["format",{"_index":292,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["format.entity",{"_index":2693,"title":{},"body":{"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["format.entity.ts",{"_index":2700,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:11",{"_index":2701,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:15",{"_index":2703,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:18",{"_index":2704,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:21",{"_index":2702,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["formats",{"_index":2622,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":2564,"title":{},"body":{"classes/LogService.html":{}}}],["forroles",{"_index":4024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroot",{"_index":673,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forroot(options",{"_index":674,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forrootasync",{"_index":941,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":942,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forwardreference",{"_index":3501,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["found",{"_index":59,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/NotFoundMsException.html":{}}}],["founduser",{"_index":318,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["founduser.password",{"_index":323,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["fourth",{"_index":2595,"title":{},"body":{"classes/LogService.html":{}}}],["frame_rate",{"_index":3383,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["framerate",{"_index":606,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["framework",{"_index":3592,"title":{},"body":{"index.html":{},"properties.html":{}}}],["free",{"_index":3820,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":4142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":1188,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["fs.existssync(localpropertiespath",{"_index":1260,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.existssync(tmpdir",{"_index":3272,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises",{"_index":2183,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.access(directorypath",{"_index":1419,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(directorypath",{"_index":1420,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(gensrcpath",{"_index":1338,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(currentpath",{"_index":1433,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.readdir(directory",{"_index":1250,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(fullpath",{"_index":1311,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile",{"_index":1262,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(fullpath",{"_index":1269,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(kppath",{"_index":1257,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(path",{"_index":1427,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.rm(tmpdir",{"_index":3279,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises.stat(filepath",{"_index":1438,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.unlink(path.join(fullpath",{"_index":1319,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.writefile(`${outputpath}/${filename",{"_index":2197,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.writefile(configfilepath",{"_index":1340,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ft",{"_index":1398,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ft.lib",{"_index":1400,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["full",{"_index":657,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"miscellaneous/variables.html":{}}}],["fullkey",{"_index":1244,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullpath",{"_index":1264,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullrelations",{"_index":1529,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["fun",{"_index":2824,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["fun(this.safedeserialize(data",{"_index":2826,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["function",{"_index":1394,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":885,"title":{},"body":{"modules/CacheModule.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["future",{"_index":3711,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":1361,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["gen",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["gen_src_dir",{"_index":1192,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["gencnfdir",{"_index":1154,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":3701,"title":{},"body":{"index.html":{}}}],["generatecaptcha",{"_index":963,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["generatecolor",{"_index":2311,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generateconfigtsfiles",{"_index":1115,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generated",{"_index":799,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["generatedcontent",{"_index":1305,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedfilecontent",{"_index":1336,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedtsoutput",{"_index":1111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables",{"_index":1116,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables(namespacename",{"_index":1134,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generaterandomint",{"_index":2350,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring",{"_index":2348,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring(5",{"_index":2353,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generates",{"_index":797,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":962,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{}}}],["generation",{"_index":2281,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["genre",{"_index":340,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gensrcfile",{"_index":1314,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.isfile",{"_index":1315,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name",{"_index":1318,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name.endswith(config_file_ext_pattern",{"_index":1316,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfiles",{"_index":1310,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcpath",{"_index":1326,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(key",{"_index":920,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getaccesstokenfromrequest",{"_index":26,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getaccesstokenfromrequest(req",{"_index":54,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getboolean",{"_index":912,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getboolean(key",{"_index":922,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getcallingcontext",{"_index":2543,"title":{},"body":{"classes/LogService.html":{}}}],["getcaptchaexp",{"_index":2312,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontfamily",{"_index":2313,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontpath",{"_index":2314,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getdeletestats",{"_index":3242,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdeletestats(dirstruct",{"_index":3250,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdescendantsbycodeofroot",{"_index":1057,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getdescendantsbycodeofroot(code",{"_index":1063,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getentitydata",{"_index":1563,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata(target",{"_index":1694,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getfilepath",{"_index":1777,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["getfilepath(file",{"_index":1790,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["getfrompattern",{"_index":913,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getfrompattern(pattern",{"_index":924,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gethashfrombuffer",{"_index":1850,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(buf",{"_index":1856,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(filebuffer",{"_index":1410,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["getlastlogsbyprocess",{"_index":2969,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlastlogsbyprocess(processcode",{"_index":2990,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getmediapath",{"_index":2637,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath(media",{"_index":2714,"title":{},"body":{"classes/MediaManager.html":{}}}],["getnumber",{"_index":914,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getnumber(key",{"_index":927,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getone",{"_index":2211,"title":{},"body":{"injectables/FileService.html":{}}}],["getpageableentitydata",{"_index":1551,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getpageableentitydata(target",{"_index":1696,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getprivatedir",{"_index":2133,"title":{},"body":{"injectables/FileService.html":{}}}],["getprocessdata",{"_index":2970,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessdata(code",{"_index":2993,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessinstance",{"_index":3111,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocessinstance(processdata.code",{"_index":3122,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocesslogbyid",{"_index":2971,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocesslogbyid(id",{"_index":2997,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus",{"_index":2972,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus(code",{"_index":2999,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getpropertiespage",{"_index":1117,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpropertiespage(params",{"_index":1141,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpublicdir",{"_index":2134,"title":{},"body":{"injectables/FileService.html":{}}}],["gets",{"_index":146,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/DirectoryStructure.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["getstatus",{"_index":129,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["gettargetdata",{"_index":1564,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettargetdata(target",{"_index":1698,"title":{},"body":{"classes/ExplorerService.html":{}}}],["gettargetlist",{"_index":1569,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getting",{"_index":2995,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["getxmlparser",{"_index":3434,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["getxmlparser().parsestring(xmldata",{"_index":3461,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["give",{"_index":3858,"title":{},"body":{"license.html":{}}}],["given",{"_index":66,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["global",{"_index":1182,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{}}}],["globalkpcontent",{"_index":1179,"title":{},"body":{"injectables/ConfigService.html":{}}}],["go",{"_index":3688,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":3937,"title":{},"body":{"license.html":{}}}],["google",{"_index":2278,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["google's",{"_index":2288,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["googlecaptchaservice",{"_index":2274,"title":{"classes/GoogleCaptchaService.html":{}},"body":{"classes/GoogleCaptchaService.html":{}}}],["governing",{"_index":709,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["gps",{"_index":380,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["gpsfilemetadata",{"_index":387,"title":{"interfaces/GpsFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadataentity",{"_index":1804,"title":{"entities/GpsFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["gpsinfoifdpointer",{"_index":512,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["grant",{"_index":3811,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3756,"title":{},"body":{"license.html":{}}}],["granting",{"_index":3734,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3813,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3980,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":945,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["graphical",{"_index":2309,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["graphiccaptcharesponse",{"_index":2318,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["graphiccaptchaservice",{"_index":940,"title":{"classes/GraphicCaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["grossly",{"_index":3925,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guides",{"_index":3666,"title":{},"body":{"index.html":{}}}],["handle",{"_index":266,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handle(target",{"_index":1478,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handled",{"_index":1537,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handler",{"_index":1473,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.ts",{"_index":3334,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler.ts:29",{"_index":3336,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handlerequest",{"_index":2839,"title":{},"body":{"classes/MsClient.html":{}}}],["handlerequest(source",{"_index":2848,"title":{},"body":{"classes/MsClient.html":{}}}],["handlers",{"_index":1475,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handles",{"_index":170,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/MsClient.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["handling",{"_index":2448,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["harmless",{"_index":3961,"title":{},"body":{"license.html":{}}}],["hash",{"_index":279,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["hashed",{"_index":280,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashes",{"_index":275,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["hashpassword",{"_index":269,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpassword(password",{"_index":273,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded",{"_index":270,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded(event",{"_index":281,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashsum",{"_index":1411,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.digest(\"hex",{"_index":1414,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.update(filebuffer",{"_index":1413,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hasn't",{"_index":3041,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["hasprocessinstance",{"_index":3026,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hasprocessinstance(code",{"_index":3050,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hassomerole",{"_index":3228,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hassomerole(userroles",{"_index":3234,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heic",{"_index":3566,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":414,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["height\"]?.value",{"_index":1955,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["helper",{"_index":2139,"title":{},"body":{"injectables/FileService.html":{}}}],["here",{"_index":3663,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":3812,"title":{},"body":{"license.html":{}}}],["herein",{"_index":3893,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1409,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["highest",{"_index":3212,"title":{},"body":{"classes/Roles.html":{}}}],["hold",{"_index":1386,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":3077,"title":{},"body":{"modules/ProcessModule.html":{}}}],["horizontal",{"_index":556,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["host",{"_index":898,"title":{},"body":{"modules/CacheModule.html":{},"classes/DbExceptionFilter.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1369,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["hour",{"_index":4174,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["http",{"_index":1357,"title":{},"body":{"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{}}}],["http://www.apache.org/licenses",{"_index":3722,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":693,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["httpexception",{"_index":2856,"title":{},"body":{"classes/MsClient.html":{}}}],["httpexception(err.message",{"_index":2879,"title":{},"body":{"classes/MsClient.html":{}}}],["https://www.google.com/recaptcha/api/siteverify?secret=${secretkey}&response=${request.data",{"_index":2301,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpservice",{"_index":2283,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpstatus",{"_index":824,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["httpstatus.request_timeout",{"_index":2884,"title":{},"body":{"classes/MsClient.html":{}}}],["httpstatus.too_many_requests",{"_index":3287,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["icc",{"_index":372,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["icc_copyright",{"_index":2393,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_description",{"_index":2394,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_profile_date",{"_index":2397,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_signature",{"_index":2398,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icccopyright",{"_index":485,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccdescription",{"_index":480,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadata",{"_index":379,"title":{"interfaces/IccFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadataentity",{"_index":1807,"title":{"entities/IccFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/IccFileMetadataEntity.html":{}}}],["iccprofiledate",{"_index":455,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccsignature",{"_index":460,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icon",{"_index":356,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["icon.files",{"_index":4066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.files.format",{"_index":4067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name",{"_index":4064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name.lang",{"_index":4065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type",{"_index":4068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type.ext",{"_index":4069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfiles",{"_index":2245,"title":{},"body":{"injectables/FileService.html":{}}}],["iconfilesformat",{"_index":2247,"title":{},"body":{"injectables/FileService.html":{}}}],["iconlang",{"_index":2243,"title":{},"body":{"injectables/FileService.html":{}}}],["iconname",{"_index":2241,"title":{},"body":{"injectables/FileService.html":{}}}],["icontype",{"_index":2249,"title":{},"body":{"injectables/FileService.html":{}}}],["icontypeext",{"_index":2251,"title":{},"body":{"injectables/FileService.html":{}}}],["id",{"_index":203,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{}}}],["identification",{"_index":362,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["identifier",{"_index":476,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/Roles.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["identifying",{"_index":3971,"title":{},"body":{"license.html":{}}}],["identity",{"_index":72,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["ifd",{"_index":506,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ii",{"_index":3747,"title":{},"body":{"license.html":{}}}],["iife",{"_index":1396,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["iii",{"_index":3752,"title":{},"body":{"license.html":{}}}],["image",{"_index":391,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadata",{"_index":395,"title":{"interfaces/ImageFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadataentity",{"_index":1809,"title":{"entities/ImageFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["imagemin",{"_index":3569,"title":{},"body":{"dependencies.html":{}}}],["images",{"_index":592,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["immediately",{"_index":1392,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["implement",{"_index":256,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["implementation",{"_index":3648,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":749,"title":{},"body":{"classes/AuthService.html":{}}}],["implementing",{"_index":3156,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["implied",{"_index":706,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["import(\"file",{"_index":1391,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["import.service",{"_index":3547,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["imported",{"_index":1388,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["importfromfile",{"_index":3491,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importfromfile(filedata",{"_index":3425,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["importing",{"_index":3609,"title":{},"body":{"index.html":{}}}],["imports",{"_index":730,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importservice",{"_index":3513,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importxml",{"_index":3492,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importxml(xml",{"_index":3424,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["improving",{"_index":3801,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3935,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3931,"title":{},"body":{"license.html":{}}}],["include",{"_index":1140,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["included",{"_index":3768,"title":{},"body":{"license.html":{}}}],["includes",{"_index":398,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["includeunknown",{"_index":1947,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["including",{"_index":383,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/AuthGuard.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["inclusion",{"_index":3789,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3809,"title":{},"body":{"license.html":{}}}],["incr",{"_index":915,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incr(key",{"_index":929,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["increment",{"_index":3170,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incrementing",{"_index":3183,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["increments",{"_index":3169,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incurred",{"_index":3962,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":3959,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":3951,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column('boolean",{"_index":1624,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["index()@column('date",{"_index":2396,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["index()@column('decimal",{"_index":628,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('int",{"_index":622,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('varchar",{"_index":618,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column({type",{"_index":1609,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["index()@createdatecolumn({name",{"_index":1760,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["index()@manytoone(undefined",{"_index":1633,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["index()@updatedatecolumn({name",{"_index":2958,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["index({unique",{"_index":986,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["indexable",{"_index":1379,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["indicated",{"_index":3766,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":435,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["indicating",{"_index":53,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["indirect",{"_index":3744,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3754,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1562,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["information",{"_index":388,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["informational",{"_index":3878,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3837,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3850,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":841,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["init",{"_index":2973,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["init:web",{"_index":3699,"title":{},"body":{"index.html":{}}}],["initconfig",{"_index":4025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial",{"_index":1307,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialize",{"_index":3079,"title":{},"body":{"modules/ProcessModule.html":{},"miscellaneous/variables.html":{}}}],["initializes",{"_index":1151,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/variables.html":{}}}],["initializing",{"_index":3073,"title":{},"body":{"modules/ProcessModule.html":{}}}],["initwithpropertiesfiles",{"_index":1118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles(gencnfdir",{"_index":1149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["inject",{"_index":661,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{}}}],["inject(logger",{"_index":664,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["inject(messages_broker",{"_index":3029,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["inject(redis_client",{"_index":3173,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["inject(warlock",{"_index":3028,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["injectable",{"_index":652,"title":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["injectables",{"_index":654,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"overview.html":{}}}],["injectdatasource",{"_index":2500,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["injecting",{"_index":4091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":857,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["injectrepository(categoryentity",{"_index":1079,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectrepository(fileentity",{"_index":2174,"title":{},"body":{"injectables/FileService.html":{}}}],["injectrepository(languageentity",{"_index":2465,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedmediaentity",{"_index":2467,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedstringentity",{"_index":2466,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(processlogentity",{"_index":3031,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(processunitentity",{"_index":3030,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(userentity",{"_index":861,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["insert",{"_index":287,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{},"miscellaneous/variables.html":{}}}],["insertevent",{"_index":282,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["insertupdate",{"_index":3510,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["inside",{"_index":508,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["inspect",{"_index":195,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["inspect(data",{"_index":248,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(message",{"_index":242,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(pattern",{"_index":2870,"title":{},"body":{"classes/MsClient.html":{}}}],["install",{"_index":3696,"title":{},"body":{"index.html":{}}}],["installation",{"_index":3706,"title":{},"body":{"index.html":{}}}],["installed",{"_index":3674,"title":{},"body":{"index.html":{}}}],["installing",{"_index":3671,"title":{},"body":{"index.html":{}}}],["instance",{"_index":125,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1872,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/LocaleSubscriber.html":{},"modules/RedisModule.html":{}}}],["instances",{"_index":1453,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/LocaleSubscriber.html":{},"injectables/ProcessManagerService.html":{}}}],["institute",{"_index":3841,"title":{},"body":{"license.html":{}}}],["integration",{"_index":3605,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":370,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["intent\"]?.description",{"_index":2015,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intent\"]?.value",{"_index":2017,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intentionally",{"_index":3787,"title":{},"body":{"license.html":{}}}],["inter",{"_index":3628,"title":{},"body":{"index.html":{}}}],["interact",{"_index":831,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["interaction",{"_index":3716,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1455,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["intercept(context",{"_index":1459,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interceptor",{"_index":1450,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interface",{"_index":327,"title":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["interfaces",{"_index":329,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"overview.html":{}}}],["interlace",{"_index":440,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interlacing",{"_index":436,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["intermediate",{"_index":452,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internalservererrorexception",{"_index":2165,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["internalservererrorexception(`process",{"_index":3051,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["international",{"_index":373,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internationalized",{"_index":2520,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["interoperability",{"_index":560,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityifdpointer",{"_index":562,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityindex",{"_index":598,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityversion",{"_index":599,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["invalid",{"_index":300,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileMetadataService.html":{},"classes/InvalidTokenMsException.html":{}}}],["invalidate",{"_index":771,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidated",{"_index":773,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken",{"_index":753,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken(accesstoken",{"_index":769,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidtokenmsexception",{"_index":2415,"title":{"classes/InvalidTokenMsException.html":{}},"body":{"classes/InvalidTokenMsException.html":{}}}],["invoked",{"_index":1393,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ioredis",{"_index":2815,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["ip",{"_index":782,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["ipaddress",{"_index":810,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":3821,"title":{},"body":{"license.html":{}}}],["isip",{"_index":1578,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isip()@isoptional",{"_index":2609,"title":{},"body":{"classes/LoginPayload.html":{}}}],["isnotempty",{"_index":953,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["iso",{"_index":523,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["isoptional",{"_index":1579,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isospeedratings",{"_index":527,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ispublic",{"_index":1779,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["isstring",{"_index":957,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isnotempty",{"_index":955,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isoptional",{"_index":1576,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/LoginPayload.html":{}}}],["issue",{"_index":3798,"title":{},"body":{"license.html":{}}}],["item",{"_index":1091,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$$.map((r",{"_index":3456,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$.key",{"_index":3454,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item._",{"_index":3453,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.value",{"_index":1247,"title":{},"body":{"injectables/ConfigService.html":{}}}],["item[\"#name",{"_index":3451,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["itemname",{"_index":3450,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["items",{"_index":2927,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2529,"title":{},"body":{"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["january",{"_index":3720,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1452,"title":{},"body":{"injectables/DtoInterceptor.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":3044,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["job.start",{"_index":3132,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["job.stop",{"_index":3135,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["jobs",{"_index":3092,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["join(\"_",{"_index":1287,"title":{},"body":{"injectables/ConfigService.html":{}}}],["joincolumn",{"_index":1765,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["jointable",{"_index":1011,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["json",{"_index":1000,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["json.parse(data",{"_index":2835,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.parse(processedvalue",{"_index":1302,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(value",{"_index":4143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":2833,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.transformer",{"_index":1018,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["json.transformer.ts",{"_index":4038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":786,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["jwt_secret_key",{"_index":4166,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["jwtaccesstokenkey",{"_index":800,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwtdto",{"_index":760,"title":{"classes/JwtDto.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["jwtmodule",{"_index":712,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":732,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtokenkey",{"_index":802,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":3276,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["key",{"_index":798,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["key.length",{"_index":3283,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key.replace(`${config_cache_prefix",{"_index":1242,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.slice(filenameprefix.length",{"_index":1282,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.startswith(filenameprefix",{"_index":1281,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keys",{"_index":788,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["keys.join",{"_index":3181,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys.push(...chunk",{"_index":3189,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys1",{"_index":3482,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys1.length",{"_index":3486,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2",{"_index":3484,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.includes(key",{"_index":3488,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.length",{"_index":3487,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keystoretrieve",{"_index":1236,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keystoretrieve.map(async",{"_index":1240,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywithoutprefix",{"_index":1280,"title":{},"body":{"injectables/ConfigService.html":{}}}],["kind",{"_index":705,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["kiriliuk",{"_index":682,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["kp",{"_index":1183,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kp.properties",{"_index":4078,"title":{"additional-documentation/properties/kp.properties.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.static.files",{"_index":4162,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.tmp.dir",{"_index":4160,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp_properties_file_name",{"_index":1193,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kpconfig",{"_index":3267,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["kppath",{"_index":1255,"title":{},"body":{"injectables/ConfigService.html":{}}}],["label",{"_index":341,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lang",{"_index":2427,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{}}}],["language",{"_index":708,"title":{"interfaces/Language.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["language.entity",{"_index":2525,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languageentity",{"_index":2429,"title":{"entities/LanguageEntity.html":{}},"body":{"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languagerep",{"_index":2462,"title":{},"body":{"injectables/LocaleService.html":{}}}],["languages",{"_index":2431,"title":{},"body":{"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{}}}],["last",{"_index":420,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["last_name",{"_index":3322,"title":{},"body":{"entities/UserEntity.html":{}}}],["lastname",{"_index":3298,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["lastvaluefrom",{"_index":2291,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lastvaluefrom(response",{"_index":2302,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["later",{"_index":3291,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["latin",{"_index":307,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["latitude",{"_index":384,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["law",{"_index":697,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["lawsuit",{"_index":3846,"title":{},"body":{"license.html":{}}}],["leftjoinandselect(\"file.icon",{"_index":2230,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.metadata",{"_index":2231,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.preview",{"_index":2252,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.files",{"_index":2244,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.name",{"_index":2240,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.type",{"_index":2248,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconfiles.format",{"_index":2246,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconname.lang",{"_index":2242,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icontype.ext",{"_index":2250,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.audio",{"_index":2236,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.gps",{"_index":2232,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.image",{"_index":2234,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.video",{"_index":2238,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.files",{"_index":2257,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.name",{"_index":2253,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.type",{"_index":2261,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewfiles.format",{"_index":2259,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewname.lang",{"_index":2255,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewtype.ext",{"_index":2263,"title":{},"body":{"injectables/FileService.html":{}}}],["legal",{"_index":3735,"title":{},"body":{"license.html":{}}}],["legend",{"_index":874,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["length",{"_index":550,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lens",{"_index":551,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmake",{"_index":587,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmodel",{"_index":588,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["let's",{"_index":3678,"title":{},"body":{"index.html":{}}}],["letters",{"_index":308,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["level",{"_index":175,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["levels",{"_index":3590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liability",{"_index":3920,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3928,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1390,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/.../access",{"_index":4008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.constants.ts",{"_index":4007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.types.ts",{"_index":3994,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../cache.constants.ts",{"_index":4035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.constants.ts",{"_index":4014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.types.ts",{"_index":3995,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../category.constants.ts",{"_index":4015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.constants.ts",{"_index":4016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.init",{"_index":4026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../constants.ts",{"_index":4034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../current",{"_index":4017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../explorer.constants.ts",{"_index":4003,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../explorer.types.ts",{"_index":3996,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../file.types.ts",{"_index":3997,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../files.utils.ts",{"_index":4023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../for",{"_index":4010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../log.constants.ts",{"_index":4028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.constants.ts",{"_index":4020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.types.ts",{"_index":3999,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../messages",{"_index":4031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../ms",{"_index":4000,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../pageable.types.ts",{"_index":3582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../process.constants.ts",{"_index":3581,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/.../simple",{"_index":4037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.constants.ts",{"_index":4044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.types.ts",{"_index":4001,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../warlock.constants.ts",{"_index":4045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../warlock.types.ts",{"_index":4004,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../xml",{"_index":3998,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts",{"_index":746,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts:109",{"_index":756,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:116",{"_index":770,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:123",{"_index":765,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.module.ts",{"_index":669,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.module.ts:34",{"_index":676,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.types.ts",{"_index":1573,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/auth/auth.types.ts:103",{"_index":2418,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:109",{"_index":2420,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:115",{"_index":2419,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:121",{"_index":2421,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:36",{"_index":2611,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:45",{"_index":2612,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:55",{"_index":2610,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:63",{"_index":2607,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:71",{"_index":2608,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:84",{"_index":1577,"title":{},"body":{"classes/ExchangeTokenPayload.html":{}}}],["lib/common/auth/auth.types.ts:97",{"_index":2423,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/captcha/captcha.constants.ts",{"_index":4062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/captcha/captcha.module.ts",{"_index":935,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:28",{"_index":939,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:44",{"_index":944,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.types.ts",{"_index":951,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/captcha/captcha.types.ts:29",{"_index":973,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:36",{"_index":974,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:49",{"_index":956,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:55",{"_index":954,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/google",{"_index":2275,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lib/common/captcha/graphic",{"_index":2308,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["lib/common/captcha/montserrat.ttf",{"_index":4192,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["lib/common/config/config.constants.ts",{"_index":4072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.init",{"_index":4119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.module.ts",{"_index":1102,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.service.ts",{"_index":1104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:113",{"_index":1185,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:123",{"_index":1175,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:133",{"_index":1180,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:211",{"_index":1171,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:251",{"_index":1164,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:273",{"_index":1136,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:290",{"_index":1127,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:322",{"_index":1133,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:357",{"_index":1157,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:44",{"_index":1186,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:46",{"_index":1187,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:47",{"_index":1125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:57",{"_index":1150,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:78",{"_index":1143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.types.ts",{"_index":1089,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["lib/common/explorer/entity/explorer",{"_index":1596,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["lib/common/explorer/explorer.constants.ts",{"_index":4005,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/explorer/explorer.module.ts",{"_index":1678,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:30",{"_index":1681,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:56",{"_index":1684,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.types.ts",{"_index":1472,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/explorer/explorer.types.ts:165",{"_index":1480,"title":{},"body":{"interfaces/EntitySaveHandler.html":{}}}],["lib/common/explorer/explorer.types.ts:176",{"_index":1692,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:185",{"_index":1697,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:198",{"_index":1704,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:211",{"_index":1702,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:225",{"_index":1695,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:238",{"_index":1699,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:247",{"_index":1700,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:254",{"_index":1693,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/handlers/user",{"_index":3331,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["lib/common/file/entity/audio",{"_index":614,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["lib/common/file/entity/file",{"_index":1800,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["lib/common/file/entity/file.entity.ts",{"_index":1743,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:25",{"_index":1747,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:29",{"_index":1745,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:32",{"_index":1753,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:35",{"_index":1754,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:38",{"_index":1757,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:41",{"_index":1759,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:44",{"_index":1746,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:47",{"_index":1755,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:54",{"_index":1752,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:58",{"_index":1763,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/gps",{"_index":2304,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["lib/common/file/entity/icc",{"_index":2387,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["lib/common/file/entity/image",{"_index":2411,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["lib/common/file/entity/video",{"_index":3378,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["lib/common/file/file",{"_index":1815,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["lib/common/file/file.constants.ts",{"_index":1771,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{}}}],["lib/common/file/file.constants.ts:25",{"_index":1781,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:34",{"_index":1783,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:36",{"_index":1785,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:38",{"_index":1789,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:40",{"_index":1787,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:42",{"_index":1791,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:44",{"_index":1793,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:51",{"_index":1799,"title":{},"body":{"classes/FileMd.html":{}}}],["lib/common/file/file.module.ts",{"_index":2119,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.module.ts:32",{"_index":2120,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.service.ts",{"_index":2127,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:226",{"_index":2138,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:256",{"_index":2144,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:273",{"_index":2147,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:283",{"_index":2162,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:292",{"_index":2159,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:44",{"_index":2137,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.types.ts",{"_index":330,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/entity/media",{"_index":2667,"title":{},"body":{"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["lib/common/media/entity/media.entity.ts",{"_index":2648,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:30",{"_index":2654,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:34",{"_index":2649,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:38",{"_index":2656,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:41",{"_index":2660,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:44",{"_index":2653,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:51",{"_index":2655,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:55",{"_index":2657,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/media.constants.ts",{"_index":4085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/media/media.module.ts",{"_index":2718,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.module.ts:34",{"_index":2719,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.types.ts",{"_index":2613,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/media.types.ts:100",{"_index":2726,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:104",{"_index":2727,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:107",{"_index":2728,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:110",{"_index":2729,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:113",{"_index":2731,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:116",{"_index":2730,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:124",{"_index":2696,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:127",{"_index":2697,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:130",{"_index":2698,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:133",{"_index":2699,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:141",{"_index":2643,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:144",{"_index":2641,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:147",{"_index":2645,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:151",{"_index":2647,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:155",{"_index":2642,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:158",{"_index":2644,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:161",{"_index":2646,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:169",{"_index":2676,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:172",{"_index":2673,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:176",{"_index":2674,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:179",{"_index":2675,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:182",{"_index":2677,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:185",{"_index":2678,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:188",{"_index":2679,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:191",{"_index":2680,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:198",{"_index":2709,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:200",{"_index":2711,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:205",{"_index":2713,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:207",{"_index":2712,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:209",{"_index":2717,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:211",{"_index":2716,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:213",{"_index":2708,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:221",{"_index":2715,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:97",{"_index":2725,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/process/abstract",{"_index":119,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["lib/common/process/default/tmp",{"_index":3238,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["lib/common/process/entity/process.log.entity.ts",{"_index":2952,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:35",{"_index":2954,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:38",{"_index":2953,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:42",{"_index":2957,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:46",{"_index":2960,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:49",{"_index":2956,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts",{"_index":3138,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:38",{"_index":3140,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:51",{"_index":3147,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:55",{"_index":3144,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:59",{"_index":3143,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:63",{"_index":3142,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:66",{"_index":3146,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:70",{"_index":3148,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/process",{"_index":2965,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lib/common/process/process.constants.ts",{"_index":3583,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/common/process/process.module.ts",{"_index":3072,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.module.ts:47",{"_index":3081,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.types.ts",{"_index":2948,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{}}}],["lib/common/user/abstract",{"_index":262,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["lib/common/user/entity/user",{"_index":3351,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["lib/common/user/entity/user.entity.ts",{"_index":3314,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:41",{"_index":3321,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:44",{"_index":3317,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:47",{"_index":3325,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:50",{"_index":3324,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:54",{"_index":3318,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:58",{"_index":3326,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:62",{"_index":3320,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:66",{"_index":3323,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:70",{"_index":3316,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:74",{"_index":3327,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:78",{"_index":3328,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.subscriber.ts",{"_index":3363,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:35",{"_index":3368,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:37",{"_index":3373,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:41",{"_index":3370,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:46",{"_index":3372,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/user",{"_index":828,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["lib/common/user/user.constants.ts",{"_index":4149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/user/user.module.ts",{"_index":3344,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.module.ts:28",{"_index":3345,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.types.ts",{"_index":3295,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/user/user.types.ts:114",{"_index":3359,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:116",{"_index":3358,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:118",{"_index":3361,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:120",{"_index":3357,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:122",{"_index":3360,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:54",{"_index":3348,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:57",{"_index":3349,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:60",{"_index":3350,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:68",{"_index":3307,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:71",{"_index":3309,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:74",{"_index":3305,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:77",{"_index":3306,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:80",{"_index":3308,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:83",{"_index":3310,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:87",{"_index":3312,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:90",{"_index":3303,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:93",{"_index":3304,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:96",{"_index":3311,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:99",{"_index":3313,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/xml",{"_index":3406,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts",{"_index":3205,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts:25",{"_index":3211,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:30",{"_index":3207,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:35",{"_index":3210,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/decorators/access",{"_index":4046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/current",{"_index":4083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/for",{"_index":4052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/exceptions/bad",{"_index":814,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["lib/shared/exceptions/forbidden",{"_index":2271,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["lib/shared/exceptions/invalid",{"_index":2416,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts",{"_index":2900,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts:23",{"_index":2905,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/not",{"_index":2920,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["lib/shared/exceptions/too",{"_index":3285,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["lib/shared/exceptions/unauthorized",{"_index":3293,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["lib/shared/filters/db",{"_index":1353,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["lib/shared/guards/abstract",{"_index":6,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts",{"_index":655,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts:28",{"_index":660,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/lite",{"_index":2439,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["lib/shared/guards/roles.guard.ts",{"_index":3215,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:30",{"_index":3219,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:33",{"_index":3220,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts",{"_index":1449,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:32",{"_index":1457,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:35",{"_index":1462,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/modules/cache/cache.constants.ts",{"_index":4137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/cache/cache.module.ts",{"_index":883,"title":{},"body":{"modules/CacheModule.html":{}}}],["lib/shared/modules/cache/cache.types.ts",{"_index":907,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:21",{"_index":921,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:23",{"_index":928,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:25",{"_index":923,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:27",{"_index":933,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:33",{"_index":917,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:35",{"_index":930,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:37",{"_index":919,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:39",{"_index":925,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/redis",{"_index":3154,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["lib/shared/modules/cache/redis.module.ts",{"_index":3195,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/cache/redis.module.ts:29",{"_index":3197,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/category/category.constants.ts",{"_index":4063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/category/category.module.ts",{"_index":1029,"title":{},"body":{"modules/CategoryModule.html":{}}}],["lib/shared/modules/category/category.service.ts",{"_index":1056,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:29",{"_index":1061,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:42",{"_index":1064,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:60",{"_index":1069,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/entity/category",{"_index":1039,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts",{"_index":976,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:40",{"_index":993,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:44",{"_index":988,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:47",{"_index":1010,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:51",{"_index":998,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:58",{"_index":1003,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:61",{"_index":992,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:65",{"_index":1008,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:68",{"_index":1005,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:71",{"_index":985,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts",{"_index":2430,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:28",{"_index":2434,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:32",{"_index":2432,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:36",{"_index":2435,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:39",{"_index":2433,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/locale",{"_index":2481,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["lib/shared/modules/locale/entity/localized",{"_index":2518,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["lib/shared/modules/locale/locale.module.ts",{"_index":2447,"title":{},"body":{"modules/LocaleModule.html":{}}}],["lib/shared/modules/locale/locale.service.ts",{"_index":2456,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:28",{"_index":2461,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:44",{"_index":2464,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.types.ts",{"_index":2424,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["lib/shared/modules/log/log.constants.ts",{"_index":4131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/log/log.module.ts",{"_index":2535,"title":{},"body":{"modules/LogModule.html":{}}}],["lib/shared/modules/log/log.service.ts",{"_index":2539,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:100",{"_index":2555,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:14",{"_index":2560,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:24",{"_index":2553,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:34",{"_index":2572,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:44",{"_index":2570,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:54",{"_index":2549,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:64",{"_index":2562,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:82",{"_index":2566,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/messages",{"_index":2766,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/ms",{"_index":2744,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts",{"_index":2922,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:16",{"_index":2942,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:25",{"_index":2945,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:33",{"_index":2946,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:41",{"_index":2943,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:49",{"_index":2940,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:56",{"_index":2926,"title":{},"body":{"classes/PageableData.html":{}}}],["lib/shared/modules/warlock/warlock.constants.ts",{"_index":4158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/warlock/warlock.module.ts",{"_index":3389,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lib/shared/modules/warlock/warlock.types.ts",{"_index":4006,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/shared/pipes/not",{"_index":2907,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["lib/shared/transformers/simple",{"_index":4140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts",{"_index":1373,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts:43",{"_index":1380,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["licensable",{"_index":3835,"title":{},"body":{"license.html":{}}}],["license",{"_index":686,"title":{"license.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":683,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["licenses",{"_index":3851,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":3731,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3076,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lifetime",{"_index":4168,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["light",{"_index":526,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lightweight",{"_index":2440,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["limit",{"_index":1217,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["limitation",{"_index":3909,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":711,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["limited",{"_index":3760,"title":{},"body":{"license.html":{}}}],["line",{"_index":1275,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["line.split",{"_index":1279,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().length",{"_index":1277,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().startswith",{"_index":1276,"title":{},"body":{"injectables/ConfigService.html":{}}}],["linenumber",{"_index":2558,"title":{},"body":{"classes/LogService.html":{}}}],["lines",{"_index":1273,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["lines.length",{"_index":2596,"title":{},"body":{"classes/LogService.html":{}}}],["lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d",{"_index":2599,"title":{},"body":{"classes/LogService.html":{}}}],["link",{"_index":3782,"title":{},"body":{"license.html":{}}}],["links",{"_index":2682,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["list",{"_index":1565,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["listens",{"_index":2483,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["listento",{"_index":3367,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lists",{"_index":1599,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["liteauthguard",{"_index":2438,"title":{"injectables/LiteAuthGuard.html":{}},"body":{"injectables/LiteAuthGuard.html":{}}}],["literal",{"_index":943,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/ConfigService.html":{},"classes/LogService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3842,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":4071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loads",{"_index":4129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1160,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["local.env",{"_index":3685,"title":{},"body":{"index.html":{}}}],["local.properties",{"_index":3692,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["local_properties_file_name",{"_index":1194,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localcontent",{"_index":1156,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontent.split(\"\\n",{"_index":1345,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontentlines",{"_index":1344,"title":{},"body":{"injectables/ConfigService.html":{}}}],["locale.service",{"_index":2454,"title":{},"body":{"modules/LocaleModule.html":{}}}],["locale.types",{"_index":2436,"title":{},"body":{"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["locale/entity/localized",{"_index":1015,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["localemodule",{"_index":2442,"title":{"modules/LocaleModule.html":{}},"body":{"modules/LocaleModule.html":{},"modules.html":{},"overview.html":{}}}],["localeservice",{"_index":2446,"title":{"injectables/LocaleService.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"overview.html":{}}}],["localesubscriber",{"_index":2480,"title":{"injectables/LocaleSubscriber.html":{}},"body":{"injectables/LocaleSubscriber.html":{}}}],["localization",{"_index":2449,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["localized",{"_index":2426,"title":{},"body":{"interfaces/Language.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmedia",{"_index":2428,"title":{"interfaces/LocalizedMedia.html":{}},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmediaentity",{"_index":2452,"title":{"entities/LocalizedMediaEntity.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{}}}],["localizedmediaproperties",{"_index":2516,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediaproperties.length",{"_index":2517,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediarep",{"_index":2460,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localizedstring",{"_index":1483,"title":{"interfaces/LocalizedString.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["localizedstringentity",{"_index":994,"title":{"entities/LocalizedStringEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["localizedstringproperties",{"_index":2503,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringproperties.length",{"_index":2508,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringrep",{"_index":2459,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localkey",{"_index":1350,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline",{"_index":1347,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.split",{"_index":1351,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().length",{"_index":1349,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().startswith",{"_index":1348,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiescontent",{"_index":1261,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiespath",{"_index":1258,"title":{},"body":{"injectables/ConfigService.html":{}}}],["located",{"_index":2594,"title":{},"body":{"classes/LogService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":381,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lock",{"_index":3398,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockcode",{"_index":3400,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockexec",{"_index":2986,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["locking",{"_index":3390,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["lockkey",{"_index":3397,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockkey}:${lockcode",{"_index":3403,"title":{},"body":{"modules/WarlockModule.html":{}}}],["locklifetime",{"_index":3395,"title":{},"body":{"modules/WarlockModule.html":{}}}],["log",{"_index":178,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":2559,"title":{},"body":{"classes/LogService.html":{}}}],["log.constants",{"_index":2538,"title":{},"body":{"modules/LogModule.html":{}}}],["log.service",{"_index":2537,"title":{},"body":{"modules/LogModule.html":{}}}],["log/log.constants",{"_index":889,"title":{},"body":{"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["log/log.module",{"_index":888,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/WarlockModule.html":{}}}],["logger",{"_index":21,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2492,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/MsClient.html":{},"index.html":{}}}],["login",{"_index":291,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["loginpayload",{"_index":755,"title":{"classes/LoginPayload.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["loginregex",{"_index":301,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginregex.test(login",{"_index":305,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginstance",{"_index":126,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel",{"_index":197,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":236,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.error",{"_index":224,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.log",{"_index":186,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel.verbose",{"_index":238,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.warn",{"_index":234,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["logmodule",{"_index":720,"title":{"modules/LogModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["logs",{"_index":2550,"title":{},"body":{"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["logservice",{"_index":2536,"title":{"classes/LogService.html":{}},"body":{"modules/LogModule.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":385,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["loss",{"_index":3936,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3943,"title":{},"body":{"license.html":{}}}],["ls",{"_index":2469,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.code",{"_index":2472,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.id",{"_index":2476,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.lang",{"_index":2470,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.value",{"_index":2471,"title":{},"body":{"injectables/LocaleService.html":{}}}],["m",{"_index":2586,"title":{},"body":{"classes/LogService.html":{}}}],["m.endswith",{"_index":2588,"title":{},"body":{"classes/LogService.html":{}}}],["m.length",{"_index":2590,"title":{},"body":{"classes/LogService.html":{}}}],["m.startswith",{"_index":2587,"title":{},"body":{"classes/LogService.html":{}}}],["m.substring(1",{"_index":2589,"title":{},"body":{"classes/LogService.html":{}}}],["machine",{"_index":3687,"title":{},"body":{"index.html":{}}}],["made",{"_index":3288,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"license.html":{}}}],["mailing",{"_index":3797,"title":{},"body":{"license.html":{}}}],["main",{"_index":1159,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["maincontent",{"_index":1161,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontent.split(\"\\n",{"_index":1343,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontentlines",{"_index":1342,"title":{},"body":{"injectables/ConfigService.html":{}}}],["make",{"_index":486,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["makeimagefromtext",{"_index":2315,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["makeimagefromtext(text",{"_index":2328,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["making",{"_index":3758,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":3941,"title":{},"body":{"license.html":{}}}],["manage",{"_index":3651,"title":{},"body":{"index.html":{}}}],["managed",{"_index":3799,"title":{},"body":{"license.html":{}}}],["management",{"_index":378,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["manager",{"_index":311,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{}}}],["manager.findone(this.type",{"_index":320,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["manager.service",{"_index":188,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["manager.service.ts",{"_index":2966,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:111",{"_index":3014,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:130",{"_index":3008,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:141",{"_index":3000,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:151",{"_index":2988,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:164",{"_index":3018,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:174",{"_index":2994,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:184",{"_index":2998,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:197",{"_index":2991,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:208",{"_index":3005,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:42",{"_index":2985,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:57",{"_index":3001,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:83",{"_index":3010,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:97",{"_index":3012,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manages",{"_index":2280,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["managing",{"_index":124,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"modules/UserModule.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["manufacturer",{"_index":466,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["manufacturer\"]?.description",{"_index":2010,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["many",{"_index":3286,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["manytomany",{"_index":1012,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined",{"_index":995,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":1046,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":1013,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":990,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":1464,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["map((part",{"_index":1285,"title":{},"body":{"injectables/ConfigService.html":{}}}],["marked",{"_index":3804,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3901,"title":{},"body":{"license.html":{}}}],["markup",{"_index":3611,"title":{},"body":{"index.html":{}}}],["match",{"_index":3165,"title":{},"body":{"injectables/RedisCacheService.html":{},"index.html":{}}}],["matches",{"_index":2598,"title":{},"body":{"classes/LogService.html":{}}}],["matches.length",{"_index":2600,"title":{},"body":{"classes/LogService.html":{}}}],["matches[1",{"_index":2604,"title":{},"body":{"classes/LogService.html":{}}}],["matches[2].split(\"/\").slice",{"_index":2602,"title":{},"body":{"classes/LogService.html":{}}}],["matches[3",{"_index":2605,"title":{},"body":{"classes/LogService.html":{}}}],["matching",{"_index":116,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["max",{"_index":2929,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["max(1000",{"_index":2932,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["maxaperture",{"_index":539,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["maxdepth",{"_index":1560,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["maximum",{"_index":538,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["md",{"_index":1825,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio",{"_index":1882,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.album",{"_index":1934,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.artist",{"_index":1936,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.bitrate",{"_index":1891,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codec",{"_index":1885,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codecprofile",{"_index":1927,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.container",{"_index":1883,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.duration",{"_index":1887,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.genre",{"_index":1940,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.label",{"_index":1942,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.numberofchannels",{"_index":1889,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.samplerate",{"_index":1923,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.title",{"_index":1932,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.tool",{"_index":1929,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.year",{"_index":1938,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif",{"_index":2025,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.aperture",{"_index":2061,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.brightness",{"_index":2063,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.colorspace",{"_index":2079,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.compositeimage",{"_index":2113,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.contrast",{"_index":2101,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.customrendered",{"_index":2091,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.digitalzoomratio",{"_index":2097,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exififdpointer",{"_index":2042,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exifversion",{"_index":2055,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposurebias",{"_index":2065,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuremode",{"_index":2093,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposureprogram",{"_index":2051,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuretime",{"_index":2047,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flash",{"_index":2073,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flashpixversion",{"_index":2077,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.fnumber",{"_index":2049,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.focallength",{"_index":2075,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.gpsinfoifdpointer",{"_index":2045,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityifdpointer",{"_index":2085,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityindex",{"_index":2115,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityversion",{"_index":2117,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.isospeedratings",{"_index":2053,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmake",{"_index":2109,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmodel",{"_index":2111,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.make",{"_index":2026,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.maxaperture",{"_index":2067,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.meteringmode",{"_index":2071,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.model",{"_index":2028,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.offsettime",{"_index":2057,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.orientation",{"_index":2030,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelxdimension",{"_index":2081,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelydimension",{"_index":2083,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionunit",{"_index":2036,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionx",{"_index":2032,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutiony",{"_index":2034,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.saturation",{"_index":2103,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenecapturetype",{"_index":2099,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenetype",{"_index":2089,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sensingmethod",{"_index":2087,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sharpness",{"_index":2105,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.shutterspeedvalue",{"_index":2059,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.software",{"_index":2038,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistance",{"_index":2069,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistancerange",{"_index":2107,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.whitebalance",{"_index":2095,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.ycbcrpositioning",{"_index":2040,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.ext",{"_index":1859,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps",{"_index":1978,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.altitude",{"_index":1979,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.latitude",{"_index":1983,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.longitude",{"_index":1981,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.hash",{"_index":1855,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc",{"_index":1986,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.connectionspace",{"_index":1995,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemanufacturer",{"_index":2008,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemodelnumber",{"_index":2011,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.icccopyright",{"_index":2022,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccdescription",{"_index":2020,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccprofiledate",{"_index":1998,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccsignature",{"_index":2003,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.primaryplatform",{"_index":2005,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassname",{"_index":1990,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassvalue",{"_index":1993,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profilecreator",{"_index":2018,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileversion",{"_index":1987,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentname",{"_index":2013,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentvalue",{"_index":2016,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image",{"_index":1948,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bitdepth",{"_index":1965,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bps",{"_index":1949,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colorcomponents",{"_index":1958,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colortype",{"_index":1968,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.compression",{"_index":1971,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.datetime",{"_index":2002,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.filter",{"_index":1973,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.height",{"_index":1953,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.interlace",{"_index":1975,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.subsampling",{"_index":1961,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.width",{"_index":1956,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime",{"_index":1857,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"audio",{"_index":1863,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"image",{"_index":1861,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"video",{"_index":1865,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video",{"_index":1894,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.bitrate",{"_index":1903,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.codec",{"_index":1895,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorrange",{"_index":1911,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorspace",{"_index":1913,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.container",{"_index":1897,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.displayaspectratio",{"_index":1909,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.duration",{"_index":1905,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.framerate",{"_index":1915,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.height",{"_index":1901,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.rotate",{"_index":1917,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.sampleaspectratio",{"_index":1907,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.width",{"_index":1899,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["mean",{"_index":3728,"title":{},"body":{"license.html":{}}}],["means",{"_index":3741,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":3762,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":3646,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":3391,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["media",{"_index":347,"title":{"interfaces/Media.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["media.entity",{"_index":2453,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaFileEntity.html":{}}}],["media.entity.ts",{"_index":2519,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:34",{"_index":2522,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:38",{"_index":2521,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:41",{"_index":2523,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:44",{"_index":2524,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.private.dir",{"_index":4209,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.properties",{"_index":4204,"title":{"additional-documentation/properties/media.properties.html":{}},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.public.dir",{"_index":4205,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.service",{"_index":2721,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.types",{"_index":2663,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["media/entity/media.entity",{"_index":1739,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/UserEntity.html":{}}}],["media/media.module",{"_index":3550,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["media/media.types",{"_index":348,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["media_relations",{"_index":4029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media_type_relations",{"_index":4030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediadto",{"_index":2630,"title":{"classes/MediaDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaentity",{"_index":989,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{}}}],["mediaext",{"_index":2621,"title":{"interfaces/MediaExt.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaextentity",{"_index":2666,"title":{"entities/MediaExtEntity.html":{}},"body":{"entities/MediaExtEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["mediafile",{"_index":2614,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafiledto",{"_index":2631,"title":{"classes/MediaFileDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafileentity",{"_index":2650,"title":{"entities/MediaFileEntity.html":{}},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{}}}],["mediaformat",{"_index":2623,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatdto",{"_index":2629,"title":{"classes/MediaFormatDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatentity",{"_index":2684,"title":{"entities/MediaFormatEntity.html":{}},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["mediamanager",{"_index":2632,"title":{"classes/MediaManager.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediamodule",{"_index":2639,"title":{"modules/MediaModule.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mediamodule.forroot",{"_index":3546,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["mediamoduleoptions",{"_index":2640,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediarow",{"_index":3508,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediaservice",{"_index":2720,"title":{},"body":{"modules/MediaModule.html":{}}}],["mediatype",{"_index":2615,"title":{"interfaces/MediaType.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypedto",{"_index":2628,"title":{"classes/MediaTypeDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypeentity",{"_index":2658,"title":{"entities/MediaTypeEntity.html":{}},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["medium",{"_index":3855,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3856,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3910,"title":{},"body":{"license.html":{}}}],["merely",{"_index":3781,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1162,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergedcontent",{"_index":1346,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent",{"_index":1119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent(maincontent",{"_index":1155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merges",{"_index":1158,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":181,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/LogService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["messagebus",{"_index":2743,"title":{"interfaces/MessageBus.html":{}},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["messages",{"_index":2493,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["messages_broker",{"_index":2787,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["messagesbroker",{"_index":2765,"title":{"interfaces/MessagesBroker.html":{}},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["messagesbrokermodule",{"_index":2783,"title":{"modules/MessagesBrokerModule.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesbrokerservice",{"_index":2790,"title":{"injectables/MessagesBrokerService.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":600,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["metaaudio",{"_index":2237,"title":{},"body":{"injectables/FileService.html":{}}}],["metadata",{"_index":332,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["metadata.entity",{"_index":1768,"title":{},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["metadata.entity.ts",{"_index":615,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:10",{"_index":635,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:14",{"_index":627,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:18",{"_index":624,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:19",{"_index":2305,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:22",{"_index":640,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:25",{"_index":1810,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:26",{"_index":638,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:28",{"_index":1803,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:30",{"_index":623,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:31",{"_index":1806,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:34",{"_index":626,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:37",{"_index":2306,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:38",{"_index":642,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:39",{"_index":3382,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:42",{"_index":2390,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:43",{"_index":3385,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:45",{"_index":1805,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:46",{"_index":2392,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:47",{"_index":632,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:50",{"_index":2408,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:51",{"_index":641,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:52",{"_index":1808,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:54",{"_index":2406,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:55",{"_index":621,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:58",{"_index":2403,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:59",{"_index":620,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:62",{"_index":2395,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:63",{"_index":643,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:66",{"_index":1801,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:67",{"_index":633,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:71",{"_index":636,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:73",{"_index":1812,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.service",{"_index":2123,"title":{},"body":{"modules/FileModule.html":{}}}],["metadata.service.ts",{"_index":1816,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:101",{"_index":1829,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:139",{"_index":1824,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:166",{"_index":1827,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:72",{"_index":1831,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadataservice",{"_index":2136,"title":{},"body":{"injectables/FileService.html":{}}}],["metagps",{"_index":2233,"title":{},"body":{"injectables/FileService.html":{}}}],["metaimage",{"_index":2235,"title":{},"body":{"injectables/FileService.html":{}}}],["metavideo",{"_index":2239,"title":{},"body":{"injectables/FileService.html":{}}}],["meteringmode",{"_index":545,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["method",{"_index":152,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["methodname",{"_index":2557,"title":{},"body":{"classes/LogService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["microservice",{"_index":816,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["microservices",{"_index":2763,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["middle",{"_index":2383,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["middleware",{"_index":3520,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["millimeters",{"_index":542,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["mime",{"_index":363,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["min",{"_index":2930,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1",{"_index":2931,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1)@max(1000)@type(undefined",{"_index":2941,"title":{},"body":{"classes/PageableParams.html":{}}}],["min(1)@type(undefined",{"_index":2944,"title":{},"body":{"classes/PageableParams.html":{}}}],["minutes",{"_index":4170,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["miscellaneous",{"_index":3579,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":520,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["model",{"_index":426,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["modern",{"_index":3595,"title":{},"body":{"index.html":{},"properties.html":{}}}],["modifications",{"_index":3759,"title":{},"body":{"license.html":{}}}],["modified",{"_index":421,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["modifies",{"_index":3528,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["modify",{"_index":3879,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3884,"title":{},"body":{"license.html":{}}}],["module",{"_index":666,"title":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module.interface",{"_index":3500,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["modules",{"_index":668,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/cache/cache.types",{"_index":82,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["modules/log/log.constants",{"_index":663,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["montserrat",{"_index":4194,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["more",{"_index":3661,"title":{},"body":{"index.html":{},"license.html":{}}}],["mozjpeg",{"_index":3570,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":2857,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["ms.exception",{"_index":825,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts",{"_index":815,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts:23",{"_index":823,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms_client",{"_index":2891,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["ms_exception_id",{"_index":2859,"title":{},"body":{"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["msclient",{"_index":2836,"title":{"classes/MsClient.html":{}},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["msclient(logger",{"_index":2899,"title":{},"body":{"modules/MsClientModule.html":{}}}],["msclientmodule",{"_index":2886,"title":{"modules/MsClientModule.html":{}},"body":{"modules/MsClientModule.html":{},"modules.html":{},"overview.html":{}}}],["msclientoptions",{"_index":2754,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"miscellaneous/typealiases.html":{}}}],["msexception",{"_index":821,"title":{"classes/MsException.html":{}},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":241,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.endswith",{"_index":244,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.length",{"_index":246,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/\\[/g",{"_index":249,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/]/g",{"_index":250,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.startswith",{"_index":243,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.substring(1",{"_index":245,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg_bus",{"_index":2892,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":591,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["music",{"_index":1839,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["musicmd",{"_index":1919,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.album",{"_index":1935,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.artists?.join",{"_index":1937,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.genre?.join",{"_index":1941,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.label?.join",{"_index":1943,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.title",{"_index":1933,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.year",{"_index":1939,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.bitrate",{"_index":1926,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codec",{"_index":1922,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codecprofile",{"_index":1928,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.container",{"_index":1921,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.duration",{"_index":1931,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.numberofchannels",{"_index":1925,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.samplerate",{"_index":1924,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.tool",{"_index":1930,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["myentity",{"_index":2485,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["mysql",{"_index":3710,"title":{},"body":{"index.html":{}}}],["n",{"_index":254,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["name",{"_index":45,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name.lang",{"_index":4070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["named",{"_index":1506,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["namedcolumn",{"_index":1525,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["names",{"_index":1375,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"license.html":{}}}],["namespace",{"_index":1137,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["namespacename",{"_index":1139,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nature",{"_index":364,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["navigate",{"_index":3665,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":3836,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":3715,"title":{},"body":{"index.html":{}}}],["need",{"_index":1073,"title":{},"body":{"injectables/CategoryService.html":{}}}],["needed",{"_index":157,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["needs",{"_index":258,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["negligence",{"_index":3923,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":3926,"title":{},"body":{"license.html":{}}}],["neighboring",{"_index":4081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2541,"title":{},"body":{"classes/LogService.html":{}}}],["nested",{"_index":1377,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["nestfactory.createapplicationcontext(configmodule",{"_index":4120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1463,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["nestjs",{"_index":3075,"title":{},"body":{"modules/ProcessModule.html":{}}}],["nestjs/axios",{"_index":2290,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":76,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/modules/dynamic",{"_index":3499,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/forward",{"_index":3502,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":296,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["nestjs/core",{"_index":3221,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":713,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":2853,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":715,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":3083,"title":{},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":858,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":3532,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["new",{"_index":98,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["newrelativepath",{"_index":1439,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["newuser",{"_index":868,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["next",{"_index":1460,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{}}}],["nextfunction",{"_index":3526,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["node",{"_index":3392,"title":{},"body":{"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3673,"title":{},"body":{"index.html":{}}}],["node:events",{"_index":1385,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node:fs",{"_index":1383,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node_modules",{"_index":1309,"title":{},"body":{"injectables/ConfigService.html":{}}}],["non",{"_index":3816,"title":{},"body":{"license.html":{}}}],["normalized",{"_index":2161,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["normalizes",{"_index":2327,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normally",{"_index":3876,"title":{},"body":{"license.html":{}}}],["note",{"_index":3717,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["notemptypipe",{"_index":2906,"title":{"injectables/NotEmptyPipe.html":{}},"body":{"injectables/NotEmptyPipe.html":{}}}],["notfoundexception",{"_index":855,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{}}}],["notfoundexception(`file",{"_index":2208,"title":{},"body":{"injectables/FileService.html":{}}}],["notfoundexception(`user",{"_index":871,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["notfoundmsexception",{"_index":2919,"title":{"classes/NotFoundMsException.html":{}},"body":{"classes/NotFoundMsException.html":{}}}],["nothing",{"_index":3892,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3767,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3862,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3890,"title":{},"body":{"license.html":{}}}],["now",{"_index":205,"title":{},"body":{"classes/AbstractProcess.html":{},"index.html":{}}}],["npm",{"_index":3698,"title":{},"body":{"index.html":{}}}],["null",{"_index":61,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["nullable",{"_index":619,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["number",{"_index":314,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"classes/MsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["number\"]?.description",{"_index":2012,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["number_of_channels",{"_index":637,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["numberofchannels",{"_index":342,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["numbers",{"_index":309,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["numberutils",{"_index":2346,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numberutils.generaterandomint",{"_index":2351,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numeric",{"_index":3167,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["oauth",{"_index":3645,"title":{},"body":{"index.html":{}}}],["obj",{"_index":1835,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.indexof",{"_index":1869,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.map(this.trimproperties",{"_index":1871,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.rows.push(rowobj",{"_index":3458,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.trim",{"_index":1868,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj1",{"_index":3477,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2",{"_index":3479,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2[key",{"_index":3490,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object",{"_index":58,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj1",{"_index":3483,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(obj2",{"_index":3485,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(value).length",{"_index":2917,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["object.values(entity).filter((value",{"_index":2504,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["object_enabled",{"_index":1628,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_priority",{"_index":1630,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_renderer_params",{"_index":1635,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_visibility",{"_index":1637,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objectenabled",{"_index":1512,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectliteral",{"_index":1482,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["objectpriority",{"_index":1510,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrenderer",{"_index":1517,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrendererparams",{"_index":1619,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objects",{"_index":1378,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["objectutils",{"_index":190,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.inspect",{"_index":196,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.sort(cat.children",{"_index":1086,"title":{},"body":{"injectables/CategoryService.html":{}}}],["objectvisibility",{"_index":1514,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["obligations",{"_index":3952,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2759,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["obtain",{"_index":691,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["occurs",{"_index":1477,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["offer",{"_index":3830,"title":{},"body":{"license.html":{}}}],["offset",{"_index":529,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["offsettime",{"_index":533,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["onapplicationbootstrap",{"_index":3078,"title":{},"body":{"modules/ProcessModule.html":{}}}],["oncrash",{"_index":130,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["oncrash(error",{"_index":148,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["ondelete",{"_index":1750,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["one",{"_index":3675,"title":{},"body":{"index.html":{},"license.html":{}}}],["ones",{"_index":4082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetomany",{"_index":1738,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetomany(undefined",{"_index":1720,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetoone",{"_index":1766,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onetoone(undefined",{"_index":1749,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onfinish",{"_index":131,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["onmoduleinit",{"_index":1683,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["onstop",{"_index":132,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["openmode",{"_index":1382,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["operating",{"_index":462,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["operation",{"_index":546,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["operations",{"_index":909,"title":{},"body":{"classes/CacheService.html":{},"injectables/LocaleService.html":{},"index.html":{}}}],["operator",{"_index":3432,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["optimized",{"_index":464,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["options",{"_index":608,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["options.exportservice",{"_index":3553,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.filemanager",{"_index":2125,"title":{},"body":{"modules/FileModule.html":{}}}],["options.filemd",{"_index":2126,"title":{},"body":{"modules/FileModule.html":{}}}],["options.imports",{"_index":3551,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.importservice",{"_index":3552,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.service",{"_index":744,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["opts",{"_index":1422,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["opts).subscribe",{"_index":2865,"title":{},"body":{"classes/MsClient.html":{}}}],["order",{"_index":1218,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["orientation",{"_index":487,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["origin",{"_index":3905,"title":{},"body":{"license.html":{}}}],["original",{"_index":3778,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":60,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"license.html":{}}}],["out",{"_index":882,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outputpath",{"_index":2189,"title":{},"body":{"injectables/FileService.html":{}}}],["outputpath}/${filename",{"_index":2200,"title":{},"body":{"injectables/FileService.html":{}}}],["outstanding",{"_index":3750,"title":{},"body":{"license.html":{}}}],["overridden",{"_index":155,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["override",{"_index":3686,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":3655,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["overview",{"_index":3984,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":3732,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":482,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["p",{"_index":2582,"title":{},"body":{"classes/LogService.html":{}}}],["p@ssw0rd",{"_index":1586,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["package",{"_index":3554,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1145,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["pageable",{"_index":1146,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["pageabledata",{"_index":1199,"title":{"classes/PageableData.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pageabledata(propertieswithvalues",{"_index":1243,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageableparams",{"_index":1142,"title":{"classes/PageableParams.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pages",{"_index":1602,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["pagesize",{"_index":2925,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["paginated",{"_index":1546,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["pagination",{"_index":1148,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["pair",{"_index":1575,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["panel",{"_index":3598,"title":{},"body":{"index.html":{}}}],["param",{"_index":88,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parameter",{"_index":601,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["params",{"_index":980,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{}}}],["parent",{"_index":981,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["parse",{"_index":1167,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["parsebuffer",{"_index":1838,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsebuffer(buf",{"_index":1920,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsed",{"_index":1168,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsefloat(audiomd.duration",{"_index":1888,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(videomd.duration",{"_index":1906,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parseint(process.env.redis_db",{"_index":903,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.redis_port",{"_index":901,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.transport_port",{"_index":2898,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_timeout",{"_index":2873,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_type",{"_index":2896,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parser",{"_index":3421,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["parses",{"_index":1165,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsestring",{"_index":3428,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsevalue",{"_index":1120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsevalue(value",{"_index":1163,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsexmlbody(body",{"_index":3440,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlbody(result",{"_index":3462,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfile(xmldata",{"_index":3460,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfromrequest",{"_index":3522,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsexmlfromrequest(req",{"_index":3523,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsing",{"_index":3521,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["part",{"_index":3868,"title":{},"body":{"license.html":{}}}],["part.touppercase",{"_index":1286,"title":{},"body":{"injectables/ConfigService.html":{}}}],["partial",{"_index":768,"title":{},"body":{"classes/AuthService.html":{}}}],["particular",{"_index":3912,"title":{},"body":{"license.html":{}}}],["parts",{"_index":111,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts.length",{"_index":113,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts[1",{"_index":114,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["party",{"_index":3875,"title":{},"body":{"license.html":{}}}],["passportmodule",{"_index":714,"title":{},"body":{"modules/AuthModule.html":{}}}],["password",{"_index":276,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["patch",{"_index":2151,"title":{},"body":{"injectables/FileService.html":{}}}],["patches",{"_index":2563,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx",{"_index":2544,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx(ctx",{"_index":2561,"title":{},"body":{"classes/LogService.html":{}}}],["patent",{"_index":3828,"title":{},"body":{"license.html":{}}}],["path",{"_index":353,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["path.basename",{"_index":1270,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.basename(filepath",{"_index":1322,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.dirname(filepath",{"_index":1325,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.extname(file.name",{"_index":1267,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join",{"_index":1259,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["path.join(currentpath",{"_index":1436,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.join(directory",{"_index":1256,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(dirpath",{"_index":1327,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(gensrcpath",{"_index":1332,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(relativepath",{"_index":1440,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.normalize(dir",{"_index":2268,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["pattern",{"_index":926,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":758,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.id",{"_index":3340,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.login",{"_index":3342,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.password",{"_index":3341,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.roles",{"_index":3343,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["peer",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":1951,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["percent",{"_index":3749,"title":{},"body":{"license.html":{}}}],["perform",{"_index":3825,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3899,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":710,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["perpetual",{"_index":3814,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":3867,"title":{},"body":{"license.html":{}}}],["phone",{"_index":3299,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["photo",{"_index":490,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pinpoint",{"_index":3612,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":2909,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pipe(map((data",{"_index":1469,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["pipetransform",{"_index":2916,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pixel",{"_index":410,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixels",{"_index":413,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelxdimension",{"_index":557,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelydimension",{"_index":559,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["placeholder",{"_index":781,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":3872,"title":{},"body":{"license.html":{}}}],["placing",{"_index":499,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["plain",{"_index":1451,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance",{"_index":1466,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance(this.serializer",{"_index":1470,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["platform",{"_index":461,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["platform\"]?.description",{"_index":2007,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["platform's",{"_index":3597,"title":{},"body":{"index.html":{}}}],["platform/client",{"_index":3707,"title":{},"body":{"index.html":{}}}],["please",{"_index":3289,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"index.html":{}}}],["pminitstatus",{"_index":2967,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["pmservice",{"_index":127,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["pngquant",{"_index":3572,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":504,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pointer\"]?.description",{"_index":2044,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["port",{"_index":900,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["possibility",{"_index":3946,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgres",{"_index":3709,"title":{},"body":{"index.html":{}}}],["power",{"_index":3742,"title":{},"body":{"license.html":{}}}],["powerful",{"_index":3630,"title":{},"body":{"index.html":{}}}],["precision",{"_index":629,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["preferred",{"_index":3757,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":785,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["preinstallation",{"_index":3693,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":3823,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2568,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage",{"_index":2545,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage(message",{"_index":2565,"title":{},"body":{"classes/LogService.html":{}}}],["prepares",{"_index":2567,"title":{},"body":{"classes/LogService.html":{}}}],["presence",{"_index":39,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["preservechildrenorder",{"_index":3437,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["preview",{"_index":357,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["previewfiles",{"_index":2258,"title":{},"body":{"injectables/FileService.html":{}}}],["previewfilesformat",{"_index":2260,"title":{},"body":{"injectables/FileService.html":{}}}],["previewlang",{"_index":2256,"title":{},"body":{"injectables/FileService.html":{}}}],["previewname",{"_index":2254,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtype",{"_index":2262,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtypeext",{"_index":2264,"title":{},"body":{"injectables/FileService.html":{}}}],["primary",{"_index":445,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["primary_platform",{"_index":2399,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["primarycolumn",{"_index":1524,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn(\"varchar",{"_index":1616,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1603,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["primarygeneratedcolumn",{"_index":645,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primarygeneratedcolumn({zerofill",{"_index":634,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primaryplatform",{"_index":465,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["printed",{"_index":3977,"title":{},"body":{"license.html":{}}}],["priority",{"_index":982,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["private",{"_index":25,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["private_dir",{"_index":2168,"title":{},"body":{"injectables/FileService.html":{}}}],["privatemedia",{"_index":2634,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["proceed",{"_index":37,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"index.html":{}}}],["process",{"_index":122,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["process.command",{"_index":3025,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["process.constants",{"_index":187,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.cwd",{"_index":1252,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.cwd()}/${process.env.config_src_dir",{"_index":4124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":899,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_password",{"_index":906,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_user",{"_index":905,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.transport_host",{"_index":2897,"title":{},"body":{"modules/MsClientModule.html":{}}}],["process.exit(0",{"_index":4127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.getprocessinstance",{"_index":3112,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["process.hasprocessinstance",{"_index":3027,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["process.log.entity",{"_index":3149,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.loglevel",{"_index":198,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.pid",{"_index":252,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.registerprocess",{"_index":193,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.status",{"_index":194,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.status.crashed",{"_index":3153,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.execute",{"_index":3152,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.ready",{"_index":3151,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.ts",{"_index":120,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:140",{"_index":160,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:148",{"_index":162,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:157",{"_index":150,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:165",{"_index":145,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:173",{"_index":165,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:31",{"_index":139,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:32",{"_index":143,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:33",{"_index":141,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:35",{"_index":138,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:44",{"_index":168,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:80",{"_index":171,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:94",{"_index":176,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.types",{"_index":2963,"title":{},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.unit.entity",{"_index":2962,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["process:register",{"_index":3586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:start",{"_index":3588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:stop",{"_index":3589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:unregister",{"_index":3587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processandvalidatepropertiescontent",{"_index":1121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processandvalidatepropertiescontent(filepath",{"_index":1169,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processcode",{"_index":2989,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata",{"_index":3038,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.code",{"_index":3040,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.crontab?.length",{"_index":3039,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.enabled",{"_index":3053,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata.status",{"_index":3056,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processed",{"_index":568,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["processeddata",{"_index":1135,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata[variablename",{"_index":1295,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue",{"_index":1300,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue};\\n",{"_index":1306,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processes",{"_index":1172,"title":{},"body":{"injectables/ConfigService.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["processinstance",{"_index":3121,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.start",{"_index":3125,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.stop",{"_index":3126,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processlist",{"_index":3036,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processlog",{"_index":2947,"title":{"interfaces/ProcessLog.html":{}},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{}}}],["processlogentity",{"_index":140,"title":{"entities/ProcessLogEntity.html":{}},"body":{"classes/AbstractProcess.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["processlogrep",{"_index":2984,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmanagerservice",{"_index":142,"title":{"injectables/ProcessManagerService.html":{}},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["processmanagerservice.pminitstatus",{"_index":3032,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmodule",{"_index":3065,"title":{"modules/ProcessModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["processregisterservice",{"_index":3071,"title":{"injectables/ProcessRegisterService.html":{}},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"overview.html":{}}}],["processunit",{"_index":2950,"title":{"interfaces/ProcessUnit.html":{}},"body":{"interfaces/ProcessLog.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitentity",{"_index":2955,"title":{"entities/ProcessUnitEntity.html":{}},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitrep",{"_index":2983,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["product",{"_index":3902,"title":{},"body":{"license.html":{}}}],["profile",{"_index":376,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["profile_class_name",{"_index":2400,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_class_value",{"_index":2401,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_creator",{"_index":2402,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_version",{"_index":2404,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profileclassname",{"_index":449,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileclassvalue",{"_index":447,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profilecreator",{"_index":478,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileversion",{"_index":444,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["progressive",{"_index":438,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["project",{"_index":1203,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["prominent",{"_index":3861,"title":{},"body":{"license.html":{}}}],["promise",{"_index":144,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise((resolve",{"_index":2861,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise.all",{"_index":1239,"title":{},"body":{"injectables/ConfigService.html":{}}}],["promise.all(filepromises",{"_index":1446,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{},"additional-documentation/properties.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["properties_file_ext_pattern",{"_index":1195,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties_file_ext_pattern).slice(1",{"_index":1335,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertiesfiles",{"_index":1112,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertieswithvalues",{"_index":1238,"title":{},"body":{"injectables/ConfigService.html":{}}}],["property",{"_index":1166,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1293,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"kp",{"_index":1296,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"local",{"_index":1297,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys",{"_index":1219,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys.sort((a",{"_index":1223,"title":{},"body":{"injectables/ConfigService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["protecting",{"_index":4177,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["protection",{"_index":794,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["provide",{"_index":742,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":757,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["providers",{"_index":741,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["provides",{"_index":830,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{}}}],["providing",{"_index":670,"title":{},"body":{"modules/AuthModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/LogService.html":{},"index.html":{}}}],["proxy",{"_index":2840,"title":{},"body":{"classes/MsClient.html":{}}}],["pubclient",{"_index":2798,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["public",{"_index":354,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["public/private",{"_index":2145,"title":{},"body":{"injectables/FileService.html":{}}}],["public_dir",{"_index":2170,"title":{},"body":{"injectables/FileService.html":{}}}],["publicly",{"_index":3824,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":446,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["purposes",{"_index":3740,"title":{},"body":{"license.html":{}}}],["push",{"_index":3507,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["pwd",{"_index":3332,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["qb",{"_index":2204,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.andwhere(`file.public",{"_index":2206,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.getone",{"_index":2207,"title":{},"body":{"injectables/FileService.html":{}}}],["quality",{"_index":2620,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":2140,"title":{},"body":{"injectables/FileService.html":{},"interfaces/XdbRequest.html":{}}}],["queryfailederror",{"_index":1363,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["r._",{"_index":3457,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["radius",{"_index":3713,"title":{},"body":{"index.html":{}}}],["random",{"_index":2320,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["range",{"_index":585,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["rapid",{"_index":3593,"title":{},"body":{"index.html":{},"properties.html":{}}}],["ratio",{"_index":578,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["read",{"_index":1421,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["read/write",{"_index":1670,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["readable",{"_index":3870,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":1430,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(dirpath",{"_index":1447,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(filepath",{"_index":1443,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdirectoryrecursively",{"_index":1429,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["readdirectoryrecursively(tmpdir",{"_index":3274,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["readfile",{"_index":1424,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reading",{"_index":4076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["readoperatorre",{"_index":3433,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["readrequest",{"_index":1530,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reads",{"_index":1106,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["ready",{"_index":3006,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["real",{"_index":3652,"title":{},"body":{"index.html":{}}}],["reason",{"_index":3964,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3903,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":2279,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["recaptchas",{"_index":2282,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["received",{"_index":3807,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3859,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":3975,"title":{},"body":{"license.html":{}}}],["recommendation",{"_index":3708,"title":{},"body":{"index.html":{}}}],["recommendations",{"_index":3694,"title":{},"body":{"index.html":{}}}],["record",{"_index":1873,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["recorded",{"_index":400,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["recording",{"_index":405,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["records",{"_index":3614,"title":{},"body":{"index.html":{}}}],["recreate",{"_index":2706,"title":{},"body":{"classes/MediaManager.html":{}}}],["recreate(id",{"_index":2635,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recurring",{"_index":3624,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":1339,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["recursively",{"_index":1428,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["redis",{"_index":886,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["redis(redisoptions",{"_index":3204,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.module",{"_index":887,"title":{},"body":{"modules/CacheModule.html":{}}}],["redis_client",{"_index":2817,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["redis_db",{"_index":3682,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":3680,"title":{},"body":{"index.html":{}}}],["redis_password",{"_index":3684,"title":{},"body":{"index.html":{}}}],["redis_port",{"_index":3681,"title":{},"body":{"index.html":{}}}],["redis_user",{"_index":3683,"title":{},"body":{"index.html":{}}}],["rediscacheservice",{"_index":893,"title":{"injectables/RedisCacheService.html":{}},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["redisinstance",{"_index":3198,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":880,"title":{"modules/RedisModule.html":{}},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":895,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["redismodule.redisinstance",{"_index":3199,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisoptions",{"_index":3202,"title":{},"body":{"modules/RedisModule.html":{}}}],["redistributing",{"_index":3916,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":3854,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":429,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["reference",{"_index":1492,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["reference.interface",{"_index":3503,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["referenced_entity_name",{"_index":1641,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referenced_table_name",{"_index":1643,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referencedentityname",{"_index":1508,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["referencedtablename",{"_index":1507,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reflect",{"_index":3573,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":3218,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":762,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":791,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_error_msg",{"_index":779,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":767,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":3897,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2996,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["regex",{"_index":3430,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":3099,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["register.service",{"_index":3084,"title":{},"body":{"modules/ProcessModule.html":{}}}],["register.service.ts",{"_index":3090,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:126",{"_index":3105,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:36",{"_index":3096,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:62",{"_index":3101,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:77",{"_index":3103,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:91",{"_index":3098,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob",{"_index":3093,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob(processdata",{"_index":3097,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered",{"_index":1566,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["registered_processes",{"_index":4036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerfont",{"_index":2340,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerfont(capfontpath",{"_index":2374,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registering",{"_index":3091,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registerprocess",{"_index":192,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registerprocess(this",{"_index":199,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registers",{"_index":3004,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["registration",{"_index":3045,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["reject",{"_index":2862,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(err",{"_index":3194,"title":{},"body":{"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(error",{"_index":2867,"title":{},"body":{"classes/MsClient.html":{}}}],["related",{"_index":775,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"miscellaneous/variables.html":{}}}],["relatedentities",{"_index":2512,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity",{"_index":2513,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity.id",{"_index":2514,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relations",{"_index":864,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["relationships",{"_index":1541,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["relative",{"_index":502,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["relativepath",{"_index":1432,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reliable",{"_index":3623,"title":{},"body":{"index.html":{}}}],["remain",{"_index":3779,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2484,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["remove",{"_index":850,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"classes/FileManager.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"classes/MediaManager.html":{},"interfaces/XdbRequest.html":{}}}],["remove(id",{"_index":1792,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removebyid",{"_index":835,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["removebyid(id",{"_index":848,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removed",{"_index":851,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeduplicateobjects",{"_index":3466,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeentity",{"_index":1555,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeentity(target",{"_index":1701,"title":{},"body":{"classes/ExplorerService.html":{}}}],["removeevent",{"_index":2495,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["removeproperty",{"_index":1122,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeproperty(key",{"_index":1174,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removes",{"_index":1176,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removing",{"_index":1833,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["renderer",{"_index":1520,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["renderer.entity",{"_index":1664,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["renderer.entity.ts",{"_index":1669,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:36",{"_index":1671,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:40",{"_index":1673,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:44",{"_index":1672,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:53",{"_index":1675,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:60",{"_index":1674,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering",{"_index":469,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["rendering_intent_name",{"_index":2405,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["rendering_intent_value",{"_index":2407,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["renderingintentname",{"_index":475,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["renderingintentvalue",{"_index":474,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["replace",{"_index":3712,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["replaced",{"_index":3970,"title":{},"body":{"license.html":{}}}],["repository",{"_index":832,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{},"index.html":{}}}],["represent",{"_index":408,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["representation",{"_index":424,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["representatives",{"_index":3796,"title":{},"body":{"license.html":{}}}],["representing",{"_index":121,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":1090,"title":{},"body":{"interfaces/ConfigItem.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reproduce",{"_index":3822,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":3906,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":3724,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.body",{"_index":3535,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.cookies.accesstoken",{"_index":107,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.cookies?.accesstoken",{"_index":106,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers.authorization",{"_index":110,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers?.authorization",{"_index":108,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers[\"content",{"_index":3533,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"data",{"_index":3538,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"end",{"_index":3539,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req[request_props.accesstoken",{"_index":95,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser",{"_index":102,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser]?.roles",{"_index":3233,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":35,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/BadRequestMsException.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.data",{"_index":2364,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.id",{"_index":2363,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request[request_props.accesstoken",{"_index":4049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request[request_props.currentuser",{"_index":4084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_props",{"_index":84,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":819,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["required",{"_index":695,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["res",{"_index":1081,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/LocaleService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["res.children?.foreach((cat",{"_index":1083,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.push(ls",{"_index":2479,"title":{},"body":{"injectables/LocaleService.html":{}}}],["reset",{"_index":881,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["resetallprocessstatuses",{"_index":2974,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resets",{"_index":3002,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resolution",{"_index":393,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionunit",{"_index":494,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionx",{"_index":491,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutiony",{"_index":493,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolve(body",{"_index":3463,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["resolve(keys",{"_index":3191,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["resolve(result",{"_index":2866,"title":{},"body":{"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolves",{"_index":759,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolving",{"_index":2286,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{}}}],["response",{"_index":967,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{}}}],["response.status(502).json",{"_index":1370,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["response?.data?.success",{"_index":2303,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["responses",{"_index":1358,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["responsibility",{"_index":3957,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":497,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["restricted",{"_index":4211,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["restricting",{"_index":1042,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts",{"_index":1040,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:35",{"_index":1051,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:39",{"_index":1050,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:43",{"_index":1047,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:46",{"_index":1049,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["result",{"_index":965,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/MsClient.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"license.html":{}}}],["result.schema.push(obj",{"_index":3459,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["result[key",{"_index":1875,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["result[newrelativepath",{"_index":1442,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["result[relativepath",{"_index":1444,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["resulting",{"_index":3761,"title":{},"body":{"license.html":{}}}],["results",{"_index":115,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["retain",{"_index":3864,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":1110,"title":{},"body":{"injectables/ConfigService.html":{}}}],["retrieve",{"_index":2992,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["retrieves",{"_index":1144,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["return",{"_index":103,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":961,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["returns",{"_index":50,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["revisions",{"_index":3774,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":2321,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rights",{"_index":484,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["risks",{"_index":3918,"title":{},"body":{"license.html":{}}}],["rm(dir",{"_index":2184,"title":{},"body":{"injectables/FileService.html":{}}}],["role",{"_index":3208,"title":{},"body":{"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":1054,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["role.entity.ts",{"_index":3352,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:35",{"_index":3353,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:39",{"_index":3354,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:43",{"_index":3355,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["roles",{"_index":1043,"title":{"classes/Roles.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["roles.decorator",{"_index":3226,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.decorator.ts",{"_index":4011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.indexof(role.code",{"_index":3236,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.name",{"_index":4156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.name.lang",{"_index":4157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.root",{"_index":3235,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["roles.save",{"_index":3333,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["rolesguard",{"_index":3214,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{}}}],["root",{"_index":1066,"title":{},"body":{"injectables/CategoryService.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["roottoken",{"_index":3427,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":607,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["route",{"_index":4058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":4055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":1559,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["rowid",{"_index":1556,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["rowobj",{"_index":3449,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname",{"_index":3452,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname].values",{"_index":3455,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rows",{"_index":3447,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["royalty",{"_index":3819,"title":{},"body":{"license.html":{}}}],["rpcexception",{"_index":2903,"title":{},"body":{"classes/MsException.html":{}}}],["rtexp",{"_index":1594,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["run",{"_index":3697,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1465,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"dependencies.html":{}}}],["safedeserialize",{"_index":2794,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safedeserialize(data",{"_index":2800,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safely",{"_index":2802,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize",{"_index":2795,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize(data",{"_index":2806,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safety",{"_index":3654,"title":{},"body":{"index.html":{}}}],["same",{"_index":3976,"title":{},"body":{"license.html":{}}}],["sample\"]?.value",{"_index":1952,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sample_aspect_ratio",{"_index":3384,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["sample_rate",{"_index":639,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["sampleaspectratio",{"_index":603,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["sampled",{"_index":418,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["samplerate",{"_index":343,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saturation",{"_index":583,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["save",{"_index":4092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saved",{"_index":1553,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata",{"_index":1554,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata(target",{"_index":1703,"title":{},"body":{"classes/ExplorerService.html":{}}}],["saves",{"_index":1552,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saving",{"_index":1474,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["scalable",{"_index":3643,"title":{},"body":{"index.html":{}}}],["scale",{"_index":631,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["scan",{"_index":1132,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles",{"_index":1123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles(directory",{"_index":1178,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanning",{"_index":1152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scans",{"_index":1181,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scene",{"_index":564,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenecapturetype",{"_index":581,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenetype",{"_index":567,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["schedulemodule",{"_index":3082,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulemodule.forroot",{"_index":3088,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulerregistry",{"_index":3095,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["scheduling",{"_index":3627,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1540,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":4013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1067,"title":{},"body":{"injectables/CategoryService.html":{}}}],["second",{"_index":3480,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["seconds",{"_index":3160,"title":{},"body":{"injectables/RedisCacheService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secret",{"_index":735,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secretkey",{"_index":2298,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["section",{"_index":1528,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["section_enabled",{"_index":1645,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_priority",{"_index":1647,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_renderer_params",{"_index":1650,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_visibility",{"_index":1652,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sectionenabled",{"_index":1511,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionpriority",{"_index":1509,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrenderer",{"_index":1515,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrendererparams",{"_index":1620,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sections",{"_index":3729,"title":{},"body":{"license.html":{}}}],["sectionvisibility",{"_index":1513,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["see",{"_index":707,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["selection",{"_index":1533,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["sell",{"_index":3831,"title":{},"body":{"license.html":{}}}],["send",{"_index":2751,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["send(pattern",{"_index":2760,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["sends",{"_index":2852,"title":{},"body":{"classes/MsClient.html":{}}}],["sensing",{"_index":544,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensingmethod",{"_index":563,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensitivity",{"_index":524,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensor",{"_index":525,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sent",{"_index":3795,"title":{},"body":{"license.html":{}}}],["separable",{"_index":3780,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3895,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":2809,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serialized",{"_index":2810,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serializer",{"_index":1458,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["serializes",{"_index":2808,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["server",{"_index":3690,"title":{},"body":{"index.html":{}}}],["servers",{"_index":3615,"title":{},"body":{"index.html":{}}}],["serves",{"_index":4208,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["service",{"_index":677,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1030,"title":{},"body":{"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["set",{"_index":167,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["set(key",{"_index":931,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["setaudiomd",{"_index":1818,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setaudiomd(md",{"_index":1823,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd",{"_index":1819,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd(md",{"_index":1826,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setmetadata(allowedformetadatakey",{"_index":4057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprocessunitstatus",{"_index":2975,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setprocessunitstatus(code",{"_index":3007,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setproperty",{"_index":1124,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setproperty(item",{"_index":1184,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sets",{"_index":166,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus",{"_index":133,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus(status",{"_index":164,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setting",{"_index":575,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["settings",{"_index":1041,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["setup",{"_index":3196,"title":{},"body":{"modules/RedisModule.html":{}}}],["setvideomd",{"_index":1820,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setvideomd(md",{"_index":1828,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sha",{"_index":1405,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["shall",{"_index":3727,"title":{},"body":{"license.html":{}}}],["shared/constants",{"_index":3337,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["shared/modules/cache/cache.module",{"_index":719,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/cache/cache.types",{"_index":724,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/locale/entity/localized",{"_index":1613,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["shared/modules/locale/locale.types",{"_index":1484,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["shared/modules/log/log.constants",{"_index":1198,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/log/log.module",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/messages",{"_index":3023,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/pageable/pageable.types",{"_index":1200,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["shared/modules/warlock/warlock.constants",{"_index":3021,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/warlock/warlock.module",{"_index":3086,"title":{},"body":{"modules/ProcessModule.html":{}}}],["shared/modules/warlock/warlock.types",{"_index":3022,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/transformers/simple",{"_index":1614,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["shared/utils/files.utils",{"_index":1843,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/utils/number.utils",{"_index":2347,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/object.utils",{"_index":191,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["shared/utils/string.utils",{"_index":2345,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/transform.utils",{"_index":1583,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["shares",{"_index":3751,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":3575,"title":{},"body":{"dependencies.html":{}}}],["sharpness",{"_index":584,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shot",{"_index":571,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutter",{"_index":514,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutterspeedvalue",{"_index":534,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["side",{"_index":489,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":4165,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["signature",{"_index":457,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["signature\"]?.description",{"_index":2004,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["signoptions",{"_index":737,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplejsontransformer",{"_index":1002,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"miscellaneous/variables.html":{}}}],["simplifying",{"_index":3607,"title":{},"body":{"index.html":{}}}],["single",{"_index":409,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["size",{"_index":355,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["skip",{"_index":3043,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["slicing",{"_index":3634,"title":{},"body":{"index.html":{}}}],["software",{"_index":495,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sole",{"_index":3956,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3913,"title":{},"body":{"license.html":{}}}],["sore",{"_index":4139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":1058,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["sort(cat",{"_index":1068,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sorted",{"_index":1074,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sortedkeys",{"_index":1222,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.length",{"_index":1234,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.slice(start",{"_index":1237,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sorting",{"_index":1147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortorder",{"_index":2934,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["sorts",{"_index":1070,"title":{},"body":{"injectables/CategoryService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["source.pipe",{"_index":2871,"title":{},"body":{"classes/MsClient.html":{}}}],["sources",{"_index":3703,"title":{},"body":{"index.html":{}}}],["space",{"_index":451,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["space\"]?.description",{"_index":1997,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["spaces",{"_index":473,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["special",{"_index":3930,"title":{},"body":{"license.html":{}}}],["specialization",{"_index":2277,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["specific",{"_index":267,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["specification",{"_index":442,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["specified",{"_index":180,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["specifies",{"_index":430,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["specifying",{"_index":498,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["speed",{"_index":515,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["split",{"_index":1284,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src",{"_index":4077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.config",{"_index":727,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/captcha.config",{"_index":2293,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["src/file.config",{"_index":2167,"title":{},"body":{"injectables/FileService.html":{}}}],["src/kp.config",{"_index":3268,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stack",{"_index":2554,"title":{},"body":{"classes/LogService.html":{},"classes/MsException.html":{}}}],["stacktrace",{"_index":2591,"title":{},"body":{"classes/LogService.html":{}}}],["stacktrace.split(\"\\n",{"_index":2593,"title":{},"body":{"classes/LogService.html":{}}}],["standard",{"_index":596,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["start",{"_index":134,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["start:web",{"_index":3704,"title":{},"body":{"index.html":{}}}],["started",{"_index":3591,"title":{"index.html":{},"license.html":{}},"body":{}}],["startprocess",{"_index":2976,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["startprocess(code",{"_index":3009,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["startprocess(processdata",{"_index":3100,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["starts",{"_index":169,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["startup",{"_index":3080,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["state",{"_index":3139,"title":{},"body":{"entities/ProcessUnitEntity.html":{},"index.html":{},"license.html":{}}}],["stated",{"_index":3829,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3885,"title":{},"body":{"license.html":{}}}],["static",{"_index":672,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["static/file",{"_index":4201,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/media",{"_index":4206,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/private/file",{"_index":4203,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/private/media",{"_index":4210,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/tmp",{"_index":4161,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stating",{"_index":3863,"title":{},"body":{"license.html":{}}}],["statistics",{"_index":3252,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats",{"_index":1437,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["stats.filescount",{"_index":3277,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.folderscount",{"_index":3278,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.isdirectory",{"_index":1441,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["status",{"_index":147,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["status.execute",{"_index":201,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["status.ready",{"_index":3064,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["statuses",{"_index":3003,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["stop",{"_index":135,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["stoppage",{"_index":3938,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":228,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["stopprocess",{"_index":2977,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stopprocess(code",{"_index":3011,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["stopprocess(processdata",{"_index":3102,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["stops",{"_index":163,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["storage",{"_index":1208,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["store",{"_index":69,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["stored",{"_index":2160,"title":{},"body":{"injectables/FileService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["stores",{"_index":616,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["storing",{"_index":3213,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":3185,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"data",{"_index":3187,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"end",{"_index":3190,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"error",{"_index":3192,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["string",{"_index":63,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["string.entity",{"_index":1016,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["string.entity.ts",{"_index":2527,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:33",{"_index":2531,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:37",{"_index":2530,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:40",{"_index":2532,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:43",{"_index":2533,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string[]).push(file",{"_index":1445,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["strings",{"_index":1095,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["stringutils",{"_index":2344,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stringutils.generaterandomstring",{"_index":2349,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["structure",{"_index":389,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subclasses",{"_index":156,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclient",{"_index":2793,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["subject",{"_index":541,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["subjectdistance",{"_index":543,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subjectdistancerange",{"_index":586,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sublicense",{"_index":3826,"title":{},"body":{"license.html":{}}}],["submission",{"_index":3887,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3790,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":3788,"title":{},"body":{"license.html":{}}}],["subsampling",{"_index":417,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subscribe",{"_index":2770,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribe(chanel",{"_index":2777,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscriber",{"_index":3364,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts",{"_index":263,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:28",{"_index":272,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:35",{"_index":290,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:47",{"_index":2491,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:48",{"_index":284,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:69",{"_index":2496,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:76",{"_index":274,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscribers",{"_index":265,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribes",{"_index":2779,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subsequently",{"_index":3808,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3161,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["successful",{"_index":1177,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["successfully",{"_index":774,"title":{},"body":{"classes/AuthService.html":{}}}],["such",{"_index":392,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":665,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"classes/MsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{}}}],["super(httpstatus.bad_request",{"_index":826,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["super(httpstatus.forbidden",{"_index":2273,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["super(httpstatus.not_found",{"_index":2921,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["super(httpstatus.unauthorized",{"_index":2417,"title":{},"body":{"classes/InvalidTokenMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["super.debug(this.preparemessage(message",{"_index":2581,"title":{},"body":{"classes/LogService.html":{}}}],["super.error(this.preparemessage(message",{"_index":2577,"title":{},"body":{"classes/LogService.html":{}}}],["super.log(this.preparemessage(message",{"_index":2575,"title":{},"body":{"classes/LogService.html":{}}}],["super.verbose(this.preparemessage(message",{"_index":2580,"title":{},"body":{"classes/LogService.html":{}}}],["super.warn(this.preparemessage(message",{"_index":2579,"title":{},"body":{"classes/LogService.html":{}}}],["supersede",{"_index":3894,"title":{},"body":{"license.html":{}}}],["support",{"_index":3641,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":3676,"title":{},"body":{"index.html":{}}}],["supports",{"_index":3632,"title":{},"body":{"index.html":{}}}],["sure",{"_index":3672,"title":{},"body":{"index.html":{}}}],["svg",{"_index":3983,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":229,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["symbol",{"_index":4133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"entity_save_handler",{"_index":4090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"logger_service",{"_index":4132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"ms_client",{"_index":4135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_broker",{"_index":4134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_bus",{"_index":4136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"redis_client",{"_index":4138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"warlock",{"_index":4159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1216,"title":{},"body":{"injectables/ConfigService.html":{}}}],["synchronizing",{"_index":1153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["syntax",{"_index":3974,"title":{},"body":{"license.html":{}}}],["system",{"_index":463,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/MediaModule.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["systems",{"_index":3719,"title":{},"body":{"index.html":{},"license.html":{}}}],["t",{"_index":319,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"entities/MediaEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["t.code",{"_index":991,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["t.id",{"_index":1048,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["t.target",{"_index":1657,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["tab",{"_index":1518,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{}}}],["tab.entity",{"_index":1665,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["tab.entity.ts",{"_index":1705,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:38",{"_index":1707,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:42",{"_index":1708,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:46",{"_index":1709,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:53",{"_index":1710,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:56",{"_index":1711,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tabbed",{"_index":1706,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["table",{"_index":1547,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["table_name",{"_index":1735,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["tableinheritance",{"_index":1767,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["tablename",{"_index":1494,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tables",{"_index":1543,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["tagname",{"_index":3442,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["take",{"_index":3062,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["taken",{"_index":511,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["target",{"_index":1481,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["target.entity",{"_index":1663,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{}}}],["target.entity.ts",{"_index":1713,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:103",{"_index":1718,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:107",{"_index":1719,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:41",{"_index":1737,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:45",{"_index":1736,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:49",{"_index":1717,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:53",{"_index":1734,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:57",{"_index":1732,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:60",{"_index":1733,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:63",{"_index":1723,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:67",{"_index":1716,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:75",{"_index":1725,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:83",{"_index":1731,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:91",{"_index":1727,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:99",{"_index":1729,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target_relations_basic",{"_index":4039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_full",{"_index":4040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_object",{"_index":4041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_section",{"_index":4042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetdata",{"_index":1523,"title":{"interfaces/TargetData.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targetparams",{"_index":1548,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targets",{"_index":1526,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":3608,"title":{},"body":{"index.html":{}}}],["template",{"_index":959,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["templated",{"_index":4061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates",{"_index":4060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temporary",{"_index":3241,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["terminate",{"_index":3852,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3723,"title":{},"body":{"license.html":{}}}],["tested",{"_index":3718,"title":{},"body":{"index.html":{}}}],["text",{"_index":2330,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["theory",{"_index":3921,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":3784,"title":{},"body":{"license.html":{}}}],["third",{"_index":3874,"title":{},"body":{"license.html":{}}}],["this.broker.emit(command.register",{"_index":3046,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.start",{"_index":3048,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.stop",{"_index":3049,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.unregister",{"_index":3055,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.cacheservice.del(config_cache_prefix",{"_index":1209,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(fullkey",{"_index":1249,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(key",{"_index":2362,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get",{"_index":104,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_family",{"_index":2385,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_path",{"_index":2386,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.google_public_key",{"_index":2297,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(key",{"_index":1241,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(kpconfig.tmp_dir",{"_index":3271,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.cacheservice.get(private_dir",{"_index":2269,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.get(public_dir",{"_index":2267,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.getboolean",{"_index":2295,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.getfrompattern",{"_index":1220,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.getnumber(captchaconfig.expiration",{"_index":2384,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${captcha_cache_prefix}:${id",{"_index":2358,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${key",{"_index":1213,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.set(fullkey",{"_index":1246,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.catrep.finddescendantstree(cat",{"_index":1082,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.catrep.findone",{"_index":1080,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.client.del(...keys",{"_index":3179,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.expire(key",{"_index":3184,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.get(key",{"_index":3174,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.incr(key",{"_index":3182,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.scanstream",{"_index":3186,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.set(key",{"_index":3177,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.constructor.name",{"_index":204,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.createbasicfindqb",{"_index":2209,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createbasicfindqb().where(\"file.id",{"_index":2205,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfiledirectory",{"_index":2190,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfileentity(ispublic",{"_index":2188,"title":{},"body":{"injectables/FileService.html":{}}}],["this.deleteexistingconfigtsfiles(fullpath",{"_index":1320,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.deleteexistingconfigtsfiles(process.cwd",{"_index":1207,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.execute",{"_index":213,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.fetchuser",{"_index":100,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.filerep",{"_index":2228,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.manager.transaction(async",{"_index":2175,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.save(entity",{"_index":2266,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findbyid(id",{"_index":867,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.findfilebyid(existedentityid",{"_index":2177,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findfilebyid(id",{"_index":2212,"title":{},"body":{"injectables/FileService.html":{}}}],["this.generatecolor",{"_index":2376,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.generateconfigtsfiles",{"_index":1211,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatedtsoutput",{"_index":1201,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatenamespacewithvariables",{"_index":1337,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.get(key",{"_index":3176,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.getaccesstokenfromrequest(req",{"_index":91,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.getcallingcontext",{"_index":2574,"title":{},"body":{"classes/LogService.html":{}}}],["this.getcaptchaexp",{"_index":2357,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontfamily",{"_index":2371,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontpath",{"_index":2373,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getdeletestats(dirstruct",{"_index":3275,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.getprivatedir",{"_index":2180,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getprocessdata(code",{"_index":3047,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getprocessdata(processcode",{"_index":3057,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getpublicdir",{"_index":2181,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getpublicdir()}/${file.id",{"_index":2214,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getstatus",{"_index":200,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.handlerequest(source",{"_index":2864,"title":{},"body":{"classes/MsClient.html":{}}}],["this.hashpassword(user.password",{"_index":324,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["this.hashpasswordifneeded(event",{"_index":3376,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.http.post",{"_index":2300,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.languagerep.find",{"_index":2468,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.findone",{"_index":2475,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.save(ls",{"_index":2478,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.lockexec",{"_index":3131,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.lockexec(`${processdata.code}_start",{"_index":3124,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.debug(`generated",{"_index":2359,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.debug(`sending",{"_index":2869,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.debug(message",{"_index":237,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.error",{"_index":2876,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["this.logger.error(`error",{"_index":3175,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(`invalid",{"_index":1291,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.error(`process",{"_index":3123,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.error(err",{"_index":3193,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(message",{"_index":233,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.log",{"_index":2202,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(\"init",{"_index":3035,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.log(`clean",{"_index":1205,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`config",{"_index":1215,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`file",{"_index":2227,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(`generate",{"_index":1210,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`scan",{"_index":1202,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(message",{"_index":231,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.verbose",{"_index":2509,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["this.logger.verbose(`delete",{"_index":1317,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`generated",{"_index":1341,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`read",{"_index":1312,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(message",{"_index":239,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.warn",{"_index":202,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["this.logger.warn(\"autostart",{"_index":3033,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.warn(`incorrect",{"_index":2365,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`invalid",{"_index":96,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`request",{"_index":2883,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.warn(message",{"_index":235,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance",{"_index":208,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance.content",{"_index":251,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.makeimagefromtext(val",{"_index":2355,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.mergepropertiescontent",{"_index":1263,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.metadataservice.createfilemetadataentity",{"_index":2199,"title":{},"body":{"injectables/FileService.html":{}}}],["this.oncrash(e",{"_index":222,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onfinish",{"_index":215,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onstop",{"_index":226,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.parser.parsestring(xmldata",{"_index":3540,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.parsevalue(value.trim",{"_index":1299,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.parsexmlfromrequest(req",{"_index":3536,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.patchfromctx(ctx",{"_index":2578,"title":{},"body":{"classes/LogService.html":{}}}],["this.pmservice.createloginstance",{"_index":209,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.getprocessunitstatus(this.constructor.name",{"_index":259,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.init",{"_index":3089,"title":{},"body":{"modules/ProcessModule.html":{}}}],["this.pmservice.setprocessunitstatus(processdata.code",{"_index":3129,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.setprocessunitstatus(this.constructor.name",{"_index":260,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.stopprocess(processdata.code",{"_index":3137,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.updateloginstance(this.loginstance",{"_index":255,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.processandvalidatepropertiescontent",{"_index":1272,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.processlogrep.find",{"_index":3061,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.findone",{"_index":3060,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save",{"_index":3058,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save(loginstance",{"_index":3059,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.find",{"_index":3037,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.findone",{"_index":3052,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.save(processdata",{"_index":3054,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.propertiesfiles",{"_index":1321,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[filepath",{"_index":1323,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[fullpath",{"_index":1271,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.proxy.emit(pattern",{"_index":2868,"title":{},"body":{"classes/MsClient.html":{}}}],["this.proxy.send(pattern",{"_index":2863,"title":{},"body":{"classes/MsClient.html":{}}}],["this.pubclient.duplicate",{"_index":2821,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.pubclient.publish(chanel",{"_index":2827,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.reflector.get",{"_index":3230,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registercronjob(data",{"_index":3114,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.resetallprocessstatuses",{"_index":3034,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.safeserialize(data",{"_index":2828,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.scanforpropertiesfiles(fullpath",{"_index":1266,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.scanforpropertiesfiles(process.cwd",{"_index":1204,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.schedulerregistry.addcronjob(processdata.code",{"_index":3133,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.deletecronjob(processdata.code",{"_index":3136,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.doesexist(\"cron",{"_index":3127,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.getcronjob(processdata.code",{"_index":3134,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.service.analyzedatabase",{"_index":1690,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["this.setaudiomd(md",{"_index":1864,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setimagemd(md",{"_index":1862,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setprocessunitstatus(processdata.code",{"_index":3063,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.setstatus(status.crashed",{"_index":221,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.execute",{"_index":211,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.ready",{"_index":214,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setvideomd(md",{"_index":1866,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.sort(cat",{"_index":1084,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.sort(res",{"_index":1085,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.startprocess(data",{"_index":3118,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.stopprocess(data",{"_index":3120,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.subclient",{"_index":2820,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.on(\"message",{"_index":2822,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.subscribe(chanel",{"_index":2829,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.unsubscribe(chanel",{"_index":2831,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.delete(chanel",{"_index":2832,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.get(chanel",{"_index":2825,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.has(chanel",{"_index":2823,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.set(chanel",{"_index":2830,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.trimproperties(md",{"_index":1867,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.trimproperties(obj[key",{"_index":1874,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.unregistercronjob(data",{"_index":3116,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.userrep.create(user",{"_index":869,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.findone",{"_index":862,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.remove(user",{"_index":872,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(newuser",{"_index":870,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(user",{"_index":866,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userservice.findbylogin(useridentity",{"_index":101,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.validatelogin(event.entity.login",{"_index":3375,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.validatetoken(token",{"_index":94,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.valuesofproperties",{"_index":1212,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[key",{"_index":1214,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[processedvalue.substring(1,processedvalue.length",{"_index":1308,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[propertykey",{"_index":1298,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.writelog",{"_index":216,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`nothing",{"_index":3273,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`process",{"_index":227,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`start",{"_index":210,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`tmp",{"_index":3280,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`try",{"_index":225,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["those",{"_index":3833,"title":{},"body":{"license.html":{}}}],["through",{"_index":3625,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":97,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{}}}],["throwerror",{"_index":2855,"title":{},"body":{"classes/MsClient.html":{}}}],["throwerror(error",{"_index":2885,"title":{},"body":{"classes/MsClient.html":{}}}],["throws",{"_index":299,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["thumb",{"_index":4043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3633,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tiff",{"_index":509,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["time",{"_index":419,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["timeout",{"_index":2764,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["timeout(opts?.timeout",{"_index":2872,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouterror",{"_index":2882,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouts",{"_index":2850,"title":{},"body":{"classes/MsClient.html":{}}}],["timestamp",{"_index":1762,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["tinput",{"_index":2753,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["title",{"_index":344,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["tmpdir",{"_index":3270,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["tmpdircleanerprocess",{"_index":3237,"title":{"classes/TmpDirCleanerProcess.html":{}},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["to(value",{"_index":4144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggle",{"_index":3016,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess",{"_index":2978,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess(code",{"_index":3013,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggles",{"_index":3015,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["token",{"_index":42,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["token.decorator.ts",{"_index":4009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokenizing",{"_index":4059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokens",{"_index":763,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["tool",{"_index":345,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toomanyrequestsmsexception",{"_index":3284,"title":{"classes/TooManyRequestsMsException.html":{}},"body":{"classes/TooManyRequestsMsException.html":{}}}],["tort",{"_index":3922,"title":{},"body":{"license.html":{}}}],["total",{"_index":2928,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["totalcount",{"_index":1233,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["touppercase",{"_index":1334,"title":{},"body":{"injectables/ConfigService.html":{}}}],["trace",{"_index":2552,"title":{},"body":{"classes/LogService.html":{}}}],["tracking",{"_index":804,"title":{},"body":{"classes/AuthService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trade",{"_index":3900,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3865,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3898,"title":{},"body":{"license.html":{}}}],["transactionmanager",{"_index":2176,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file",{"_index":2226,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.audio",{"_index":2223,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.gps",{"_index":2221,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.image",{"_index":2219,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.video",{"_index":2225,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.save(entity",{"_index":2201,"title":{},"body":{"injectables/FileService.html":{}}}],["transfer",{"_index":952,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{}}}],["transform",{"_index":1356,"title":{},"body":{"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/NotEmptyPipe.html":{}}}],["transform(transformutils.datetotime",{"_index":1592,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["transform(value",{"_index":2914,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["transformation",{"_index":1467,"title":{},"body":{"injectables/DtoInterceptor.html":{},"license.html":{}}}],["transformer",{"_index":1001,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["transformers/simple",{"_index":1017,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["transforming",{"_index":4145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformutils",{"_index":1582,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["translation",{"_index":3763,"title":{},"body":{"license.html":{}}}],["translations",{"_index":2528,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["transport",{"_index":2895,"title":{},"body":{"modules/MsClientModule.html":{}}}],["tree",{"_index":1014,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["tree(\"nested",{"_index":1021,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treechildren",{"_index":984,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treeparent",{"_index":1004,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treerepository",{"_index":1060,"title":{},"body":{"injectables/CategoryService.html":{}}}],["trees",{"_index":978,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["tresult",{"_index":2756,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["trigger",{"_index":2488,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["triggered",{"_index":1476,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{}}}],["trim",{"_index":1836,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimmed",{"_index":1837,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties",{"_index":1821,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties(obj",{"_index":1830,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trims",{"_index":1832,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["true",{"_index":87,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["true})@column('varchar",{"_index":987,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":997,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["true})@primarycolumn('varchar",{"_index":1622,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserRoleEntity.html":{}}}],["try",{"_index":212,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"miscellaneous/variables.html":{}}}],["ts_created",{"_index":1761,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["ts_updated",{"_index":2959,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["tscreated",{"_index":359,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tsupdated",{"_index":2949,"title":{},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["two",{"_index":3474,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["type\"]?.description",{"_index":1970,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["type(undefined",{"_index":2939,"title":{},"body":{"classes/PageableParams.html":{}}}],["type.code",{"_index":2659,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{}}}],["type.entity",{"_index":2661,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["type.entity.ts",{"_index":2732,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:21",{"_index":2733,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:25",{"_index":2737,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:28",{"_index":2740,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:31",{"_index":2738,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:34",{"_index":2739,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:37",{"_index":2735,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:41",{"_index":2736,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.ext",{"_index":4088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type.formats",{"_index":4087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3992,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":312,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":295,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/error/typeormerror",{"_index":1367,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeorm/subscriber/event/insertevent",{"_index":294,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["typeormerror",{"_index":1366,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeormmodule",{"_index":1035,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":2455,"title":{},"body":{"modules/LocaleModule.html":{},"modules/MediaModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":1037,"title":{},"body":{"modules/CategoryModule.html":{}}}],["typeormmodule.forfeature([explorertargetentity",{"_index":1689,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":2124,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([processunitentity",{"_index":3087,"title":{},"body":{"modules/ProcessModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3347,"title":{},"body":{"modules/UserModule.html":{}}}],["types",{"_index":1490,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":1130,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{}}}],["ui",{"_index":3599,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":3294,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["unauthorizedmsexception",{"_index":3292,"title":{"classes/UnauthorizedMsException.html":{}},"body":{"classes/UnauthorizedMsException.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"entities/ProcessUnitEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["undefined:undefined",{"_index":2585,"title":{},"body":{"classes/LogService.html":{}}}],["under",{"_index":684,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["underscores",{"_index":310,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["union",{"_index":3736,"title":{},"body":{"license.html":{}}}],["unique",{"_index":456,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["uniqueobjects",{"_index":3467,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.push(obj",{"_index":3471,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.reverse",{"_index":3472,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.some((uniqueobj",{"_index":3469,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["unit",{"_index":123,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/VideoFileMetadata.html":{}}}],["universal",{"_index":532,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["unknown",{"_index":51,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unknown_ip",{"_index":784,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":694,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["unlock",{"_index":3404,"title":{},"body":{"modules/WarlockModule.html":{}}}],["unregister",{"_index":3107,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["unregistercronjob",{"_index":3094,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistercronjob(processdata",{"_index":3104,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistered",{"_index":3108,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregisters",{"_index":3106,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unsigned",{"_index":1007,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["unsubscribe",{"_index":2771,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribe(chanel",{"_index":2780,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribes",{"_index":2782,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["up",{"_index":1558,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["update",{"_index":288,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["updatebyid",{"_index":836,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["updatebyid(id",{"_index":852,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updated",{"_index":854,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{}}}],["updatedatecolumn",{"_index":2961,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["updateevent",{"_index":283,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["updateloginstance",{"_index":2979,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updateloginstance(loginstance",{"_index":3017,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updates",{"_index":172,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["upgrade",{"_index":4173,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["uploaded",{"_index":1744,"title":{},"body":{"entities/FileEntity.html":{}}}],["uploading",{"_index":2128,"title":{},"body":{"injectables/FileService.html":{},"index.html":{}}}],["uploads",{"_index":2149,"title":{},"body":{"injectables/FileService.html":{}}}],["upsert",{"_index":2624,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["upsertmediarequest",{"_index":2625,"title":{"interfaces/UpsertMediaRequest.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["uri",{"_index":3506,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["url",{"_index":983,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["usage",{"_index":483,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["use",{"_index":688,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["use(req",{"_index":3525,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["useclass",{"_index":743,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["used",{"_index":369,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/AuthGuard.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/Roles.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["usefactory",{"_index":733,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["usefactory(...args).config",{"_index":3203,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefiles",{"_index":3515,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["user",{"_index":71,"title":{"interfaces/User.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["user's",{"_index":806,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["user.constants",{"_index":860,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.decorator.ts",{"_index":4018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.entity",{"_index":3374,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.id",{"_index":321,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{}}}],["user.login",{"_index":865,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.password",{"_index":313,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password.tostring",{"_index":315,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password?.length",{"_index":316,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.types",{"_index":856,"title":{},"body":{"injectables/BasicUserService.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["user/entity/user",{"_index":1485,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["user/user.module",{"_index":723,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.types",{"_index":1488,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/XdbRequest.html":{}}}],["user_relations",{"_index":859,"title":{},"body":{"injectables/BasicUserService.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":1581,"title":{"classes/UserDto.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentity",{"_index":297,"title":{"entities/UserEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentitypwdandrolessavehandler",{"_index":3330,"title":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["useridentity",{"_index":92,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["usermodule",{"_index":722,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule.forroot",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{}}}],["usermoduleoptions",{"_index":3302,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":904,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["userrep",{"_index":839,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userrole",{"_index":3227,"title":{"interfaces/UserRole.html":{}},"body":{"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroledto",{"_index":3300,"title":{"classes/UserRoleDto.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroleentity",{"_index":1045,"title":{"entities/UserRoleEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["userroles",{"_index":3232,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":3315,"title":{},"body":{"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["userservice",{"_index":22,"title":{"classes/UserService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userservice:43",{"_index":847,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:56",{"_index":844,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:70",{"_index":853,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:85",{"_index":842,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:97",{"_index":849,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["usersubscriber",{"_index":3362,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{}}}],["userupdaterequest",{"_index":3301,"title":{"interfaces/UserUpdateRequest.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userutils",{"_index":3222,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userutils.hassomerole",{"_index":3229,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uses",{"_index":3074,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["using",{"_index":277,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["utc",{"_index":530,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["utf",{"_index":4074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/env.loader",{"_index":891,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["utils/object.utils",{"_index":1078,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["utils/user.utils",{"_index":3223,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uuid",{"_index":2338,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2337,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["v.code",{"_index":3339,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["v.codec_type",{"_index":1881,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["v4",{"_index":2336,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["val",{"_index":2352,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{}}}],["valid",{"_index":73,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validate",{"_index":70,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha",{"_index":972,"title":{},"body":{"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatecaptcha(request",{"_index":966,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validated",{"_index":2289,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatelogin",{"_index":271,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validatelogin(login",{"_index":289,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validates",{"_index":65,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/UserSubscriber.html":{}}}],["validatetoken",{"_index":27,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validatetoken(token",{"_index":62,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validation",{"_index":964,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validator",{"_index":958,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"dependencies.html":{}}}],["validity",{"_index":40,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["value",{"_index":183,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2506,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["value.trim",{"_index":1301,"title":{},"body":{"injectables/ConfigService.html":{}}}],["value[0",{"_index":2507,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["values",{"_index":1108,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"interfaces/XdbRequest.html":{}}}],["valuesofproperties",{"_index":1113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["valuetransformer",{"_index":4141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":1770,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["variablename",{"_index":1283,"title":{},"body":{"injectables/ConfigService.html":{}}}],["variables",{"_index":1138,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variation",{"_index":4002,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["various",{"_index":399,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["vector",{"_index":3638,"title":{},"body":{"index.html":{}}}],["verbal",{"_index":3793,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2546,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":2569,"title":{},"body":{"classes/LogService.html":{}}}],["verification",{"_index":371,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["versa",{"_index":4148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":441,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version\"]?.description",{"_index":1989,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["vertical",{"_index":558,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["vice",{"_index":4147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":404,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["videofilemetadata",{"_index":406,"title":{"interfaces/VideoFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadataentity",{"_index":1811,"title":{"entities/VideoFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videomd",{"_index":1893,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.bit_rate",{"_index":1904,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_long_name",{"_index":1898,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_name?.touppercase",{"_index":1896,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_range",{"_index":1912,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_space",{"_index":1914,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.display_aspect_ratio",{"_index":1910,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.height",{"_index":1902,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.r_frame_rate",{"_index":1916,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.sample_aspect_ratio",{"_index":1908,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.tags?.rotate",{"_index":1918,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.width",{"_index":1900,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["virtual",{"_index":1505,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["visit",{"_index":3668,"title":{},"body":{"index.html":{}}}],["void",{"_index":1075,"title":{},"body":{"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["vp6",{"_index":2619,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["warlock",{"_index":3020,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warlock(client",{"_index":3399,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.constants",{"_index":3393,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.lock",{"_index":3402,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.types",{"_index":3394,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlockfn",{"_index":2981,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["warlockmodule",{"_index":3070,"title":{"modules/WarlockModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["warn",{"_index":2547,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":2571,"title":{},"body":{"classes/LogService.html":{}}}],["warning",{"_index":2573,"title":{},"body":{"classes/LogService.html":{}}}],["warranties",{"_index":703,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["warranty",{"_index":3908,"title":{},"body":{"license.html":{}}}],["web",{"_index":3705,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["webp",{"_index":3637,"title":{},"body":{"index.html":{}}}],["webpsupport",{"_index":2638,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["website",{"_index":3670,"title":{},"body":{"index.html":{}}}],["well",{"_index":3636,"title":{},"body":{"index.html":{}}}],["where(\"file.code",{"_index":2210,"title":{},"body":{"injectables/FileService.html":{}}}],["wherever",{"_index":3873,"title":{},"body":{"license.html":{}}}],["whether",{"_index":33,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"license.html":{}}}],["white",{"_index":573,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whitebalance",{"_index":576,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whole",{"_index":3777,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1072,"title":{},"body":{"injectables/CategoryService.html":{}}}],["width",{"_index":412,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["width\"]?.value",{"_index":1957,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["withfiletypes",{"_index":1251,"title":{},"body":{"injectables/ConfigService.html":{}}}],["within",{"_index":3810,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":702,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["work",{"_index":936,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"index.html":{},"license.html":{}}}],["working",{"_index":1032,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["works",{"_index":3772,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3815,"title":{},"body":{"license.html":{}}}],["writelog",{"_index":136,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writelog(message",{"_index":173,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writerequest",{"_index":1531,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["writes",{"_index":177,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writing",{"_index":699,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["written",{"_index":3794,"title":{},"body":{"license.html":{}}}],["x",{"_index":488,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["xdb",{"_index":3426,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.getxmlparser",{"_index":3530,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.parsexmlbody(req.body",{"_index":3537,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdbaction",{"_index":3414,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbdecomposedentity",{"_index":3415,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportdto",{"_index":3416,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportparams",{"_index":3412,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportservice",{"_index":3405,"title":{"classes/XdbExportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbimportservice",{"_index":3423,"title":{"classes/XdbImportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbmoduleoptions",{"_index":3512,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["xdbobject",{"_index":3417,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrequest",{"_index":3496,"title":{"interfaces/XdbRequest.html":{}},"body":{"interfaces/XdbRequest.html":{}}}],["xdbrowdata",{"_index":3418,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrowdatavalue",{"_index":3505,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xml",{"_index":3409,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3420,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{}}}],["xml2js.parser",{"_index":3435,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["xmldata",{"_index":3429,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgeexportservice",{"_index":3544,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeimportservice",{"_index":3543,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemiddleware",{"_index":3518,"title":{"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgemodule",{"_index":3511,"title":{"modules/XmlDataBridgeModule.html":{}},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":492,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yargs",{"_index":3422,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["ycbcrpositioning",{"_index":503,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["year",{"_index":346,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["z0",{"_index":303,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["z][_a",{"_index":1289,"title":{},"body":{"injectables/ConfigService.html":{}}}],["za",{"_index":302,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["zerofill",{"_index":648,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["zip",{"_index":3557,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":577,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbstractAuthGuard.html":{"url":"guards/AbstractAuthGuard.html","title":"guard - AbstractAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbstractAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/abstract-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    An abstract class for creating authentication guards.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                cacheService\n                            \n                            \n                                    Protected\n                                fetchUser\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getAccessTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:49\n                        \n                    \n\n\n            \n                \n                        Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A boolean indicating whether the request is allowed to proceed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAccessTokenFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:85\n                        \n                    \n\n\n            \n                \n                        Extracts the access token from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The access token if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:74\n                        \n                    \n\n\n            \n                \n                        Validates the given access token by checking it against the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The user identity if the token is valid, otherwise null.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ACCESS_TOKEN_ERROR_MSG,\n  AUTH_ACCESS_TOKEN_PREFIX,\n  AUTH_JWT_CACHE_PREFIX,\n} from \"../../common/auth/auth.constants\";\nimport { Request } from \"express\";\nimport { CacheService } from \"../modules/cache/cache.types\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS } from \"../constants\";\n\n/**\n * @abstract\n * @class AbstractAuthGuard\n * An abstract class for creating authentication guards.\n */\nexport abstract class AbstractAuthGuard implements CanActivate {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly cacheService: CacheService;\n  protected abstract readonly userService: UserService;\n  protected fetchUser = true;\n\n  /**\n   * Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n   * @param context - The execution context of the request.\n   * @returns A boolean indicating whether the request is allowed to proceed.\n   */\n  async canActivate(context: ExecutionContext) {\n    const req = context.switchToHttp().getRequest();\n    const token = this.getAccessTokenFromRequest(req);\n    const userIdentity = await this.validateToken(token);\n    if (userIdentity) {\n      req[REQUEST_PROPS.accessToken] = token;\n    } else {\n      this.logger.warn(`Invalid token: ${token}`);\n      throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n    }\n    if (this.fetchUser) {\n      const user = await this.userService.findByLogin(userIdentity);\n      if (!user) {\n        throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n      }\n      req[REQUEST_PROPS.currentUser] = user;\n    }\n    return true;\n  }\n\n  /**\n   * Validates the given access token by checking it against the store.\n   * @param token - The access token to validate.\n   * @returns The user identity if the token is valid, otherwise null.\n   */\n  private async validateToken(token: string) {\n    return this.cacheService.get(\n      `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${token}`,\n    );\n  }\n\n  /**\n   * Extracts the access token from the request.\n   * @param req - The request object.\n   * @returns The access token if found, otherwise null.\n   */\n  private getAccessTokenFromRequest(req: Request) {\n    if (req.cookies?.accessToken) {\n      return req.cookies.accessToken;\n    }\n    if (req.headers?.authorization) {\n      const authorizationHeader = req.headers.authorization;\n      const parts = authorizationHeader.match(/Bearer\\s+(\\S+)\\s*(.+)?/);\n      if (!parts.length) {\n        return null;\n      }\n      return parts[1];\n    }\n    return null;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractProcess.html":{"url":"classes/AbstractProcess.html","title":"class - AbstractProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/abstract-process.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a process unit managing instance.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/abstract-process.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:165\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:157\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:140\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:148\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:173\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:44\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:80\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:94\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { ObjectUtils } from \"../../shared/utils/object.utils\";\nimport registerProcess = Process.registerProcess;\nimport Status = Process.Status;\nimport inspect = ObjectUtils.inspect;\nimport LogLevel = Process.LogLevel;\n\n/**\n * Abstract class representing a process unit managing instance.\n */\nexport abstract class AbstractProcess {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly pmService: ProcessManagerService;\n  private logInstance: ProcessLogEntity;\n\n  protected abstract execute(): Promise;\n\n  protected constructor() {\n    registerProcess(this);\n  }\n\n  /**\n   * Starts the process and handles its execution.\n   */\n  async start() {\n    const status = await this.getStatus();\n    if (status === Status.Execute) {\n      this.logger.warn(\n        `Process with id ${this.constructor.name} now executed, can't start that`,\n      );\n      return;\n    }\n    this.logInstance = await this.pmService.createLogInstance(\n      this.constructor.name,\n    );\n    await this.writeLog(`Start process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Execute);\n    try {\n      await this.execute();\n      await this.setStatus(Status.Ready);\n      await this.onFinish();\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was finished`,\n      );\n      this.logInstance = undefined;\n    } catch (e) {\n      await this.setStatus(Status.Crashed);\n      await this.onCrash(e);\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was crashed`,\n        e,\n        LogLevel.Error,\n      );\n      this.logInstance = undefined;\n    }\n  }\n\n  /**\n   * Stops the process and updates its status.\n   */\n  async stop() {\n    await this.writeLog(`Try to stop process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Ready);\n    await this.onStop();\n    await this.writeLog(`Process with id ${this.constructor.name} was stopped`);\n    this.logInstance = undefined;\n  }\n\n  /**\n   * Writes a log entry with the specified message, data, and log level.\n   * @param message - The log message.\n   * @param data - Optional additional data.\n   * @param level - The log level (default: LogLevel.Log).\n   */\n  protected async writeLog(\n    message: string,\n    data?: unknown,\n    level = LogLevel.Log,\n  ) {\n    switch (level) {\n      case LogLevel.Log:\n        this.logger.log(message, data);\n        break;\n      case LogLevel.Error:\n        this.logger.error(message, data);\n        break;\n      case LogLevel.Warn:\n        this.logger.warn(message, data);\n        break;\n      case LogLevel.Debug:\n        this.logger.debug(message, data);\n        break;\n      case LogLevel.Verbose:\n        this.logger.verbose(message, data);\n        break;\n    }\n    if (!this.logInstance) {\n      return;\n    }\n    const date = new Date();\n    let msg = inspect(message);\n    if (\n      (msg.startsWith(`'`) && msg.endsWith(`'`)) ||\n      (msg.startsWith(`\"`) && msg.endsWith(`\"`))\n    ) {\n      msg = msg.substring(1, msg.length - 1);\n    }\n    if (data) {\n      msg += inspect(data);\n    }\n    msg = msg.replace(/\\[/g, \"{\");\n    msg = msg.replace(/]/g, \"}\");\n    this.logInstance.content += `[${process.pid} | ${date.toLocaleString()} | ${level}] ${msg} >>>\\n`;\n    await this.pmService.updateLogInstance(this.logInstance);\n  }\n\n  /**\n   * Callback method that is called when the process finishes.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onFinish() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process stops.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onStop() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process crashes.\n   * Can be overridden by subclasses if needed.\n   * @param error - The error that caused the crash.\n   */\n  protected async onCrash(error: Error) {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Gets the current status of the process.\n   * @returns The current process status.\n   */\n  private async getStatus() {\n    return await this.pmService.getProcessUnitStatus(this.constructor.name);\n  }\n\n  /**\n   * Sets the status of the process.\n   * @param status - The new status to set.\n   */\n  private async setStatus(status: Status) {\n    await this.pmService.setProcessUnitStatus(this.constructor.name, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUserSubscriber.html":{"url":"classes/AbstractUserSubscriber.html","title":"class - AbstractUserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/abstract-user-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for user entity subscribers to handle specific events.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Protected\n                                    Async\n                                hashPasswordIfNeeded\n                            \n                            \n                                    Protected\n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/abstract-user-subscriber.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:76\n                        \n                    \n\n\n            \n                \n                        Hashes a password using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The hashed password.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPasswordIfNeeded\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPasswordIfNeeded(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:48\n                        \n                    \n\n\n            \n                \n                        Hashes the user password if it has changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InsertEvent | UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe insert or update event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates the login format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login string to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { UpdateEvent } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Abstract class for user entity subscribers to handle specific events.\n */\nexport abstract class AbstractUserSubscriber {\n  protected abstract readonly type: Type;\n\n  /**\n   * Validates the login format.\n   * @param login - The login string to validate.\n   * @throws BadRequestException if the login format is invalid.\n   */\n  protected async validateLogin(login: string) {\n    const loginRegex = /^[A-Za-z0-9_]+$/;\n    if (!loginRegex.test(login)) {\n      throw new BadRequestException(\n        \"Login must contain only Latin letters, numbers, and underscores.\",\n      );\n    }\n  }\n\n  /**\n   * Hashes the user password if it has changed.\n   * @param event - The insert or update event.\n   */\n  protected async hashPasswordIfNeeded(event: InsertEvent | UpdateEvent) {\n    const { entity: user, manager } = event;\n    if (typeof user.password === \"number\") {\n      user.password = user.password.toString();\n    }\n    if (!user.password?.length) {\n      delete user.password;\n      return;\n    }\n    const foundUser: T = await manager.findOne(this.type, {\n      where: { id: user.id },\n    });\n    if (foundUser) {\n      if (await bcrypt.compare(user.password, foundUser.password)) {\n        user.password = foundUser.password;\n      } else {\n        user.password = await this.hashPassword(user.password);\n      }\n    } else {\n      user.password = await this.hashPassword(user.password);\n    }\n  }\n\n  /**\n   * Hashes a password using bcrypt.\n   * @param password - The password to hash.\n   * @returns The hashed password.\n   */\n  protected async hashPassword(password: string) {\n    return await bcrypt.hash(password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioFileMetadata.html":{"url":"interfaces/AudioFileMetadata.html","title":"interface - AudioFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing audio file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            codecProfile\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            numberOfChannels\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tool\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codecProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codecProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AudioFileMetadataEntity.html":{"url":"entities/AudioFileMetadataEntity.html","title":"entity - AudioFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AudioFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/audio-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the audio metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                album\n                            \n                            \n                                    \n                                    \n                                artist\n                            \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                codecProfile\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                numberOfChannels\n                            \n                            \n                                    \n                                    \n                                sampleRate\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                tool\n                            \n                            \n                                    \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codecProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'codec_profile', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'number_of_channels', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'sample_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { AudioFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the audio metadata of the file\n */\n@Entity(\"file_metadata_audio\")\nexport class AudioFileMetadataEntity implements AudioFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"int\", { name: \"sample_rate\", nullable: true })\n  sampleRate: number;\n\n  @Index()\n  @Column(\"int\", { name: \"number_of_channels\", nullable: true })\n  numberOfChannels: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"codec_profile\", nullable: true })\n  codecProfile: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  tool: string;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  title: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  artist: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  album: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  year: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  genre: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/auth.guard.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class AuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n */\n@Injectable()\nexport class AuthGuard extends AbstractAuthGuard {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module providing auth process.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AuthModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: AuthorizationService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { AuthModuleOptions } from \"./auth.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { AuthConfig } from \"../../../gen-src/auth.config\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Module providing auth process.\n */\n@Module({})\nexport class AuthModule {\n  static forRoot(\n    options: AuthModuleOptions = { service: AuthorizationService },\n  ): DynamicModule {\n    return {\n      module: AuthModule,\n      imports: [\n        PassportModule,\n        CacheModule,\n        LogModule,\n        UserModule.forRoot(),\n        JwtModule.registerAsync({\n          imports: [CacheModule],\n          inject: [CacheService],\n          useFactory: async (cs: CacheService) => {\n            return {\n              secret: await cs.get(AuthConfig.JWT_SECRET),\n              signOptions: {\n                expiresIn: await cs.getNumber(\n                  AuthConfig.ACCESS_TOKEN_EXPIRATION,\n                ),\n              },\n            };\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: AuthService,\n          useClass: options.service,\n        },\n      ],\n      exports: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract service class for authentication and authorization.\nDefines the methods that must be implemented by any derived service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                authenticate\n                            \n                            \n                                    Abstract\n                                exchangeToken\n                            \n                            \n                                    Abstract\n                                invalidateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: LoginPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:109\n                        \n                    \n\n\n            \n                \n                        Authenticate the user with the provided login payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLoginPayload object with user login information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a JwtDto containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:123\n                        \n                    \n\n\n            \n                \n                        Exchange the provided refresh token for a new access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe refresh token to exchange.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A Promise that resolves to a Partial containing new access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    invalidateToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:116\n                        \n                    \n\n\n            \n                \n                        Invalidate the specified access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to invalidate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtDto, LoginPayload } from \"./auth.types\";\n\n/**\n * Error message for access token related errors.\n * @constant\n */\nexport const ACCESS_TOKEN_ERROR_MSG = \"ERR_TOKEN_A\";\n\n/**\n * Error message for refresh token related errors.\n * @constant\n */\nexport const REFRESH_TOKEN_ERROR_MSG = \"ERR_TOKEN_R\";\n\n/**\n * Placeholder for unknown IP addresses.\n * @constant\n */\nexport const UNKNOWN_IP = \"unknown\";\n\n/**\n * Prefix for JWT cache keys.\n * @constant\n */\nexport const AUTH_JWT_CACHE_PREFIX = \"jwt\";\n\n/**\n * Prefix for access token cache keys.\n * @constant\n */\nexport const AUTH_ACCESS_TOKEN_PREFIX = \"access_token\";\n\n/**\n * Prefix for refresh token cache keys.\n * @constant\n */\nexport const AUTH_REFRESH_TOKEN_PREFIX = \"refresh_token\";\n\n/**\n * Prefix for brute force protection cache keys.\n * @constant\n */\nexport const BRUTEFORCE_JWT_CACHE_PREFIX = \"bruteforce\";\n\n/**\n * Generates a cache key for an access token.\n * @param accessToken - The access token.\n * @returns The generated cache key.\n */\nexport const jwtAccessTokenKey = (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n};\n\n/**\n * Generates a cache key for a refresh token.\n * @param accessToken - The access token.\n * @param refreshToken - The refresh token.\n * @returns The generated cache key.\n */\nexport const jwtRefreshTokenKey = (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n};\n\n/**\n * Generates a cache key for tracking brute force login attempts by login.\n * @param login - The user's login.\n * @returns The generated cache key.\n */\nexport const bruteForceLoginKey = (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`;\n\n/**\n * Generates a cache key for tracking brute force login attempts by IP address.\n * @param ipAddress - The IP address of the user.\n * @returns The generated cache key.\n */\nexport const bruteForceIPKey = (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`;\n\n/**\n * Abstract service class for authentication and authorization.\n * Defines the methods that must be implemented by any derived service.\n */\nexport abstract class AuthService {\n  /**\n   * Authenticate the user with the provided login payload.\n   * @param data - LoginPayload object with user login information.\n   * @returns A Promise that resolves to a JwtDto containing access and refresh tokens.\n   */\n  abstract authenticate(data: LoginPayload): Promise;\n\n  /**\n   * Invalidate the specified access token.\n   * @param accessToken - The access token to invalidate.\n   * @returns A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n   */\n  abstract invalidateToken(accessToken: string);\n\n  /**\n   * Exchange the provided refresh token for a new access token.\n   * @param refreshToken - The refresh token to exchange.\n   * @returns A Promise that resolves to a Partial containing new access and refresh tokens.\n   */\n  abstract exchangeToken(refreshToken: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestMsException.html":{"url":"classes/BadRequestMsException.html","title":"class - BadRequestMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/bad-request-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for bad requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/bad-request-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for bad requests, extending MsException.\n */\nexport class BadRequestMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.BAD_REQUEST, message || \"Bad request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicUserService.html":{"url":"injectables/BasicUserService.html","title":"injectable - BasicUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user-service-basic.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides methods to interact with the UserEntity repository.\n\n            \n\n            \n                Extends\n            \n            \n                            UserService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/user/user-service-basic.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:85\n\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:56\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:43\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:97\n\n                        \n                    \n\n\n            \n                \n                        Remove a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:70\n\n                        \n                    \n\n\n            \n                \n                        Update a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object with updated properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { User, UserService } from \"./user.types\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { USER_RELATIONS } from \"./user.constants\";\n\n/**\n * @class BasicUserService\n * Provides methods to interact with the UserEntity repository.\n */\n@Injectable()\nexport class BasicUserService extends UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRep: Repository,\n  ) {\n    super();\n  }\n\n  /**\n   * Find a user by their login.\n   * @async\n   * @param {string} login - The user's login.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findByLogin(login: string): Promise {\n    return await this.userRep.findOne({\n      where: { login, active: true },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Find a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findById(id: string): Promise {\n    return await this.userRep.findOne({\n      where: { id },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Update a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @param {User} user - The user object with updated properties.\n   * @returns {Promise} The updated user.\n   */\n  async updateById(id: string, user: User): Promise {\n    user.id = id;\n    if (user.login) {\n      delete user.login;\n    }\n    await this.userRep.save(user);\n    return await this.findById(id);\n  }\n\n  /**\n   * Create a new user.\n   * @async\n   * @param {User} user - The user object to create.\n   * @returns {Promise} The created user.\n   */\n  async create(user: User): Promise {\n    const newUser = this.userRep.create(user);\n    return await this.userRep.save(newUser);\n  }\n\n  /**\n   * Remove a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The removed user.\n   * @throws {NotFoundException} If the user with the specified ID is not found.\n   */\n  async removeById(id: string): Promise {\n    const user = await this.findById(id);\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.userRep.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CacheModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides caching functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { RedisModule } from \"./redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { CacheService } from \"./cache.types\";\nimport { RedisCacheService } from \"./redis-cache.service\";\n\n/**\n * A module that provides caching functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n    LogModule,\n  ],\n  providers: [\n    {\n      provide: CacheService,\n      useClass: RedisCacheService,\n    },\n  ],\n  exports: [CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.types.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class defining methods for cache operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                del\n                            \n                            \n                                    Abstract\n                                expire\n                            \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                getBoolean\n                            \n                            \n                                    Abstract\n                                getFromPattern\n                            \n                            \n                                    Abstract\n                                getNumber\n                            \n                            \n                                    Abstract\n                                incr\n                            \n                            \n                                    Abstract\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CacheService {\n  abstract get(key: string): Promise;\n\n  abstract getNumber(key: string): Promise;\n\n  abstract getBoolean(key: string): Promise;\n\n  abstract set(\n    key: string,\n    value: string | number,\n    expiration?: number,\n  ): Promise;\n\n  abstract del(...keys: string[]): Promise;\n\n  abstract incr(key: string): Promise;\n\n  abstract expire(key: string, expiresIn: number): Promise;\n\n  abstract getFromPattern(pattern: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/captcha/captcha.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with captcha.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: CaptchaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CaptchaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: GraphicCaptchaService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { GraphicCaptchaService } from \"./graphic-captcha.service\";\nimport { CaptchaModuleOptions, CaptchaService } from \"./captcha.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n/**\n * Module for work with captcha.\n */\n@Module({})\nexport class CaptchaModule {\n  static forRoot(\n    options: CaptchaModuleOptions = { service: GraphicCaptchaService },\n  ): DynamicModule {\n    return {\n      module: CaptchaModule,\n      imports: [CacheModule, LogModule],\n      providers: [\n        {\n          provide: CaptchaService,\n          useClass: options.service,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => Promise | CaptchaService;\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: CaptchaModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: CaptchaService,\n          useFactory,\n          inject,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaRequest.html":{"url":"classes/CaptchaRequest.html","title":"class - CaptchaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for validate the CAPTCHA.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:55\n                        \n                    \n\n            \n                \n                    The data associated with the CAPTCHA request.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:49\n                        \n                    \n\n            \n                \n                    The unique identifier for the CAPTCHA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaService.html":{"url":"classes/CaptchaService.html","title":"class - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a CAPTCHA service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                generateCaptcha\n                            \n                            \n                                    Abstract\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:29\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the CAPTCHA data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:36\n                        \n                    \n\n\n            \n                \n                        Validates a CAPTCHA.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data for validate the CAPTCHA.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the validation result (true if the CAPTCHA is valid).\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores category trees\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n} from \"typeorm\";\nimport { LocalizedStringEntity } from \"../../locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../transformers/simple-json.transformer\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores category trees\n */\n@Entity(\"categories\")\n@Tree(\"nested-set\")\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  url: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @TreeParent()\n  parent: CategoryEntity;\n\n  @TreeChildren()\n  children: CategoryEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_imports\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/category/category.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for working with categories.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { CategoryService } from \"./category.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LogModule } from \"../log/log.module\";\n\n/**\n * A module that provides services and configurations for working with categories.\n */\n@Module({\n  imports: [LogModule, TypeOrmModule.forFeature([CategoryEntity])],\n  providers: [CategoryService],\n  exports: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryRestrictionEntity.html":{"url":"entities/CategoryRestrictionEntity.html","title":"entity - CategoryRestrictionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryRestrictionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category-restriction.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the settings for restricting access by user roles for categories\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowFor\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { CategoryEntity } from \"./category.entity\";\nimport { UserRoleEntity } from \"../../../../common/user/entity/user-role.entity\";\n\n/**\n * The entity stores the settings for restricting access by user roles for categories\n */\n@Entity(\"category_restriction\")\nexport class CategoryRestrictionEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  allowFor: UserRoleEntity[];\n\n  @ManyToOne(() => CategoryEntity, (t) => t.id)\n  category: CategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for working with tree-categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDescendantsByCodeOfRoot\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRep: TreeRepository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/category/category.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRep\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescendantsByCodeOfRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescendantsByCodeOfRoot(code: string, depth?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Get descendants of a category by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the root category.\n\n                                            \n                                        \n                                        \n                                                depth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The maximum depth for the search (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the tree of descendants of the category.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(cat: CategoryEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Sorts the children of a category by priority.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoryEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe category entity whose children need to be sorted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TreeRepository } from \"typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { CATEGORY_RELATIONS } from \"./category.constants\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\n\n/**\n * Service for working with tree-categories.\n */\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly catRep: TreeRepository,\n    @Inject(LOGGER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Get descendants of a category by its code.\n   * @param code The code of the root category.\n   * @param depth The maximum depth for the search (optional).\n   * @returns A promise that resolves to the tree of descendants of the category.\n   */\n  async getDescendantsByCodeOfRoot(code: string, depth?: number) {\n    const cat = await this.catRep.findOne({\n      where: { code },\n      relations: CATEGORY_RELATIONS,\n    });\n    const res = await this.catRep.findDescendantsTree(cat, {\n      depth,\n      relations: CATEGORY_RELATIONS,\n    });\n    res.children?.forEach((cat) => this.sort(cat));\n    this.sort(res);\n    return res;\n  }\n\n  /**\n   * Sorts the children of a category by priority.\n   * @param cat - The category entity whose children need to be sorted.\n   */\n  private sort(cat: CategoryEntity) {\n    ObjectUtils.sort(cat.children, \"priority\", false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigItem.html":{"url":"interfaces/ConfigItem.html","title":"interface - ConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration item.\nEach configuration item consists of a key and a value, both of which are strings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the configuration item.\nThis is the identifier for the configuration setting.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value of the configuration item.\nThis is the value associated with the configuration key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigItem {\n  /**\n   * The key of the configuration item.\n   * This is the identifier for the configuration setting.\n   */\n  key: string;\n\n  /**\n   * The value of the configuration item.\n   * This is the value associated with the configuration key.\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/config/config.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with system configuration.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module for work with system configuration.\n */\n@Module({\n  imports: [LogModule, CacheModule],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService is a service responsible for managing configurations in application.\nIt reads configuration properties from .properties files and stores the values in a store for fast retrieval.\nThe service provides methods to get, set, and remove configuration properties.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatedTsOutput\n                            \n                            \n                                    Private\n                                    Readonly\n                                propertiesFiles\n                            \n                            \n                                    Private\n                                    Readonly\n                                valuesOfProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteExistingConfigTsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                generateConfigTsFiles\n                            \n                            \n                                    Private\n                                generateNamespaceWithVariables\n                            \n                            \n                                    Async\n                                getPropertiesPage\n                            \n                            \n                                    Async\n                                initWithPropertiesFiles\n                            \n                            \n                                    Private\n                                mergePropertiesContent\n                            \n                            \n                                    Private\n                                parseValue\n                            \n                            \n                                    Private\n                                    Async\n                                processAndValidatePropertiesContent\n                            \n                            \n                                    Async\n                                removeProperty\n                            \n                            \n                                    Private\n                                    Async\n                                scanForPropertiesFiles\n                            \n                            \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/config/config.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteExistingConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteExistingConfigTsFiles(directory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:290\n                        \n                    \n\n\n            \n                \n                        Deletes existing configuration TypeScript files in the specified directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe directory to scan for generated configuration files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateConfigTsFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:322\n                        \n                    \n\n\n            \n                \n                        Generates TypeScript configuration files based on the processed properties files.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateNamespaceWithVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNamespaceWithVariables(namespaceName: string, processedData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Generates a namespace with variables based on the processed data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                namespaceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the namespace.\n\n\n                                            \n                                        \n                                        \n                                                processedData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe processed data to include in the namespace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The generated namespace content as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPropertiesPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPropertiesPage(params: PageableParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Retrieves a page of configuration properties based on the provided pageable parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPageable parameters for sorting, filtering, and pagination.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to an object containing the pageable data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initWithPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    initWithPropertiesFiles(genCnfDir?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genCnfDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergePropertiesContent(mainContent: string, localContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:357\n                        \n                    \n\n\n            \n                \n                        Merges the content of the main properties file with the content of the local properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mainContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the main properties file.\n\n\n                                            \n                                        \n                                        \n                                                localContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the local properties file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The merged content.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Parses the value of a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The parsed value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processAndValidatePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndValidatePropertiesContent(filePath: string, content: string, fileNamePrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:211\n                        \n                    \n\n\n            \n                \n                        Processes and validates the content of a properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the properties file.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the properties file.\n\n\n                                            \n                                        \n                                        \n                                                fileNamePrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe prefix to use for the properties in the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the processed data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Removes a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the configuration property to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        scanForPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    scanForPropertiesFiles(directory: string, globalKpContent: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Scans the specified directory for properties files and processes them.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe directory to scan for properties files.\n\n\n                                            \n                                        \n                                        \n                                                globalKpContent\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe content of the global KP properties file, if any.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(item: ConfigItem)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the key and value of the configuration property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generatedTsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        propertiesFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        valuesOfProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  CONFIG_CACHE_PREFIX,\n  CONFIG_FILE_EXT_PATTERN,\n  FILES_ENCODING,\n  GEN_SRC_DIR,\n  KP_PROPERTIES_FILE_NAME,\n  LOCAL_PROPERTIES_FILE_NAME,\n  PROPERTIES_FILE_EXT_PATTERN,\n} from \"./config.constants\";\nimport { ConfigItem } from \"./config.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * ConfigService is a service responsible for managing configurations in application.\n * It reads configuration properties from .properties files and stores the values in a store for fast retrieval.\n * The service provides methods to get, set, and remove configuration properties.\n */\n@Injectable()\nexport class ConfigService {\n  private readonly propertiesFiles: { [path: string]: { [key: string]: any } } =\n    {};\n  private readonly valuesOfProperties: { [key: string]: any } = {};\n  private generatedTsOutput: string;\n\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {}\n\n  /**\n   * Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n   */\n  async initWithPropertiesFiles(genCnfDir?: string) {\n    this.generatedTsOutput = genCnfDir;\n    this.logger.log(`Scan project`);\n    await this.scanForPropertiesFiles(process.cwd());\n    this.logger.log(`Clean generated source dirs`);\n    await this.deleteExistingConfigTsFiles(process.cwd());\n    this.logger.log(`Clean config storage`);\n    await this.cacheService.del(CONFIG_CACHE_PREFIX + \":*\");\n    this.logger.log(`Generate config files`);\n    await this.generateConfigTsFiles();\n    for (const key in this.valuesOfProperties) {\n      await this.cacheService.set(`${key}`, this.valuesOfProperties[key]);\n    }\n    this.logger.log(`Config files was synchronize`);\n  }\n\n  /**\n   * Retrieves a page of configuration properties based on the provided pageable parameters.\n   * @param params - Pageable parameters for sorting, filtering, and pagination.\n   * @returns A promise that resolves to an object containing the pageable data.\n   */\n  async getPropertiesPage(\n    params: PageableParams,\n  ): Promise> {\n    const { limit, page, sort, order, filter } = params;\n    const propertyKeys = await this.cacheService.getFromPattern(\n      `${CONFIG_CACHE_PREFIX}:${!filter ? \"*\" : filter}`,\n    );\n    const sortedKeys = propertyKeys.sort((a, b) => {\n      if (sort && order) {\n        const aValue = a[sort] || \"\";\n        const bValue = b[sort] || \"\";\n        return order === \"ASC\"\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      return a.localeCompare(b);\n    });\n    const totalCount = sortedKeys.length;\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    const keysToRetrieve = sortedKeys.slice(start, end);\n    const propertiesWithValues: ConfigItem[] = await Promise.all(\n      keysToRetrieve.map(async (key) => {\n        const value = await this.cacheService.get(key);\n        return { key: key.replace(`${CONFIG_CACHE_PREFIX}:`, ``), value };\n      }),\n    );\n    return new PageableData(propertiesWithValues, totalCount, page, limit);\n  }\n\n  /**\n   * Sets a configuration property.\n   * @param item - An object containing the key and value of the configuration property.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async setProperty(item: ConfigItem): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${item.key}`;\n    return await this.cacheService.set(fullKey, item.value);\n  }\n\n  /**\n   * Removes a configuration property.\n   * @param key - The key of the configuration property to remove.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async removeProperty(key: string): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${key}`;\n    return await this.cacheService.del(fullKey);\n  }\n\n  /**\n   * Scans the specified directory for properties files and processes them.\n   * @param directory - The directory to scan for properties files.\n   * @param globalKpContent - The content of the global KP properties file, if any.\n   */\n  private async scanForPropertiesFiles(\n    directory: string,\n    globalKpContent: string | null = null,\n  ) {\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    if (directory === process.cwd()) {\n      for (const file of files) {\n        if (file.isFile() && file.name === KP_PROPERTIES_FILE_NAME) {\n          const kpPath = path.join(directory, file.name);\n          globalKpContent = await fs.promises.readFile(kpPath, FILES_ENCODING);\n          const localPropertiesPath = path.join(\n            directory,\n            LOCAL_PROPERTIES_FILE_NAME,\n          );\n          if (fs.existsSync(localPropertiesPath)) {\n            const localPropertiesContent = await fs.promises.readFile(\n              localPropertiesPath,\n              FILES_ENCODING,\n            );\n            globalKpContent = this.mergePropertiesContent(\n              globalKpContent,\n              localPropertiesContent,\n            );\n          }\n          break;\n        }\n      }\n    }\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        await this.scanForPropertiesFiles(fullPath, globalKpContent);\n      } else if (\n        file.isFile() &&\n        path.extname(file.name) === PROPERTIES_FILE_EXT_PATTERN\n      ) {\n        let fileContent = await fs.promises.readFile(fullPath, FILES_ENCODING);\n        const localPropertiesPath = path.join(\n          directory,\n          LOCAL_PROPERTIES_FILE_NAME,\n        );\n        if (fs.existsSync(localPropertiesPath)) {\n          const localPropertiesContent = await fs.promises.readFile(\n            localPropertiesPath,\n            FILES_ENCODING,\n          );\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            localPropertiesContent,\n          );\n        }\n        if (globalKpContent) {\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            globalKpContent,\n          );\n        }\n        const fileNamePrefix = path.basename(\n          fullPath,\n          PROPERTIES_FILE_EXT_PATTERN,\n        );\n        this.propertiesFiles[fullPath] =\n          await this.processAndValidatePropertiesContent(\n            fullPath,\n            fileContent,\n            fileNamePrefix,\n          );\n      }\n    }\n  }\n\n  /**\n   * Processes and validates the content of a properties file.\n   * @param filePath - The path to the properties file.\n   * @param content - The content of the properties file.\n   * @param fileNamePrefix - The prefix to use for the properties in the file.\n   * @returns An object containing the processed data.\n   */\n  private async processAndValidatePropertiesContent(\n    filePath: string,\n    content: string,\n    fileNamePrefix: string,\n  ) {\n    const lines = content.split(\"\\n\");\n    const processedData: { [key: string]: any } = {};\n    for (const line of lines) {\n      if (line.trim().startsWith(\"#\") || line.trim().length === 0) {\n        continue;\n      }\n      const [key, value] = line.split(\"=\");\n      let keyWithoutPrefix = key;\n      if (key.startsWith(fileNamePrefix + \".\")) {\n        keyWithoutPrefix = key.slice(fileNamePrefix.length + 1);\n      } else {\n        continue;\n      }\n      const variableName = keyWithoutPrefix\n        .split(\".\")\n        .map((part) => part.toUpperCase())\n        .join(\"_\");\n      if (!/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(variableName)) {\n        this.logger.error(`Invalid line found: \"${line}\" in file ${filePath}`);\n        throw new Error(`Invalid content in file: \"${filePath}\"`);\n      }\n      const propertyKey = `${CONFIG_CACHE_PREFIX}:${fileNamePrefix}.${keyWithoutPrefix}`;\n      processedData[variableName] = `\"${propertyKey}\"`;\n      if (!propertyKey.startsWith(\"kp.\") && !propertyKey.startsWith(\"local.\")) {\n        this.valuesOfProperties[propertyKey] = this.parseValue(value.trim());\n      }\n    }\n    return processedData;\n  }\n\n  /**\n   * Parses the value of a configuration property.\n   * @param value - The value to parse.\n   * @returns The parsed value.\n   */\n  private parseValue(value: string) {\n    let processedValue = value.trim();\n    if (processedValue === \"true\" || processedValue === \"false\") {\n      processedValue = JSON.parse(processedValue);\n    } else if (processedValue === \"null\") {\n      processedValue = null;\n    } else if (/^[-+*/\\d\\s()]*$/.test(processedValue)) {\n      try {\n        processedValue = eval(processedValue);\n      } catch (e) {\n        return processedValue;\n      }\n    }\n    return processedValue;\n  }\n\n  /**\n   * Generates a namespace with variables based on the processed data.\n   * @param namespaceName - The name of the namespace.\n   * @param processedData - The processed data to include in the namespace.\n   * @returns The generated namespace content as a string.\n   */\n  private generateNamespaceWithVariables(\n    namespaceName: string,\n    processedData: { [key: string]: string },\n  ) {\n    let generatedContent = `export namespace ${namespaceName} {\\n`;\n    for (const variableName in processedData) {\n      const processedValue = processedData[variableName];\n      generatedContent += `  export const ${variableName} = ${processedValue};\\n`; // initial value: ${this.valuesOfProperties[processedValue.substring(1,processedValue.length-1)]}\n    }\n    generatedContent += \"}\\n\";\n    return generatedContent;\n  }\n\n  /**\n   * Deletes existing configuration TypeScript files in the specified directory.\n   * @param directory - The directory to scan for generated configuration files.\n   */\n  private async deleteExistingConfigTsFiles(directory: string) {\n    if (directory === process.cwd() + \"/node_modules\") {\n      return;\n    }\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        if (file.name === GEN_SRC_DIR) {\n          const genSrcFiles = await fs.promises.readdir(fullPath, {\n            withFileTypes: true,\n          });\n          this.logger.verbose(`Read dir: ${fullPath}`);\n          for (const genSrcFile of genSrcFiles) {\n            if (\n              genSrcFile.isFile() &&\n              genSrcFile.name.endsWith(CONFIG_FILE_EXT_PATTERN)\n            ) {\n              this.logger.verbose(`Delete file: ${genSrcFile.name}`);\n              await fs.promises.unlink(path.join(fullPath, genSrcFile.name));\n            }\n          }\n        } else {\n          await this.deleteExistingConfigTsFiles(fullPath);\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates TypeScript configuration files based on the processed properties files.\n   */\n  private async generateConfigTsFiles() {\n    for (const filePath in this.propertiesFiles) {\n      if (path.basename(filePath) === LOCAL_PROPERTIES_FILE_NAME) {\n        continue;\n      }\n      const fileContent = this.propertiesFiles[filePath];\n      const dirPath = this.generatedTsOutput ?? path.dirname(filePath);\n      const genSrcPath = path.join(dirPath, GEN_SRC_DIR);\n      const configFileName = path\n        .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n        .concat(CONFIG_FILE_EXT_PATTERN);\n      const configFilePath = path.join(genSrcPath, configFileName);\n      const namespaceName =\n        path\n          .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n          .charAt(0)\n          .toUpperCase() +\n        path.basename(filePath, PROPERTIES_FILE_EXT_PATTERN).slice(1) +\n        \"Config\";\n      const generatedFileContent = this.generateNamespaceWithVariables(\n        namespaceName,\n        fileContent,\n      );\n      await fs.promises.mkdir(genSrcPath, { recursive: true });\n      await fs.promises.writeFile(configFilePath, generatedFileContent);\n      this.logger.verbose(`Generated ${configFilePath}`);\n    }\n  }\n\n  /**\n   * Merges the content of the main properties file with the content of the local properties file.\n   * @param mainContent - The content of the main properties file.\n   * @param localContent - The content of the local properties file.\n   * @returns The merged content.\n   */\n  private mergePropertiesContent(\n    mainContent: string,\n    localContent: string,\n  ): string {\n    const mainContentLines = mainContent.split(\"\\n\");\n    const localContentLines = localContent.split(\"\\n\");\n    const mergedContent = [...mainContentLines];\n    for (const localLine of localContentLines) {\n      if (localLine.trim().startsWith(\"#\") || localLine.trim().length === 0) {\n        continue;\n      }\n      const [localKey] = localLine.split(\"=\");\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbExceptionFilter.html":{"url":"classes/DbExceptionFilter.html","title":"class - DbExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/filters/db-exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception filter to handle database errors and transform them into HTTP responses.\nThis filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n\n            \n\n\n            \n                Implements\n            \n            \n                            DbExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/filters/db-exception-filter.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        QueryFailedError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from \"@nestjs/common\";\nimport { QueryFailedError } from \"typeorm\";\nimport { TypeORMError } from \"typeorm/error/TypeORMError\";\n\n/**\n * Exception filter to handle database errors and transform them into HTTP responses.\n * This filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n */\n@Catch(TypeORMError)\nexport class DbExceptionFilter implements DbExceptionFilter {\n  catch(exception: QueryFailedError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.status(502).json({ message: exception.message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryStructure.html":{"url":"interfaces/DirectoryStructure.html","title":"interface - DirectoryStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirectoryStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/utils/files.utils.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a structure of directories and files.\nThe keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        [] | DirectoryStructure\n\n                    \n                \n                        \n                            \n                                Defined in lib/shared/utils/files.utils.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as crypto from \"crypto\";\nimport { OpenMode } from \"node:fs\";\nimport { Abortable } from \"node:events\";\nimport * as path from \"path\";\n\n/**\n * Object to hold the dynamically imported file-type module.\n */\nconst fileTypeModule = {} as { lib: typeof import(\"file-type\") };\n\n/**\n * Immediately Invoked Function Expression (IIFE) to dynamically import the ES module 'file-type'.\n * @param {object} ft - The fileTypeModule object.\n */\n(async (ft) => {\n  // crutch for import ES module\n  ft.lib = await (eval('import(\"file-type\")') as Promise);\n})(fileTypeModule);\n\n/**\n * An interface representing a structure of directories and files.\n * The keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n */\ninterface DirectoryStructure {\n  [key: string]: string[] | DirectoryStructure;\n}\n\nexport namespace FilesUtils {\n  /**\n   * Gets the file type module.\n   * @returns The file type module.\n   */\n  export function fileType() {\n    return fileTypeModule.lib;\n  }\n\n  /**\n   * Generates an SHA-256 hash from a buffer.\n   * @param fileBuffer - The buffer to hash.\n   * @returns The SHA-256 hash as a hex string.\n   */\n  export function getHashFromBuffer(fileBuffer: Buffer) {\n    const hashSum = crypto.createHash(\"sha256\");\n    hashSum.update(fileBuffer);\n    return hashSum.digest(\"hex\");\n  }\n\n  /**\n   * Creates directories if they do not exist.\n   * @param directoryPath - The path of the directory to create.\n   */\n  export async function createDirectoriesIfNotExist(directoryPath: string) {\n    try {\n      await fs.promises.access(directoryPath);\n    } catch (error) {\n      await fs.promises.mkdir(directoryPath, { recursive: true });\n    }\n  }\n\n  /**\n   * Reads a file.\n   * @param path - The path of the file to read.\n   * @param opts - Optional read options.\n   * @returns The file contents as a buffer.\n   */\n  export async function readFile(\n    path: string,\n    opts?:\n      | ({\n          encoding?: null | undefined;\n          flag?: OpenMode | undefined;\n        } & Abortable)\n      | null,\n  ) {\n    return await fs.promises.readFile(path);\n  }\n\n  /**\n   * Recursively reads a directory and returns its structure.\n   * @param dirPath - The path of the directory to read.\n   * @returns A promise that resolves to the directory structure.\n   */\n  export async function readDirectoryRecursively(\n    dirPath: string,\n  ): Promise {\n    const result: DirectoryStructure = {};\n\n    async function readDir(\n      currentPath: string,\n      relativePath: string,\n    ): Promise {\n      const files = await fs.promises.readdir(currentPath);\n      const filePromises = files.map(async (file) => {\n        const filePath = path.join(currentPath, file);\n        const stats = await fs.promises.stat(filePath);\n        const newRelativePath = path.join(relativePath, file);\n        if (stats.isDirectory()) {\n          result[newRelativePath] = await readDir(filePath, newRelativePath);\n        } else {\n          if (!result[relativePath]) {\n            result[relativePath] = [];\n          }\n          (result[relativePath] as string[]).push(file);\n        }\n      });\n      await Promise.all(filePromises);\n      return result[relativePath] || [];\n    }\n\n    await readDir(dirPath, \"\");\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoInterceptor.html":{"url":"injectables/DtoInterceptor.html","title":"injectable - DtoInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/interceptors/dto.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializer)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/interceptors/dto.interceptor.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/interceptors/dto.interceptor.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map } from \"rxjs\";\nimport { plainToInstance } from \"class-transformer\";\n\n/**\n * @class DtoInterceptor\n * An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n * @template T - The DTO class to use for transformation.\n */\n@Injectable()\nexport class DtoInterceptor implements NestInterceptor {\n  constructor(private readonly serializer: new () => T) {}\n\n  intercept(context: ExecutionContext, next: CallHandler) {\n    return next\n      .handle()\n      .pipe(map((data) => plainToInstance(this.serializer, data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitySaveHandler.html":{"url":"interfaces/EntitySaveHandler.html","title":"interface - EntitySaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitySaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a handler for saving an entity.\nSuch handlers are triggered when entity recording occurs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, data: T, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExchangeTokenPayload.html":{"url":"classes/ExchangeTokenPayload.html","title":"class - ExchangeTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExchangeTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for token exchange payload.\nContains the token to be exchanged for a new token pair JwtDto.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:84\n                        \n                    \n\n            \n                \n                    The refresh token to be exchanged.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerAction.html":{"url":"interfaces/ExplorerAction.html","title":"interface - ExplorerAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an action in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerActionEntity.html":{"url":"entities/ExplorerActionEntity.html","title":"entity - ExplorerActionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerActionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-action.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerAction } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { Explorer } from \"../explorer.constants\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\n\n/**\n * The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n */\n@Entity(\"explorer_actions\")\nexport class ExplorerActionEntity implements ExplorerAction {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumn.html":{"url":"interfaces/ExplorerColumn.html","title":"interface - ExplorerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a column in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            named\n                                        \n                                \n                                \n                                        \n                                            objectEnabled\n                                        \n                                \n                                \n                                        \n                                            objectPriority\n                                        \n                                \n                                \n                                        \n                                            objectRenderer\n                                        \n                                \n                                \n                                        \n                                            objectVisibility\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            referencedEntityName\n                                        \n                                \n                                \n                                        \n                                            referencedTableName\n                                        \n                                \n                                \n                                        \n                                            sectionEnabled\n                                        \n                                \n                                \n                                        \n                                            sectionPriority\n                                        \n                                \n                                \n                                        \n                                            sectionRenderer\n                                        \n                                \n                                \n                                        \n                                            sectionVisibility\n                                        \n                                \n                                \n                                        \n                                            tab\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unique\n                                        \n                                \n                                \n                                        \n                                            virtual\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        named\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        named:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedEntityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedEntityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedTableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedTableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ExplorerTab\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTab\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnDataType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnDataType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnEntity.html":{"url":"entities/ExplorerColumnEntity.html","title":"entity - ExplorerColumnEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the metadata of the field (columns in the database table)\nand stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                multiple\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                named\n                            \n                            \n                                    \n                                    \n                                objectEnabled\n                            \n                            \n                                    \n                                    \n                                objectPriority\n                            \n                            \n                                    \n                                    \n                                objectRenderer\n                            \n                            \n                                    \n                                objectRendererParams\n                            \n                            \n                                    \n                                    \n                                objectVisibility\n                            \n                            \n                                    \n                                    \n                                primary\n                            \n                            \n                                    \n                                    \n                                property\n                            \n                            \n                                    \n                                    \n                                referencedEntityName\n                            \n                            \n                                    \n                                    \n                                referencedTableName\n                            \n                            \n                                    \n                                    \n                                sectionEnabled\n                            \n                            \n                                    \n                                    \n                                sectionPriority\n                            \n                            \n                                    \n                                    \n                                sectionRenderer\n                            \n                            \n                                    \n                                sectionRendererParams\n                            \n                            \n                                    \n                                    \n                                sectionVisibility\n                            \n                            \n                                    \n                                tab\n                            \n                            \n                                    \n                                target\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                unique\n                            \n                            \n                                    \n                                    \n                                virtual\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        named\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'object_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'object_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_entity_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedTableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_table_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'section_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sectionRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'section_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTabEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        virtual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\nimport { ExplorerColumn } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { ExplorerColumnRendererEntity } from \"./explorer-column-renderer.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTabEntity } from \"./explorer-tab.entity\";\n\n/**\n * The entity stores the metadata of the field (columns in the database table)\n * and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_columns\")\nexport class ExplorerColumnEntity implements ExplorerColumn {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  property: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n\n  @Column(\"text\", { nullable: false })\n  type: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  virtual: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  primary: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  unique: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  multiple: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  named: boolean;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_entity_name\", nullable: true })\n  referencedEntityName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_table_name\", nullable: true })\n  referencedTableName: string;\n\n  @Index()\n  @Column(\"int\", { name: \"section_priority\", default: 0, unsigned: true })\n  sectionPriority: number;\n\n  @Index()\n  @Column(\"int\", { name: \"object_priority\", default: 0, unsigned: true })\n  objectPriority: number;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_enabled\", default: true })\n  sectionEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_enabled\", default: true })\n  objectEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_visibility\", default: true })\n  sectionVisibility: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_visibility\", default: true })\n  objectVisibility: boolean;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  sectionRenderer: ExplorerColumnRendererEntity;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  objectRenderer: ExplorerColumnRendererEntity;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"section_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  sectionRendererParams: object;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"object_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  objectRendererParams: object;\n\n  @ManyToOne(() => ExplorerTabEntity, (t) => t.id)\n  tab: ExplorerTabEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumnRenderer.html":{"url":"interfaces/ExplorerColumnRenderer.html","title":"interface - ExplorerColumnRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumnRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a renderer for an explorer column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnRendererEntity.html":{"url":"entities/ExplorerColumnRendererEntity.html","title":"entity - ExplorerColumnRendererEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnRendererEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column-renderer.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnRenderer } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { Explorer } from \"../explorer.constants\";\n\n/**\n * An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n */\n@Entity(\"explorer_column_renderers\")\nexport class ExplorerColumnRendererEntity implements ExplorerColumnRenderer {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerModule.html":{"url":"modules/ExplorerModule.html","title":"module - ExplorerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/explorer/explorer.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for exploring and analyzing the database schema and relationships.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: ExplorerModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExplorerModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicExplorerService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the module and analyzes the database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module, OnModuleInit } from \"@nestjs/common\";\nimport { BasicExplorerService } from \"./basic-explorer.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ExplorerTargetEntity } from \"./entity/explorer-target.entity\";\nimport { ExplorerColumnEntity } from \"./entity/explorer-column.entity\";\nimport { ExplorerModuleOptions, ExplorerService } from \"./explorer.types\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n/**\n * Module for exploring and analyzing the database schema and relationships.\n */\n@Module({})\nexport class ExplorerModule implements OnModuleInit {\n  static forRoot(\n    options: ExplorerModuleOptions = {\n      service: BasicExplorerService,\n    },\n  ): DynamicModule {\n    return {\n      module: ExplorerModule,\n      imports: [\n        TypeOrmModule.forFeature([ExplorerTargetEntity, ExplorerColumnEntity]),\n        LogModule,\n      ],\n      providers: [\n        {\n          provide: ExplorerService,\n          useClass: options.service,\n        },\n      ],\n      exports: [ExplorerService],\n    };\n  }\n\n  constructor(private readonly service: ExplorerService) {}\n\n  /**\n   * Initializes the module and analyzes the database.\n   */\n  async onModuleInit() {\n    await this.service.analyzeDatabase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerService.html":{"url":"classes/ExplorerService.html","title":"class - ExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing an explorer service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                analyzeDatabase\n                            \n                            \n                                    Abstract\n                                changeTarget\n                            \n                            \n                                    Abstract\n                                getEntityData\n                            \n                            \n                                    Abstract\n                                getPageableEntityData\n                            \n                            \n                                    Abstract\n                                getTargetData\n                            \n                            \n                                    Abstract\n                                getTargetList\n                            \n                            \n                                    Abstract\n                                removeEntity\n                            \n                            \n                                    Abstract\n                                saveEntityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        analyzeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:176\n                        \n                    \n\n\n            \n                \n                        Analyzes the database schema and relationships.\nFill data for explorer tables based on that analysis.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        changeTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:254\n                        \n                    \n\n\n            \n                \n                        Changes the target data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the target entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the changed target entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityData(target: string, rowId: string | number, maxDepth?: number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:225\n                        \n                    \n\n\n            \n                \n                        Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                rowId\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the row to fetch.\n\n\n                                            \n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe maximum depth of relations to fetch. Defaults to Infinity.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the entity object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getPageableEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPageableEntityData(target: string, params?: PageableParams, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:185\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated entity data with relations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity or table.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional object containing pageable parameters.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a PageableData object containing the paginated results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetData(target: string, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:238\n                        \n                    \n\n\n            \n                \n                        Retrieves target data for the specified target entity name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the TargetData object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:247\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of all registered targets with their item counts.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of ExplorerTarget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string | number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:211\n                        \n                    \n\n\n            \n                \n                        Removes an entity by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the entity-target.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the entity to be removed.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the removed entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        saveEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntityData(target: string, entity: T, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:198\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Saves or updates an entity, including its nested entities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity object to be saved or updated.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the saved or updated entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTab.html":{"url":"interfaces/ExplorerTab.html","title":"interface - ExplorerTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a tab in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTabEntity.html":{"url":"entities/ExplorerTabEntity.html","title":"entity - ExplorerTabEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTabEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-tab.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the tabbed display parameters in the entity editing interface.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTab } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\n\n/**\n * The entity stores the tabbed display parameters in the entity editing interface.\n */\n@Entity(\"explorer_tabs\")\nexport class ExplorerTabEntity implements ExplorerTab {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  size: object;\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTarget.html":{"url":"interfaces/ExplorerTarget.html","title":"interface - ExplorerTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            canRead\n                                        \n                                \n                                \n                                        \n                                            canWrite\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            defaultActionCreate\n                                        \n                                \n                                \n                                        \n                                            defaultActionDelete\n                                        \n                                \n                                \n                                        \n                                            defaultActionDuplicate\n                                        \n                                \n                                \n                                        \n                                            defaultActionSave\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tableName\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ExplorerAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerAction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRead:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canWrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canWrite:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         ExplorerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionSave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTargetEntity.html":{"url":"entities/ExplorerTargetEntity.html","title":"entity - ExplorerTargetEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTargetEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-target.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores a detailed description of the entity (tables in the database) in the form of an object\nwith metadata and stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actions\n                            \n                            \n                                    \n                                    \n                                alias\n                            \n                            \n                                    \n                                    \n                                canRead\n                            \n                            \n                                    \n                                    \n                                canWrite\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                defaultActionCreate\n                            \n                            \n                                    \n                                    \n                                defaultActionDelete\n                            \n                            \n                                    \n                                    \n                                defaultActionDuplicate\n                            \n                            \n                                    \n                                    \n                                defaultActionSave\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tableName\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerAction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.target, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_create', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_delete', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_duplicate', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_save', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {name: 'table_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnEntity } from \"./explorer-column.entity\";\nimport { ExplorerAction, ExplorerTarget } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { ExplorerActionEntity } from \"./explorer-action.entity\";\nimport { UserRoleEntity } from \"../../user/entity/user-role.entity\";\n\n/**\n * The entity stores a detailed description of the entity (tables in the database) in the form of an object\n * with metadata and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_targets\")\nexport class ExplorerTargetEntity implements ExplorerTarget {\n  @PrimaryColumn(\"varchar\")\n  target: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { name: \"table_name\", nullable: false })\n  tableName: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  alias: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @OneToMany(() => ExplorerColumnEntity, (c) => c.target, { cascade: true })\n  columns: ExplorerColumnEntity[];\n\n  @ManyToMany(() => ExplorerActionEntity)\n  @JoinTable()\n  actions: ExplorerAction[];\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_create\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionCreate: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_save\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionSave: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_delete\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDelete: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_duplicate\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDuplicate: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canRead: UserRoleEntity[];\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canWrite: UserRoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            preview\n                                        \n                                \n                                \n                                        \n                                            public\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preview:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores data about uploaded files\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                preview\n                            \n                            \n                                    \n                                public\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { File } from \"../file.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { FileMetadataEntity } from \"./file-metadata.entity\";\n\n/**\n * The entity stores data about uploaded files\n */\n@Entity(\"files\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class FileEntity implements File {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"varchar\", { nullable: true })\n  path: string;\n\n  @Column(\"boolean\", { default: false })\n  public: boolean;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  preview: MediaEntity;\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileManager.html":{"url":"classes/FileManager.html","title":"class - FileManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateFile\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getFilePath\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic: boolean, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMd.html":{"url":"classes/FileMd.html","title":"class - FileMd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file metadata service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFileMetadataEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            exif\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            gps\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            icc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and properties of the audio file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exif:         ExifFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExifFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The file extension, indicating the file format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gps:         GpsFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GpsFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GPS data associated with the location where the file was created, including latitude, longitude and elevation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cryptographic hash of the file content, used for integrity verification and identification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icc:         IccFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IccFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ICC (International Color Consortium) profile data associated with the file, used for color management\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         ImageFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MIME type of the file, indicating the nature and format of the file content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         VideoFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and properties of the video recording\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileMetadataEntity.html":{"url":"entities/FileMetadataEntity.html","title":"entity - FileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the basic metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                audio\n                            \n                            \n                                    \n                                    \n                                exif\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                gps\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                icc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                mime\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExifFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IccFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { FileMetadata } from \"../file.types\";\nimport { ImageFileMetadataEntity } from \"./image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./gps-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./icc-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./exif-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./video-file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./audio-file-metadata.entity\";\n\n/**\n * The entity stores the basic metadata of the file\n */\n@Entity(\"file_metadata\")\nexport class FileMetadataEntity implements FileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"varchar\", { nullable: true })\n  mime: string;\n\n  @Column(\"varchar\", { nullable: true })\n  ext: string;\n\n  @Column(\"varchar\", { nullable: true })\n  hash: string;\n\n  @OneToOne(() => ImageFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  image: ImageFileMetadataEntity;\n\n  @OneToOne(() => GpsFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  gps: GpsFileMetadataEntity;\n\n  @OneToOne(() => IccFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  icc: IccFileMetadataEntity;\n\n  @OneToOne(() => ExifFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  exif: ExifFileMetadataEntity;\n\n  @OneToOne(() => AudioFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  audio: AudioFileMetadataEntity;\n\n  @OneToOne(() => VideoFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  video: VideoFileMetadataEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileMetadataService.html":{"url":"injectables/FileMetadataService.html","title":"injectable - FileMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file-metadata.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing file metadata, including creation and setting metadata properties.\n\n            \n\n            \n                Extends\n            \n            \n                            FileMd\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFileMetadataEntity\n                            \n                            \n                                    Private\n                                    Async\n                                setAudioMd\n                            \n                            \n                                    Private\n                                setImageMd\n                            \n                            \n                                    Private\n                                    Async\n                                setVideoMd\n                            \n                            \n                                    Private\n                                trimProperties\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileMd\n\n                        \n                    \n                    \n                        \n                                Defined in         FileMd:45\n\n                        \n                    \n\n\n            \n                \n                        Creates a FileMetadataEntity for the given buffer and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBuffer containing the file data.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional file path for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileMetadataEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setAudioMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAudioMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets audio metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the audio data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Sets image metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the image data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setVideoMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setVideoMd(md: FileMetadataEntity, filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Sets video metadata for the given FileMetadataEntity and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file path for the video file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        trimProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    trimProperties(obj: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:72\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Trims properties of an object, removing empty or invalid values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to trim.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                The trimmed object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { parseBuffer } from \"music-metadata\";\nimport * as ExifReader from \"exifreader\";\nimport * as ffprobe from \"ffprobe\";\nimport * as ffprobeStatic from \"ffprobe-static\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileMd } from \"./file.constants\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./entity/audio-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./entity/video-file-metadata.entity\";\nimport { ImageFileMetadataEntity } from \"./entity/image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./entity/gps-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./entity/exif-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./entity/icc-file-metadata.entity\";\nimport getHashFromBuffer = FilesUtils.getHashFromBuffer;\nimport fileType = FilesUtils.fileType;\n\n/**\n * Service for managing file metadata, including creation and setting metadata properties.\n */\n@Injectable()\nexport class FileMetadataService extends FileMd {\n  /**\n   * Creates a FileMetadataEntity for the given buffer and file path.\n   * @param buf - Buffer containing the file data.\n   * @param filePath - Optional file path for the file.\n   * @returns A promise that resolves to the created FileMetadataEntity.\n   */\n  async createFileMetadataEntity(buf: Buffer, filePath?: string) {\n    const fileTypeData = await fileType().fileTypeFromBuffer(buf);\n    const md = new FileMetadataEntity();\n    md.hash = getHashFromBuffer(buf);\n    if (fileTypeData) {\n      md.mime = fileTypeData.mime;\n      md.ext = fileTypeData.ext;\n    } else {\n      return md;\n    }\n    try {\n      if (md.mime.startsWith(\"image\")) {\n        this.setImageMd(md, buf);\n      } else if (md.mime.startsWith(\"audio\")) {\n        await this.setAudioMd(md, buf);\n      } else if (md.mime.startsWith(\"video\")) {\n        await this.setVideoMd(md, filePath);\n      }\n    } catch (e) {}\n    return this.trimProperties(md);\n  }\n\n  /**\n   * Trims properties of an object, removing empty or invalid values.\n   * @param obj - The object to trim.\n   * @returns The trimmed object.\n   */\n  private trimProperties(obj: T): T {\n    if (typeof obj === \"string\") {\n      return obj.trim() === \"\" || obj.indexOf(\"\") !== -1\n        ? undefined\n        : (obj.trim() as T);\n    } else if (Array.isArray(obj)) {\n      return obj.map(this.trimProperties) as T;\n    } else if (typeof obj === \"object\") {\n      if (obj instanceof Date) {\n        return obj as T;\n      }\n      const result: Record = {};\n      for (const key in obj) {\n        const value = this.trimProperties(obj[key]);\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      }\n      return result as T;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Sets video metadata for the given FileMetadataEntity and file path.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param filePath - The file path for the video file.\n   */\n  private async setVideoMd(md: FileMetadataEntity, filePath: string) {\n    if (filePath) {\n      const ffProbeMd = await ffprobe(filePath, { path: ffprobeStatic.path });\n      if (ffProbeMd) {\n        const audioMd = ffProbeMd.streams.find((v) => v.codec_type === \"audio\");\n        if (audioMd) {\n          md.audio = new AudioFileMetadataEntity();\n          md.audio.container = audioMd.codec_name?.toUpperCase();\n          md.audio.codec = audioMd.codec_long_name;\n          md.audio.duration = parseFloat(audioMd.duration || 0);\n          md.audio.numberOfChannels = audioMd.channels;\n          md.audio.bitrate = audioMd.bit_rate;\n        }\n        const videoMd = ffProbeMd.streams.find((v) => v.codec_type === \"video\");\n        if (videoMd) {\n          md.video = new VideoFileMetadataEntity();\n          md.video.codec = videoMd.codec_name?.toUpperCase();\n          md.video.container = videoMd.codec_long_name;\n          md.video.width = videoMd.width;\n          md.video.height = videoMd.height;\n          md.video.bitrate = videoMd.bit_rate;\n          md.video.duration = parseFloat(videoMd.duration || 0);\n          md.video.sampleAspectRatio = videoMd.sample_aspect_ratio;\n          md.video.displayAspectRatio = videoMd.display_aspect_ratio;\n          md.video.colorRange = videoMd.color_range;\n          md.video.colorSpace = videoMd.color_space;\n          md.video.frameRate = videoMd.r_frame_rate;\n          md.video.rotate = videoMd.tags?.rotate;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets audio metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the audio data.\n   */\n  private async setAudioMd(md: FileMetadataEntity, buf: Buffer) {\n    const musicMd = await parseBuffer(buf);\n    if (!musicMd) {\n      return;\n    }\n    md.audio = new AudioFileMetadataEntity();\n    md.audio.container = musicMd.format.container;\n    md.audio.codec = musicMd.format.codec;\n    md.audio.sampleRate = musicMd.format.sampleRate;\n    md.audio.numberOfChannels = musicMd.format.numberOfChannels;\n    md.audio.bitrate = musicMd.format.bitrate;\n    md.audio.codecProfile = musicMd.format.codecProfile;\n    md.audio.tool = musicMd.format.tool;\n    md.audio.duration = musicMd.format.duration;\n    md.audio.title = musicMd.common.title;\n    md.audio.album = musicMd.common.album;\n    md.audio.artist = musicMd.common.artists?.join(\", \");\n    md.audio.year = musicMd.common.year;\n    md.audio.genre = musicMd.common.genre?.join(\", \");\n    md.audio.label = musicMd.common.label?.join(\", \");\n  }\n\n  /**\n   * Sets image metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the image data.\n   */\n  private setImageMd(md: FileMetadataEntity, buf: Buffer) {\n    const exifData = ExifReader.load(buf, {\n      expanded: true,\n      includeUnknown: true,\n    });\n    if (!exifData) {\n      return;\n    }\n    md.image = new ImageFileMetadataEntity();\n    md.image.bps = exifData.file[\"Bits Per Sample\"]?.value;\n    md.image.height = exifData.file[\"Image Height\"]?.value;\n    md.image.width = exifData.file[\"Image Width\"]?.value;\n    md.image.colorComponents = exifData.file[\"Color Components\"]?.value;\n    md.image.subsampling = exifData.file[\"Subsampling\"]?.description;\n    if (exifData.png) {\n      md.image.height = exifData.png[\"Image Height\"]?.value;\n      md.image.width = exifData.png[\"Image Width\"]?.value;\n      md.image.bitDepth = exifData.png[\"Bit Depth\"]?.value;\n      md.image.colorType = exifData.png[\"Color Type\"]?.description;\n      md.image.compression = exifData.png[\"Compression\"]?.description;\n      md.image.filter = exifData.png[\"Filter\"]?.description;\n      md.image.interlace = exifData.png[\"Interlace\"]?.description;\n    }\n    if (exifData.gps) {\n      md.gps = new GpsFileMetadataEntity();\n      md.gps.altitude = exifData.gps?.Altitude;\n      md.gps.longitude = exifData.gps?.Longitude;\n      md.gps.latitude = exifData.gps?.Latitude;\n    }\n    if (exifData.icc) {\n      md.icc = new IccFileMetadataEntity();\n      md.icc.profileVersion = exifData.icc[\"Profile Version\"]?.description;\n      md.icc.profileClassName =\n        exifData.icc[\"Profile/Device class\"]?.description;\n      md.icc.profileClassValue = exifData.icc[\"Profile/Device class\"]?.value;\n      md.icc.connectionSpace = exifData.icc[\"Connection Space\"]?.description;\n      md.icc.iccProfileDate = new Date(exifData.icc[\"ICC Profile Date\"]?.value);\n      if (exifData.icc[\"ICC Profile Date\"]?.value) {\n        md.image.dateTime = md.icc.iccProfileDate;\n      }\n      md.icc.iccSignature = exifData.icc[\"ICC Signature\"]?.description;\n      md.icc.primaryPlatform = exifData.icc[\"Primary Platform\"]?.description;\n      md.icc.deviceManufacturer =\n        exifData.icc[\"Device Manufacturer\"]?.description;\n      md.icc.deviceModelNumber =\n        exifData.icc[\"Device Model Number\"]?.description;\n      md.icc.renderingIntentName =\n        exifData.icc[\"Rendering Intent\"]?.description;\n      md.icc.renderingIntentValue = exifData.icc[\"Rendering Intent\"]?.value;\n      md.icc.profileCreator = exifData.icc[\"Profile Creator\"]?.description;\n      md.icc.iccDescription = exifData.icc[\"ICC Description\"]?.description;\n      md.icc.iccCopyright = exifData.icc[\"ICC Copyright\"]?.description;\n    }\n    if (exifData.exif) {\n      md.exif = new ExifFileMetadataEntity();\n      md.exif.make = exifData.exif.Make?.description;\n      md.exif.model = exifData.exif.Model?.description;\n      md.exif.orientation = exifData.exif.Orientation?.description;\n      md.exif.resolutionX = exifData.exif.XResolution?.description;\n      md.exif.resolutionY = exifData.exif.YResolution?.description;\n      md.exif.resolutionUnit = exifData.exif.ResolutionUnit?.description;\n      md.exif.software = exifData.exif.Software?.description;\n      md.exif.ycbCrPositioning = exifData.exif.YCbCrPositioning?.description;\n      md.exif.exifIfdPointer = exifData.exif[\"Exif IFD Pointer\"]?.description;\n      md.exif.gpsInfoIfdPointer =\n        exifData.exif[\"GPS Info IFD Pointer\"]?.description;\n      md.exif.exposureTime = exifData.exif.ExposureTime?.description;\n      md.exif.fNumber = exifData.exif.FNumber?.description;\n      md.exif.exposureProgram = exifData.exif.ExposureProgram?.description;\n      md.exif.isoSpeedRatings = exifData.exif.ISOSpeedRatings?.description;\n      md.exif.exifVersion = exifData.exif.ExifVersion?.description;\n      md.exif.offsetTime = exifData.exif.OffsetTime?.description;\n      md.exif.shutterSpeedValue = exifData.exif.ShutterSpeedValue?.description;\n      md.exif.aperture = exifData.exif.ApertureValue?.description;\n      md.exif.brightness = exifData.exif.BrightnessValue?.description;\n      md.exif.exposureBias = exifData.exif.ExposureBiasValue?.description;\n      md.exif.maxAperture = exifData.exif.MaxApertureValue?.description;\n      md.exif.subjectDistance = exifData.exif.SubjectDistance?.description;\n      md.exif.meteringMode = exifData.exif.MeteringMode?.description;\n      md.exif.flash = exifData.exif.Flash?.description;\n      md.exif.focalLength = exifData.exif.FocalLength?.description;\n      md.exif.flashpixVersion = exifData.exif.FlashpixVersion?.description;\n      md.exif.colorSpace = exifData.exif.ColorSpace?.description;\n      md.exif.pixelXDimension = exifData.exif.PixelXDimension?.description;\n      md.exif.pixelYDimension = exifData.exif.PixelYDimension?.description;\n      md.exif.interoperabilityIfdPointer =\n        exifData.exif[\"Interoperability IFD Pointer\"]?.description;\n      md.exif.sensingMethod = exifData.exif.SensingMethod?.description;\n      md.exif.sceneType = exifData.exif.SceneType?.description;\n      md.exif.customRendered = exifData.exif.CustomRendered?.description;\n      md.exif.exposureMode = exifData.exif.ExposureMode?.description;\n      md.exif.whiteBalance = exifData.exif.WhiteBalance?.description;\n      md.exif.digitalZoomRatio = exifData.exif.DigitalZoomRatio?.description;\n      md.exif.sceneCaptureType = exifData.exif.SceneCaptureType?.description;\n      md.exif.contrast = exifData.exif.Contrast?.description;\n      md.exif.saturation = exifData.exif.Saturation?.description;\n      md.exif.sharpness = exifData.exif.Sharpness?.description;\n      md.exif.subjectDistanceRange =\n        exifData.exif.SubjectDistanceRange?.description;\n      md.exif.lensMake = exifData.exif.LensMake?.description;\n      md.exif.lensModel = exifData.exif.LensModel?.description;\n      md.exif.compositeImage = exifData.exif[\"CompositeImage\"]?.description;\n      md.exif.interoperabilityIndex =\n        exifData.exif.InteroperabilityIndex?.description;\n      md.exif.interoperabilityVersion =\n        exifData.exif[\"InteroperabilityVersion\"]?.description;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/file/file.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing files.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FileModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.module.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FileModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { FileService } from \"./file.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport { FileModuleOptions } from \"./file.types\";\nimport { FileMetadataService } from \"./file-metadata.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Module for managing files.\n */\n@Module({})\nexport class FileModule {\n  static forRoot(\n    options: FileModuleOptions = {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    },\n  ): DynamicModule {\n    return {\n      module: FileModule,\n      imports: [TypeOrmModule.forFeature([FileEntity]), LogModule, CacheModule],\n      providers: [\n        {\n          provide: FileManager,\n          useClass: options.fileManager,\n        },\n        {\n          provide: FileMd,\n          useClass: options.fileMd,\n        },\n      ],\n      exports: [FileManager, FileMd],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing files, including uploading, finding, and removing files.\n\n            \n\n            \n                Extends\n            \n            \n                            FileManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBasicFindQb\n                            \n                            \n                                    Private\n                                    Async\n                                createFileDirectory\n                            \n                            \n                                    Private\n                                    Async\n                                createFileEntity\n                            \n                            \n                                    Async\n                                createOrUpdateFile\n                            \n                            \n                                    Async\n                                findByCode\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                findPrivateById\n                            \n                            \n                                    Async\n                                findPublicById\n                            \n                            \n                                    Async\n                                getFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                getPrivateDir\n                            \n                            \n                                    Private\n                                    Async\n                                getPublicDir\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, fileRep: Repository, cacheService: CacheService, metadataService: FileMd)\n                    \n                \n                        \n                            \n                                Defined in lib/common/file/file.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataService\n                                                  \n                                                        \n                                                                        FileMd\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBasicFindQb\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBasicFindQb()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a query builder for finding files with their related entities.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A query builder instance for finding files.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileDirectory(isPublic: boolean, entityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a file directory for the specified public/private status and entity ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the directory is for public files (true) or private files (false).\n\n\n                                            \n                                        \n                                        \n                                                entityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity ID to use as the directory name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the created directory path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileEntity(isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a new FileEntity with the specified public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:66\n\n                        \n                    \n\n\n            \n                \n                        Uploads a file and saves it to the specified directory (public or private).\nAlso creates a FileEntity and saves the file's metadata in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nBuffer of file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nfile extension (based of file name).\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSpecific identification code for file entity.\n\n\n                                            \n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nID of file entity for patch.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nname for file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:148\n\n                        \n                    \n\n\n            \n                \n                        Finds a file entity by code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number, isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:131\n\n                        \n                    \n\n\n            \n                \n                        Private helper method to find a file by its ID and public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file is public (true) or private (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:168\n\n                        \n                    \n\n\n            \n                \n                        Finds a private file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:159\n\n                        \n                    \n\n\n            \n                \n                        Finds a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:177\n\n                        \n                    \n\n\n            \n                \n                        Constructs the full file path for the given File object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA File object containing the file's metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The full file path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPrivateDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:292\n                        \n                    \n\n\n            \n                \n                        Retrieves the private directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized private directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPublicDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:283\n                        \n                    \n\n\n            \n                \n                        Retrieves the public directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized public directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:187\n\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID and deletes its corresponding directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed FileEntity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { File } from \"./file.types\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileConfig } from \"../../../gen-src/file.config\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport PRIVATE_DIR = FileConfig.PRIVATE_DIR;\nimport PUBLIC_DIR = FileConfig.PUBLIC_DIR;\nimport createDirectoriesIfNotExist = FilesUtils.createDirectoriesIfNotExist;\n\n/**\n * Service for managing files, including uploading, finding, and removing files.\n */\n@Injectable()\nexport class FileService extends FileManager {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectRepository(FileEntity)\n    private readonly fileRep: Repository,\n    private readonly cacheService: CacheService,\n    private readonly metadataService: FileMd,\n  ) {\n    super();\n  }\n\n  /**\n   * Uploads a file and saves it to the specified directory (public or private).\n   * Also creates a FileEntity and saves the file's metadata in the database.\n   * @param file - Buffer of file.\n   * @param extension - file extension (based of file name).\n   * @param isPublic - A boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n   * @param code - Specific identification code for file entity.\n   * @param existedEntityId - ID of file entity for patch.\n   * @param name - name for file entity.\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  async createOrUpdateFile(\n    file: Buffer,\n    extension = \"\",\n    isPublic = true,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise {\n    let entity: FileEntity = undefined;\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (existedEntityId) {\n        entity = await this.findFileById(existedEntityId, isPublic);\n        if (!entity) {\n          throw new BadRequestException(\n            `Cannot patch file with ID ${existedEntityId}, because than not exists`,\n          );\n        }\n        const dir = path.join(\n          !entity.public\n            ? await this.getPrivateDir()\n            : await this.getPublicDir(),\n          entity.id.toString(),\n        );\n        await fs.promises\n          .rm(dir, { recursive: true, force: true })\n          .catch((err) => {\n            throw new InternalServerErrorException(\n              `Failed to delete directory: ${dir}`,\n              err,\n            );\n          });\n      } else {\n        entity = await this.createFileEntity(isPublic);\n      }\n      const outputPath = await this.createFileDirectory(\n        entity.public,\n        entity.id.toString(),\n      );\n      const fileName =\n        entity.id.toString() + (extension ? `.${extension}` : extension);\n      entity.size = file.length;\n      entity.path = fileName;\n      entity.name = name;\n      entity.code = code;\n      await fs.promises.writeFile(`${outputPath}/${fileName}`, file);\n      if (!existedEntityId) {\n        entity.metadata = await this.metadataService.createFileMetadataEntity(\n          file,\n          `${outputPath}/${fileName}`,\n        );\n      }\n      await transactionManager.save(entity);\n    });\n    this.logger.log(\n      `${!existedEntityId ? `Created` : `Updated`} file with ID ${entity.id}`,\n    );\n    return entity;\n  }\n\n  /**\n   * Private helper method to find a file by its ID and public/private status.\n   * @param id - The ID of the file to find.\n   * @param isPublic - A boolean flag indicating if the file is public (true) or private (false).\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findFileById(id: number, isPublic: boolean = undefined) {\n    const qb = this.createBasicFindQb().where(\"file.id = :id\", { id });\n    if (isPublic !== undefined) {\n      qb.andWhere(`file.public = :isPublic`, { isPublic });\n    }\n    const entity = await qb.getOne();\n    if (!entity) {\n      throw new NotFoundException(`File with ID ${id} not found`);\n    }\n    return entity;\n  }\n\n  /**\n   * Finds a file entity by code.\n   * @param code - The code of the file entity.\n   * @returns The found file entity.\n   */\n  async findByCode(code: string): Promise {\n    return await this.createBasicFindQb()\n      .where(\"file.code = :code\", { code })\n      .getOne();\n  }\n\n  /**\n   * Finds a public file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPublicById(id: number): Promise {\n    return this.findFileById(id, true);\n  }\n\n  /**\n   * Finds a private file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPrivateById(id: number): Promise {\n    return this.findFileById(id);\n  }\n\n  /**\n   * Constructs the full file path for the given File object.\n   * @param file - A File object containing the file's metadata.\n   * @returns The full file path as a string.\n   */\n  async getFilePath(file: File): Promise {\n    const filePath = `${!file.public ? await this.getPrivateDir() : await this.getPublicDir()}/${file.id}/`;\n    return filePath + file.path;\n  }\n\n  /**\n   * Removes a file by its ID and deletes its corresponding directory.\n   * @param id - The ID of the file to remove.\n   * @returns A promise that resolves to the removed FileEntity.\n   */\n  async remove(id: number): Promise {\n    const file = await this.findFileById(id);\n    const dir = path.join(\n      !file.public ? await this.getPrivateDir() : await this.getPublicDir(),\n      file.id.toString(),\n    );\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (file.metadata) {\n        if (file.metadata.image) {\n          await transactionManager.remove(file.metadata.image);\n        }\n        if (file.metadata.gps) {\n          await transactionManager.remove(file.metadata.gps);\n        }\n        if (file.metadata.audio) {\n          await transactionManager.remove(file.metadata.audio);\n        }\n        if (file.metadata.video) {\n          await transactionManager.remove(file.metadata.video);\n        }\n      }\n      await transactionManager.remove(file);\n      await fs.promises\n        .rm(dir, { recursive: true, force: true })\n        .catch((err) => {\n          throw new InternalServerErrorException(\n            `Failed to delete directory: ${dir}`,\n            err,\n          );\n        });\n    });\n    this.logger.log(`File with ID ${id} removed`);\n    return file;\n  }\n\n  /**\n   * Private helper method to create a query builder for finding files with their related entities.\n   * @returns A query builder instance for finding files.\n   */\n  private createBasicFindQb() {\n    return this.fileRep\n      .createQueryBuilder(\"file\")\n      .leftJoinAndSelect(\"file.icon\", \"icon\")\n      .leftJoinAndSelect(\"file.metadata\", \"metadata\")\n      .leftJoinAndSelect(\"metadata.gps\", \"metaGps\")\n      .leftJoinAndSelect(\"metadata.image\", \"metaImage\")\n      .leftJoinAndSelect(\"metadata.audio\", \"metaAudio\")\n      .leftJoinAndSelect(\"metadata.video\", \"metaVideo\")\n      .leftJoinAndSelect(\"icon.name\", \"iconName\")\n      .leftJoinAndSelect(\"iconName.lang\", \"iconLang\")\n      .leftJoinAndSelect(\"icon.files\", \"iconFiles\")\n      .leftJoinAndSelect(\"iconFiles.format\", \"iconFilesFormat\")\n      .leftJoinAndSelect(\"icon.type\", \"iconType\")\n      .leftJoinAndSelect(\"iconType.ext\", \"iconTypeExt\")\n      .leftJoinAndSelect(\"file.preview\", \"preview\")\n      .leftJoinAndSelect(\"preview.name\", \"previewName\")\n      .leftJoinAndSelect(\"previewName.lang\", \"previewLang\")\n      .leftJoinAndSelect(\"preview.files\", \"previewFiles\")\n      .leftJoinAndSelect(\"previewFiles.format\", \"previewFilesFormat\")\n      .leftJoinAndSelect(\"preview.type\", \"previewType\")\n      .leftJoinAndSelect(\"previewType.ext\", \"previewTypeExt\");\n  }\n\n  /**\n   * Private helper method to create a file directory for the specified public/private status and entity ID.\n   * @param isPublic - A boolean flag indicating if the directory is for public files (true) or private files (false).\n   * @param entityId - The entity ID to use as the directory name.\n   * @returns A promise that resolves to the created directory path as a string.\n   */\n  private async createFileDirectory(\n    isPublic: boolean,\n    entityId: string,\n  ): Promise {\n    const dir = path.join(\n      !isPublic ? await this.getPrivateDir() : await this.getPublicDir(),\n      entityId,\n    );\n    await createDirectoriesIfNotExist(dir);\n    return dir;\n  }\n\n  /**\n   * Private helper method to create a new FileEntity with the specified public/private status.\n   * @param isPublic - A boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  private async createFileEntity(isPublic: boolean) {\n    const entity = new FileEntity();\n    entity.public = isPublic;\n    return this.fileRep.save(entity);\n  }\n\n  /**\n   * Retrieves the public directory path stored in configuration.\n   * @returns A promise that resolves to the normalized public directory path.\n   */\n  private async getPublicDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PUBLIC_DIR));\n    return path.normalize(dir);\n  }\n\n  /**\n   * Retrieves the private directory path stored in configuration.\n   * @returns A promise that resolves to the normalized private directory path.\n   */\n  private async getPrivateDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PRIVATE_DIR));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenMsException.html":{"url":"classes/ForbiddenMsException.html","title":"class - ForbiddenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/forbidden-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for forbidden requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/forbidden-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for forbidden requests, extending MsException.\n */\nexport class ForbiddenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.FORBIDDEN, message || \"Forbidden\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCaptchaService.html":{"url":"classes/GoogleCaptchaService.html","title":"class - GoogleCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/google-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\nIt manages the generation and validation of Google reCAPTCHAs.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/google-captcha.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:46\n\n                        \n                    \n\n\n            \n                \n                        Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a CaptchaResponse object containing the captcha id and type.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:62\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against Google's reCAPTCHA verification service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { lastValueFrom } from \"rxjs\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\n\n/**\n * The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\n * It manages the generation and validation of Google reCAPTCHAs.\n */\nexport class GoogleCaptchaService extends CaptchaService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n    private readonly http: HttpService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n   * @returns {Promise} - A promise resolving to a CaptchaResponse object containing the captcha id and type.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = await this.cacheService.get(CaptchaConfig.GOOGLE_PUBLIC_KEY);\n    return { id, type: \"google\" };\n  }\n\n  /**\n   * Validates the provided captcha request against Google's reCAPTCHA verification service.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const secretKey = await this.cacheService.get(\n      CaptchaConfig.GOOGLE_SECRET_KEY,\n    );\n    const response$ = await this.http.post(\n      `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${request.data}`,\n    );\n    const response = await lastValueFrom(response$);\n    return response?.data?.success;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GpsFileMetadata.html":{"url":"interfaces/GpsFileMetadata.html","title":"interface - GpsFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GpsFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing GPS file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitude\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-altitude parameter\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing identifier of meta-data object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-latitude parameter\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-longitude parameter\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GpsFileMetadataEntity.html":{"url":"entities/GpsFileMetadataEntity.html","title":"entity - GpsFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GpsFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/gps-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the GPS metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                altitude\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        altitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { GpsFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the GPS metadata of the file\n */\n@Entity(\"file_metadata_gps\")\nexport class GpsFileMetadataEntity implements GpsFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  altitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  latitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphicCaptchaService.html":{"url":"classes/GraphicCaptchaService.html","title":"class - GraphicCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphicCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/graphic-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\nIt manages the generation and validation of graphic captchas.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Private\n                                generateColor\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaExp\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontFamily\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontPath\n                            \n                            \n                                    Private\n                                    Async\n                                makeImageFromText\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/graphic-captcha.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of Logger.\n\n\n                                                        \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of CacheService.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:55\n\n                        \n                    \n\n\n            \n                \n                        Generates a new graphical captcha and stores it in the cache.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Generates a random RGB color.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nAn RGB color string.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaExp()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha expiration time defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontFamily\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontFamily()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font family defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha font family.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontPath()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font path defined in configuration and normalizes it.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the normalized captcha font path.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeImageFromText\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeImageFromText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Generates an image from the provided text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text to be drawn on the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to a base64 encoded image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:76\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against the cached value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { createCanvas, registerFont } from \"canvas\";\nimport { CAPTCHA_CACHE_PREFIX } from \"./captcha.constants\";\nimport * as path from \"path\";\nimport { StringUtils } from \"../../shared/utils/string.utils\";\nimport { NumberUtils } from \"../../shared/utils/number.utils\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport generateRandomString = StringUtils.generateRandomString;\nimport generateRandomInt = NumberUtils.generateRandomInt;\n\n/**\n * The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\n * It manages the generation and validation of graphic captchas.\n */\nexport class GraphicCaptchaService extends CaptchaService {\n  /**\n   * @param {Logger} logger - An instance of Logger.\n   * @param {CacheService} cacheService - An instance of CacheService.\n   */\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new graphical captcha and stores it in the cache.\n   * @returns {Promise} - A promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = uuidv4();\n    const val = generateRandomString(5, 7);\n    const image = await this.makeImageFromText(val);\n    const capEx = await this.getCaptchaExp();\n    await this.cacheService.set(`${CAPTCHA_CACHE_PREFIX}:${id}`, val, capEx);\n    this.logger.debug(`Generated captcha with id: ${id} and value: ${val}`);\n    return { id, image: `data:image/png;base64,${image}`, type: \"default\" };\n  }\n\n  /**\n   * Validates the provided captcha request against the cached value.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const key = `${CAPTCHA_CACHE_PREFIX}:${request.id}`;\n    const val = await this.cacheService.get(key);\n    this.cacheService.del(key);\n    if (!val) {\n      this.logger.warn(`Invalid captcha id: ${request.id}`);\n      return false;\n    }\n    if (val !== request.data) {\n      this.logger.warn(`Incorrect captcha value for id: ${request.id}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Generates an image from the provided text.\n   * @param {string} text - The text to be drawn on the image.\n   * @returns {Promise} - A promise resolving to a base64 encoded image.\n   */\n  private async makeImageFromText(text: string) {\n    const canvas = createCanvas(200, 50);\n    const ctx = canvas.getContext(\"2d\");\n    const capFontFamily = await this.getCaptchaFontFamily();\n    const capFontPath = await this.getCaptchaFontPath();\n    registerFont(capFontPath, { family: capFontFamily });\n    ctx.fillStyle = this.generateColor();\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = `30px ${capFontFamily}`;\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i } - A promise resolving to the captcha expiration time.\n   */\n  private async getCaptchaExp() {\n    return await this.cacheService.getNumber(CaptchaConfig.EXPIRATION);\n  }\n\n  /**\n   * Retrieves the captcha font family defined in configuration.\n   * @returns {Promise} - A promise resolving to the captcha font family.\n   */\n  private async getCaptchaFontFamily() {\n    return await this.cacheService.get(CaptchaConfig.FONT_FAMILY);\n  }\n\n  /**\n   * Retrieves the captcha font path defined in configuration and normalizes it.\n   * @returns {Promise} - A promise resolving to the normalized captcha font path.\n   */\n  private async getCaptchaFontPath() {\n    const dir =\n      process.cwd() + (await this.cacheService.get(CaptchaConfig.FONT_PATH));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IccFileMetadata.html":{"url":"interfaces/IccFileMetadata.html","title":"interface - IccFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IccFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing ICC file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectionSpace\n                                        \n                                \n                                \n                                        \n                                            deviceManufacturer\n                                        \n                                \n                                \n                                        \n                                            deviceModelNumber\n                                        \n                                \n                                \n                                        \n                                            iccCopyright\n                                        \n                                \n                                \n                                        \n                                            iccDescription\n                                        \n                                \n                                \n                                        \n                                            iccProfileDate\n                                        \n                                \n                                \n                                        \n                                            iccSignature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            primaryPlatform\n                                        \n                                \n                                \n                                        \n                                            profileClassName\n                                        \n                                \n                                \n                                        \n                                            profileClassValue\n                                        \n                                \n                                \n                                        \n                                            profileCreator\n                                        \n                                \n                                \n                                        \n                                            profileVersion\n                                        \n                                \n                                \n                                        \n                                            renderingIntentName\n                                        \n                                \n                                \n                                        \n                                            renderingIntentValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection space of the ICC profile, representing the intermediate color space used for color conversions.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceManufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceManufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The manufacturer of the device for which the ICC profile was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceModelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceModelNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model number of the device for which the ICC profile was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccCopyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccCopyright:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The copyright information for the ICC profile, indicating ownership and usage rights\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A description of the ICC profile, explaining its purpose and characteristics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccProfileDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccProfileDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the ICC profile was created or last modified\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique signature of the ICC profile used to confirm its authenticity and validity\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPlatform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPlatform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary platform or operating system for which the ICC profile was created or optimized\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the ICC profile class, describing its primary purpose\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The class of the ICC profile, indicating its primary purpose and type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name or identifier of the creator of the ICC profile\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of the ICC profile, indicating the specification version used to create the color profile.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the name of the rendering type that is used when converting colors between color spaces\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates the type of rendering to be used when converting colors between color spaces\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/IccFileMetadataEntity.html":{"url":"entities/IccFileMetadataEntity.html","title":"entity - IccFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  IccFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/icc-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the ICC metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectionSpace\n                            \n                            \n                                    \n                                    \n                                deviceManufacturer\n                            \n                            \n                                    \n                                    \n                                deviceModelNumber\n                            \n                            \n                                    \n                                    \n                                iccCopyright\n                            \n                            \n                                    \n                                    \n                                iccDescription\n                            \n                            \n                                    \n                                    \n                                iccProfileDate\n                            \n                            \n                                    \n                                    \n                                iccSignature\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                primaryPlatform\n                            \n                            \n                                    \n                                    \n                                profileClassName\n                            \n                            \n                                    \n                                    \n                                profileClassValue\n                            \n                            \n                                    \n                                    \n                                profileCreator\n                            \n                            \n                                    \n                                    \n                                profileVersion\n                            \n                            \n                                    \n                                    \n                                renderingIntentName\n                            \n                            \n                                    \n                                    \n                                renderingIntentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectionSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'connection_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceManufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_manufacturer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceModelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_model_number', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccCopyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_copyright', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccProfileDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'icc_profile_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccSignature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_signature', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'primary_platform', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_creator', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_version', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'rendering_intent_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'rendering_intent_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IccFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the ICC metadata of the file\n */\n@Entity(\"file_metadata_icc\")\nexport class IccFileMetadataEntity implements IccFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_version\", nullable: true })\n  profileVersion: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_value\", nullable: true })\n  profileClassValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_name\", nullable: true })\n  profileClassName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"connection_space\", nullable: true })\n  connectionSpace: string;\n\n  @Index()\n  @Column(\"date\", { name: \"icc_profile_date\", nullable: true })\n  iccProfileDate: Date;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_signature\", nullable: true })\n  iccSignature: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"primary_platform\", nullable: true })\n  primaryPlatform: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_manufacturer\", nullable: true })\n  deviceManufacturer: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_model_number\", nullable: true })\n  deviceModelNumber: string;\n\n  @Index()\n  @Column(\"int\", { name: \"rendering_intent_value\", nullable: true })\n  renderingIntentValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"rendering_intent_name\", nullable: true })\n  renderingIntentName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_creator\", nullable: true })\n  profileCreator: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_description\", nullable: true })\n  iccDescription: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_copyright\", nullable: true })\n  iccCopyright: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFileMetadata.html":{"url":"interfaces/ImageFileMetadata.html","title":"interface - ImageFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing image file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitDepth\n                                        \n                                \n                                \n                                        \n                                            bps\n                                        \n                                \n                                \n                                        \n                                            colorComponents\n                                        \n                                \n                                \n                                        \n                                            colorType\n                                        \n                                \n                                \n                                        \n                                            compression\n                                        \n                                \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interlace\n                                        \n                                \n                                \n                                        \n                                            subsampling\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitDepth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitDepth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bit depth of the image, indicating the number of bits used for color representation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bps:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of bits used to represent the color of a single pixel in the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorComponents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of color components used to represent the color of the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color type of the image, indicating the color model used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains the compression method used to reduce the size of the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the image was created or last modified\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the filtering method used to process the image data before compressing it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the image in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interlace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether interlacing is used in the image, allowing for progressive display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subsampling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subsampling:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The subsampling method used for the image, indicating how color information is sampled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the image in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImageFileMetadataEntity.html":{"url":"entities/ImageFileMetadataEntity.html","title":"entity - ImageFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImageFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/image-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the image metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitDepth\n                            \n                            \n                                    \n                                    \n                                bps\n                            \n                            \n                                    \n                                    \n                                colorComponents\n                            \n                            \n                                    \n                                    \n                                colorType\n                            \n                            \n                                    \n                                    \n                                compression\n                            \n                            \n                                    \n                                    \n                                dateTime\n                            \n                            \n                                    \n                                    \n                                filter\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interlace\n                            \n                            \n                                    \n                                    \n                                subsampling\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'color_components', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        compression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'date_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interlace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subsampling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ImageFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the image metadata of the file\n */\n@Entity(\"file_metadata_image\")\nexport class ImageFileMetadataEntity implements ImageFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  bps: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { name: \"color_components\", nullable: true, default: null })\n  colorComponents: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  subsampling: string;\n\n  @Index()\n  @Column(\"date\", { name: \"date_time\", nullable: true })\n  dateTime: Date;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  bitDepth: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  colorType: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  compression: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  filter: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  interlace: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenMsException.html":{"url":"classes/InvalidTokenMsException.html","title":"class - InvalidTokenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/invalid-token-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for invalid token, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/invalid-token-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for invalid token, extending MsException.\n */\nexport class InvalidTokenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Invalid token\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtDto.html":{"url":"classes/JwtDto.html","title":"class - JwtDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for JWT tokens.\nContains access and refresh tokens along with their expiration dates and user information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                atExp\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                rtExp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:103\n                        \n                    \n\n            \n                \n                    The access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:115\n                        \n                    \n\n            \n                \n                    The expiration date of the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:109\n                        \n                    \n\n            \n                \n                    The refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rtExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:121\n                        \n                    \n\n            \n                \n                    The expiration date of the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:97\n                        \n                    \n\n            \n                \n                    The user-data object.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a language entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LanguageEntity.html":{"url":"entities/LanguageEntity.html","title":"entity - LanguageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LanguageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/language.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the system languages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Column, Entity, Index, ManyToOne, PrimaryColumn } from \"typeorm\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\nimport { Language } from \"../locale.types\";\n\n/**\n * The entity stores the system languages\n */\n@Entity(\"languages\")\nexport class LanguageEntity implements Language {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiteAuthGuard.html":{"url":"injectables/LiteAuthGuard.html","title":"injectable - LiteAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiteAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/lite-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                fetchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fetchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class LiteAuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n */\n@Injectable()\nexport class LiteAuthGuard extends AbstractAuthGuard {\n  protected fetchUser = false;\n\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocaleModule.html":{"url":"modules/LocaleModule.html","title":"module - LocaleModule","body":"\n                   \n\n\n\n\n    Modules\n    LocaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_LocaleModule_exports\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for handling localization.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\nimport { LocaleService } from \"./locale.service\";\n\n/**\n * A module that provides services and configurations for handling localization.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      LanguageEntity,\n      LocalizedStringEntity,\n      LocalizedMediaEntity,\n    ]),\n  ],\n  providers: [LocaleService],\n  exports: [LocaleService],\n})\nexport class LocaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling localization operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLocalizedStrings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRep: Repository, localizedStringRep: Repository, localizedMediaRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/locale.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedStringRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMediaRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLocalizedStrings\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocalizedStrings(value: string, code?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/locale.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Creates localized strings for all available languages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be localized.\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional code to be used for the localized strings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of LocalizedStringEntity objects.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\n\n/**\n * Service for handling localization operations.\n */\n@Injectable()\nexport class LocaleService {\n  constructor(\n    @InjectRepository(LanguageEntity)\n    private readonly languageRep: Repository,\n    @InjectRepository(LocalizedStringEntity)\n    private readonly localizedStringRep: Repository,\n    @InjectRepository(LocalizedMediaEntity)\n    private readonly localizedMediaRep: Repository,\n  ) {}\n\n  /**\n   * Creates localized strings for all available languages.\n   * @param value - The value to be localized.\n   * @param code - An optional code to be used for the localized strings.\n   * @returns A promise that resolves to an array of LocalizedStringEntity objects.\n   */\n  async createLocalizedStrings(\n    value: string,\n    code?: string,\n  ): Promise {\n    const languages = await this.languageRep.find();\n    const res: LocalizedStringEntity[] = [];\n    for (const language of languages) {\n      const ls = new LocalizedStringEntity();\n      ls.lang = language;\n      ls.value = value;\n      if (code) {\n        ls.code = `${code}_${language.id}`;\n        const existed = await this.localizedStringRep.findOne({\n          where: { code: ls.code },\n        });\n        ls.id = existed?.id;\n      }\n      await this.localizedStringRep.save(ls);\n      res.push(ls);\n    }\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleSubscriber.html":{"url":"injectables/LocaleSubscriber.html","title":"injectable - LocaleSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/locale-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                LocaleSubscriber is an EntitySubscriber that listens to removal events\nfor entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\nWhen such an entity is removed, LocaleSubscriber will also remove\nthe associated LocalizedStringEntity or LocalizedMediaEntity instances.\nExample :class MyEntity {\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  firstName: LocalizedStringEntity[];\n}const myEntity = new MyEntity();\nentityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs a new LocaleSubscriber instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Logger instance used for logging messages.\n\n\n                                                        \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe DataSource instance used to access the connection and its subscribers.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterRemove\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterRemove(event: RemoveEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:69\n                        \n                    \n\n\n            \n                \n                        The afterRemove event is triggered when an entity is removed.\nIf the removed entity has relationships with LocalizedStringEntity instances,\nthe related LocalizedStringEntity instances will also be removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        RemoveEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe RemoveEvent instance containing information about the removed entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  DataSource,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  RemoveEvent,\n} from \"typeorm\";\nimport { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectDataSource } from \"@nestjs/typeorm\";\nimport { LOGGER } from \"../../log/log.constants\";\nimport { LocalizedStringEntity } from \"./localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./localized-media.entity\";\n\n/**\n * LocaleSubscriber is an EntitySubscriber that listens to removal events\n * for entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\n * When such an entity is removed, LocaleSubscriber will also remove\n * the associated LocalizedStringEntity or LocalizedMediaEntity instances.\n *\n * @example\n * class MyEntity {\n *   @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n *   @JoinTable()\n *   firstName: LocalizedStringEntity[];\n * }\n *\n * const myEntity = new MyEntity();\n * entityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n */\n@Injectable()\n@EventSubscriber()\nexport class LocaleSubscriber implements EntitySubscriberInterface {\n  /**\n   * Constructs a new LocaleSubscriber instance.\n   *\n   * @param logger - The Logger instance used for logging messages.\n   * @param dataSource - The DataSource instance used to access the connection and its subscribers.\n   */\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    dataSource.manager.connection.subscribers.push(this);\n  }\n\n  /**\n   * The afterRemove event is triggered when an entity is removed.\n   * If the removed entity has relationships with LocalizedStringEntity instances,\n   * the related LocalizedStringEntity instances will also be removed.\n   *\n   * @param event - The RemoveEvent instance containing information about the removed entity.\n   * @returns A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n   */\n  async afterRemove(event: RemoveEvent): Promise {\n    const entity = event.entity;\n    if (!entity) {\n      return;\n    }\n    const localizedStringProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedStringEntity\n      );\n    });\n    if (localizedStringProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedStringEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedStringProperties as LocalizedStringEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedStringEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedStringEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n\n    const localizedMediaProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedMediaEntity\n      );\n    });\n    if (localizedMediaProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedMediaEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedMediaProperties as LocalizedMediaEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedMediaEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedMediaEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedMedia.html":{"url":"interfaces/LocalizedMedia.html","title":"interface - LocalizedMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized media entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedMediaEntity.html":{"url":"entities/LocalizedMediaEntity.html","title":"entity - LocalizedMediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedMediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores internationalized media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedMedia } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores internationalized media objects\n */\n@Entity(\"localized_medias\")\nexport class LocalizedMediaEntity implements LocalizedMedia {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: false })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  value: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedString.html":{"url":"interfaces/LocalizedString.html","title":"interface - LocalizedString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized string entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedStringEntity.html":{"url":"entities/LocalizedStringEntity.html","title":"entity - LocalizedStringEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedStringEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-string.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the translations in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedString } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\n\n/**\n * The entity stores the translations in itself\n */\n@Entity(\"localized_strings\")\nexport class LocalizedStringEntity implements LocalizedString {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @Column(\"text\", { nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/log/log.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides logging functionality using the LogService.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogService } from \"./log.service\";\nimport { LOGGER } from \"./log.constants\";\n\n/**\n * A module that provides logging functionality using the LogService.\n */\n@Module({\n  providers: [\n    {\n      provide: LOGGER,\n      useClass: LogService,\n    },\n  ],\n  exports: [LOGGER],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogService.html":{"url":"classes/LogService.html","title":"class - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log service that extends the built-in Nest Logger, providing additional functionality and context.\n\n            \n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                getCallingContext\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                patchFromCtx\n                            \n                            \n                                    Private\n                                prepareMessage\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a debug message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe debug message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Logs an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error message.\n\n\n                                            \n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional stack trace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCallingContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCallingContext()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Retrieves the calling context (file path, method name, line number) from the stack trace.\n\n\n                        \n                            Returns :     { filePath: any; methodName: any; lineNumber: any; }\n\n                        \n                            \n                                An object containing the file path, method name, and line number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a message at the log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to log.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchFromCtx\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchFromCtx(ctx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Patches the calling context for display in log messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe calling context object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string representing the calling context.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareMessage(message: string, data?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Prepares the log message by combining the main message with additional data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe main log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The prepared log message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a verbose message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe verbose message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a warning message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe warning message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Log service that extends the built-in Nest Logger, providing additional functionality and context.\n */\nexport class LogService extends Logger {\n  /**\n   * Logs a message at the log level.\n   * @param message - The message to log.\n   * @param data - Additional data to log.\n   */\n  log(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.log(this.prepareMessage(message, data), ctx.methodName);\n  }\n\n  /**\n   * Logs an error message.\n   * @param message - The error message.\n   * @param trace - Optional stack trace.\n   */\n  error(message: string, trace?: string) {\n    const ctx = this.getCallingContext();\n    super.error(this.prepareMessage(message), trace, this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a warning message.\n   * @param message - The warning message.\n   * @param data - Additional data to log.\n   */\n  warn(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.warn(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a verbose message.\n   * @param message - The verbose message.\n   * @param data - Additional data to log.\n   */\n  verbose(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.verbose(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a debug message.\n   * @param message - The debug message.\n   * @param data - Additional data to log.\n   */\n  debug(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.debug(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Patches the calling context for display in log messages.\n   * @param ctx - The calling context object.\n   * @returns A formatted string representing the calling context.\n   */\n  private patchFromCtx(ctx: {\n    filePath: string;\n    methodName: string;\n    lineNumber: string;\n  }) {\n    let p = `${ctx?.filePath}:${ctx?.lineNumber} > ${ctx?.methodName}`;\n    if (p === \"undefined:undefined > undefined\") {\n      p = \"unknown\";\n    }\n    return p;\n  }\n\n  /**\n   * Prepares the log message by combining the main message with additional data.\n   * @param message - The main log message.\n   * @param data - Additional data to log.\n   * @returns The prepared log message.\n   */\n  private prepareMessage(message: string, data?: T) {\n    let m = inspect(message);\n    if (\n      (m.startsWith(`'`) && m.endsWith(`'`)) ||\n      (m.startsWith(`\"`) && m.endsWith(`\"`))\n    ) {\n      m = m.substring(1, m.length - 1);\n    }\n    if (data) {\n      m += inspect(data);\n    }\n    return m;\n  }\n\n  /**\n   * Retrieves the calling context (file path, method name, line number) from the stack trace.\n   * @returns An object containing the file path, method name, and line number.\n   */\n  private getCallingContext() {\n    const stackTrace = new Error().stack;\n    if (stackTrace) {\n      const lines = stackTrace.split(\"\\n\");\n      // The calling context is located in the fourth line of the stack trace\n      if (lines.length >= 4) {\n        const matches = lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d+\\)/);\n        if (matches && matches.length > 3) {\n          const filePath = matches[2].split(\"/\").slice(-2).join(\"/\");\n          const methodName = matches[1];\n          const lineNumber = matches[3];\n          return { filePath, methodName, lineNumber };\n        }\n      }\n    }\n    return {\n      filePath: \"Unknown path\",\n      methodName: \"Anonymous context\",\n      lineNumber: \"Unknown line\",\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for login payload.\nContains user login information required for authentication.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                captchaId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                captchaPayload\n                            \n                            \n                                    \n                                    \n                                ipAddress\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:63\n                        \n                    \n\n            \n                \n                    The ID of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaPayload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:71\n                        \n                    \n\n            \n                \n                    The payload of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIP()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:55\n                        \n                    \n\n            \n                \n                    The IP address of the user.\nOptional.\nExample :\"192.168.0.1\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:36\n                        \n                    \n\n            \n                \n                    The login of the user.\nExample :\"admin\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:45\n                        \n                    \n\n            \n                \n                    The password of the user.\nExample :\"P@ssw0rd!\"\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     MediaFile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaDto.html":{"url":"classes/MediaDto.html","title":"class - MediaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Media\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:151\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media objects in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, f => f.media, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { MediaTypeEntity } from \"./media-type.entity\";\nimport { MediaFileEntity } from \"./media-file.entity\";\nimport { Media } from \"../media.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { FileMetadataEntity } from \"../../file/entity/file-metadata.entity\";\n\n/**\n * The entity stores media objects in itself\n */\n@Entity(\"medias\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class MediaEntity implements Media {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaTypeEntity, (type) => type.code)\n  type: MediaTypeEntity;\n\n  @OneToMany(() => MediaFileEntity, (f) => f.media, { cascade: true })\n  files: MediaFileEntity[];\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaExt.html":{"url":"interfaces/MediaExt.html","title":"interface - MediaExt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaExt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media extension.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaExtEntity.html":{"url":"entities/MediaExtEntity.html","title":"entity - MediaExtEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaExtEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-ext.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores extensions of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaExt } from \"../media.types\";\n\n/**\n * The entity stores extensions of media objects\n */\n@Entity(\"medias_ext\")\nexport class MediaExtEntity implements MediaExt {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFileDto.html":{"url":"classes/MediaFileDto.html","title":"class - MediaFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:176\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:191\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFileEntity.html":{"url":"entities/MediaFileEntity.html","title":"entity - MediaFileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media object files (links)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { MediaEntity } from \"./media.entity\";\nimport { MediaFile } from \"../media.types\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\n\n/**\n * The entity stores media object files (links)\n */\n@Entity(\"medias_files\")\nexport class MediaFileEntity implements MediaFile {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: number;\n\n  @Column(\"smallint\", { nullable: true })\n  height: number;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaFormatEntity, (type) => type.code)\n  format: MediaFormatEntity;\n\n  @ManyToOne(() => MediaEntity)\n  media: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media format.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFormatDto.html":{"url":"classes/MediaFormatDto.html","title":"class - MediaFormatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFormatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media format.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFormat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:133\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFormatEntity.html":{"url":"entities/MediaFormatEntity.html","title":"entity - MediaFormatEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFormatEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-format.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the formats of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaFormat } from \"../media.types\";\n\n/**\n * The entity stores the formats of media objects\n */\n@Entity(\"medias_format\")\nexport class MediaFormatEntity implements MediaFormat {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: string;\n\n  @Column(\"smallint\", { nullable: true })\n  height: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaManager.html":{"url":"classes/MediaManager.html","title":"class - MediaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the media management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateMedia\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findMediaById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getMediaPath\n                            \n                            \n                                    Abstract\n                                recreate\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateMedia(file: Buffer, type: string, code?: string, existedEntityId?: number, name?: LocalizedString[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            LocalizedString[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findMediaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMediaById(id: number, privateMedia?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                privateMedia\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getMediaPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPath(media: Media, format?: string, webpSupport?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                media\n                                            \n                                                            Media\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                webpSupport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        recreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/media/media.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for management media system.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: MediaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MediaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: MediaService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { MediaService } from \"./media.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { MediaEntity } from \"./entity/media.entity\";\nimport { MediaTypeEntity } from \"./entity/media-type.entity\";\nimport { MediaFileEntity } from \"./entity/media-file.entity\";\nimport { MediaFormatEntity } from \"./entity/media-format.entity\";\nimport { MediaManager, MediaModuleOptions } from \"./media.types\";\nimport { FileModule } from \"../file/file.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module for management media system.\n */\n@Module({})\nexport class MediaModule {\n  static forRoot(\n    options: MediaModuleOptions = {\n      service: MediaService,\n    },\n  ): DynamicModule {\n    return {\n      module: MediaModule,\n      imports: [\n        TypeOrmModule.forFeature([\n          MediaEntity,\n          MediaTypeEntity,\n          MediaFileEntity,\n          MediaFormatEntity,\n        ]),\n        FileModule.forRoot(),\n        LogModule,\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: MediaManager,\n          useClass: options.service,\n        },\n      ],\n      exports: [MediaManager],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaType.html":{"url":"interfaces/MediaType.html","title":"interface - MediaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            vp6\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         MediaExt\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaExt\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:     MediaFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vp6\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vp6:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaTypeDto.html":{"url":"classes/MediaTypeDto.html","title":"class - MediaTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaType\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaTypeEntity.html":{"url":"entities/MediaTypeEntity.html","title":"entity - MediaTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-type.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the types of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExtEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, e => e.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\nimport { MediaType } from \"../media.types\";\nimport { MediaExtEntity } from \"./media-ext.entity\";\n\n/**\n * The entity stores the types of media objects\n */\n@Entity(\"medias_types\")\nexport class MediaTypeEntity implements MediaType {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"boolean\", { default: false })\n  vp6: boolean;\n\n  @Column(\"boolean\", { default: false })\n  private: boolean;\n\n  @Column(\"int\", { nullable: true })\n  quality: number;\n\n  @ManyToOne(() => MediaExtEntity, (e) => e.code)\n  ext: MediaExtEntity;\n\n  @ManyToMany(() => MediaFormatEntity)\n  @JoinTable()\n  formats: MediaFormatEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageBus.html":{"url":"interfaces/MessageBus.html","title":"interface - MessageBus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageBus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for the message bus.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dispatch\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n/**\n * Type definition for microservices client options.\n */\nexport type MsClientOptions = {\n  timeout: number;\n};\n\n/**\n * Interface defining the contract for the message bus.\n */\nexport interface MessageBus {\n  dispatch(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Promise;\n\n  send(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n\n  emit(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesBroker.html":{"url":"interfaces/MessagesBroker.html","title":"interface - MessagesBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessagesBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for message brokering.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:39\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MessagesBroker {\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  emit(chanel: string, data: T): Promise;\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void);\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesBrokerModule.html":{"url":"modules/MessagesBrokerModule.html","title":"module - MessagesBrokerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesBrokerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MessagesBrokerModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides message brokering functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { MESSAGES_BROKER } from \"./messages-broker.constants\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MessagesBrokerService } from \"./messages-broker.service\";\n\n/**\n * A module that provides message brokering functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: MESSAGES_BROKER,\n      useClass: MessagesBrokerService,\n    },\n  ],\n  exports: [MESSAGES_BROKER],\n})\nexport class MessagesBrokerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesBrokerService.html":{"url":"injectables/MessagesBrokerService.html","title":"injectable - MessagesBrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesBrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service that implements the MessagesBroker interface for message brokering using Redis.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Private\n                                safeDeSerialize\n                            \n                            \n                                    Private\n                                safeSerialize\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pubClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pubClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDeSerialize(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Safely deserializes a JSON string to an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deserialized object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeSerialize(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:75\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Safely serializes data to a JSON string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to serialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The serialized JSON string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { MessagesBroker } from \"./messages-broker.types\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\n\n/**\n * A service that implements the MessagesBroker interface for message brokering using Redis.\n */\n@Injectable()\nexport class MessagesBrokerService implements MessagesBroker {\n  private readonly subClient: Redis;\n  private readonly subscribers: Map void> =\n    new Map();\n\n  constructor(@Inject(REDIS_CLIENT) private readonly pubClient: Redis) {\n    this.subClient = this.pubClient.duplicate();\n    this.subClient.on(\"message\", (chanel, data) => {\n      if (!this.subscribers.has(chanel)) {\n        return;\n      }\n      const fun = this.subscribers.get(chanel);\n      fun(this.safeDeSerialize(data));\n    });\n  }\n\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  async emit(chanel: string, data: T) {\n    await this.pubClient.publish(chanel, this.safeSerialize(data));\n  }\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void) {\n    this.subClient.subscribe(chanel);\n    this.subscribers.set(chanel, handler);\n  }\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string) {\n    this.subClient.unsubscribe(chanel);\n    this.subscribers.delete(chanel);\n  }\n\n  /**\n   * Safely serializes data to a JSON string.\n   * @param data - The data to serialize.\n   * @returns The serialized JSON string.\n   */\n  private safeSerialize(data: T) {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      return data.toString();\n    }\n  }\n\n  /**\n   * Safely deserializes a JSON string to an object.\n   * @param data - The JSON string to deserialize.\n   * @returns The deserialized object.\n   */\n  private safeDeSerialize(data: string) {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsClient.html":{"url":"classes/MsClient.html","title":"class - MsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                Microservices client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                    Private\n                                handleRequest\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, proxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/ms-client.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Object()\n                                            \n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:80\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRequest(source: Observable, pattern: any, data: any, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:97\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handles the request by logging and managing errors and timeouts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe observable source.\n\n\n                                            \n                                        \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, throwError, timeout } from \"rxjs\";\nimport { HttpException, HttpStatus, Inject, Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport { MessageBus, MsClientOptions } from \"./ms-client.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_EXCEPTION_ID } from \"../../constants\";\nimport { MsException } from \"../../exceptions/ms.exception\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Microservices client for dispatching messages between microservices.\n */\nexport class MsClient implements MessageBus {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly proxy: ClientProxy,\n  ) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput = Object(),\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const source = this.proxy.send(pattern, data);\n      this.handleRequest(source, pattern, data, opts).subscribe({\n        next: (result) => resolve(result),\n        error: (error) => reject(error),\n      });\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.send(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.emit(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Handles the request by logging and managing errors and timeouts.\n   * @param source - The observable source.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result.\n   */\n  private handleRequest(\n    source: Observable,\n    pattern: any,\n    data: any,\n    opts?: MsClientOptions,\n  ): Observable {\n    this.logger.debug(`Sending request with pattern: ${inspect(pattern)}`);\n    return source.pipe(\n      timeout(opts?.timeout || parseInt(process.env.TRANSPORT_TIMEOUT)),\n      catchError((error) => {\n        if (error?.type === MS_EXCEPTION_ID) {\n          const err = error as MsException;\n          this.logger.error(\n            `Microservice exception: ${err.message}`,\n            err.stack,\n          );\n          throw new HttpException(err.message, err.code);\n        }\n        if (error.name === \"TimeoutError\") {\n          this.logger.warn(`Request timeout for pattern: ${inspect(pattern)}`);\n          throw new HttpException(\n            \"Request Timeout\",\n            HttpStatus.REQUEST_TIMEOUT,\n          );\n        }\n        this.logger.error(\n          `Unknown error for pattern: ${inspect(pattern)}`,\n          error,\n        );\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MsClientModule.html":{"url":"modules/MsClientModule.html","title":"module - MsClientModule","body":"\n                   \n\n\n\n\n    Modules\n    MsClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MsClientModule\n\n\n\ncluster_MsClientModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides microservices client functionality for dispatching messages between microservices.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { ClientProxy, ClientsModule } from \"@nestjs/microservices\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_CLIENT, MSG_BUS } from \"./ms-client.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MsClient } from \"./ms-client\";\n\n/**\n * A module that provides microservices client functionality for dispatching messages between microservices.\n */\n@Module({\n  imports: [\n    LogModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [LogModule],\n        inject: [LOGGER],\n        name: MS_CLIENT,\n        useFactory: (logger: Logger) => {\n          EnvLoader.loadEnvironment(logger);\n          return {\n            transport: parseInt(process.env.TRANSPORT_TYPE),\n            options: {\n              host: process.env.TRANSPORT_HOST,\n              port: parseInt(process.env.TRANSPORT_PORT),\n              timeout: parseInt(process.env.TRANSPORT_TIMEOUT),\n            },\n          };\n        },\n      },\n    ]),\n  ],\n  providers: [\n    {\n      provide: MSG_BUS,\n      useFactory: (logger: Logger, client: ClientProxy) =>\n        new MsClient(logger, client),\n      inject: [LOGGER, MS_CLIENT],\n    },\n  ],\n  exports: [MSG_BUS],\n})\nexport class MsClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsException.html":{"url":"classes/MsException.html","title":"class - MsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for custom microservice exceptions, extending RpcException.\n\n            \n\n            \n                Extends\n            \n            \n                        RpcException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, message: string, stack?: any)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RpcException } from \"@nestjs/microservices\";\nimport { MS_EXCEPTION_ID } from \"../constants\";\n\n/**\n * Base class for custom microservice exceptions, extending RpcException.\n */\nexport class MsException extends RpcException {\n  constructor(\n    readonly code: number,\n    readonly message: string = undefined,\n    readonly stack?: any,\n  ) {\n    super({ type: MS_EXCEPTION_ID, message, code, stack });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotEmptyPipe.html":{"url":"injectables/NotEmptyPipe.html","title":"injectable - NotEmptyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotEmptyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/pipes/not-empty.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to ensure a value is not empty.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fieldName: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/pipes/not-empty.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/pipes/not-empty.pipe.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\n\n/**\n * Pipe to ensure a value is not empty.\n */\n@Injectable()\nexport class NotEmptyPipe implements PipeTransform {\n  constructor(private readonly fieldName: string) {}\n\n  transform(value: any) {\n    if (!value || Object.keys(value).length === 0) {\n      throw new BadRequestException(`${this.fieldName} cannot be empty`);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundMsException.html":{"url":"classes/NotFoundMsException.html","title":"class - NotFoundMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/not-found-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for not found requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/not-found-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for not found requests, extending MsException.\n */\nexport class NotFoundMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.NOT_FOUND, message || \"Not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableData.html":{"url":"classes/PageableData.html","title":"class - PageableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that represents paginated data.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], totalCount: number, currentPage: number, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of PageableData.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe items for the current page.\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items available.\n\n\n                                                        \n                                                \n                                                \n                                                        currentPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number.\n\n\n                                                        \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe number of items per page.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableParams.html":{"url":"classes/PageableParams.html","title":"class - PageableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that defines the parameters for pagination.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Max(1000)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessLog.html":{"url":"interfaces/ProcessLog.html","title":"interface - ProcessLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            process\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            tsUpdated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        process\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        process:         ProcessUnit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessUnit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsUpdated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsUpdated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessLogEntity.html":{"url":"entities/ProcessLogEntity.html","title":"entity - ProcessLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.log.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores logs of system processes\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                process\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnitEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@UpdateDateColumn({name: 'ts_updated', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ProcessUnitEntity } from \"./process.unit.entity\";\nimport { ProcessLog } from \"../process.types\";\n\n/**\n * The entity stores logs of system processes\n */\n@Entity(\"process_logs\")\nexport class ProcessLogEntity implements ProcessLog {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"text\", { nullable: true })\n  content: string;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n\n  @Index()\n  @UpdateDateColumn({ name: \"ts_updated\", type: \"timestamp\" })\n  tsUpdated: Date;\n\n  @ManyToOne(() => ProcessUnitEntity, (t) => t.code)\n  process: ProcessUnitEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessManagerService.html":{"url":"injectables/ProcessManagerService.html","title":"injectable - ProcessManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-manager.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pmInitStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogInstance\n                            \n                            \n                                getLastLogsByProcess\n                            \n                            \n                                getProcessData\n                            \n                            \n                                getProcessLogById\n                            \n                            \n                                    Async\n                                getProcessUnitStatus\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                resetAllProcessStatuses\n                            \n                            \n                                    Async\n                                setProcessUnitStatus\n                            \n                            \n                                    Async\n                                startProcess\n                            \n                            \n                                    Async\n                                stopProcess\n                            \n                            \n                                    Async\n                                toggleProcess\n                            \n                            \n                                updateLogInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lockExec: WarlockFn, logger: Logger, broker: MessagesBroker, processUnitRep: Repository, processLogRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-manager.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBroker\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processUnitRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processLogRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogInstance(processCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Creates a log instance for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastLogsByProcess\n                        \n                    \n                \n            \n            \n                \ngetLastLogsByProcess(processCode: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Gets the last logs of a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of logs to retrieve (default is 3).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of ProcessLogEntity instances.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessData\n                        \n                    \n                \n            \n            \n                \ngetProcessData(code: string, force)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Gets process data by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                force\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nWhether to force getting the process data regardless of its enabled status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessUnitEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessLogById\n                        \n                    \n                \n            \n            \n                \ngetProcessLogById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Gets a process log by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the process log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProcessUnitStatus(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current status of the process unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the process manager service, resets process statuses, and registers processes.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        resetAllProcessStatuses\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetAllProcessStatuses()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Resets the statuses of all enabled processes to \"Ready\".\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProcessUnitStatus(code: string, status: Process.Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Sets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            Process.Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Starts a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Stops a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Toggles the enabled status of a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to toggle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLogInstance\n                        \n                    \n                \n            \n            \n                \nupdateLogInstance(logInstance: ProcessLogEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Updates a log instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logInstance\n                                            \n                                                            ProcessLogEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ProcessLogEntity instance to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pmInitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process-manager.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { Process } from \"./process.constants\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBroker } from \"../../shared/modules/messages-broker/messages-broker.types\";\nimport Status = Process.Status;\nimport Command = Process.Command;\nimport hasProcessInstance = Process.hasProcessInstance;\n\n/**\n * Service for managing processes.\n */\n@Injectable()\nexport class ProcessManagerService {\n  private static pmInitStatus: boolean;\n\n  constructor(\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBroker,\n    @InjectRepository(ProcessUnitEntity)\n    private readonly processUnitRep: Repository,\n    @InjectRepository(ProcessLogEntity)\n    private readonly processLogRep: Repository,\n  ) {}\n\n  /**\n   * Initializes the process manager service, resets process statuses, and registers processes.\n   */\n  async init() {\n    if (ProcessManagerService.pmInitStatus) {\n      this.logger.warn(\"Autostart processes has been executed\");\n      return;\n    }\n    await this.resetAllProcessStatuses();\n    this.logger.log(\"Init process manager\");\n    ProcessManagerService.pmInitStatus = true;\n    const processList = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of processList) {\n      if (!processData.cronTab?.length) {\n        this.logger.warn(\n          `Process ${processData.code} hasn't cron-tab, skip job registration`,\n        );\n        continue;\n      }\n      this.broker.emit(Command.Register, processData);\n    }\n  }\n\n  /**\n   * Starts a process by its code.\n   * @param code - The code of the process to start.\n   */\n  async startProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Start, processData);\n  }\n\n  /**\n   * Stops a process by its code.\n   * @param code - The code of the process to stop.\n   */\n  async stopProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Stop, processData);\n  }\n\n  /**\n   * Toggles the enabled status of a process.\n   * @param code - The code of the process to toggle.\n   */\n  async toggleProcess(code: string) {\n    if (!hasProcessInstance(code)) {\n      throw new InternalServerErrorException(`Process ${code} not exists`);\n    }\n    const processData = await this.processUnitRep.findOne({ where: { code } });\n    processData.enabled = !processData.enabled;\n    await this.processUnitRep.save(processData);\n    if (processData.enabled) {\n      this.broker.emit(Command.Register, processData);\n    } else {\n      this.broker.emit(Command.Unregister, processData);\n    }\n  }\n\n  /**\n   * Sets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @param status - The new status to set.\n   */\n  async setProcessUnitStatus(code: string, status: Process.Status) {\n    const processData = await this.getProcessData(code, true);\n    processData.status = status;\n    return this.processUnitRep.save(processData);\n  }\n\n  /**\n   * Gets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @returns The current status of the process unit.\n   */\n  async getProcessUnitStatus(code: string) {\n    const processData = await this.getProcessData(code, true);\n    return processData.status;\n  }\n\n  /**\n   * Creates a log instance for a process.\n   * @param processCode - The code of the process.\n   * @returns The created ProcessLogEntity instance.\n   */\n  async createLogInstance(processCode: string) {\n    const process = await this.getProcessData(processCode);\n    return this.processLogRep.save({\n      process,\n      content: \"\",\n    } as ProcessLogEntity);\n  }\n\n  /**\n   * Updates a log instance.\n   * @param logInstance - The ProcessLogEntity instance to update.\n   * @returns The updated ProcessLogEntity instance.\n   */\n  updateLogInstance(logInstance: ProcessLogEntity) {\n    return this.processLogRep.save(logInstance);\n  }\n\n  /**\n   * Gets process data by its code.\n   * @param code - The code of the process.\n   * @param force - Whether to force getting the process data regardless of its enabled status.\n   * @returns The ProcessUnitEntity instance.\n   */\n  getProcessData(code: string, force = false) {\n    const params = { code, enabled: true };\n    return this.processUnitRep.findOne({ where: force ? { code } : params });\n  }\n\n  /**\n   * Gets a process log by its ID.\n   * @param id - The ID of the process log.\n   * @returns The ProcessLogEntity instance.\n   */\n  getProcessLogById(id: number) {\n    return this.processLogRep.findOne({\n      where: { id },\n      relations: [\"process\"],\n    });\n  }\n\n  /**\n   * Gets the last logs of a process by its code.\n   * @param processCode - The code of the process.\n   * @param limit - The maximum number of logs to retrieve (default is 3).\n   * @returns An array of ProcessLogEntity instances.\n   */\n  getLastLogsByProcess(processCode: string, limit = 3) {\n    return this.processLogRep.find({\n      where: { process: { code: processCode } },\n      take: limit,\n      order: { tsUpdated: \"DESC\" },\n    });\n  }\n\n  /**\n   * Resets the statuses of all enabled processes to \"Ready\".\n   */\n  private async resetAllProcessStatuses() {\n    const entities = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of entities) {\n      await this.setProcessUnitStatus(processData.code, Status.Ready);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessModule.html":{"url":"modules/ProcessModule.html","title":"module - ProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_providers\n\n\n\ncluster_ProcessModule_exports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/process/process.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for initializing and managing processes in the application.\nIt uses the NestJS lifecycle hook onApplicationBootstrap to initialize processes on startup.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessManagerService\n                        \n                        \n                            ProcessRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            MessagesBrokerModule\n                        \n                        \n                            WarlockModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProcessManagerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process.module.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Global, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ScheduleModule } from \"@nestjs/schedule\";\nimport { ProcessRegisterService } from \"./process-register.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { MessagesBrokerModule } from \"../../shared/modules/messages-broker/messages-broker.module\";\nimport { WarlockModule } from \"../../shared/modules/warlock/warlock.module\";\n\n/**\n * Module is responsible for initializing and managing processes in the application.\n * It uses the NestJS lifecycle hook `onApplicationBootstrap` to initialize processes on startup.\n */\n@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProcessUnitEntity, ProcessLogEntity]),\n    ScheduleModule.forRoot(),\n    LogModule,\n    MessagesBrokerModule,\n    WarlockModule,\n  ],\n  providers: [ProcessManagerService, ProcessRegisterService],\n  exports: [ProcessManagerService],\n})\nexport class ProcessModule implements OnApplicationBootstrap {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  async onApplicationBootstrap() {\n    await this.pmService.init();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessRegisterService.html":{"url":"injectables/ProcessRegisterService.html","title":"injectable - ProcessRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-register.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for registering and managing cron jobs for processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerCronJob\n                            \n                            \n                                    Private\n                                startProcess\n                            \n                            \n                                    Private\n                                stopProcess\n                            \n                            \n                                    Private\n                                    Async\n                                unregisterCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, lockExec: WarlockFn, broker: MessagesBrokerService, pmService: ProcessManagerService, schedulerRegistry: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-register.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBrokerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        registerCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Registers a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was registered, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Starts a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Stops a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        unregisterCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Unregisters a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to unregister.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was unregistered, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { SchedulerRegistry } from \"@nestjs/schedule\";\nimport { CronJob } from \"cron/dist/job\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { Process } from \"./process.constants\";\nimport { ProcessUnit } from \"./process.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBrokerService } from \"../../shared/modules/messages-broker/messages-broker.service\";\nimport getProcessInstance = Process.getProcessInstance;\nimport Command = Process.Command;\nimport Status = Process.Status;\n\n/**\n * Service for registering and managing cron jobs for processes.\n */\n@Injectable()\nexport class ProcessRegisterService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBrokerService,\n    private readonly pmService: ProcessManagerService,\n    private readonly schedulerRegistry: SchedulerRegistry,\n  ) {\n    broker.subscribe(Command.Register, (data) =>\n      this.registerCronJob(data),\n    );\n    broker.subscribe(Command.Unregister, (data) =>\n      this.unregisterCronJob(data),\n    );\n    broker.subscribe(Command.Start, (data) =>\n      this.startProcess(data),\n    );\n    broker.subscribe(Command.Stop, (data) =>\n      this.stopProcess(data),\n    );\n  }\n\n  /**\n   * Starts a registered process.\n   * @param processData - The data of the process to start.\n   */\n  private startProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    this.lockExec(`${processData.code}_start`, async () =>\n      processInstance.start(),\n    );\n  }\n\n  /**\n   * Stops a registered process.\n   * @param processData - The data of the process to stop.\n   */\n  private stopProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    processInstance.stop();\n  }\n\n  /**\n   * Registers a cron job for a process.\n   * @param processData - The data of the process to register.\n   * @returns True if the cron job was registered, otherwise false.\n   */\n  private async registerCronJob(processData: ProcessUnit) {\n    if (this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't register cron job with code ${processData.code}, that already exists`,\n      );\n      return false;\n    }\n    await this.pmService.setProcessUnitStatus(processData.code, Status.Ready);\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    if (!processData.cronTab?.length) {\n      this.logger.warn(\n        `Process ${processData.code} hasn't cron-tab, skip job registration`,\n      );\n      return false;\n    }\n    const job = new CronJob(processData.cronTab, () => {\n      this.lockExec(\n        processData.code,\n        async () => await processInstance.start(),\n      );\n    });\n    job.start();\n    this.schedulerRegistry.addCronJob(processData.code, job);\n    return true;\n  }\n\n  /**\n   * Unregisters a cron job for a process.\n   * @param processData - The data of the process to unregister.\n   * @returns True if the cron job was unregistered, otherwise false.\n   */\n  private async unregisterCronJob(processData: ProcessUnit) {\n    if (!this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't unregister cron job with code ${processData.code}`,\n      );\n      return false;\n    }\n    const job = this.schedulerRegistry.getCronJob(processData.code);\n    job.stop();\n    this.schedulerRegistry.deleteCronJob(processData.code);\n    this.pmService.stopProcess(processData.code);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessUnit.html":{"url":"interfaces/ProcessUnit.html","title":"interface - ProcessUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process unit.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            cronTab\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cronTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cronTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         ProcessLog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessLog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Process.Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Process.Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessUnitEntity.html":{"url":"entities/ProcessUnitEntity.html","title":"entity - ProcessUnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessUnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.unit.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores system processes, their configuration and state\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                cronTab\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cronTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'cron_tab', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.process, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Process.Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { Process } from \"../process.constants\";\nimport { ProcessUnit } from \"../process.types\";\nimport { ProcessLogEntity } from \"./process.log.entity\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores system processes, their configuration and state\n */\n@Entity(\"process_units\")\nexport class ProcessUnitEntity implements ProcessUnit {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\n      Process.Status.Ready,\n      Process.Status.Execute,\n      Process.Status.Crashed,\n    ],\n    default: null,\n    nullable: true,\n  })\n  status: Process.Status;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  enabled: boolean;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"varchar\", { name: \"cron_tab\", nullable: true })\n  cronTab: string;\n\n  @OneToMany(() => ProcessLogEntity, (c) => c.process, { cascade: true })\n  logs: ProcessLogEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisCacheService.html":{"url":"injectables/RedisCacheService.html","title":"injectable - RedisCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/redis-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service class that provides cache storage functionality implementing the CacheService interface.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, client: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/redis-cache.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True if the operation succeeded, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Retrieves keys that match a given pattern from the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pattern to match keys against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of matching keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the numeric value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the numeric value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the cache storage with an optional expiration time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { CacheService } from \"./cache.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\n\n/**\n * A service class that provides cache storage functionality implementing the CacheService interface.\n */\n@Injectable()\nexport class RedisCacheService implements CacheService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(REDIS_CLIENT) private readonly client: Redis,\n  ) {}\n\n  /**\n   * Retrieves the value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the value of the key or null if an error occurs.\n   */\n  async get(key: string): Promise {\n    try {\n      return await this.client.get(key);\n    } catch (error) {\n      this.logger.error(`Error while getting key \"${key}\" from Redis:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return val === \"true\";\n  }\n\n  /**\n   * Retrieves the numeric value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the numeric value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the cache storage with an optional expiration time.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    try {\n      if (expiresIn) {\n        await this.client.set(key, value, \"EX\", expiresIn);\n      } else {\n        await this.client.set(key, value);\n      }\n      return true;\n    } catch (error) {\n      this.logger.error(`Error while setting key \"${key}\" in Redis:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Deletes the specified keys from the cache storage.\n   *\n   * @param keys - The keys to delete from the cache.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async del(...keys: string[]): Promise {\n    try {\n      await this.client.del(...keys);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while deleting keys \"${keys.join(\", \")}\" from Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Increments the value of the specified key in the cache storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    try {\n      return await this.client.incr(key);\n    } catch (error) {\n      this.logger.error(\n        `Error while incrementing key \"${key}\" in Redis:`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Sets the expiration time for the given key in the Redis cache.\n   * @param key - The key to set the expiration time for.\n   * @param expiresIn - The expiration time in seconds.\n   * @returns True if the operation succeeded, false otherwise.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    try {\n      await this.client.expire(key, expiresIn);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while setting expiration for key \"${key}\" in Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves keys that match a given pattern from the Redis cache.\n   * @param pattern - The pattern to match keys against.\n   * @returns An array of matching keys.\n   */\n  getFromPattern(pattern: string): Promise {\n    return new Promise((resolve, reject) => {\n      const keys: string[] = [];\n      const stream = this.client.scanStream({ match: pattern });\n      stream.on(\"data\", (chunk: string[]) => {\n        keys.push(...chunk);\n      });\n      stream.on(\"end\", () => {\n        resolve(keys);\n      });\n      stream.on(\"error\", (err: Error) => {\n        this.logger.error(err);\n        reject(err);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/redis.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides Redis client configuration and setup.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Logger, Module } from \"@nestjs/common\";\nimport { Redis } from \"ioredis\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\n\n/**\n * A module that provides Redis client configuration and setup.\n */\n@Module({})\nexport class RedisModule {\n  private static redisInstance: Redis | null = null;\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => {\n      config: {\n        host: string;\n        port: number;\n        db: number;\n        username: string;\n        password: string;\n      };\n    };\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: RedisModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: REDIS_CLIENT,\n          useFactory: async (...args: any[]) => {\n            if (!RedisModule.redisInstance) {\n              const logger = args.find((arg) => arg instanceof Logger);\n              EnvLoader.loadEnvironment(logger);\n              const redisOptions = useFactory(...args).config;\n              RedisModule.redisInstance = new Redis(redisOptions);\n            }\n            return RedisModule.redisInstance;\n          },\n          inject,\n        },\n      ],\n      exports: [REDIS_CLIENT],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Roles.html":{"url":"classes/Roles.html","title":"class - Roles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Roles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/constants.ts\n        \n\n\n            \n                Description\n            \n            \n                A class containing static constants representing different user roles.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MANAGER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROOT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"admin\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:30\n                        \n                    \n\n            \n                \n                    Represents the admin role with administrative access.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"manager\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:35\n                        \n                    \n\n            \n                \n                    Represents the manager role.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"root\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:25\n                        \n                    \n\n            \n                \n                    Represents the root role with the highest level of access.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Roles {\n  /**\n   * @constant ROOT\n   * Represents the root role with the highest level of access.\n   */\n  static readonly ROOT = \"root\";\n  /**\n   * @constant ADMIN\n   * Represents the admin role with administrative access.\n   */\n  static readonly ADMIN = \"admin\";\n  /**\n   * @constant MANAGER\n   * Represents the manager role.\n   */\n  static readonly MANAGER = \"manager\";\n}\n\n/**\n * An object containing properties used for request handling.\n */\nexport const REQUEST_PROPS = {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n};\n\n/**\n * A constant representing the exception identifier for microservices.\n */\nexport const MS_EXCEPTION_ID = \"MsException\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    A guard for role-based access control.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/roles.guard.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserUtils } from \"../utils/user.utils\";\nimport { AllowedForMetadataKey } from \"../decorators/for-roles.decorator\";\nimport { UserRole } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS, Roles } from \"../constants\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n/**\n * @class RolesGuard\n * A guard for role-based access control.\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      AllowedForMetadataKey,\n      context.getHandler(),\n    );\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const userRoles: UserRole[] = req[REQUEST_PROPS.currentUser]?.roles || [];\n    if (hasSomeRole(userRoles, Roles.ROOT)) {\n      return true;\n    }\n    for (const role of userRoles) {\n      if (roles.indexOf(role.code) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetData.html":{"url":"interfaces/TargetData.html","title":"interface - TargetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TargetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the data of an explorer target.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            namedColumn\n                                        \n                                \n                                \n                                        \n                                            primaryColumn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namedColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namedColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmpDirCleanerProcess.html":{"url":"classes/TmpDirCleanerProcess.html","title":"class - TmpDirCleanerProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmpDirCleanerProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/default/tmp-dir-cleaner.process.ts\n        \n\n\n            \n                Description\n            \n            \n                Process class for cleaning the temporary directory.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractProcess\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                getDeleteStats\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pmService: ProcessManagerService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:32\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:42\n\n                        \n                    \n\n\n            \n                \n                        Executes the process to clean the temporary directory.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDeleteStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeleteStats(dirStruct: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets statistics on the number of files and folders to be deleted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dirStruct\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe structure of the directory.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filesCount: number; foldersCount: number; }\n\n                        \n                            \n                                An object containing the file and folder counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:165\n\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:157\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:140\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:148\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:173\n\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:44\n\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:80\n\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:94\n\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractProcess } from \"../abstract-process\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"../process-manager.service\";\nimport * as fs from \"fs\";\nimport { KpConfig } from \"../../../../gen-src/kp.config\";\nimport { FilesUtils } from \"../../../shared/utils/files.utils\";\nimport { LOGGER } from \"../../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../../shared/modules/cache/cache.types\";\nimport readDirectoryRecursively = FilesUtils.readDirectoryRecursively;\n\n/**\n * Process class for cleaning the temporary directory.\n */\nexport class TmpDirCleanerProcess extends AbstractProcess {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly pmService: ProcessManagerService,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Executes the process to clean the temporary directory.\n   */\n  protected async execute() {\n    const tmpDir =\n      process.cwd() + (await this.cacheService.get(KpConfig.TMP_DIR));\n    if (!fs.existsSync(tmpDir)) {\n      await this.writeLog(`Nothing to delete`);\n      return;\n    }\n    const dirStruct = await readDirectoryRecursively(tmpDir);\n    const stats = this.getDeleteStats(dirStruct as { [k: string]: string[] });\n    await this.writeLog(\n      `Try to delete ${stats.filesCount} files and ${stats.foldersCount} folders...`,\n    );\n    await fs.promises.rm(tmpDir, { recursive: true, force: true });\n    await this.writeLog(`Tmp dir was cleaned`);\n  }\n\n  /**\n   * Gets statistics on the number of files and folders to be deleted.\n   * @param dirStruct - The structure of the directory.\n   * @returns An object containing the file and folder counts.\n   */\n  private getDeleteStats(dirStruct: { [k: string]: string[] }) {\n    let filesCount = 0;\n    let foldersCount = 0;\n    for (const key in dirStruct) {\n      filesCount += dirStruct[key].length;\n      if (!key.length) {\n        continue;\n      }\n      foldersCount++;\n    }\n    return { filesCount, foldersCount };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyRequestsMsException.html":{"url":"classes/TooManyRequestsMsException.html","title":"class - TooManyRequestsMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyRequestsMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/too-many-requests-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for too many requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/too-many-requests-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for too many requests, extending MsException.\n */\nexport class TooManyRequestsMsException extends MsException {\n  constructor(message?: string) {\n    super(\n      HttpStatus.TOO_MANY_REQUESTS,\n      message || \"You have made too many requests. Please try again later.\",\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedMsException.html":{"url":"classes/UnauthorizedMsException.html","title":"class - UnauthorizedMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/unauthorized-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for unauthorized requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/unauthorized-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for unauthorized requests, extending MsException.\n */\nexport class UnauthorizedMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Unauthorized request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpsertMediaRequest.html":{"url":"interfaces/UpsertMediaRequest.html","title":"interface - UpsertMediaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpsertMediaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the request to upsert a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityIdForPatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityName\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityIdForPatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityIdForPatch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityName:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the users of the system\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'first_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'last_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { UserRoleEntity } from \"./user-role.entity\";\nimport { User } from \"../user.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\n\n/**\n * The entity stores the users of the system\n */\n@Entity(\"users\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class UserEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  avatar: MediaEntity;\n\n  @Column(\"varchar\", { nullable: false })\n  password: string;\n\n  @Column(\"varchar\", { nullable: false, unique: true })\n  login: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  email: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  phone: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"first_name\", nullable: true })\n  firstName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"last_name\", nullable: true })\n  lastName: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  active: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  roles: UserRoleEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityPwdAndRolesSaveHandler.html":{"url":"injectables/UserEntityPwdAndRolesSaveHandler.html","title":"injectable - UserEntityPwdAndRolesSaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityPwdAndRolesSaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, payload: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { EntitySaveHandler } from \"../explorer.types\";\nimport { User } from \"../../user/user.types\";\nimport { Roles } from \"../../../shared/constants\";\n\n/**\n * Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n */\n@Injectable()\nexport class UserEntityPwdAndRolesSaveHandler\n  implements EntitySaveHandler\n{\n  handle(target: string, payload: User, currentUser: User) {\n    if (!currentUser.roles.find((v) => v.code === Roles.ROOT)) {\n      if (payload.id) {\n        delete payload.password;\n        delete payload.login;\n      }\n      delete payload.roles;\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for managing system users\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: UserModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.module.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UserModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicUserService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { BasicUserService } from \"./user-service-basic.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { UserModuleOptions, UserService } from \"./user.types\";\n\n/**\n * Module is responsible for managing system users\n */\n@Module({})\nexport class UserModule {\n  static forRoot(\n    options: UserModuleOptions = {\n      service: BasicUserService,\n    },\n  ): DynamicModule {\n    return {\n      module: UserModule,\n      imports: [TypeOrmModule.forFeature([UserEntity])],\n      providers: [\n        {\n          provide: UserService,\n          useClass: options.service,\n        },\n      ],\n      exports: [UserService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRole.html":{"url":"interfaces/UserRole.html","title":"interface - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user role.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user role.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoleEntity.html":{"url":"entities/UserRoleEntity.html","title":"entity - UserRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the roles of the system users\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { UserRole } from \"../user.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores the roles of the system users\n */\n@Entity(\"users_roles\")\nexport class UserRoleEntity implements UserRole {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the user service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByLogin\n                            \n                            \n                                    Abstract\n                                removeById\n                            \n                            \n                                    Abstract\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                A subscriber for UserEntity that handles entity events such as insert and update.\nIt validates the login and hashes the password before these events.\n\n            \n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserEntity\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.subscriber.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            InsertEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  EventSubscriber,\n  UpdateEvent,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { AbstractUserSubscriber } from \"../abstract-user-subscriber\";\n\n/**\n * A subscriber for UserEntity that handles entity events such as insert and update.\n * It validates the login and hashes the password before these events.\n */\n@EventSubscriber()\nexport class UserSubscriber\n  extends AbstractUserSubscriber\n  implements EntitySubscriberInterface\n{\n  protected readonly type = UserEntity;\n\n  listenTo() {\n    return UserEntity;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this.validateLogin(event.entity.login);\n    await this.hashPasswordIfNeeded(event);\n  }\n\n  async beforeUpdate(event: UpdateEvent) {\n    if (event.entity.login) {\n      await this.validateLogin(event.entity.login);\n    }\n    await this.hashPasswordIfNeeded(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateRequest.html":{"url":"interfaces/UserUpdateRequest.html","title":"interface - UserUpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a request to update a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoFileMetadata.html":{"url":"interfaces/VideoFileMetadata.html","title":"interface - VideoFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing video file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            colorRange\n                                        \n                                \n                                \n                                        \n                                            colorSpace\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            displayAspectRatio\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            frameRate\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rotate\n                                        \n                                \n                                \n                                        \n                                            sampleAspectRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frameRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frameRate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VideoFileMetadataEntity.html":{"url":"entities/VideoFileMetadataEntity.html","title":"entity - VideoFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VideoFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/video-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the video metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                colorRange\n                            \n                            \n                                    \n                                    \n                                colorSpace\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                displayAspectRatio\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                frameRate\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                rotate\n                            \n                            \n                                    \n                                    \n                                sampleAspectRatio\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_range', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'display_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        frameRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'frame_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rotate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'sample_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { VideoFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the video metadata of the file\n */\n@Entity(\"file_metadata_video\")\nexport class VideoFileMetadataEntity implements VideoFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"sample_aspect_ratio\", nullable: true })\n  sampleAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"display_aspect_ratio\", nullable: true })\n  displayAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_range\", nullable: true })\n  colorRange: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_space\", nullable: true })\n  colorSpace: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"frame_rate\", nullable: true })\n  frameRate: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  rotate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WarlockModule.html":{"url":"modules/WarlockModule.html","title":"module - WarlockModule","body":"\n                   \n\n\n\n\n    Modules\n    WarlockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WarlockModule\n\n\n\ncluster_WarlockModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/warlock/warlock.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides functionality for locking mechanisms using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport * as Warlock from \"node-redis-warlock\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { WARLOCK } from \"./warlock.constants\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\nimport { WarlockFn } from \"./warlock.types\";\n\n/**\n * A module that provides functionality for locking mechanisms using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: WARLOCK,\n      inject: [REDIS_CLIENT],\n      useFactory: (\n        client: Redis,\n        lockLifeTime = 10000,\n        lockKey = \"lock\",\n      ): WarlockFn => {\n        const warlock = Warlock(client);\n        return function (lockCode: string, caller: () => Promise) {\n          warlock.lock(\n            `${lockKey}:${lockCode}`,\n            lockLifeTime,\n            async (err, unlock) => {\n              if (err) {\n                return;\n              }\n              if (typeof unlock === \"function\") {\n                await caller();\n                unlock();\n              }\n            },\n          );\n        };\n      },\n    },\n  ],\n  exports: [WARLOCK],\n})\nexport class WarlockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbExportService.html":{"url":"classes/XdbExportService.html","title":"class - XdbExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data export services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exportXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exportXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportXml(params: XdbExportParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbImportService.html":{"url":"classes/XdbImportService.html","title":"class - XdbImportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data import services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                importFromFile\n                            \n                            \n                                    Abstract\n                                importXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFromFile(fileData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    importXml(xml: XdbObject)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XdbRequest.html":{"url":"interfaces/XdbRequest.html","title":"interface - XdbRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XdbRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an XML data bridge request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type, Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { DynamicModule } from \"@nestjs/common/interfaces/modules/dynamic-module.interface\";\nimport { ForwardReference } from \"@nestjs/common/interfaces/modules/forward-reference.interface\";\nimport { ObjectLiteral } from \"typeorm\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { User } from \"../user/user.types\";\n\n/**\n * Interface representing an XML data bridge request.\n */\nexport interface XdbRequest {\n  target: string;\n  id: string;\n}\n\n/**\n * Type representing a row data value in the XML data bridge.\n */\nexport type XdbRowDataValue = {\n  attrs?: {\n    key?: string;\n    uri?: string;\n    mode?: \"push\";\n  };\n  value?: string;\n  values?: string[];\n};\n\n/**\n * Type representing a row of data in the XML data bridge.\n */\nexport type XdbRowData = {\n  [key: string]: XdbRowDataValue;\n};\n\n/**\n * Type representing a media row in the XML data bridge.\n */\nexport type MediaRow = {\n  name: XdbRowDataValue;\n  code: string;\n  type: string;\n  file: string;\n};\n\n/**\n * Type representing a file row in the XML data bridge.\n */\nexport type FileRow = {\n  name: string;\n  code: string;\n  public: boolean;\n  file: string;\n};\n\n/**\n * Type representing an action in the XML data bridge.\n */\nexport type XdbAction = {\n  action: \"InsertUpdate\" | \"Media\" | \"File\" | \"Remove\" | \"Include\" | \"Query\";\n  attrs: {\n    target?: string;\n    read?: string;\n    content?: string;\n  };\n  rows: Array;\n};\n\n/**\n * Type representing an XML data bridge object.\n */\nexport type XdbObject = {\n  schema: XdbAction[];\n};\n\n/**\n * Options for configuring the XmlDataBridgeModule.\n */\nexport type XdbModuleOptions = {\n  importService: Class;\n  exportService: Class;\n  imports: Array | DynamicModule | Promise | ForwardReference\n  >;\n};\n\n/**\n * Type representing export parameters for the XML data bridge.\n */\nexport type XdbExportParams = {\n  target: string;\n  id: string;\n  depth: number;\n  useFiles: boolean;\n  excludeProperties: string[];\n  user: User;\n};\n\n/**\n * Type representing the export DTO for the XML data bridge.\n */\nexport type XdbExportDto = {\n  file: string;\n};\n\n/**\n * Type representing a decomposed entity in the XML data bridge.\n */\nexport type XdbDecomposedEntity = {\n  metadata: { type: string; fieldName: string; path: string };\n  data: ObjectLiteral | Array;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlDataBridgeMiddleware.html":{"url":"injectables/XmlDataBridgeMiddleware.html","title":"injectable - XmlDataBridgeMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlDataBridgeMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                Middleware for parsing XML data from requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseXMLFromRequest\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseXMLFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseXMLFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:47\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the parsed XML data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:34\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request and modifies the request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe response object.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next function to call.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Xdb.getXmlParser()\n                    \n                \n                    \n                        \n                                Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { Xdb } from \"./xml-data-bridge.constants\";\n\n/**\n * Middleware for parsing XML data from requests.\n */\n@Injectable()\nexport class XmlDataBridgeMiddleware implements NestMiddleware {\n  private readonly parser = Xdb.getXmlParser();\n\n  /**\n   * Parses XML data from the request and modifies the request body.\n   * @param req - The request object.\n   * @param res - The response object.\n   * @param next - The next function to call.\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[\"content-type\"] === \"application/xml\") {\n      req.body = await this.parseXMLFromRequest(req);\n      req.body = Xdb.parseXmlBody(req.body);\n    }\n    next();\n  }\n\n  /**\n   * Parses XML data from the request.\n   * @param req - The request object.\n   * @returns A promise that resolves to the parsed XML data.\n   */\n  private parseXMLFromRequest(req: Request): Promise {\n    return new Promise((resolve, reject) => {\n      let xmlData = \"\";\n      req.on(\"data\", (chunk) => {\n        xmlData += chunk;\n      });\n      req.on(\"end\", () => {\n        this.parser.parseString(xmlData, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result as object);\n          }\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XmlDataBridgeModule.html":{"url":"modules/XmlDataBridgeModule.html","title":"module - XmlDataBridgeModule","body":"\n                   \n\n\n\n\n    Modules\n    XmlDataBridgeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for import and export XML-configuration.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: XdbModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            XdbModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { XdbModuleOptions } from \"./xml-data-bridge.types\";\nimport { XmlDataBridgeImportService } from \"./xml-data-bridge-import.service\";\nimport { XmlDataBridgeExportService } from \"./xml-data-bridge-export.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { ExplorerModule } from \"../explorer/explorer.module\";\nimport { FileModule } from \"../file/file.module\";\nimport { MediaModule } from \"../media/media.module\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\n\n/**\n * Module responsible for import and export XML-configuration.\n */\n@Module({})\nexport class XmlDataBridgeModule {\n  static forRoot(\n    options: XdbModuleOptions = {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    },\n  ): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: options.imports,\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: options.importService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: options.exportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/axios : 3.*\n        \n            @nestjs/common : 10.*\n        \n            @nestjs/core : 10.*\n        \n            @nestjs/jwt : 10.*\n        \n            @nestjs/microservices : 10.*\n        \n            @nestjs/passport : 10.*\n        \n            @nestjs/schedule : 4.*\n        \n            adm-zip : 0.5.*\n        \n            axios : 1.*\n        \n            bcrypt : 5.*\n        \n            canvas : 2.11.*\n        \n            class-transformer : 0.5.*\n        \n            class-validator : 0.14.*\n        \n            dotenv : 16.*\n        \n            exifreader : 4.*\n        \n            ffprobe : 1.*\n        \n            ffprobe-static : 3.*\n        \n            file-type : 19.*\n        \n            heic-convert : 2.*\n        \n            imagemin : 7.*\n        \n            imagemin-mozjpeg : 9.*\n        \n            imagemin-pngquant : 9.*\n        \n            ioredis : 5.*\n        \n            music-metadata : 7.*\n        \n            node-redis-warlock : 1.*\n        \n            object-hash : 3.*\n        \n            reflect-metadata : 0.2.*\n        \n            rxjs : 7.*\n        \n            sharp : 0.33.*\n        \n            typeorm : 0.3.*\n        \n            uuid : 9.*\n        \n            xml2js : 0.6.*\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (lib/.../process.constants.ts)\n                        \n                        \n                            LogLevel   (lib/.../process.constants.ts)\n                        \n                        \n                            SortOrder   (lib/.../pageable.types.ts)\n                        \n                        \n                            Status   (lib/.../process.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/process/process.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            Enum of possible process commands.\n\n                        \n                    \n                        \n                            \n                                 Register\n                            \n                        \n                        \n                            \n                                Value : process:register\n                            \n                        \n                        \n                            \n                                 Unregister\n                            \n                        \n                        \n                            \n                                Value : process:unregister\n                            \n                        \n                        \n                            \n                                 Start\n                            \n                        \n                        \n                            \n                                Value : process:start\n                            \n                        \n                        \n                            \n                                 Stop\n                            \n                        \n                        \n                            \n                                Value : process:stop\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Enum of log levels.\n\n                        \n                    \n                        \n                            \n                                 Log\n                            \n                        \n                        \n                            \n                                Value : LOG\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 Verbose\n                            \n                        \n                        \n                            \n                                Value : VERBOSE\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Enum of possible process statuses.\n\n                        \n                    \n                        \n                            \n                                 Execute\n                            \n                        \n                        \n                            \n                                Value : execute\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : ready\n                            \n                        \n                        \n                            \n                                 Crashed\n                            \n                        \n                        \n                            \n                                Value : crashed\n                            \n                        \n            \n        \n\n    lib/shared/modules/pageable/pageable.types.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n     K-Platform is a framework for the rapid development of modern applications\n\n\nEmbedded platform's modules\n\nExplorer: analyzes the database schema and dynamically updates the admin-panel UI for CRUD operations, paginated displaying of entity data with their relationships etc., providing flexibility and extensibility with TypeORM integration.\nXML data-bridge: automates the data management process, simplifying the tasks of importing and exporting data. Uses specific XML-markup to transfer the state of the database or pinpoint transfer of certain records in tables between different servers.\nBackground processes: module for management of background tasks, providing features like automatic startup, dynamic control, and comprehensive logging. Enabling efficient and reliable handling of recurring tasks through advanced cron-job scheduling and inter-module communication.\nMedia: provides powerful capabilities for working with various types of media files. It supports uploading, thumbnail slicing, automatic creation of optimized copies, as well as storing copies in modern formats such as WEBP. It is able to work with vector images. Stores metadata of files, including extend metadata such as GPS, ICC, EXIF etc.\nFiles: provides easy integration and powerful file management, including uploading, storing in public and private directories. Support storing extended metadata for images, audio and video files.\nUsers: provide scalable functionality for managing system users. Supports password encrypting, user profile management with role-based access control.\nAuthorization: provides a OAuth 2.0 mechanism for authentication and authorization of users in the system, as well as protection against brute-force attacks.\nCaptcha: represents two built-in CAPTCHA-types: Google reCAPTCHA and standard graphical CAPTCHA. You can also extend the module with your own CAPTCHA implementation.\nConfiguration: allows you to effectively manage the application settings using .properties files, supports real-time dynamic configuration change and type safety through automatic generation of TypeScript files. Also supports local and global overrides, which allow you to flexibly adapt the configuration for different environments.\n\n\nAdmin-panel of application is based on Angular,\nplease read more details about here.\n\nDocumentation\nPlease navigate to guides folder for read detailed documentations of application and also visit codebase documentations website\nFast start\nBefore installing the platform, make sure that you have Node.js, Redis installed and one of the supported DBMS.\nNow let's set up the configuration.\nThe connection settings to Redis are stored in the default.env, that file located in the root directory, use the properties REDIS_HOST, REDIS_PORT, REDIS_DB, REDIS_USER, REDIS_PASSWORD. You can change it or create a local.env file to override some properties on your local machine.\nNext, go to the ./examples/web-server directory, here you will find the db.properties file. Inside that, you will find the DBMS connection settings, you can change it or create a local.properties file to override some properties on your local machine (the names of all properties in the file match the TypeORM data source options).\nNow that all the preinstallation recommendations are done, you can install the platform.\n\nRun npm i command for install all dependencies\nRun npm run init:web-app for generate configuration files, build sources and fill cache DB, and import default state of DB from default XML-configuration\nRun  npm run start:web-app for start example web-application server\n\nNow you can proceed to the installation of the client application, which is an admin panel for system management. To do this, visit the repository @k-platform/client.\n\nRecommendation: use Postgres or MySQL as a DBMS, and in the future you can replace Radius with the desired to if necessary by writing your own custom interaction service.\n\n\nNote: all modules has been tested only with Postgres and MySQL database systems.\n\nBased on\n\n    \n\n       \n\n    \n\n       \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2023 Alexander Kiriliuk\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesBrokerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MsClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WarlockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XmlDataBridgeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MsClientModule\n\n\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Framework for the rapid development of modern applications\n        \n            License : Apache-2.0\n        \n            Author : Alexander Kiriliuk\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthModuleOptions   (lib/.../auth.types.ts)\n                        \n                        \n                            CaptchaModuleOptions   (lib/.../captcha.types.ts)\n                        \n                        \n                            CaptchaResponse   (lib/.../captcha.types.ts)\n                        \n                        \n                            ColumnDataType   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerModuleOptions   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerSelectParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerTargetParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            FileModuleOptions   (lib/.../file.types.ts)\n                        \n                        \n                            FileRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MediaModuleOptions   (lib/.../media.types.ts)\n                        \n                        \n                            MediaRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MsClientOptions   (lib/.../ms-client.types.ts)\n                        \n                        \n                            UserModuleOptions   (lib/.../user.types.ts)\n                        \n                        \n                            Variation   (lib/.../explorer.constants.ts)\n                        \n                        \n                            WarlockFn   (lib/.../warlock.types.ts)\n                        \n                        \n                            XdbAction   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbDecomposedEntity   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportDto   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportParams   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbModuleOptions   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbObject   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowData   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowDataValue   (lib/.../xml-data-bridge.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.types.ts\n    \n    \n        \n            \n                \n                    \n                    AuthModuleOptions\n                \n            \n            \n                \n                    Options for configuring the authentication module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/captcha/captcha.types.ts\n    \n    \n        \n            \n                \n                    \n                    CaptchaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the CAPTCHA module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaptchaResponse\n                \n            \n            \n                \n                    Type representing a CAPTCHA response for client side.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.types.ts\n    \n    \n        \n            \n                \n                    \n                    ColumnDataType\n                \n            \n            \n                \n                    Type representing embedded data types for a column.\n\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"date\" | \"reference\" | \"unknown\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerModuleOptions\n                \n            \n            \n                \n                    Options for configuring the Explorer module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerSelectParams\n                \n            \n            \n                \n                    Type representing selection parameters for an explorer entity.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerTargetParams\n                \n            \n            \n                \n                    Type representing parameters for find explorer targets\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/file/file.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileModuleOptions\n                \n            \n            \n                \n                    Options for configuring the FileModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/xml-data-bridge/xml-data-bridge.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileRow\n                \n            \n            \n                \n                    Type representing a file row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaRow\n                \n            \n            \n                \n                    Type representing a media row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbAction\n                \n            \n            \n                \n                    Type representing an action in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbDecomposedEntity\n                \n            \n            \n                \n                    Type representing a decomposed entity in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportDto\n                \n            \n            \n                \n                    Type representing the export DTO for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportParams\n                \n            \n            \n                \n                    Type representing export parameters for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbModuleOptions\n                \n            \n            \n                \n                    Options for configuring the XmlDataBridgeModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbObject\n                \n            \n            \n                \n                    Type representing an XML data bridge object.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowData\n                \n            \n            \n                \n                    Type representing a row of data in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowDataValue\n                \n            \n            \n                \n                    Type representing a row data value in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/media/media.types.ts\n    \n    \n        \n            \n                \n                    \n                    MediaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the MediaModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/shared/modules/ms-client/ms-client.types.ts\n    \n    \n        \n            \n                \n                    \n                    MsClientOptions\n                \n            \n            \n                \n                    Type definition for microservices client options.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/user/user.types.ts\n    \n    \n        \n            \n                \n                    \n                    UserModuleOptions\n                \n            \n            \n                \n                    Options for configuring the UserModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Variation\n                \n            \n            \n                \n                    Type representing a fetch-mode for explorer entity.\n\n                \n            \n            \n                \n                        \"section\" | \"object\"\n\n                \n            \n        \n    \n    lib/shared/modules/warlock/warlock.types.ts\n    \n    \n        \n            \n                \n                    \n                    WarlockFn\n                \n            \n            \n                \n                    Type definition for the warlock function used for locking mechanisms.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            AccessToken   (lib/.../access-token.decorator.ts)\n                        \n                        \n                            AllowedForMetadataKey   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            AUTH_ACCESS_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_REFRESH_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            BODY_TOKEN   (lib/.../xml-data-bridge-file-schema.ts)\n                        \n                        \n                            BRUTEFORCE_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceIPKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceLoginKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            CAPTCHA_CACHE_PREFIX   (lib/.../captcha.constants.ts)\n                        \n                        \n                            CATEGORY_RELATIONS   (lib/.../category.constants.ts)\n                        \n                        \n                            CONFIG_CACHE_PREFIX   (lib/.../config.constants.ts)\n                        \n                        \n                            CONFIG_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            CurrentUser   (lib/.../current-user.decorator.ts)\n                        \n                        \n                            DEFAULT_MEDIA_QUALITY   (lib/.../media.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_TYPE   (lib/.../media.constants.ts)\n                        \n                        \n                            ENTITY_SAVE_HANDLER   (lib/.../explorer.constants.ts)\n                        \n                        \n                            FILES_ENCODING   (lib/.../config.constants.ts)\n                        \n                        \n                            fileTypeModule   (lib/.../files.utils.ts)\n                        \n                        \n                            ForRoles   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            GEN_SRC_DIR   (lib/.../config.constants.ts)\n                        \n                        \n                            InitConfig   (lib/.../config.init-fn.ts)\n                        \n                        \n                            jwtAccessTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            jwtRefreshTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            KP_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOCAL_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOGGER   (lib/.../log.constants.ts)\n                        \n                        \n                            MEDIA_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MEDIA_TYPE_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MESSAGES_BROKER   (lib/.../messages-broker.constants.ts)\n                        \n                        \n                            MS_CLIENT   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            MS_EXCEPTION_ID   (lib/.../constants.ts)\n                        \n                        \n                            MSG_BUS   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            ORIGINAL   (lib/.../media.constants.ts)\n                        \n                        \n                            parser   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            PROPERTIES_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            ReadOperatorRe   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            REDIS_CLIENT   (lib/.../cache.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            REGISTERED_PROCESSES   (lib/.../process.constants.ts)\n                        \n                        \n                            REQUEST_PROPS   (lib/.../constants.ts)\n                        \n                        \n                            rootToken   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            SimpleJsonTransformer   (lib/.../simple-json.transformer.ts)\n                        \n                        \n                            SVG   (lib/.../media.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_BASIC   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_FULL   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_OBJECT   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_SECTION   (lib/.../explorer.constants.ts)\n                        \n                        \n                            THUMB   (lib/.../media.constants.ts)\n                        \n                        \n                            UNKNOWN_IP   (lib/.../auth.constants.ts)\n                        \n                        \n                            USER_RELATIONS   (lib/.../user.constants.ts)\n                        \n                        \n                            WARLOCK   (lib/.../warlock.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_A\"\n                    \n                \n\n            \n                \n                    Error message for access token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"access_token\"\n                    \n                \n\n            \n                \n                    Prefix for access token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt\"\n                    \n                \n\n            \n                \n                    Prefix for JWT cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refresh_token\"\n                    \n                \n\n            \n                \n                    Prefix for refresh token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BRUTEFORCE_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bruteforce\"\n                    \n                \n\n            \n                \n                    Prefix for brute force protection cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceIPKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by IP address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtAccessTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for an access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtRefreshTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for a refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_R\"\n                    \n                \n\n            \n                \n                    Error message for refresh token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNKNOWN_IP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"unknown\"\n                    \n                \n\n            \n                \n                    Placeholder for unknown IP addresses.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/access-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.accessToken];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting access token from a request.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/for-roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedForMetadataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"for_roles\"\n                    \n                \n\n            \n                \n                    A constant string key used for role-based access control metadata.\nThis key is used to annotate routes or controllers with the roles allowed to access them.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) =>\n  SetMetadata(AllowedForMetadataKey, roles)\n                    \n                \n\n            \n                \n                    ForRoles custom decorator for defining roles allowed to access a route.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge-file-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BODY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `%%%body%%%`\n                    \n                \n\n            \n                \n                    A placeholder string used for tokenizing the body content within templates.\nThis token is used to dynamically replace or insert content in XML or other templated strings.\n\n                \n            \n\n        \n    \n\n    lib/common/captcha/captcha.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CAPTCHA_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"captcha\"\n                    \n                \n\n            \n                \n                    The prefix used for storing CAPTCHA data.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/category/category.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"icon\",\n  \"icon.name\",\n  \"icon.name.lang\",\n  \"icon.files\",\n  \"icon.files.format\",\n  \"icon.type\",\n  \"icon.type.ext\",\n  \"name\",\n  \"name.lang\",\n]\n                    \n                \n\n            \n                \n                    An array defining the relations to be loaded with the Category entity.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"config\"\n                    \n                \n\n            \n                \n                    The prefix used for storing configuration items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".config.ts\"\n                    \n                \n\n            \n                \n                    The pattern for configuration file extensions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_ENCODING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"utf-8\"\n                    \n                \n\n            \n                \n                    The encoding used for reading and writing configuration files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GEN_SRC_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"gen-src\"\n                    \n                \n\n            \n                \n                    The directory where generated source files are stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KP_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"kp.properties\"\n                    \n                \n\n            \n                \n                    The name of the kp properties file.\nIt is assumed that this is the main configuration file, located in the root of the project\nand can override the properties of any .properties in the entire project\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"local.properties\"\n                    \n                \n\n            \n                \n                    The name of the local properties file\nIt is assumed that such files override neighboring ones .properties files and are out of version control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROPERTIES_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".properties\"\n                    \n                \n\n            \n                \n                    The pattern for properties file extensions.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.currentUser];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting the current user from a request.\n\n                \n            \n\n        \n    \n\n    lib/common/media/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_QUALITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 78\n                    \n                \n\n            \n                \n                    Default media quality value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n\n            \n                \n                    Default media type code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"name\",\n  \"name.lang\",\n  \"type\",\n  \"type.formats\",\n  \"type.ext\",\n  \"files\",\n  \"files.format\",\n]\n                    \n                \n\n            \n                \n                    Array containing relations for media.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_TYPE_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"ext\", \"formats\"]\n                    \n                \n\n            \n                \n                    Array containing relations for media type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORIGINAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"original\"\n                    \n                \n\n            \n                \n                    Represents the original media format.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"svg\"\n                    \n                \n\n            \n                \n                    Represents the SVG media extension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THUMB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"thumb\"\n                    \n                \n\n            \n                \n                    Represents the thumbnail media format.\n\n                \n            \n\n        \n    \n\n    lib/common/explorer/explorer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTITY_SAVE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"ENTITY_SAVE_HANDLER\")\n                    \n                \n\n            \n                \n                    Token for injecting entity save handler.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_BASIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n  ]\n                    \n                \n\n            \n                \n                    Basic target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_FULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.description\",\n    \"columns.description.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n    \"canRead\",\n    \"canRead.name\",\n    \"canRead.name.lang\",\n    \"canWrite\",\n    \"canWrite.name\",\n    \"canWrite.name.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Full target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for object-entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_SECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for section-entities.\n\n                \n            \n\n        \n    \n\n    lib/shared/utils/files.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileTypeModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as { lib: typeof import(\"file-type\") }\n                    \n                \n\n            \n                \n                    Object to hold the dynamically imported file-type module.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.init-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InitConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(ConfigModule);\n  await app.init();\n  const logger: Logger = app.select(LogModule).get(LOGGER);\n  EnvLoader.loadEnvironment(logger);\n  const configService = app.select(ConfigModule).get(ConfigService);\n  const genCnfDir = `${process.cwd()}/${process.env.CONFIG_SRC_DIR}`;\n  await configService.initWithPropertiesFiles(genCnfDir);\n  await app.close();\n  process.exit(0);\n}\n                    \n                \n\n            \n                \n                    Asynchronously initializes the application context with the ConfigModule,\nloads environment variables, and initializes the configuration service with .properties files.\nThis function used for initialize config store\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/log/log.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOGGER_SERVICE\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for the LogService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/messages-broker/messages-broker.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES_BROKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BROKER\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the MessagesBrokerService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/ms-client/ms-client.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MS_CLIENT\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the microservices' client.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MSG_BUS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BUS\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the message bus.\n\n                \n            \n\n        \n    \n\n    lib/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_EXCEPTION_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"MsException\"\n                    \n                \n\n            \n                \n                    A constant representing the exception identifier for microservices.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n}\n                    \n                \n\n            \n                \n                    An object containing properties used for request handling.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n\n            \n                \n                    Stored xml-parser instance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReadOperatorRe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\$\\{@read:([^}]*)}/\n                    \n                \n\n            \n                \n                    Regex for detect read-operator in xml-schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"@root\"\n                    \n                \n\n            \n                \n                    Representing root-node identifier\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/cache/cache.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"REDIS_CLIENT\")\n                    \n                \n\n            \n                \n                    A symbol used for injecting the Redis client.\n\n                \n            \n\n        \n    \n\n    lib/common/process/process.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTERED_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n            \n                \n                    Sore for registered processes\n\n                \n            \n\n        \n    \n\n    lib/shared/transformers/simple-json.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SimpleJsonTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValueTransformer\n\n                    \n                \n                \n                    \n                        Default value : {\n  from(value: string | object) {\n    if (typeof value === \"string\") {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return undefined;\n      }\n    }\n    return value;\n  },\n  to(value: object) {\n    return value;\n  },\n}\n                    \n                \n\n            \n                \n                    A ValueTransformer for transforming JSON data in a database column.\nThis transformer is used to automatically parse JSON strings from the database into JavaScript objects and vice versa.\n\n                \n            \n\n        \n    \n\n    lib/common/user/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"avatar\",\n  \"avatar.name\",\n  \"avatar.name.lang\",\n  \"avatar.files\",\n  \"avatar.files.format\",\n  \"avatar.type\",\n  \"avatar.type.ext\",\n  \"roles\",\n  \"roles.name\",\n  \"roles.name.lang\",\n]\n                    \n                \n\n            \n                \n                    Array of user entity relations.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/warlock/warlock.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WARLOCK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"WARLOCK\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the warlock mechanism.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties.html":{"url":"additional-documentation/properties.html","title":"additional-page - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/kp.properties.html":{"url":"additional-documentation/properties/kp.properties.html","title":"additional-page - kp.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/auth.properties.html":{"url":"additional-documentation/properties/auth.properties.html","title":"additional-page - auth.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization configuration\nThe auth.properties configuration file contains settings for authentication and authorization using JSON Web Tokens (JWT).\n\nauth.jwt.secret\n\nDescription: The secret key used to sign the JWT.\nType: string\nExample: jwt_secret_key\n\n\nauth.access.token.expiration\n\nDescription: The lifetime of the access token.\nType: number\nExample: 600\n\n\nNote: The access token will be valid for 10 minutes (600 seconds).\n\nauth.refresh.token.expiration\n\nDescription: The lifetime of the update token.\nType: number\nExample: 3600\n\n\nNote: The upgrade token will be valid for 1 hour (600 seconds * 6).\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/bruteforce.properties.html":{"url":"additional-documentation/properties/bruteforce.properties.html","title":"additional-page - bruteforce.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrute force protection configuration\nThe bruteforce.properties configuration file contains settings for protecting against brute force attacks.\n\nbruteforce.enabled\n\nDescription: Enables or disables brute force protection.\nType: boolean\nExample: true\n\n\nbruteforce.max.attempts\n\nDescription: Maximum number of login attempts before blocking.\nType: number\nExample: 3\n\n\nbruteforce.block.duration\n\nDescription: Duration for which a user is blocked after exceeding the maximum number of attempts.\nType: number\nExample: 300\nNote: The user will be blocked for 5 minutes (300 seconds).\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/captcha.properties.html":{"url":"additional-documentation/properties/captcha.properties.html","title":"additional-page - captcha.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCAPTCHA Configuration\nThe captcha.properties configuration file contains settings for CAPTCHA generation and validation.\n\ncaptcha.enabled\n\nDescription: Boolean flag indicating if CAPTCHA is enabled.\nType: boolean\nExample: true\n\n\ncaptcha.expiration\n\nDescription: Expiration time for CAPTCHA entries.\nType: number\nExample: 300\nNote: The CAPTCHA will be valid for 5 minutes (300 seconds).\n\n\ncaptcha.font.path\n\nDescription: Path to the font file used for graphical CAPTCHA.\nType: string\nExample: /lib/common/captcha/montserrat.ttf\n\n\ncaptcha.font.family\n\nDescription: Font family used for graphical CAPTCHA.\nType: string\nExample: Montserrat\n\n\ncaptcha.type\n\nDescription: Type of CAPTCHA to be used.\nType: string\nExample: default\n\n\ncaptcha.google.public.key\n\nDescription: Public key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\ncaptcha.google.secret.key\n\nDescription: Secret key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/file.properties.html":{"url":"additional-documentation/properties/file.properties.html","title":"additional-page - file.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiles configuration\nThe file.properties configuration file contains settings for files store\n\nfile.public.dir\n\nDescription: Path stored public files\nType: string\nExample: /static/file\n\n\nfile.private.dir\n\nDescription: Path stored private files\nType: number\nExample: /static/private/file\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/media.properties.html":{"url":"additional-documentation/properties/media.properties.html","title":"additional-page - media.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMedia Configuration\nThe media.properties configuration file contains settings for managing the directories where public and private media files are stored.\n\nmedia.public.dir\n\nDescription: The directory where public media files are stored.\nType: string\nExample: /static/media\nNote: This directory is accessible to all users and serves public media content.\n\n\nmedia.private.dir\n\nDescription: The directory where private media files are stored.\nType: string\nExample: /static/private/media\nNote: This directory is restricted and serves private media content only accessible to authorized users.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbstractAuthGuard.html",[0,3.374,1,3.578]],["body/guards/AbstractAuthGuard.html",[1,5.401,2,5.788,3,0.111,4,0.097,5,0.023,6,7.668,7,3.935,8,0.073,9,2.564,10,0.148,11,6.162,12,3.562,13,1.337,14,7.168,15,0.291,16,0.535,17,5.239,18,2.895,19,3.896,20,5.48,21,3.093,22,4.142,23,1.518,24,3.018,25,2.62,26,6.162,27,6.162,28,5.48,29,5.841,30,0.657,31,4.425,32,6.162,33,4.432,34,3.844,35,3.289,36,6.818,37,7.668,38,3.042,39,6.162,40,6.162,41,3.89,42,5.677,43,1.215,44,0.007,45,0.425,46,0.155,47,1.193,48,5.507,49,5.03,50,1.779,51,2.276,52,1.267,53,3.844,54,6.162,55,4.425,56,6.162,57,5.788,58,1.244,59,4.426,60,5.841,61,3.901,62,6.162,63,0.425,64,4.425,65,3.844,66,3.226,67,6.162,68,4.012,69,4.203,70,4.694,71,2.581,72,6.162,73,4.012,74,0.25,75,4.425,76,0.978,77,3.612,78,3.612,79,3.612,80,4.425,81,1.445,82,3.612,83,3.371,84,3.371,85,3.178,86,0.104,87,1.574,88,2.142,89,2.895,90,3.935,91,4.425,92,6.162,93,2.377,94,4.425,95,4.425,96,3.935,97,3.844,98,2.137,99,6.162,100,4.425,101,4.425,102,4.425,103,2.211,104,3.935,105,4.425,106,4.425,107,4.425,108,4.425,109,4.425,110,4.425,111,4.425,112,4.425,113,4.425,114,4.425,115,0.004,116,0.004]],["title/classes/AbstractProcess.html",[10,0.091,117,3.834]],["body/classes/AbstractProcess.html",[3,0.081,4,0.071,5,0.016,8,0.063,9,2.458,10,0.144,15,0.213,16,0.593,17,5.569,18,2.596,21,3.019,23,1.209,24,3.369,25,2.575,30,0.807,34,4.128,43,1.016,44,0.007,45,0.356,46,0.164,47,1.197,49,4.007,50,1.782,51,1.813,63,0.356,74,0.246,76,0.716,86,0.076,88,2.148,89,1.703,93,3.498,98,2.057,103,1.571,115,0.004,116,0.004,117,4.007,118,0.924,119,8.804,120,3.238,121,1.231,122,5.05,123,3.74,124,2.652,125,2.838,126,4.84,127,4.517,128,5.401,129,5.884,130,4.366,131,5.884,132,5.884,133,4.366,134,4.63,135,5.108,136,5.273,137,2.099,138,4.909,139,3.238,140,3.86,141,3.238,142,3.86,143,3.238,144,1.125,145,3.238,146,3.74,147,5.471,148,4.366,149,4.071,150,3.238,151,6.248,152,5.702,153,6.656,154,4.366,155,6.656,156,6.656,157,6.656,158,4.366,159,4.366,160,3.238,161,4.366,162,3.238,163,5.041,164,4.366,165,3.238,166,3.348,167,3.063,168,3.238,169,3.74,170,3.74,171,3.238,172,2.652,173,2.879,174,1.946,175,6.37,176,3.238,177,4.366,178,5.215,179,3.74,180,2.357,181,3.54,182,1.791,183,0.978,184,1.306,185,2.741,186,6.324,187,2.209,188,2.467,189,2.643,190,2.467,191,3.238,192,3.238,193,3.238,194,2.209,195,2.643,196,2.643,197,2.879,198,3.238,199,3.238,200,3.238,201,3.238,202,2.643,203,1.236,204,7.776,205,3.238,206,2.643,207,2.879,208,7.112,209,3.238,210,3.238,211,3.238,212,1.942,213,3.238,214,4.909,215,3.238,216,4.366,217,3.238,218,2.567,219,2.02,220,3.526,221,3.238,222,3.238,223,2.879,224,4.909,225,3.238,226,3.238,227,3.238,228,3.238,229,3.238,230,7.112,231,3.238,232,6.324,233,3.238,234,3.238,235,3.238,236,3.238,237,3.238,238,3.238,239,3.238,240,1.187,241,7.485,242,2.879,243,4.909,244,4.909,245,3.238,246,3.238,247,1.872,248,2.879,249,3.238,250,3.238,251,3.238,252,3.238,253,3.238,254,2.879,255,3.238,256,5.929,257,5.929,258,5.929,259,3.238,260,3.238]],["title/classes/AbstractUserSubscriber.html",[10,0.091,261,3.834]],["body/classes/AbstractUserSubscriber.html",[3,0.118,4,0.103,5,0.024,8,0.075,9,2.425,10,0.141,15,0.308,16,0.775,17,5.547,18,2.536,23,1.58,24,3.248,30,0.728,43,1.253,44,0.007,45,0.439,46,0.199,47,1.23,50,1.675,51,1.732,63,0.531,65,4.002,70,4.886,71,2.909,74,0.255,76,1.036,86,0.11,88,2.208,89,2.536,93,3.174,97,2.926,98,1.626,103,1.699,115,0.005,116,0.005,118,1.338,203,0.774,261,5.236,262,8.23,263,4.17,264,1.12,265,5.236,266,4.176,267,1.975,268,5.236,269,6.414,270,6.414,271,6.414,272,4.689,273,6.414,274,4.689,275,6.989,276,4.247,277,3.847,278,6.989,279,3.581,280,6.414,281,6.414,282,6.989,283,6.989,284,4.689,285,3.708,286,6.27,287,5.236,288,3.581,289,6.414,290,4.689,291,4.252,292,3.608,293,5.967,294,4.17,295,1.155,296,1.444,297,2.533,298,2.812,299,3.828,300,3.828,301,4.689,302,4.17,303,4.17,304,4.689,305,4.689,306,4.689,307,4.689,308,4.689,309,4.689,310,4.689,311,3.828,312,3.053,313,8.498,314,0.76,315,4.689,316,4.689,317,3.198,318,6.414,319,1.562,320,4.689,321,4.17,322,4.689,323,6.414,324,6.414,325,4.689,326,3.198]],["title/interfaces/AudioFileMetadata.html",[327,0.653,328,2.817]],["body/interfaces/AudioFileMetadata.html",[3,0.097,4,0.085,5,0.045,8,0.037,10,0.127,15,0.254,16,0.676,44,0.007,45,0.232,46,0.203,52,0.795,63,0.599,74,0.197,86,0.202,115,0.004,116,0.004,121,2.155,203,1.46,240,1.592,279,2.159,296,1.191,314,1.577,327,1.288,328,3.948,329,1.214,330,2.412,331,3.675,332,2.646,333,4.502,334,4.502,335,4.593,336,4.593,337,4.502,338,4.593,339,4.427,340,4.502,341,4.502,342,4.502,343,4.502,344,4.328,345,4.502,346,4.502,347,1.535,348,1.634,349,3.025,350,2.932,351,2.235,352,0.726,353,1.716,354,1.909,355,1.369,356,1.525,357,2.319,358,2.424,359,1.288,360,2.412,361,1.634,362,3.237,363,3.358,364,3.237,365,3.358,366,2.932,367,3.358,368,3.358,369,3.645,370,3.126,371,3.358,372,2.412,373,2.311,374,2.311,375,2.412,376,2.412,377,2.412,378,2.412,379,2.412,380,2.412,381,2.089,382,2.412,383,2.412,384,2.412,385,2.412,386,2.412,387,2.412,388,2.412,389,2.412,390,2.412,391,2.412,392,2.412,393,2.412,394,2.412,395,2.412,396,2.412,397,2.412,398,2.412,399,2.517,400,2.517,401,2.517,402,2.517,403,1.146,404,2.517,405,2.517,406,2.517,407,2.517,408,2.517,409,2.517,410,2.517,411,2.517,412,2.517,413,2.517,414,2.517,415,2.517,416,2.517,417,2.517,418,2.517,419,2.517,420,2.517,421,2.517,422,2.517,423,3.493,424,2.517,425,2.517,426,2.517,427,2.517,428,2.517,429,2.517,430,2.517,431,2.517,432,2.517,433,2.517,434,2.517,435,2.517,436,2.517,437,2.517,438,2.517,439,2.517,440,2.517,441,2.517,442,2.517,443,2.412,444,2.412,445,2.412,446,2.412,447,2.412,448,2.412,449,2.412,450,2.412,451,0.886,452,1.124,453,2.024,454,2.319]],["title/entities/AudioFileMetadataEntity.html",[264,0.72,455,3.578]],["body/entities/AudioFileMetadataEntity.html",[3,0.109,4,0.095,5,0.048,8,0.041,10,0.084,13,0.94,15,0.616,16,0.733,30,0.863,44,0.007,45,0.497,46,0.204,61,2.024,63,0.567,74,0.182,86,0.102,87,2.48,115,0.004,116,0.004,182,1.834,203,1.158,218,1.876,264,1.074,295,1.067,314,1.479,326,4.141,328,3.642,331,3.39,332,1.869,333,4.373,334,4.373,335,4.204,336,4.204,337,4.373,338,4.204,339,4.052,340,4.373,341,4.373,342,4.373,343,4.373,344,4.204,345,4.373,346,4.373,455,4.625,456,1.213,457,9.361,458,2.955,459,2.15,460,2.813,461,4.77,462,3.734,463,3.536,464,3.852,465,4.74,466,3.3,467,3.3,468,6.072,469,3.536,470,3.3,471,3.536,472,4.956,473,4.956,474,4.956,475,3.852,476,4.332,477,2.201,478,3.112,479,4.332,480,6.072,481,3.3,482,6.072,483,3.112,484,3.852,485,3.3,486,3.852,487,1.36,488,2.997,489,2.419,490,4.332,491,2.201,492,3.823,493,4.242,494,3.536]],["title/injectables/AuthGuard.html",[495,1.475,496,4.177]],["body/injectables/AuthGuard.html",[0,5.612,1,6.904,3,0.159,4,0.139,5,0.032,8,0.061,9,1.812,10,0.151,12,5.103,17,5.075,18,2.935,19,4.75,21,3.771,22,5.05,30,0.588,43,1.089,44,0.007,45,0.381,46,0.139,47,1.069,71,2.501,74,0.272,76,1.404,82,5.185,83,4.839,86,0.149,115,0.006,116,0.006,137,2.766,495,2.453,496,7.524,497,2.892,498,6.352,499,4.125,500,4.686,501,6.377,502,4.09,503,6.947,504,3.546,505,6.352,506,2.685,507,5.648,508,5.648,509,3.326,510,3.809]],["title/modules/AuthModule.html",[511,1.076,512,3.834]],["body/modules/AuthModule.html",[3,0.133,4,0.116,5,0.035,8,0.051,10,0.103,19,3.955,23,1.308,24,1.92,30,0.492,43,0.91,44,0.007,45,0.319,46,0.116,47,0.894,50,1.132,74,0.281,76,1.174,81,1.734,86,0.125,93,2.689,103,1.847,115,0.005,116,0.005,122,3.767,182,1.604,183,1.604,267,1.635,403,1.574,451,1.597,506,2.245,511,1.966,512,6.354,513,2.245,514,5.311,515,5.008,516,6.973,517,3.543,518,4.539,519,3.458,520,5.937,521,5.311,522,1.597,523,7.784,524,4.669,525,1.805,526,1.805,527,1.769,528,1.769,529,1.805,530,2.645,531,1.769,532,2.931,533,1.734,534,2.277,535,1.667,536,1.805,537,1.805,538,1.805,539,1.805,540,1.805,541,1.805,542,1.7,543,1.805,544,1.805,545,1.805,546,1.769,547,2.37,548,1.805,549,1.769,550,1.805,551,1.805,552,1.805,553,1.805,554,1.805,555,1.635,556,1.805,557,1.769,558,1.805,559,5.311,560,4.723,561,6.973,562,4.723,563,5.311,564,4.723,565,4.5,566,3.623,567,3.258,568,3.314,569,2.966,570,5.311,571,3.623,572,5.311,573,3.623,574,5.311,575,5.309,576,4.046,577,3.258,578,5.311,579,5.311,580,3.458,581,5.311,582,4.336,583,5.311,584,5.311,585,4.336,586,5.311,587,5.311,588,2.418,589,2.622,590,3.07,591,3.815,592,2.418]],["title/classes/AuthService.html",[10,0.091,575,3.204]],["body/classes/AuthService.html",[3,0.1,4,0.088,5,0.02,8,0.07,9,2.567,10,0.13,12,3.317,15,0.263,23,1.805,30,0.622,41,3.985,42,5.67,43,1.15,44,0.007,45,0.403,46,0.147,47,1.129,50,1.875,51,2.119,58,1.159,63,0.534,71,2.485,74,0.12,77,3.266,78,3.266,79,3.266,86,0.211,87,1.466,88,2.571,89,3.088,98,2.543,103,1.52,115,0.004,116,0.004,118,1.142,144,2.015,149,3.838,174,1.268,180,2.755,181,2.612,291,4.222,299,4.684,522,1.679,564,3.558,575,3.914,593,3.558,594,4.684,595,4.684,596,5.739,597,5.103,598,7.331,599,5.739,600,5.739,601,5.739,602,5.802,603,4.001,604,5.266,605,4.122,606,3.914,607,3.335,608,4.82,609,3.098,610,6.461,611,5.266,612,5.739,613,4.001,614,5.585,615,5.266,616,5.739,617,5.739,618,4.001,619,7.331,620,5.51,621,5.739,622,5.739,623,4.372,624,4.372,625,6.792,626,3.558,627,3.558,628,3.558,629,3.558,630,4.82,631,3.558,632,3.558,633,4.093,634,3.914,635,6.135,636,5.266,637,3.558,638,3.558,639,3.558,640,5.112,641,4.369,642,3.048,643,3.558,644,3.558,645,4.574,646,4.086,647,5,648,3.558,649,3.558,650,3.558,651,3.558,652,4.684,653,4.684,654,3.558,655,3.558,656,3.558,657,4.122,658,4.122,659,3.558,660,3.558]],["title/classes/BadRequestMsException.html",[10,0.091,661,4.177]],["body/classes/BadRequestMsException.html",[3,0.17,4,0.149,5,0.035,8,0.065,10,0.131,30,0.629,35,3.085,43,1.164,44,0.007,45,0.407,46,0.149,47,1.143,63,0.523,74,0.244,76,1.501,86,0.159,115,0.006,116,0.006,118,1.938,137,2.405,181,3.704,184,2.739,499,3.802,661,7.235,662,8.137,663,4.632,664,5.076,665,5.076,666,4.703,667,7.747,668,5.55,669,5.297,670,5.156,671,5.55,672,4.632,673,4.421,674,4.632,675,6.791]],["title/injectables/BasicUserService.html",[495,1.475,676,3.834]],["body/injectables/BasicUserService.html",[3,0.102,4,0.089,5,0.021,8,0.078,10,0.112,15,0.269,16,0.704,18,1.417,22,4.624,23,1.822,24,3.415,25,1.282,30,0.753,43,1.394,44,0.007,45,0.488,46,0.178,47,1.369,50,1.883,58,1.494,59,6.346,63,0.557,71,3.14,74,0.244,76,0.902,86,0.096,87,1.043,88,2.457,89,2.02,93,3.228,97,2.548,98,2.354,103,2.073,115,0.004,116,0.004,137,2.062,144,2.115,180,1.961,203,1.574,218,3.204,288,3.252,291,4.019,295,1.006,297,3.667,298,2.449,299,3.334,317,2.786,321,3.632,495,1.828,497,1.859,499,2.721,510,2.449,522,1.334,654,7.61,676,5.541,677,5.824,678,4.084,679,3.049,680,5.824,681,6.196,682,6.196,683,5.179,684,5.179,685,5.179,686,5.179,687,4.084,688,4.084,689,5.824,690,3.791,691,5.336,692,4.084,693,4.436,694,3.791,695,4.084,696,4.132,697,3.791,698,4.084,699,3.791,700,4.084,701,3.791,702,3.049,703,3.791,704,4.084,705,4.132,706,5.179,707,3.111,708,2.933,709,2.138,710,6.036,711,4.084,712,4.084,713,5.824,714,2.548,715,3.146,716,5.824,717,4.084,718,5.824,719,4.084,720,4.084,721,4.084,722,4.084,723,4.084]],["title/modules/CacheModule.html",[511,1.076,565,2.715]],["body/modules/CacheModule.html",[3,0.137,4,0.119,5,0.036,8,0.052,10,0.105,19,4.654,21,3.491,44,0.007,74,0.271,76,1.205,81,1.78,86,0.128,103,1.444,115,0.005,116,0.005,267,1.679,276,2.547,277,4.254,403,1.615,506,2.304,511,1.983,513,2.304,525,1.853,526,1.853,527,1.816,528,1.816,529,1.853,530,2.679,531,1.816,532,2.95,533,1.78,534,2.316,535,1.711,536,1.853,537,1.853,538,1.853,539,1.853,540,1.853,541,1.853,542,1.745,543,1.853,544,1.853,545,1.853,546,1.816,547,2.41,548,1.853,549,1.816,550,1.853,551,1.853,552,1.853,553,1.853,554,1.853,555,1.679,556,1.853,557,1.816,558,1.853,565,5.353,567,4.222,577,3.684,580,3.549,588,3.229,589,2.691,590,3.151,592,3.589,679,3.713,724,3.044,725,3.27,726,3.27,727,3.27,728,4.848,729,4.848,730,4.848,731,5.635,732,4.254,733,3.27,734,3.044,735,5.452,736,7.092,737,4.425,738,4.918,739,5.452,740,3.916,741,3.401,742,3.916,743,3.916,744,4.848,745,5.789,746,5.452,747,4.45,748,3.718,749,3.718,750,3.718,751,4.45,752,3.916,753,4.45,754,4.153,755,4.45,756,4.153,757,4.45,758,4.45]],["title/classes/CacheService.html",[10,0.091,19,2.387]],["body/classes/CacheService.html",[3,0.135,4,0.117,5,0.027,8,0.051,9,2.799,10,0.135,15,0.353,19,3.565,23,1.926,30,0.846,43,1.565,44,0.007,45,0.548,46,0.2,47,1.536,50,1.946,63,0.589,86,0.126,115,0.005,116,0.005,118,1.53,144,2.201,167,4.879,183,2.362,184,2.163,314,1.496,585,6.384,635,3.657,636,3.851,646,4.32,759,5.362,760,4.085,761,4.377,762,6.239,763,6.239,764,6.239,765,6.239,766,6.239,767,6.239,768,6.239,769,5.362,770,6.239,771,5.362,772,6.239,773,5.362,774,6.239,775,5.362,776,6.239,777,5.362,778,3.851,779,6.239,780,5.362,781,6.239,782,5.362,783,4.768,784,5.091,785,5.362]],["title/modules/CaptchaModule.html",[511,1.076,786,3.834]],["body/modules/CaptchaModule.html",[3,0.133,4,0.116,5,0.035,8,0.051,10,0.103,23,1.31,30,0.646,43,1.196,44,0.007,45,0.419,46,0.181,47,1.174,50,1.488,74,0.257,76,1.175,81,1.736,86,0.125,89,1.845,103,1.849,115,0.005,116,0.005,144,1.218,182,1.606,183,1.606,267,1.638,403,1.576,451,1.894,506,3.292,511,2.019,513,2.248,517,4.201,518,4.543,519,3.462,522,1.599,524,5.15,525,1.807,526,1.807,527,1.771,528,1.771,529,1.807,530,2.647,531,1.771,532,2.932,533,1.736,534,2.279,535,1.67,536,1.807,537,1.807,538,1.807,539,1.807,540,1.807,541,1.807,542,1.703,543,1.807,544,1.807,545,1.807,546,1.771,547,2.372,548,1.807,549,1.771,550,1.807,551,1.807,552,1.807,553,1.807,554,1.807,555,1.638,556,1.807,557,1.771,558,1.807,565,4.034,566,3.627,567,3.261,568,3.318,577,4.013,580,5.071,588,3.177,589,3.445,590,3.074,591,3.82,592,3.177,786,6.75,787,5.319,788,5.316,789,3.77,790,6.3,791,5.319,792,6.358,793,4.729,794,6.206,795,4.76,796,5.319,797,4.729,798,5.319,799,6.011,800,4.341,801,4.729]],["title/classes/CaptchaRequest.html",[10,0.091,802,3.374]],["body/classes/CaptchaRequest.html",[3,0.134,4,0.117,5,0.027,8,0.051,9,2.363,10,0.174,15,0.351,16,0.845,30,0.648,33,3.087,35,2.763,44,0.007,46,0.204,50,1.492,52,1.098,58,1.413,63,0.516,65,3.332,70,5.946,73,3.477,74,0.21,86,0.195,87,1.364,88,1.613,115,0.005,116,0.005,118,1.524,121,1.755,144,2.021,174,2.086,203,1.368,296,1.644,319,2.6,366,3.664,451,1.223,452,1.553,460,2.113,511,1.223,515,3.836,522,1.788,607,2.889,645,3.332,789,5.256,790,4.068,799,3.642,802,5.949,803,4.359,804,2.759,805,5.949,806,5.34,807,5.026,808,4.749,809,5.34,810,2.945,811,5.081,812,5.026,813,3.332,814,3.664,815,4.749,816,4.749,817,4.359,818,4.068,819,3.836,820,3.203,821,4.068,822,3.642,823,3.087,824,4.359,825,3.836,826,4.555,827,2.106]],["title/classes/CaptchaService.html",[10,0.091,799,3.204]],["body/classes/CaptchaService.html",[3,0.13,4,0.114,5,0.026,8,0.066,9,2.618,10,0.175,15,0.342,23,1.693,30,0.637,33,3.005,35,2.727,43,0.891,44,0.007,45,0.312,46,0.201,47,0.875,50,1.747,52,1.069,58,1.05,63,0.492,65,4.289,70,5.868,73,4.476,74,0.206,86,0.192,87,1.756,88,1.57,115,0.005,116,0.005,118,1.483,121,1.932,144,2.122,174,2.047,203,1.135,296,1.601,319,2.29,366,3.599,451,1.191,452,1.512,511,1.191,515,3.734,522,1.878,607,3.383,645,4.289,789,5.272,790,3.96,799,4.689,802,6.122,803,4.244,804,2.05,805,5.533,807,3.734,810,2.594,811,4.476,812,4.938,813,3.243,814,3.599,815,4.623,816,4.623,817,4.244,818,6.244,819,4.938,820,4.123,821,5.237,822,3.546,823,3.005,824,4.244,825,3.734,826,4.476,827,2.05,828,5.612,829,5.199,830,5.199]],["title/entities/CategoryEntity.html",[264,0.72,831,3.374]],["body/entities/CategoryEntity.html",[3,0.121,4,0.106,5,0.033,8,0.046,10,0.093,15,0.523,16,0.79,30,0.837,44,0.007,45,0.445,46,0.198,58,1.32,61,2.253,63,0.477,74,0.238,81,1.574,86,0.113,87,2.373,115,0.005,116,0.005,167,3.008,182,2.402,203,1.225,218,2.088,264,1.136,267,1.485,295,1.187,314,1.289,319,2.177,352,1.393,356,2.925,403,1.429,456,1.35,459,2.315,460,2.73,462,3.305,465,3.008,477,2.45,487,1.514,488,3.227,491,2.45,492,2.83,493,2.692,525,1.639,526,1.639,527,1.606,528,1.606,529,1.639,530,2.52,531,1.606,532,2.861,533,1.574,534,2.134,535,1.514,536,1.639,537,1.639,538,1.639,539,1.639,540,1.639,541,1.639,542,1.544,543,1.639,544,1.639,545,1.639,546,1.606,547,2.222,548,1.639,549,1.606,550,1.639,551,1.639,552,1.639,553,1.639,554,1.639,555,1.485,556,1.639,557,1.606,558,1.639,810,1.819,831,6.155,832,4.822,833,4.98,834,6.537,835,6.595,836,3.768,837,7.416,838,4.007,839,7.416,840,7.416,841,4.822,842,2.315,843,2.787,844,4.822,845,3.361,846,2.45,847,4.078,848,4.822,849,4.822,850,4.04,851,2.892,852,3.532,853,2.892,854,4.822,855,3.463,856,4.078,857,2.267,858,5.058,859,4.822,860,7.416,861,4.822,862,3.779,863,4.98,864,4.822,865,3.673,866,4.822,867,3.423,868,3.423,869,3.321,870,4.288,871,4.822,872,2.605,873,4.822,874,3.463,875,3.936,876,4.822,877,4.822,878,3.463]],["title/modules/CategoryModule.html",[511,1.076,879,3.578]],["body/modules/CategoryModule.html",[3,0.146,4,0.128,5,0.038,8,0.056,10,0.113,44,0.007,74,0.265,76,1.289,81,1.904,86,0.137,115,0.005,116,0.005,267,1.796,403,1.728,511,2.025,513,2.465,525,1.982,526,1.982,527,1.943,528,1.943,529,1.982,530,2.766,531,1.943,532,2.996,533,1.904,534,2.418,535,1.831,536,1.982,537,1.982,538,1.982,539,1.982,540,1.982,541,1.982,542,1.867,543,1.982,544,1.982,545,1.982,546,1.943,547,2.517,548,1.982,549,1.943,550,1.982,551,1.982,552,1.982,553,1.982,554,1.982,555,1.796,556,1.982,557,1.943,558,1.982,567,4.221,577,3.461,588,3.705,592,3.705,679,3.878,709,3.054,724,3.256,725,3.498,726,3.498,727,3.498,732,4.442,733,3.498,734,3.256,740,4.189,831,4.189,879,7.142,880,5.186,881,5.186,882,5.186,883,5.832,884,7.28,885,5.832,886,5.642,887,6.046,888,6.046,889,6.046,890,5.832,891,3.797,892,5.186,893,5.832]],["title/entities/CategoryRestrictionEntity.html",[264,0.72,894,4.177]],["body/entities/CategoryRestrictionEntity.html",[3,0.138,4,0.121,5,0.036,8,0.053,10,0.106,15,0.521,16,0.863,30,0.777,41,3.093,44,0.007,46,0.184,63,0.429,71,2.287,74,0.238,81,1.8,86,0.129,87,2.218,115,0.005,116,0.005,203,1.309,264,1.214,267,1.697,295,1.358,314,1.158,319,2.379,352,1.489,403,1.634,456,1.544,459,2.529,460,2.532,462,2.755,477,2.801,487,1.731,488,3.526,491,2.801,492,2.387,525,1.873,526,1.873,527,1.836,528,1.836,529,1.873,530,2.693,531,1.836,532,2.958,533,1.8,534,2.332,535,1.731,536,1.873,537,1.873,538,1.873,539,1.873,540,1.873,541,1.873,542,1.765,543,1.873,544,1.873,545,1.873,546,1.836,547,2.428,548,1.873,549,1.836,550,1.873,551,1.873,552,1.873,553,1.873,554,1.873,555,1.697,556,1.873,557,1.836,558,1.873,810,2.08,831,6.022,833,6.038,842,2.646,843,3.187,846,2.801,867,3.74,868,3.74,869,3.63,889,5.831,894,6.353,895,8.686,896,5.513,897,4.651,898,7.144,899,3.63,900,7.926,901,4.39,902,4.2,903,5.513,904,4.651,905,5.513,906,5.513,907,5.513,908,5.513,909,5.513,910,3.078,911,5.513]],["title/injectables/CategoryService.html",[495,1.475,884,3.578]],["body/injectables/CategoryService.html",[3,0.131,4,0.114,5,0.026,8,0.074,10,0.1,15,0.342,18,2.387,21,3.659,23,1.695,24,2.787,25,2.677,30,0.714,43,1.321,44,0.007,45,0.462,46,0.169,47,1.435,50,1.643,51,1.922,63,0.462,74,0.268,76,1.15,86,0.122,88,2.328,89,2.387,93,2.654,103,1.379,115,0.005,116,0.005,137,2.436,144,1.576,184,2.1,190,3.966,264,1.054,295,1.282,314,1.249,352,1.678,495,2.16,497,2.37,506,2.2,509,2.725,522,1.576,607,2.84,708,3.739,709,2.725,715,3.717,741,3.248,831,5.89,833,7.059,835,7.292,838,4.164,870,7.292,884,5.242,888,5.617,889,5.617,892,4.629,912,5.206,913,6.881,914,5.242,915,5.206,916,8.2,917,5.206,918,6.881,919,6.881,920,5.165,921,5.206,922,8.2,923,4.942,924,3.603,925,6.881,926,6.881,927,5.206,928,6.881,929,7.708,930,6.881,931,6.881,932,6.881,933,3.122,934,6.854,935,5.206,936,4.249,937,5.206,938,5.206,939,5.617,940,5.206,941,5.206,942,5.206,943,5.206,944,5.206,945,2.149]],["title/interfaces/ConfigItem.html",[327,0.653,946,3.834]],["body/interfaces/ConfigItem.html",[3,0.168,4,0.146,5,0.034,8,0.064,15,0.44,16,0.974,44,0.007,46,0.176,63,0.56,86,0.157,115,0.006,116,0.006,183,2.898,327,0.93,329,2.099,646,4.606,807,5.79,811,5.248,827,3.804,946,6.58,947,6.687,948,4.011,949,5.046,950,5.947,951,6.687,952,5.947,953,5.459,954,6.58]],["title/modules/ConfigModule.html",[511,1.076,955,3.374]],["body/modules/ConfigModule.html",[3,0.147,4,0.128,5,0.038,8,0.056,10,0.113,44,0.007,74,0.257,76,1.293,81,1.91,86,0.137,115,0.005,116,0.005,267,1.801,403,1.733,511,2.027,513,2.472,525,1.988,526,1.988,527,1.948,528,1.948,529,1.988,530,2.77,531,1.948,532,2.998,533,1.91,534,2.423,535,1.836,536,1.988,537,1.988,538,1.988,539,1.988,540,1.988,541,1.988,542,1.873,543,1.988,544,1.988,545,1.988,546,1.948,547,2.522,548,1.988,549,1.948,550,1.988,551,1.988,552,1.988,553,1.988,554,1.988,555,1.801,556,1.988,557,1.948,558,1.988,565,5.225,566,3.99,567,4.224,568,3.65,577,3.468,588,3.711,592,3.711,724,3.266,725,3.508,726,3.508,727,3.508,732,4.451,733,3.508,734,3.266,788,5.653,827,2.926,955,6.831,956,5.202,957,5.202,958,5.202,959,5.85,960,6.867,961,5.85,962,4.29,963,5.85]],["title/injectables/ConfigService.html",[495,1.475,960,3.374]],["body/injectables/ConfigService.html",[3,0.048,4,0.07,5,0.044,8,0.067,10,0.037,15,0.125,16,1.093,18,2.278,19,3.177,21,2.522,23,1.196,24,3.105,25,2.803,30,0.728,33,2.807,38,2.901,43,1.348,44,0.007,45,0.456,46,0.179,47,1.223,50,1.741,51,0.699,52,0.999,53,3.03,58,1.187,59,1.36,61,2.922,63,0.559,65,1.991,69,2.177,74,0.197,76,0.419,86,0.097,87,1.385,88,2.337,89,3.242,93,3.29,97,1.182,98,1.107,103,1.925,115,0.002,116,0.002,124,1.724,134,2.078,137,1.13,144,1.705,166,2.177,167,1.991,174,1.451,180,2.331,182,1.25,183,2.439,184,0.764,212,1.136,219,1.182,220,1.36,232,1.684,247,2.392,254,2.838,302,2.838,303,1.684,353,2.775,381,1.724,459,1.13,495,1.002,497,0.862,504,1.057,506,0.8,509,0.992,522,1.346,535,1.002,571,1.292,604,2.293,607,2.426,609,2.484,633,1.782,635,2.177,645,3.03,646,3.774,647,3.698,679,1.671,701,3.161,749,3.698,795,3.312,817,2.606,827,3.34,836,2.467,862,2.392,887,2.606,914,2.432,945,0.782,946,4.425,949,1.724,960,3.488,964,1.894,965,2.293,966,2.432,967,2.838,968,3.26,969,2.432,970,2.838,971,3.192,972,4.137,973,4.137,974,4.137,975,3.192,976,4.856,977,4.137,978,4.137,979,3.192,980,4.137,981,3.192,982,4.137,983,3.192,984,4.137,985,3.192,986,3.192,987,3.192,988,1.894,989,2.606,990,3.192,991,3.488,992,5.508,993,4.856,994,1.894,995,6.569,996,1.894,997,6.254,998,1.894,999,5.208,1000,2.606,1001,5.878,1002,2.606,1003,4.763,1004,1.894,1005,2.624,1006,1.894,1007,1.622,1008,3.027,1009,3.525,1010,3.192,1011,3.192,1012,2.606,1013,3.192,1014,1.894,1015,2.432,1016,3.192,1017,3.192,1018,2.838,1019,1.894,1020,4.856,1021,1.894,1022,3.192,1023,3.488,1024,3.964,1025,4.137,1026,3.192,1027,3.192,1028,1.894,1029,2.432,1030,3.488,1031,2.838,1032,2.432,1033,1.894,1034,5.878,1035,1.894,1036,3.03,1037,3.826,1038,3.192,1039,1.894,1040,1.724,1041,4.318,1042,4.318,1043,1.894,1044,7.067,1045,1.894,1046,3.192,1047,2.606,1048,2.838,1049,3.192,1050,1.894,1051,1.894,1052,1.894,1053,2.432,1054,1.684,1055,1.684,1056,4.821,1057,3.679,1058,2.838,1059,4.318,1060,4.821,1061,1.894,1062,1.894,1063,1.233,1064,1.023,1065,1.136,1066,3.192,1067,1.894,1068,1.443,1069,1.894,1070,3.192,1071,1.894,1072,1.894,1073,1.684,1074,1.894,1075,1.894,1076,1.894,1077,1.894,1078,1.894,1079,1.894,1080,1.894,1081,1.894,1082,3.699,1083,3.152,1084,1.894,1085,1.894,1086,1.894,1087,1.894,1088,1.894,1089,1.684,1090,1.894,1091,1.894,1092,1.894,1093,1.894,1094,1.443,1095,1.894,1096,1.894,1097,1.894,1098,2.606,1099,1.894,1100,2.838,1101,1.894,1102,1.894,1103,1.894,1104,1.894,1105,1.894,1106,1.684,1107,1.894,1108,1.894,1109,3.192,1110,1.894,1111,1.894,1112,1.894,1113,1.894,1114,1.894,1115,3.192,1116,4.137,1117,2.432,1118,3.192,1119,5.422,1120,1.894,1121,4.137,1122,1.894,1123,4.856,1124,2.838,1125,3.192,1126,4.856,1127,3.192,1128,4.137,1129,5.422,1130,3.192,1131,1.894,1132,1.894,1133,6.569,1134,1.894,1135,1.894,1136,1.894,1137,1.894,1138,2.838,1139,1.894,1140,3.679,1141,1.894,1142,1.894,1143,3.964,1144,1.894,1145,4.137,1146,1.894,1147,1.894,1148,4.137,1149,1.894,1150,1.894,1151,1.894,1152,1.894,1153,1.894,1154,1.894,1155,1.894,1156,1.894,1157,1.894,1158,3.192,1159,1.894,1160,3.192,1161,1.894,1162,1.894,1163,1.894,1164,1.894,1165,7.067,1166,1.894,1167,1.894,1168,1.894,1169,1.894,1170,4.856,1171,1.894,1172,1.894,1173,1.894,1174,1.894,1175,3.192,1176,1.894,1177,1.894,1178,1.443,1179,1.894,1180,1.894,1181,1.894,1182,1.894,1183,3.192,1184,1.894,1185,1.894,1186,1.894,1187,3.192,1188,1.894,1189,1.684,1190,1.894,1191,1.894,1192,1.894,1193,3.192,1194,3.192,1195,1.894,1196,3.192,1197,1.894,1198,1.894,1199,1.894,1200,1.894,1201,3.192,1202,1.894,1203,1.894,1204,1.443,1205,1.894,1206,1.894,1207,3.192,1208,1.894,1209,3.192,1210,1.894,1211,1.894,1212,1.894,1213,1.894,1214,1.894,1215,1.894,1216,1.894]],["title/classes/DbExceptionFilter.html",[10,0.091,1217,4.177]],["body/classes/DbExceptionFilter.html",[3,0.158,4,0.137,5,0.032,8,0.06,10,0.121,13,1.684,15,0.413,23,1.911,30,0.582,43,1.076,44,0.007,45,0.377,46,0.137,47,1.057,50,1.795,74,0.252,76,1.388,86,0.147,89,2.178,115,0.006,116,0.006,118,1.792,149,4.062,181,3.833,219,5.252,266,5.051,295,2.073,381,4.75,624,6.698,666,5.222,667,6.899,750,5.742,822,5.742,933,3.767,1217,7.819,1218,7.758,1219,6.281,1220,3.83,1221,5.292,1222,6.899,1223,7.758,1224,7.758,1225,7.758,1226,7.758,1227,7.758,1228,8.793,1229,8.793,1230,6.281,1231,6.281,1232,6.281,1233,6.281,1234,6.281,1235,6.281,1236,6.281]],["title/interfaces/DirectoryStructure.html",[327,0.653,1237,4.177]],["body/interfaces/DirectoryStructure.html",[3,0.111,4,0.097,5,0.047,8,0.042,24,2.912,30,0.409,44,0.007,46,0.183,47,0.743,50,1.717,58,1.43,61,2.875,63,0.532,74,0.257,86,0.196,87,1.128,88,2.519,89,3.028,93,3.42,103,2.134,115,0.004,116,0.004,121,1.543,144,1.755,146,3.363,149,2.311,212,2.648,218,2.664,219,2.754,279,3.954,312,2.874,327,0.985,329,1.386,353,3.799,451,1.622,511,1.845,607,1.822,636,4.419,645,2.754,646,2.954,682,3.363,820,3.69,967,5.471,968,2.672,969,4.687,992,5.689,999,3.363,1037,2.874,1053,4.687,1189,5.471,1204,3.363,1237,7.611,1238,3.926,1239,6.812,1240,5.781,1241,6.812,1242,6.153,1243,3.69,1244,2.731,1245,4.415,1246,4.415,1247,6.153,1248,6.153,1249,4.415,1250,6.153,1251,4.415,1252,3.604,1253,5.022,1254,3.926,1255,6.297,1256,3.926,1257,3.926,1258,4.415,1259,4.415,1260,5.133,1261,4.415,1262,4.415,1263,6.153,1264,6.153,1265,4.415,1266,4.415,1267,4.415,1268,3.363,1269,3.926,1270,4.415,1271,6.153,1272,6.153,1273,3.487,1274,4.415,1275,4.415,1276,4.415,1277,4.415,1278,4.415,1279,4.415,1280,4.415,1281,2.874,1282,4.415,1283,4.415,1284,4.415,1285,4.415,1286,4.415,1287,4.83,1288,3.926,1289,4.415,1290,3.926,1291,3.604,1292,4.415,1293,4.415,1294,3.926,1295,4.415,1296,4.415,1297,4.415,1298,4.415,1299,4.415,1300,4.415,1301,4.415,1302,3.926,1303,4.415,1304,6.153,1305,4.415,1306,4.415,1307,4.415,1308,4.415,1309,7.66,1310,4.415,1311,4.415,1312,4.415]],["title/injectables/DtoInterceptor.html",[495,1.475,1313,4.177]],["body/injectables/DtoInterceptor.html",[3,0.157,4,0.137,5,0.032,8,0.06,10,0.178,13,1.361,15,0.412,18,2.175,23,1.909,29,6.695,30,0.718,43,1.328,44,0.007,45,0.465,46,0.137,47,1.304,48,4.504,50,1.337,74,0.252,76,1.386,86,0.147,98,2.175,103,1.661,115,0.006,116,0.006,137,2.22,174,1.386,180,3.721,266,4.082,319,2.582,495,2.433,497,2.855,535,1.968,814,3.283,857,2.175,1221,5.286,1244,3.44,1313,7.481,1314,6.27,1315,7.751,1316,7.751,1317,6.892,1318,6.327,1319,6.867,1320,7.751,1321,6.27,1322,6.27,1323,7.751,1324,7.751,1325,7.174,1326,8.788,1327,6.27,1328,7.751,1329,5.118,1330,4.504,1331,6.27,1332,5.576,1333,4.504,1334,6.27,1335,6.27]],["title/interfaces/EntitySaveHandler.html",[327,0.653,1336,2.715]],["body/interfaces/EntitySaveHandler.html",[3,0.079,4,0.069,5,0.016,8,0.067,9,2.365,10,0.126,15,0.206,23,1.179,30,0.29,38,1.546,41,3.034,43,1.393,44,0.007,45,0.513,46,0.189,47,0.805,50,1.69,51,1.157,52,1.885,58,1.674,63,0.565,66,1.64,71,2.243,74,0.238,86,0.201,88,2.688,115,0.004,116,0.003,121,2.144,144,2.11,172,1.692,174,1.863,180,2.298,203,1.27,240,0.757,264,1.461,266,3.116,285,1.811,295,0.771,296,0.964,314,1.386,319,2.56,327,1.228,329,0.983,347,1.116,348,1.324,352,0.899,355,1.695,356,1.235,451,0.717,452,0.911,456,0.877,487,1.824,502,1.64,511,0.717,522,1.096,607,3.173,609,2.023,633,1.749,696,1.749,702,2.506,705,2.673,715,3.139,810,1.182,814,1.64,836,3.305,838,2.586,901,3.042,910,1.749,920,2.767,924,1.64,949,1.692,1005,3.139,1007,3.305,1009,1.879,1030,1.546,1040,1.692,1064,2.586,1065,1.879,1220,1.546,1243,1.879,1244,1.39,1336,2.767,1337,1.879,1338,2.586,1339,2.871,1340,2.506,1341,2.986,1342,2.871,1343,2.986,1344,2.871,1345,2.871,1346,3.244,1347,3.132,1348,4.542,1349,1.749,1350,2.761,1351,1.157,1352,1.879,1353,4.221,1354,1.811,1355,1.64,1356,1.811,1357,1.692,1358,2.871,1359,1.879,1360,4.443,1361,1.879,1362,1.749,1363,3.76,1364,1.64,1365,2.673,1366,1.879,1367,1.879,1368,1.879,1369,1.879,1370,1.811,1371,1.811,1372,1.879,1373,1.879,1374,1.879,1375,1.879,1376,1.879,1377,1.879,1378,1.879,1379,1.879,1380,1.879,1381,1.879,1382,1.879,1383,1.879,1384,1.879,1385,3.358,1386,1.879,1387,2.673,1388,2.767,1389,1.954,1390,2.767,1391,1.692,1392,2.871,1393,1.39,1394,1.954,1395,2.871,1396,5.056,1397,2.506,1398,1.954,1399,1.954,1400,1.954,1401,1.954,1402,1.879,1403,1.879,1404,1.811,1405,1.954,1406,1.954,1407,1.811,1408,1.811,1409,1.591,1410,1.749,1411,1.954,1412,1.811,1413,1.954,1414,1.954,1415,2.673,1416,1.879,1417,5.172,1418,4.61,1419,4.372,1420,1.954,1421,1.879,1422,2.871,1423,1.954,1424,1.954,1425,3.624,1426,1.879,1427,1.954,1428,1.692,1429,2.986,1430,1.954,1431,1.954,1432,1.954,1433,1.954,1434,1.954,1435,1.811,1436,1.879,1437,1.546,1438,1.954,1439,1.954,1440,1.954]],["title/classes/ExchangeTokenPayload.html",[10,0.091,1441,3.578]],["body/classes/ExchangeTokenPayload.html",[3,0.124,4,0.108,5,0.025,8,0.047,10,0.173,12,4.342,15,0.325,16,0.803,30,0.458,41,3.252,42,5.686,44,0.007,46,0.183,47,1.264,58,1.693,63,0.545,71,2.823,74,0.259,76,1.092,86,0.189,98,2.306,115,0.005,116,0.005,118,1.411,174,1.852,203,0.816,240,1.943,276,3.106,291,3.856,451,1.132,452,1.437,460,1.493,511,1.132,520,3.551,522,1.721,542,1.582,575,3.372,576,3.766,602,3.551,605,5.77,606,4.534,608,5.395,610,6.02,611,4.775,614,5.064,615,3.551,620,3.372,630,3.551,634,3.372,657,3.551,658,3.551,784,4.89,789,3.591,804,3.168,805,5.395,812,6.2,813,3.084,857,1.715,991,5.395,1030,2.44,1221,3.372,1355,2.588,1441,5.064,1442,3.766,1443,5.011,1444,6.557,1445,5.426,1446,4.396,1447,4.943,1448,5.426,1449,6.842,1450,3.478,1451,4.342,1452,4.035,1453,4.035,1454,4.058,1455,3.551,1456,4.035,1457,4.035,1458,4.035,1459,4.035,1460,3.766,1461,4.035,1462,5.426,1463,4.035,1464,4.035]],["title/interfaces/ExplorerAction.html",[327,0.653,1365,2.623]],["body/interfaces/ExplorerAction.html",[3,0.078,4,0.068,5,0.016,8,0.075,9,2.359,10,0.125,15,0.204,16,0.574,38,1.53,41,3.02,43,1.354,44,0.007,45,0.524,46,0.2,47,0.522,50,1.633,51,1.145,52,1.882,58,1.723,63,0.565,66,1.623,71,1.848,74,0.237,86,0.2,88,2.683,115,0.004,116,0.003,121,2.139,144,2.107,172,1.675,174,1.79,180,2.28,203,1.265,240,0.75,264,1.457,285,1.792,295,0.763,296,0.954,314,1.415,319,2.155,327,1.226,329,0.973,347,1.108,348,1.31,352,1.31,355,1.681,356,1.222,451,0.71,452,0.901,456,0.868,487,1.812,502,1.623,511,0.71,522,1.088,607,3.162,609,2.007,633,1.731,696,1.731,702,2.486,705,2.651,715,3.119,810,1.17,814,1.623,836,3.891,838,3.768,901,3.022,910,1.731,920,2.745,924,1.623,949,1.675,1005,3.119,1007,3.287,1009,1.859,1030,1.53,1040,1.675,1064,2.566,1065,1.859,1220,1.53,1243,1.859,1244,1.376,1336,1.792,1337,1.859,1338,1.675,1339,1.859,1340,1.623,1341,1.934,1342,1.859,1343,1.934,1344,1.859,1345,1.859,1346,1.731,1348,4.538,1349,1.731,1350,2.907,1351,1.145,1352,1.859,1353,4.263,1354,1.792,1355,1.623,1356,1.792,1357,1.675,1358,2.848,1359,1.859,1360,4.427,1361,1.859,1362,1.731,1363,3.74,1364,1.623,1365,3.223,1366,1.859,1367,1.859,1368,1.859,1369,1.859,1370,1.792,1371,1.792,1372,1.859,1373,1.859,1374,1.859,1375,1.859,1376,1.859,1377,1.859,1378,1.859,1379,1.859,1380,1.859,1381,1.859,1382,1.859,1383,1.859,1384,1.859,1385,3.337,1386,1.859,1387,2.651,1388,2.745,1389,1.934,1390,3.74,1391,2.566,1392,2.848,1393,1.376,1394,1.934,1395,2.848,1396,5.043,1397,2.486,1398,1.934,1399,1.934,1400,1.934,1401,1.934,1402,1.859,1403,1.859,1404,1.792,1405,1.934,1406,1.934,1407,1.792,1408,1.792,1409,1.575,1410,1.731,1411,1.934,1412,1.792,1413,1.934,1414,1.934,1415,2.651,1416,1.859,1417,5.158,1418,4.594,1419,4.352,1420,1.934,1421,1.859,1422,2.848,1423,1.934,1424,1.934,1425,3.601,1426,1.859,1427,1.934,1428,1.675,1429,2.963,1430,1.934,1431,1.934,1432,1.934,1433,1.934,1434,1.934,1435,1.792,1436,1.859,1437,1.53,1438,1.934,1439,1.934,1440,1.934]],["title/entities/ExplorerActionEntity.html",[264,0.72,1465,3.834]],["body/entities/ExplorerActionEntity.html",[3,0.124,4,0.108,5,0.034,8,0.077,10,0.095,13,1.071,15,0.528,16,0.802,30,0.799,44,0.007,45,0.45,46,0.201,58,1.516,61,3.104,63,0.399,74,0.251,81,1.612,86,0.116,87,2.289,115,0.005,116,0.005,182,2.606,218,3.25,264,1.15,267,1.52,295,1.216,314,1.077,352,1.41,403,1.463,456,2.102,459,2.352,460,2.606,462,3.096,465,3.08,487,2.085,493,2.757,525,1.678,526,1.678,527,1.644,528,1.644,529,1.678,530,2.551,531,1.644,532,2.879,533,1.612,534,2.169,535,1.55,536,1.678,537,1.678,538,1.678,539,1.678,540,1.678,541,1.678,542,1.58,543,1.678,544,1.678,545,1.678,546,1.644,547,2.257,548,1.678,549,1.644,550,1.678,551,1.678,552,1.678,553,1.678,554,1.678,555,1.52,556,1.678,557,1.644,558,1.678,836,3.814,838,4.055,850,4.48,851,3.984,852,4.337,853,3.984,855,3.546,856,4.144,857,2.304,858,5.12,862,3.84,863,5.06,867,3.93,868,3.93,872,2.667,874,3.546,878,3.546,952,5.906,962,3.84,1353,2.437,1354,2.854,1364,3.478,1365,3.709,1390,3.84,1393,2.191,1397,2.585,1465,5.422,1466,6.333,1467,4.937,1468,4.53,1469,5.06,1470,5.06,1471,5.906,1472,5.422,1473,3.761,1474,4.937,1475,4.937,1476,4.937,1477,4.937,1478,4.937,1479,4.03,1480,5.476,1481,4.937,1482,3.214,1483,3.08,1484,3.761,1485,4.937,1486,2.757]],["title/interfaces/ExplorerColumn.html",[327,0.653,1363,2.715]],["body/interfaces/ExplorerColumn.html",[3,0.071,4,0.062,5,0.014,8,0.073,9,2.303,10,0.119,15,0.187,16,0.536,38,1.402,41,2.901,43,1.316,44,0.007,45,0.514,46,0.208,47,0.478,50,1.581,51,1.049,52,1.957,58,1.63,63,0.569,66,1.487,71,1.748,74,0.23,86,0.196,88,2.64,115,0.004,116,0.003,121,2.095,144,2.081,172,1.534,174,1.744,180,2.13,203,1.333,240,0.687,264,1.445,285,1.642,295,0.699,296,0.874,314,1.417,319,2.056,327,1.205,329,0.891,347,1.035,348,1.2,352,0.833,355,1.571,356,1.12,451,0.651,452,0.826,456,0.795,487,1.938,502,1.487,511,0.651,522,1.017,607,3.063,609,1.876,633,1.585,696,1.585,702,2.323,705,2.478,715,2.951,810,2.33,814,1.487,836,3.137,838,2.397,901,2.86,910,1.585,920,2.565,924,1.487,949,1.534,1005,2.951,1007,3.137,1009,1.703,1030,3.048,1040,1.534,1064,2.397,1065,1.703,1220,1.402,1243,1.703,1244,1.26,1336,1.642,1337,1.703,1338,1.534,1339,1.703,1340,1.487,1341,1.772,1342,1.703,1343,1.772,1344,1.703,1345,1.703,1346,1.585,1348,4.528,1349,1.585,1350,2.855,1351,1.049,1352,1.703,1353,4.181,1354,1.642,1355,1.487,1356,1.642,1357,1.534,1358,3.703,1359,1.703,1360,4.561,1361,1.703,1362,1.585,1363,3.872,1364,1.487,1365,2.478,1366,1.703,1367,1.703,1368,1.703,1369,1.703,1370,1.642,1371,1.642,1372,3.703,1373,3.703,1374,3.703,1375,3.703,1376,3.703,1377,3.703,1378,3.703,1379,3.703,1380,3.703,1381,3.703,1382,3.703,1383,3.703,1384,3.703,1385,4.289,1386,3.703,1387,3.74,1388,3.569,1389,1.772,1390,2.565,1391,1.534,1392,2.661,1393,1.26,1394,1.772,1395,2.661,1396,4.932,1397,2.323,1398,1.772,1399,1.772,1400,1.772,1401,1.772,1402,1.703,1403,1.703,1404,1.642,1405,1.772,1406,1.772,1407,1.642,1408,1.642,1409,1.443,1410,1.585,1411,1.772,1412,1.642,1413,1.772,1414,1.772,1415,2.478,1416,1.703,1417,5.035,1418,4.45,1419,4.179,1420,1.772,1421,1.703,1422,2.661,1423,1.772,1424,1.772,1425,3.407,1426,1.703,1427,1.772,1428,1.534,1429,2.768,1430,1.772,1431,1.772,1432,1.772,1433,1.772,1434,1.772,1435,1.642,1436,1.703,1437,1.402,1438,1.772,1439,1.772,1440,1.772]],["title/entities/ExplorerColumnEntity.html",[264,0.72,1487,3.578]],["body/entities/ExplorerColumnEntity.html",[3,0.079,4,0.069,5,0.024,8,0.062,10,0.061,13,0.684,15,0.597,16,0.581,30,0.86,44,0.007,45,0.555,46,0.205,52,1.857,58,1.318,61,2.248,63,0.498,74,0.231,81,1.029,86,0.074,87,2.363,115,0.003,116,0.003,182,2.824,203,0.963,218,2.083,264,0.893,267,0.971,295,0.776,314,1.058,319,2.646,332,1.481,403,0.934,456,0.883,459,2.311,460,2.805,461,3.151,462,3.302,465,3.001,487,1.51,492,2.525,493,2.686,525,1.071,526,1.071,527,1.05,528,1.05,529,1.071,530,1.982,531,1.05,532,2.515,533,1.029,534,1.57,535,0.99,536,1.071,537,1.071,538,1.071,539,1.071,540,1.071,541,1.071,542,1.009,543,1.071,544,1.071,545,1.071,546,1.05,547,1.635,548,1.071,549,1.05,550,1.071,551,1.071,552,1.071,553,1.071,554,1.071,555,0.971,556,1.071,557,1.05,558,1.071,810,2.462,827,1.897,842,1.513,846,2.444,847,4.072,850,3.914,851,2.885,852,3.526,853,2.885,855,3.455,856,4.072,857,2.264,858,4.793,862,3.773,863,4.972,867,3.054,868,3.054,869,3.571,872,1.703,874,2.264,878,3.455,904,3.131,945,3.615,1030,2.879,1220,2.374,1348,2.8,1353,2.879,1362,2.686,1363,2.78,1372,3.498,1373,3.498,1374,3.498,1375,3.498,1376,3.498,1377,3.498,1378,3.498,1379,3.498,1380,3.498,1381,3.498,1382,3.498,1383,3.498,1384,3.498,1386,3.498,1387,3.256,1393,1.399,1416,2.885,1466,6.694,1469,3.664,1470,3.664,1472,3.926,1482,2.052,1483,1.967,1484,2.401,1486,1.76,1487,3.664,1488,3.152,1489,3.926,1490,3.455,1491,5.833,1492,5.833,1493,3.152,1494,2.052,1495,3.152,1496,6.201,1497,3.152,1498,3.152,1499,3.152,1500,4.81,1501,3.152,1502,4.81,1503,3.152,1504,6.289,1505,4.81,1506,3.152,1507,4.81,1508,3.152,1509,4.81,1510,3.152,1511,3.152,1512,3.152,1513,4.81,1514,3.152,1515,4.81,1516,3.152,1517,4.81,1518,3.152,1519,4.81,1520,3.152,1521,3.152,1522,4.81,1523,3.152,1524,4.81,1525,3.152,1526,5.327,1527,3.152,1528,4.688,1529,4.277,1530,3.152,1531,2.573,1532,3.152,1533,3.152,1534,3.152,1535,2.573,1536,3.152,1537,3.152,1538,3.152,1539,2.573,1540,5.552]],["title/interfaces/ExplorerColumnRenderer.html",[327,0.653,1385,2.715]],["body/interfaces/ExplorerColumnRenderer.html",[3,0.078,4,0.068,5,0.016,8,0.076,9,2.363,10,0.125,15,0.205,16,0.576,38,1.54,41,3.029,43,1.357,44,0.007,45,0.524,46,0.2,47,0.525,50,1.636,51,1.152,52,1.884,58,1.725,63,0.565,66,1.633,71,1.855,74,0.237,86,0.201,88,2.686,115,0.004,116,0.003,121,2.142,144,2.108,172,1.685,174,1.793,180,2.291,203,1.268,240,0.754,264,1.455,285,1.803,295,0.768,296,0.961,314,1.385,319,2.162,327,1.227,329,0.979,347,1.113,348,1.319,352,1.314,355,1.69,356,1.23,451,0.715,452,0.907,456,0.874,487,2.038,502,1.633,511,0.715,522,1.093,607,3.169,609,2.017,633,1.742,696,1.742,702,2.498,705,2.664,715,3.131,810,1.177,814,1.633,836,3.9,838,2.578,901,3.034,910,1.742,920,2.759,924,1.633,949,1.685,1005,3.131,1007,3.298,1009,1.871,1030,1.54,1040,1.685,1064,2.578,1065,1.871,1220,1.54,1243,1.871,1244,1.385,1336,1.803,1337,1.871,1338,1.685,1339,1.871,1340,1.633,1341,1.946,1342,1.871,1343,1.946,1344,1.871,1345,1.871,1346,1.742,1348,4.53,1349,1.742,1350,2.911,1351,1.152,1352,1.871,1353,4.269,1354,1.803,1355,1.633,1356,1.803,1357,1.685,1358,2.862,1359,1.871,1360,4.437,1361,1.871,1362,1.742,1363,3.752,1364,1.633,1365,2.664,1366,1.871,1367,1.871,1368,1.871,1369,1.871,1370,1.803,1371,1.803,1372,1.871,1373,1.871,1374,1.871,1375,1.871,1376,1.871,1377,1.871,1378,1.871,1379,1.871,1380,1.871,1381,1.871,1382,1.871,1383,1.871,1384,1.871,1385,3.752,1386,1.871,1387,2.664,1388,2.759,1389,2.977,1390,3.752,1391,1.685,1392,2.862,1393,1.385,1394,1.946,1395,2.862,1396,5.051,1397,2.498,1398,1.946,1399,1.946,1400,1.946,1401,1.946,1402,1.871,1403,1.871,1404,1.803,1405,1.946,1406,1.946,1407,1.803,1408,1.803,1409,1.585,1410,1.742,1411,1.946,1412,1.803,1413,1.946,1414,1.946,1415,2.664,1416,1.871,1417,5.166,1418,4.604,1419,4.364,1420,1.946,1421,1.871,1422,2.862,1423,1.946,1424,1.946,1425,3.615,1426,1.871,1427,1.946,1428,1.685,1429,2.977,1430,1.946,1431,1.946,1432,1.946,1433,1.946,1434,1.946,1435,1.803,1436,1.871,1437,1.54,1438,1.946,1439,1.946,1440,1.946]],["title/entities/ExplorerColumnRendererEntity.html",[264,0.72,1504,3.834]],["body/entities/ExplorerColumnRendererEntity.html",[3,0.127,4,0.111,5,0.034,8,0.077,10,0.098,13,1.101,15,0.5,16,0.817,30,0.783,43,1.159,44,0.007,45,0.456,46,0.2,58,1.536,61,3.16,63,0.406,74,0.253,81,1.656,86,0.119,87,2.221,115,0.005,116,0.005,182,2.451,218,3.294,264,1.295,267,2.603,295,1.249,327,0.941,352,1.429,403,1.503,456,1.42,459,2.394,460,2.553,462,3.13,487,2.895,525,1.723,526,1.723,527,1.689,528,1.689,529,1.723,530,2.586,531,1.689,532,2.898,533,1.656,534,2.208,535,1.592,536,1.723,537,1.723,538,1.723,539,1.723,540,1.723,541,1.723,542,1.623,543,1.723,544,1.723,545,1.723,546,1.689,547,2.298,548,1.723,549,1.689,550,1.723,551,1.723,552,1.723,553,1.723,554,1.723,555,1.561,556,1.723,557,1.689,558,1.723,836,3.865,850,4.51,851,4.056,852,4.384,853,4.056,855,3.642,856,4.219,857,2.345,858,5.189,867,3.983,868,3.983,872,2.74,874,3.642,878,3.642,1353,2.503,1354,2.931,1385,3.909,1390,3.909,1393,2.251,1397,2.655,1466,6.246,1473,3.863,1479,4.139,1480,5.535,1482,3.301,1483,3.164,1484,3.863,1486,2.831,1504,5.52,1541,5.071,1542,6.762,1543,6.762,1544,5.071,1545,5.071,1546,5.071,1547,5.071,1548,5.071,1549,5.071]],["title/modules/ExplorerModule.html",[511,1.076,1550,3.578]],["body/modules/ExplorerModule.html",[3,0.135,4,0.118,5,0.036,8,0.051,10,0.104,13,1.167,18,1.865,23,1.324,24,2.541,30,0.651,43,0.922,44,0.007,45,0.323,46,0.118,47,0.905,50,1.498,74,0.27,76,1.188,81,1.756,86,0.126,93,2.074,103,1.424,115,0.005,116,0.005,182,1.624,183,1.624,267,1.656,403,1.593,451,1.61,511,2.063,513,2.273,517,3.571,518,4.576,519,3.5,522,1.794,524,4.697,525,1.827,526,1.827,527,1.791,528,1.791,529,1.827,530,2.661,531,1.791,532,2.94,533,1.756,534,2.295,535,1.688,536,1.827,537,1.827,538,1.827,539,1.827,540,1.827,541,1.827,542,1.721,543,1.827,544,1.827,545,1.827,546,1.791,547,2.389,548,1.827,549,1.791,550,1.827,551,1.827,552,1.827,553,1.827,554,1.827,555,1.656,556,1.827,557,1.791,558,1.827,567,3.285,568,3.354,577,2.513,588,2.448,589,2.654,590,3.108,591,3.862,592,2.448,709,2.815,891,3.5,1015,5.354,1220,4.099,1333,3.862,1404,4.801,1407,4.801,1408,4.063,1409,3.571,1410,3.924,1482,3.5,1487,5.354,1528,3.862,1535,4.389,1550,5.965,1551,5.377,1552,7.029,1553,7.029,1554,5.377,1555,7.831,1556,8.617,1557,5.377,1558,4.389,1559,5.377,1560,7.029,1561,4.781,1562,5.377,1563,5.377]],["title/classes/ExplorerService.html",[10,0.091,1407,2.715]],["body/classes/ExplorerService.html",[3,0.063,4,0.055,5,0.013,8,0.076,9,2.601,10,0.122,15,0.165,23,0.99,30,0.681,38,1.984,41,3.367,43,1.519,44,0.007,45,0.538,46,0.191,47,1.236,50,1.797,51,0.925,52,1.822,58,1.703,63,0.567,66,2.104,71,1.611,74,0.22,86,0.19,88,2.574,115,0.004,116,0.003,118,0.715,121,2.029,144,2.147,172,2.171,174,1.863,180,2.764,184,2.851,203,1.336,240,0.606,264,1.475,285,2.323,295,0.617,296,0.772,314,1.406,319,2.354,327,1.159,347,0.937,348,1.059,352,0.755,355,1.423,356,0.988,451,0.574,452,0.729,456,1.126,487,1.58,502,2.104,511,0.574,522,1.153,607,3.439,609,2.434,633,1.399,696,1.399,702,3.015,705,3.215,715,3.635,810,0.946,814,1.312,836,3.418,838,2.171,901,2.635,910,1.399,920,3.328,924,2.104,949,2.171,1005,3.405,1007,3.732,1009,2.411,1030,1.237,1040,2.171,1064,2.719,1065,1.503,1220,1.984,1243,2.411,1244,1.784,1336,1.449,1337,1.503,1338,1.354,1339,1.503,1340,1.312,1341,1.563,1342,1.503,1343,1.563,1344,1.503,1345,1.503,1346,1.399,1348,4.574,1349,1.399,1350,2.59,1351,0.925,1352,1.503,1353,4.113,1354,1.449,1355,1.312,1356,1.449,1357,1.354,1358,2.411,1359,1.503,1360,4.495,1361,1.503,1362,1.399,1363,3.328,1364,1.312,1365,2.244,1366,1.503,1367,1.503,1368,1.503,1369,1.503,1370,1.449,1371,1.449,1372,1.503,1373,1.503,1374,1.503,1375,1.503,1376,1.503,1377,1.503,1378,1.503,1379,1.503,1380,1.503,1381,1.503,1382,1.503,1383,1.503,1384,1.503,1385,2.909,1386,1.503,1387,2.244,1388,2.323,1389,1.563,1390,2.323,1391,1.354,1392,3.018,1393,1.112,1394,1.563,1395,3.018,1396,5.314,1397,2.104,1398,1.563,1399,1.563,1400,1.563,1401,1.563,1402,1.503,1403,1.503,1404,1.449,1405,1.563,1406,1.563,1407,2.323,1408,2.323,1409,2.042,1410,2.244,1411,2.508,1412,2.323,1413,2.508,1414,3.592,1415,3.215,1416,2.411,1417,5.493,1418,4.997,1419,4.851,1420,3.139,1421,2.411,1422,3.453,1423,3.139,1424,3.139,1425,4.197,1426,2.411,1427,2.508,1428,2.171,1429,3.592,1430,2.508,1431,2.508,1432,3.139,1433,3.139,1434,2.508,1435,2.323,1436,2.411,1437,1.984,1438,3.592,1439,2.508,1440,2.508,1564,4.019,1565,2.506,1566,2.506,1567,2.506,1568,2.506,1569,2.506,1570,2.506,1571,2.506,1572,2.506,1573,2.506,1574,2.506,1575,2.506,1576,2.506,1577,2.506]],["title/interfaces/ExplorerTab.html",[327,0.653,1388,2.715]],["body/interfaces/ExplorerTab.html",[3,0.078,4,0.068,5,0.016,8,0.067,9,2.362,10,0.125,15,0.205,16,0.576,38,1.539,41,3.028,43,1.357,44,0.007,45,0.524,46,0.196,47,0.524,50,1.636,51,1.151,52,1.884,58,1.725,63,0.565,66,1.632,71,1.854,74,0.237,86,0.201,88,2.686,115,0.004,116,0.003,121,2.142,144,2.108,172,1.684,174,1.793,180,2.289,203,1.367,240,0.754,264,1.458,285,1.802,295,0.768,296,0.96,314,1.417,319,2.161,327,1.227,329,0.979,347,1.112,348,1.318,352,0.896,355,2.476,356,1.229,451,0.714,452,0.906,456,0.873,487,1.818,502,1.632,511,0.714,522,1.093,607,3.168,609,2.016,633,1.74,696,1.74,702,2.497,705,2.663,715,3.129,810,1.176,814,1.632,836,3.297,838,3.778,901,3.033,910,1.74,920,2.757,924,1.632,949,1.684,1005,3.129,1007,3.297,1009,1.87,1030,1.539,1040,1.684,1064,2.577,1065,1.87,1220,1.539,1243,1.87,1244,1.383,1336,1.802,1337,1.87,1338,1.684,1339,1.87,1340,1.632,1341,1.945,1342,1.87,1343,1.945,1344,1.87,1345,1.87,1346,1.74,1348,4.568,1349,1.74,1350,2.845,1351,1.151,1352,1.87,1353,4.268,1354,1.802,1355,1.632,1356,1.802,1357,1.684,1358,2.86,1359,1.87,1360,4.69,1361,1.87,1362,1.74,1363,3.751,1364,1.632,1365,2.663,1366,1.87,1367,1.87,1368,1.87,1369,1.87,1370,1.802,1371,1.802,1372,1.87,1373,1.87,1374,1.87,1375,1.87,1376,1.87,1377,1.87,1378,1.87,1379,1.87,1380,1.87,1381,1.87,1382,1.87,1383,1.87,1384,1.87,1385,3.348,1386,1.87,1387,3.234,1388,3.348,1389,1.945,1390,2.757,1391,1.684,1392,2.86,1393,1.383,1394,1.945,1395,2.86,1396,5.05,1397,2.497,1398,1.945,1399,1.945,1400,1.945,1401,1.945,1402,1.87,1403,1.87,1404,1.802,1405,1.945,1406,1.945,1407,1.802,1408,1.802,1409,1.584,1410,1.74,1411,1.945,1412,1.802,1413,1.945,1414,1.945,1415,2.663,1416,1.87,1417,5.165,1418,4.603,1419,4.362,1420,1.945,1421,1.87,1422,2.86,1423,1.945,1424,1.945,1425,3.614,1426,1.87,1427,1.945,1428,1.684,1429,2.975,1430,1.945,1431,1.945,1432,1.945,1433,1.945,1434,1.945,1435,1.802,1436,1.87,1437,1.539,1438,1.945,1439,1.945,1440,1.945]],["title/entities/ExplorerTabEntity.html",[264,0.72,1526,3.834]],["body/entities/ExplorerTabEntity.html",[3,0.129,4,0.113,5,0.035,8,0.049,10,0.099,13,1.116,15,0.537,16,0.825,30,0.787,43,1.17,44,0.007,45,0.46,46,0.186,58,1.379,61,2.404,63,0.41,74,0.255,81,1.68,86,0.121,87,2.23,115,0.005,116,0.005,182,2.465,203,1.266,218,2.227,264,1.301,267,1.584,295,1.267,314,1.107,319,2.274,327,0.95,355,2.713,403,1.524,456,1.441,459,2.417,460,2.566,462,2.633,465,3.209,487,1.615,493,2.872,525,1.748,526,1.748,527,1.713,528,1.713,529,1.748,530,2.604,531,1.713,532,2.909,533,1.68,534,2.229,535,1.615,536,1.748,537,1.748,538,1.748,539,1.748,540,1.748,541,1.748,542,1.647,543,1.748,544,1.748,545,1.748,546,1.713,547,2.32,548,1.748,549,1.713,550,1.748,551,1.748,552,1.748,553,1.748,554,1.748,555,1.584,556,1.748,557,1.713,558,1.748,810,1.941,838,4.14,842,2.47,846,2.614,850,4.147,851,3.085,852,3.688,853,3.085,855,3.695,856,4.259,857,2.368,858,5.226,862,3.946,863,5.201,867,3.574,868,3.574,869,3.469,872,2.779,874,3.695,878,3.695,1348,3.678,1353,2.539,1388,3.946,1393,2.283,1466,6.271,1471,6.071,1482,3.349,1483,3.209,1484,3.919,1486,2.872,1490,4.904,1494,3.349,1526,5.573,1528,5.863,1529,6.071,1535,4.199,1578,5.144,1579,6.827,1580,5.144,1581,5.144,1582,5.144,1583,5.144,1584,5.144,1585,5.144]],["title/interfaces/ExplorerTarget.html",[327,0.653,1360,2.715]],["body/interfaces/ExplorerTarget.html",[3,0.074,4,0.065,5,0.015,8,0.074,9,2.331,10,0.122,15,0.195,16,0.555,38,1.464,41,2.96,43,1.335,44,0.007,45,0.519,46,0.203,47,0.945,50,1.607,51,1.095,52,1.925,58,1.65,63,0.565,66,1.553,71,1.798,74,0.234,86,0.198,88,2.662,115,0.004,116,0.003,121,2.117,144,2.094,172,1.603,174,1.767,180,2.204,203,1.245,240,0.717,264,1.451,285,1.715,295,0.73,296,0.913,314,1.402,319,2.105,327,1.215,329,0.931,347,1.474,348,1.254,352,0.862,355,2.421,356,2.493,451,0.68,452,0.863,456,0.831,487,1.763,502,1.553,511,0.68,522,1.052,607,3.112,609,1.94,633,1.656,696,1.656,702,2.403,705,2.563,715,3.034,810,1.119,814,1.553,836,3.212,838,2.48,901,3.947,910,1.656,920,2.654,924,1.553,949,1.603,1005,3.034,1007,3.212,1009,1.779,1030,1.464,1040,1.603,1064,2.48,1065,1.779,1220,1.464,1243,1.779,1244,1.317,1336,1.715,1337,1.779,1338,1.603,1339,1.779,1340,1.553,1341,1.851,1342,1.779,1343,1.851,1344,1.779,1345,1.779,1346,1.656,1348,4.547,1349,1.656,1350,2.881,1351,1.095,1352,1.779,1353,4.222,1354,1.715,1355,1.553,1356,1.715,1357,1.603,1358,2.753,1359,1.779,1360,4.503,1361,3.791,1362,3.529,1363,4.179,1364,3.31,1365,3.529,1366,3.791,1367,3.791,1368,3.791,1369,3.791,1370,3.654,1371,3.654,1372,1.779,1373,1.779,1374,1.779,1375,1.779,1376,1.779,1377,1.779,1378,1.779,1379,1.779,1380,1.779,1381,1.779,1382,1.779,1383,1.779,1384,1.779,1385,3.246,1386,1.779,1387,2.563,1388,2.654,1389,1.851,1390,2.654,1391,1.603,1392,2.753,1393,1.317,1394,1.851,1395,2.753,1396,4.988,1397,2.403,1398,1.851,1399,1.851,1400,1.851,1401,1.851,1402,1.779,1403,1.779,1404,1.715,1405,1.851,1406,1.851,1407,1.715,1408,1.715,1409,1.507,1410,1.656,1411,1.851,1412,1.715,1413,1.851,1414,1.851,1415,2.563,1416,1.779,1417,5.096,1418,4.522,1419,4.265,1420,1.851,1421,1.779,1422,2.753,1423,1.851,1424,1.851,1425,3.503,1426,1.779,1427,1.851,1428,1.603,1429,2.864,1430,1.851,1431,1.851,1432,1.851,1433,1.851,1434,1.851,1435,1.715,1436,1.779,1437,1.464,1438,1.851,1439,1.851,1440,1.851]],["title/entities/ExplorerTargetEntity.html",[264,0.72,1528,3.374]],["body/entities/ExplorerTargetEntity.html",[3,0.098,4,0.085,5,0.029,8,0.076,10,0.075,13,0.848,15,0.556,16,0.681,30,0.844,44,0.007,45,0.542,46,0.199,52,1.739,58,1.139,63,0.481,74,0.248,81,1.275,86,0.092,87,2.429,115,0.004,116,0.004,182,2.554,264,1.178,267,1.202,295,0.962,319,1.878,332,1.736,356,2.61,403,1.157,456,1.094,459,2.567,460,2.751,462,3.453,487,1.226,492,2.442,525,1.327,526,1.327,527,1.301,528,1.301,529,1.327,530,2.25,531,1.301,532,2.697,533,1.275,534,1.841,535,1.226,536,1.327,537,1.327,538,1.327,539,1.327,540,1.327,541,1.327,542,1.25,543,1.327,544,1.327,545,1.327,546,1.301,547,1.917,548,1.327,549,1.301,550,1.327,551,1.327,552,1.327,553,1.327,554,1.327,555,1.202,556,1.327,557,1.301,558,1.327,810,2.128,827,2.224,842,2.707,843,3.26,845,3.064,846,1.984,847,3.518,850,4.197,851,3.382,852,4.329,853,3.382,867,4.195,868,4.195,869,2.865,872,2.11,901,4.325,902,5.043,910,2.18,945,2.328,1220,2.784,1348,3.178,1352,2.342,1353,2.784,1360,3.26,1361,3.97,1362,3.696,1364,3.466,1365,3.696,1366,3.97,1367,3.97,1368,3.97,1369,3.97,1370,3.827,1371,3.827,1393,1.733,1412,3.26,1465,4.604,1466,6.586,1469,4.296,1470,5.523,1472,4.604,1473,2.975,1482,2.542,1483,2.436,1486,2.18,1487,5.523,1490,4.051,1496,5.523,1528,4.051,1540,4.945,1561,3.473,1586,3.905,1587,5.015,1588,6.62,1589,3.905,1590,3.905,1591,3.905,1592,3.905,1593,3.188,1594,4.604,1595,5.64,1596,3.905,1597,5.64,1598,3.905,1599,5.64,1600,3.905,1601,5.64,1602,3.905,1603,5.64,1604,3.905,1605,3.905,1606,3.905,1607,3.905,1608,5.64,1609,3.905,1610,3.905,1611,4.604,1612,3.188,1613,3.905,1614,3.905]],["title/interfaces/File.html",[5,0.024,327,0.653]],["body/interfaces/File.html",[3,0.101,4,0.088,5,0.046,8,0.038,10,0.13,15,0.264,16,0.695,44,0.007,45,0.44,46,0.197,52,1.382,63,0.599,74,0.202,86,0.204,115,0.004,116,0.004,121,2.175,203,1.471,240,1.879,279,2.241,296,1.236,314,1.565,327,1.295,328,3.449,329,1.26,330,2.504,331,3.211,332,2.743,333,2.504,334,2.504,335,3.449,336,3.449,337,2.504,338,3.449,339,3.325,340,2.504,341,2.504,342,2.504,343,2.504,344,2.407,345,2.504,346,2.504,347,1.942,348,1.696,349,3.107,350,3.011,351,2.32,352,1.379,353,3.258,354,3.624,355,2.599,356,2.895,357,4.403,358,3.179,359,2.445,360,2.504,361,1.696,362,3.325,363,3.449,364,3.325,365,3.449,366,3.011,367,3.449,368,3.449,369,3.744,370,3.211,371,3.449,372,2.504,373,2.374,374,2.374,375,2.504,376,2.504,377,2.504,378,2.504,379,2.504,380,2.504,381,2.168,382,2.504,383,2.504,384,2.504,385,2.504,386,2.504,387,2.504,388,2.504,389,2.504,390,2.504,391,2.504,392,2.504,393,2.504,394,2.504,395,2.504,396,2.504,397,2.504,398,2.504,399,2.613,400,2.613,401,2.613,402,2.613,403,1.189,404,2.613,405,2.613,406,2.613,407,2.613,408,2.613,409,2.613,410,2.613,411,2.613,412,2.613,413,2.613,414,2.613,415,2.613,416,2.613,417,2.613,418,2.613,419,2.613,420,2.613,421,2.613,422,2.613,423,3.588,424,2.613,425,2.613,426,2.613,427,2.613,428,2.613,429,2.613,430,2.613,431,2.613,432,2.613,433,2.613,434,2.613,435,2.613,436,2.613,437,2.613,438,2.613,439,2.613,440,2.613,441,2.613,442,2.613,443,2.504,444,2.504,445,2.504,446,2.504,447,2.504,448,2.504,449,2.504,450,2.504,451,0.919,452,1.167,453,2.101,454,2.407]],["title/entities/FileEntity.html",[264,0.72,1615,3.204]],["body/entities/FileEntity.html",[3,0.124,4,0.108,5,0.041,8,0.047,10,0.128,13,1.074,15,0.528,16,0.804,30,0.851,44,0.007,45,0.503,46,0.206,52,1.368,63,0.518,74,0.241,86,0.116,87,2.41,115,0.005,116,0.005,174,1.47,182,2.01,203,1.241,240,1.609,264,1.151,295,1.219,314,1.303,319,2.876,332,2.314,352,1.412,353,3.336,354,3.71,355,2.661,356,2.964,357,4.508,359,2.503,456,1.386,459,2.356,460,2.773,462,3.504,477,2.515,487,2.089,488,3.284,489,2.763,491,2.515,492,3.254,493,2.763,810,1.868,842,2.376,843,2.861,845,3.729,846,3.38,847,5.014,852,4.06,865,5.068,869,3.819,904,4.331,945,2.747,968,2.51,1540,3.376,1612,4.04,1615,4.538,1616,4.95,1617,6.653,1618,4.95,1619,4.95,1620,4.95,1621,5.232,1622,4.04,1623,5.431,1624,4.04,1625,4.95,1626,4.95,1627,4.95,1628,4.95,1629,4.401,1630,4.95,1631,4.04,1632,4.95,1633,3.376,1634,4.538,1635,4.538,1636,4.95,1637,4.538,1638,5.431,1639,5.431,1640,5.431,1641,3.376,1642,4.95,1643,4.04]],["title/classes/FileManager.html",[10,0.091,349,2.538]],["body/classes/FileManager.html",[3,0.128,4,0.112,5,0.047,8,0.049,9,2.793,10,0.164,15,0.336,23,1.674,30,0.824,43,1.524,44,0.007,45,0.554,46,0.195,47,1.496,50,1.896,52,1.57,63,0.566,74,0.229,86,0.16,115,0.005,116,0.005,118,1.458,121,1.915,144,2.181,184,3.081,203,1.345,314,1.543,332,1.574,349,3.672,350,2.676,352,1.529,489,2.853,522,1.75,701,4.425,1037,3.327,1273,3.706,1615,3.486,1621,3.327,1641,3.486,1644,4.545,1645,3.263,1646,6.234,1647,5.549,1648,6.045,1649,5.549,1650,5.549,1651,6.045,1652,4.545,1653,3.77,1654,6.234,1655,3.88,1656,5.111,1657,3.454,1658,5.111,1659,5.549,1660,5.111,1661,3.454,1662,5.111,1663,3.454,1664,5.111,1665,5.549,1666,5.111,1667,3.454,1668,5.111,1669,3.893,1670,4.172,1671,4.172,1672,4.172]],["title/classes/FileMd.html",[10,0.091,350,2.459]],["body/classes/FileMd.html",[3,0.153,4,0.134,5,0.047,8,0.058,9,2.773,10,0.173,15,0.402,23,1.879,30,0.566,43,1.048,44,0.007,45,0.458,46,0.134,47,1.029,50,1.303,52,1.257,63,0.556,74,0.249,86,0.179,115,0.005,116,0.005,118,1.745,121,2.086,144,2.166,184,2.466,314,1.453,332,2.349,349,3.303,350,3.995,352,1.148,489,3.414,522,1.905,1037,5.415,1273,3.965,1615,4.17,1621,3.98,1641,4.17,1644,5.437,1645,2.935,1646,4.991,1653,3.018,1654,4.991,1655,3.106,1657,3.106,1659,4.991,1661,3.106,1663,3.106,1665,4.991,1667,3.106,1669,4.658,1670,4.991,1671,6.79,1672,6.228,1673,5.437,1674,6.114]],["title/interfaces/FileMetadata.html",[327,0.653,358,2.034]],["body/interfaces/FileMetadata.html",[3,0.101,4,0.088,5,0.045,8,0.038,10,0.13,15,0.264,16,0.694,44,0.007,45,0.241,46,0.197,52,0.824,63,0.599,74,0.201,86,0.204,115,0.004,116,0.004,121,2.175,203,1.471,240,1.625,279,4.097,296,1.234,314,1.559,327,1.295,328,4.401,329,1.258,330,2.501,331,4.337,332,2.67,333,2.501,334,2.501,335,3.447,336,3.447,337,2.501,338,3.447,339,3.322,340,2.501,341,2.501,342,2.501,343,2.501,344,2.404,345,2.501,346,2.501,347,1.567,348,1.694,349,3.105,350,3.009,351,2.317,352,0.753,353,1.779,354,1.979,355,1.419,356,1.581,357,2.404,358,2.909,359,1.335,360,4.578,361,3.101,362,4.49,363,4.401,364,4.49,365,4.401,366,4.067,367,4.401,368,4.659,369,4.777,370,4.337,371,4.401,372,2.501,373,2.372,374,2.372,375,2.501,376,2.501,377,2.501,378,2.501,379,2.501,380,2.501,381,2.166,382,2.501,383,2.501,384,2.501,385,2.501,386,2.501,387,2.501,388,2.501,389,2.501,390,2.501,391,2.501,392,2.501,393,2.501,394,2.501,395,2.501,396,2.501,397,2.501,398,2.501,399,2.61,400,2.61,401,2.61,402,2.61,403,1.188,404,2.61,405,2.61,406,2.61,407,2.61,408,2.61,409,2.61,410,2.61,411,2.61,412,2.61,413,2.61,414,2.61,415,2.61,416,2.61,417,2.61,418,2.61,419,2.61,420,2.61,421,2.61,422,2.61,423,3.585,424,2.61,425,2.61,426,2.61,427,2.61,428,2.61,429,2.61,430,2.61,431,2.61,432,2.61,433,2.61,434,2.61,435,2.61,436,2.61,437,2.61,438,2.61,439,2.61,440,2.61,441,2.61,442,2.61,443,2.501,444,2.501,445,2.501,446,2.501,447,2.501,448,2.501,449,2.501,450,2.501,451,0.918,452,1.166,453,2.099,454,2.404]],["title/entities/FileMetadataEntity.html",[264,0.72,1621,3.058]],["body/entities/FileMetadataEntity.html",[3,0.113,4,0.098,5,0.045,8,0.043,10,0.087,13,0.976,15,0.296,16,0.753,30,0.835,44,0.007,46,0.197,63,0.503,74,0.263,86,0.106,87,2.438,115,0.004,116,0.004,203,1.181,264,1.095,279,3.992,295,1.107,314,1.01,319,3.059,331,4.311,332,1.918,358,2.698,360,4.461,361,3.022,362,4.463,364,4.463,366,4.042,368,4.63,370,4.311,455,5.881,456,1.259,458,3.066,459,2.206,460,2.722,462,3.235,463,3.67,477,2.284,483,3.229,485,3.425,487,1.411,488,3.076,489,2.51,491,2.284,492,3.096,852,5.124,865,5.447,904,5.979,1558,5.086,1621,4.056,1622,6.848,1623,7.497,1624,6.848,1638,7.021,1639,7.021,1641,5.722,1675,9.106,1676,3.998,1677,6.865,1678,3.998,1679,5.881,1680,4.496,1681,4.496,1682,5.881,1683,4.496,1684,5.881,1685,4.496,1686,5.881,1687,4.496,1688,4.496]],["title/injectables/FileMetadataService.html",[495,1.475,1689,3.834]],["body/injectables/FileMetadataService.html",[3,0.101,4,0.055,5,0.046,8,0.064,10,0.048,15,0.164,16,0.695,23,0.988,24,2.738,25,2.538,30,0.583,43,1.152,44,0.007,45,0.378,46,0.147,47,1.188,50,1.505,51,0.923,58,1.426,63,0.424,66,3.843,74,0.255,76,0.552,86,0.059,87,1.024,88,2.287,89,2.695,93,2.428,98,2.626,103,2.006,115,0.003,116,0.003,124,2.167,144,0.919,166,4.583,167,4.192,174,1.485,183,1.517,184,1.008,212,1.499,218,1.737,219,1.559,220,1.795,240,0.604,247,1.445,300,3.274,312,2.611,319,2.588,331,3.515,332,2.648,350,3.01,351,1.445,353,3.361,366,3.01,370,3.515,398,1.559,455,3.827,495,1.259,497,1.138,499,1.874,502,2.1,517,1.27,522,0.919,607,1.656,609,2.84,646,1.2,691,1.705,693,3.056,820,2.406,862,2.319,933,1.499,954,3.274,969,3.056,1037,5.058,1268,1.904,1269,2.223,1273,4.032,1281,2.611,1621,5.933,1641,4.816,1670,2.04,1671,3.274,1672,6.6,1673,3.567,1677,3.567,1679,3.056,1682,3.056,1684,3.056,1686,3.056,1689,3.274,1690,6.295,1691,2.5,1692,3.567,1693,4.011,1694,4.011,1695,4.011,1696,4.011,1697,2.5,1698,4.011,1699,2.5,1700,7.339,1701,4.011,1702,2.5,1703,4.011,1704,2.5,1705,4.011,1706,2.5,1707,4.011,1708,3.274,1709,3.567,1710,5.991,1711,4.011,1712,4.011,1713,2.5,1714,2.223,1715,3.567,1716,4.467,1717,2.5,1718,2.04,1719,2.5,1720,2.5,1721,2.5,1722,2.5,1723,2.5,1724,2.5,1725,2.5,1726,2.5,1727,2.5,1728,4.011,1729,2.5,1730,2.5,1731,2.5,1732,2.5,1733,2.5,1734,2.5,1735,2.5,1736,2.5,1737,2.5,1738,2.5,1739,2.5,1740,2.5,1741,2.5,1742,2.5,1743,4.011,1744,2.5,1745,2.5,1746,2.5,1747,2.04,1748,2.5,1749,2.5,1750,2.5,1751,4.011,1752,2.5,1753,2.5,1754,4.011,1755,4.011,1756,4.011,1757,4.011,1758,4.011,1759,2.5,1760,4.011,1761,2.5,1762,4.011,1763,2.5,1764,4.011,1765,2.5,1766,4.011,1767,2.5,1768,4.011,1769,2.5,1770,2.5,1771,2.5,1772,2.5,1773,2.5,1774,2.5,1775,2.5,1776,2.5,1777,2.5,1778,2.5,1779,2.5,1780,2.5,1781,2.5,1782,2.5,1783,2.5,1784,2.5,1785,2.5,1786,2.5,1787,2.5,1788,2.5,1789,2.5,1790,2.5,1791,2.5,1792,2.5,1793,2.5,1794,4.011,1795,2.5,1796,2.5,1797,2.5,1798,2.5,1799,2.5,1800,2.5,1801,2.5,1802,2.5,1803,2.5,1804,2.5,1805,2.5,1806,2.5,1807,2.5,1808,2.5,1809,2.5,1810,2.5,1811,2.5,1812,2.5,1813,2.5,1814,2.5,1815,2.5,1816,2.5,1817,2.5,1818,2.5,1819,4.011,1820,2.5,1821,2.5,1822,2.5,1823,2.5,1824,2.5,1825,2.5,1826,2.04,1827,2.5,1828,4.011,1829,4.011,1830,4.011,1831,4.011,1832,4.011,1833,2.5,1834,2.5,1835,2.5,1836,2.5,1837,2.5,1838,2.5,1839,4.011,1840,2.5,1841,2.5,1842,2.5,1843,2.5,1844,2.5,1845,2.5,1846,2.5,1847,2.5,1848,2.5,1849,2.5,1850,2.5,1851,2.5,1852,2.5,1853,2.5,1854,2.5,1855,2.5,1856,2.5,1857,2.5,1858,2.5,1859,2.5,1860,2.5,1861,2.5,1862,2.5,1863,4.011,1864,2.5,1865,2.5,1866,4.011,1867,2.5,1868,2.5,1869,2.5,1870,2.5,1871,2.5,1872,2.5,1873,4.011,1874,2.5,1875,3.567,1876,4.011,1877,5.749,1878,2.5,1879,2.5,1880,2.5,1881,2.5,1882,2.5,1883,2.5,1884,2.5,1885,4.011,1886,2.5,1887,2.5,1888,2.5,1889,2.5,1890,4.011,1891,2.5,1892,2.5,1893,2.5,1894,2.5,1895,2.5,1896,2.5,1897,2.5,1898,2.5,1899,2.5,1900,2.5,1901,2.5,1902,2.5,1903,2.5,1904,2.5,1905,2.5,1906,2.5,1907,2.5,1908,2.5,1909,2.5,1910,2.5,1911,2.5,1912,2.5,1913,2.5,1914,2.5,1915,2.5,1916,2.5,1917,2.5,1918,2.5,1919,2.5,1920,5.024,1921,5.024,1922,2.5,1923,2.5,1924,2.5,1925,2.5,1926,2.5,1927,2.5,1928,2.5,1929,2.5,1930,2.5,1931,2.5,1932,2.5,1933,2.5,1934,2.5,1935,2.5,1936,2.5,1937,2.5,1938,2.5,1939,2.5,1940,2.5,1941,2.5,1942,2.5,1943,2.5,1944,2.5,1945,2.5,1946,2.5,1947,2.5,1948,2.5,1949,2.5,1950,2.5,1951,2.5,1952,2.5,1953,2.5,1954,2.5,1955,2.5,1956,2.5,1957,2.5,1958,2.5,1959,2.5,1960,2.5,1961,2.5,1962,2.5,1963,2.5,1964,2.5,1965,2.5,1966,2.5,1967,2.5,1968,2.5,1969,2.5,1970,2.5,1971,2.5,1972,2.5,1973,2.5,1974,2.5,1975,2.5,1976,2.5,1977,2.5,1978,2.5,1979,2.5,1980,2.5,1981,2.5,1982,2.5,1983,2.5,1984,2.5,1985,2.5,1986,2.5,1987,2.5,1988,2.5,1989,2.5,1990,2.5,1991,2.5,1992,2.5,1993,2.5,1994,2.5,1995,2.5]],["title/modules/FileModule.html",[453,2.459,511,1.076]],["body/modules/FileModule.html",[3,0.139,4,0.121,5,0.04,8,0.053,10,0.107,23,1.363,30,0.513,43,0.949,44,0.007,45,0.332,46,0.121,47,0.931,50,1.18,74,0.278,76,1.223,81,1.808,86,0.13,103,1.467,115,0.005,116,0.005,124,3.87,182,1.672,183,1.672,267,1.705,349,4.699,350,4.554,351,3.2,403,1.641,451,1.641,453,4.158,454,5.037,489,3.091,511,1.992,513,2.34,517,3.64,518,4.664,519,3.604,524,4.763,525,1.881,526,1.881,527,1.844,528,1.844,529,1.881,530,2.699,531,1.844,532,2.96,533,1.808,534,2.339,535,1.738,536,1.881,537,1.881,538,1.881,539,1.881,540,1.881,541,1.881,542,1.772,543,1.881,544,1.881,545,1.881,546,1.844,547,2.434,548,1.881,549,1.844,550,1.881,551,1.881,552,1.881,553,1.881,554,1.881,555,1.705,556,1.881,557,1.844,558,1.881,565,4.141,566,3.776,567,3.347,568,3.454,577,2.587,588,2.52,589,3.536,590,4.141,592,2.52,709,2.899,891,3.604,968,2.703,1615,3.776,1669,4.217,1689,6.483,1996,5.536,1997,5.536,1998,6.483,1999,5.536,2000,5.536,2001,5.536,2002,5.536,2003,5.536]],["title/injectables/FileService.html",[495,1.475,1998,3.834]],["body/injectables/FileService.html",[3,0.051,4,0.044,5,0.049,8,0.069,10,0.039,15,0.133,17,1.216,18,1.759,19,3.28,21,2.604,23,0.832,24,3.271,25,2.908,30,0.719,38,1.669,43,1.242,44,0.007,45,0.511,46,0.159,47,1.219,50,1.854,51,1.873,52,1.689,53,4.219,58,1.024,59,5.044,63,0.498,66,1.77,74,0.24,76,0.448,86,0.048,87,2.045,88,2.451,89,2.639,93,3.438,97,3.164,98,2.239,103,2.016,115,0.002,116,0.002,124,1.826,125,1.954,137,1.197,144,2.066,147,3.65,152,5.151,180,2.922,182,1.021,183,1.021,184,1.753,203,1.516,218,2.196,264,1.34,267,1.041,293,2.759,295,0.499,314,1.298,317,2.306,332,1.735,349,3.914,350,2.655,351,1.172,352,1.504,353,3.602,354,4.006,356,0.8,357,1.216,456,0.947,489,1.132,495,1.061,497,0.923,499,1.58,501,4.139,502,1.77,504,1.132,506,0.857,509,1.062,510,1.216,522,0.774,535,1.061,571,1.383,573,1.383,607,3.426,609,1.429,623,2.575,641,2.201,681,3.863,682,4.636,691,4.403,693,4.917,696,3.776,701,3.301,702,2.276,705,1.132,706,1.803,708,1.457,709,1.062,827,2,945,2.792,968,2.871,989,2.759,992,5.997,1007,2.577,1037,2.201,1040,1.826,1053,2.575,1063,1.32,1117,2.575,1124,3.865,1178,5.151,1204,2.575,1220,1.669,1268,1.545,1273,2.565,1281,2.201,1291,5.52,1421,3.041,1422,2.027,1615,5.812,1646,3.548,1647,2.759,1648,3.006,1649,2.759,1650,2.759,1651,3.006,1652,1.803,1653,3.466,1654,6.841,1655,3.436,1657,1.717,1659,2.759,1661,1.717,1663,1.717,1665,2.759,1667,1.717,1669,1.545,1708,2.759,1718,1.655,1998,2.759,2004,2.028,2005,3.006,2006,6.086,2007,5.071,2008,4.346,2009,3.38,2010,5.071,2011,5.071,2012,4.346,2013,4.346,2014,2.028,2015,2.028,2016,6.762,2017,4.509,2018,5.071,2019,2.028,2020,5.635,2021,2.028,2022,6.086,2023,3.38,2024,2.028,2025,2.028,2026,3.38,2027,5.071,2028,3.006,2029,4.346,2030,2.028,2031,6.086,2032,2.028,2033,2.028,2034,2.028,2035,2.028,2036,3.006,2037,2.028,2038,3.459,2039,4.509,2040,2.028,2041,2.028,2042,3.38,2043,3.865,2044,2.028,2045,2.028,2046,2.028,2047,2.028,2048,2.028,2049,2.028,2050,2.028,2051,2.028,2052,2.028,2053,3.38,2054,3.38,2055,2.028,2056,1.655,2057,4.346,2058,5.071,2059,4.346,2060,4.346,2061,3.38,2062,3.38,2063,3.38,2064,3.38,2065,2.201,2066,2.028,2067,2.028,2068,2.028,2069,3.38,2070,2.028,2071,2.028,2072,2.028,2073,2.028,2074,2.028,2075,2.028,2076,2.028,2077,2.028,2078,2.028,2079,2.028,2080,2.028,2081,2.028,2082,2.028,2083,2.028,2084,2.028,2085,2.028,2086,2.028,2087,2.028,2088,2.028,2089,2.028,2090,4.346,2091,3.38,2092,2.028,2093,2.028,2094,2.028,2095,2.028,2096,2.028,2097,2.028,2098,2.028,2099,2.028,2100,2.028,2101,2.028,2102,2.028,2103,2.028,2104,2.028,2105,2.028,2106,2.028,2107,2.028,2108,2.028,2109,2.028,2110,2.028,2111,2.028,2112,2.028,2113,2.028,2114,2.028,2115,2.028,2116,2.028,2117,2.028,2118,2.028,2119,2.028,2120,2.028,2121,2.028,2122,2.028,2123,2.028,2124,2.028,2125,2.028,2126,2.028,2127,2.028,2128,2.028,2129,2.028,2130,2.028,2131,2.028,2132,2.028,2133,2.028,2134,2.028,2135,2.028,2136,2.028,2137,2.028,2138,2.028,2139,2.028,2140,2.028,2141,2.028,2142,2.028,2143,2.028,2144,2.028,2145,2.028,2146,3.006,2147,2.028]],["title/classes/ForbiddenMsException.html",[10,0.091,2148,4.177]],["body/classes/ForbiddenMsException.html",[3,0.171,4,0.149,5,0.035,8,0.065,10,0.132,30,0.632,43,1.17,44,0.007,45,0.41,46,0.149,47,1.149,63,0.524,74,0.245,76,1.509,86,0.16,115,0.006,116,0.006,118,1.948,137,2.417,181,3.716,184,2.754,499,3.814,663,4.656,664,5.092,665,5.092,666,4.718,668,5.567,669,5.314,670,5.163,671,5.567,672,4.656,673,4.444,674,4.656,2148,7.258,2149,8.162,2150,8.731,2151,6.827]],["title/classes/GoogleCaptchaService.html",[10,0.091,2152,4.177]],["body/classes/GoogleCaptchaService.html",[3,0.121,4,0.106,5,0.025,8,0.062,10,0.16,15,0.317,18,2.574,19,4.454,21,3.536,23,1.611,24,3.099,25,2.33,30,0.77,33,3.782,35,3.035,43,1.121,44,0.007,45,0.393,46,0.182,47,1.101,50,1.696,52,1.345,53,4.082,58,1.321,65,4.082,68,4.259,73,4.259,74,0.263,76,1.067,86,0.113,88,1.458,89,2.884,93,3.206,98,2.269,103,1.966,104,4.293,115,0.005,116,0.005,118,1.378,137,2.316,144,2.094,203,1.314,218,2.09,354,3.229,499,3.717,504,2.695,506,2.04,509,2.528,510,2.895,522,1.499,571,3.293,573,3.293,604,4.699,609,2.765,645,4.082,646,3.141,691,4.462,789,4.818,799,5.979,800,3.941,802,5.972,818,6.06,819,4.699,821,4.984,822,4.462,825,5.33,827,2.58,828,5.34,1007,3.324,1063,3.143,1222,6.599,1330,3.468,2152,7.074,2153,6.542,2154,4.293,2155,5.818,2156,7.156,2157,6.997,2158,5.818,2159,4.984,2160,6.542,2161,7.955,2162,4.828,2163,4.828,2164,6.494,2165,4.828,2166,6.542,2167,6.542,2168,5.818,2169,4.293,2170,4.828,2171,4.293,2172,4.293,2173,5.818,2174,4.293,2175,4.293,2176,4.828,2177,4.828,2178,4.828,2179,4.828,2180,4.828,2181,4.828,2182,4.828]],["title/interfaces/GpsFileMetadata.html",[327,0.653,365,2.817]],["body/interfaces/GpsFileMetadata.html",[3,0.105,4,0.092,5,0.046,8,0.04,10,0.133,15,0.275,16,0.716,44,0.007,45,0.251,46,0.179,52,0.86,63,0.599,74,0.206,86,0.206,115,0.004,116,0.004,121,2.197,203,1.484,240,1.664,279,2.336,296,1.288,314,1.579,327,1.302,328,3.554,329,1.314,330,2.61,331,3.308,332,2.697,333,2.61,334,2.61,335,3.554,336,3.554,337,2.61,338,3.554,339,3.425,340,2.61,341,2.61,342,2.61,343,2.61,344,2.51,345,2.61,346,2.61,347,1.604,348,1.768,349,3.201,350,3.102,351,2.419,352,0.786,353,1.857,354,2.065,355,1.481,356,1.65,357,2.51,358,2.565,359,1.394,360,2.61,361,1.768,362,3.425,363,3.554,364,3.976,365,4.126,366,3.102,367,3.554,368,3.554,369,3.857,370,3.308,371,3.554,372,2.61,373,2.446,374,2.446,375,2.61,376,2.61,377,2.61,378,2.61,379,2.61,380,2.61,381,2.261,382,2.61,383,2.61,384,2.61,385,2.61,386,2.61,387,2.61,388,2.61,389,2.61,390,2.61,391,2.61,392,2.61,393,2.61,394,2.61,395,2.61,396,2.61,397,2.61,398,2.61,399,2.724,400,2.724,401,2.724,402,2.724,403,1.24,404,2.724,405,2.724,406,2.724,407,2.724,408,2.724,409,2.724,410,2.724,411,2.724,412,2.724,413,2.724,414,2.724,415,2.724,416,2.724,417,2.724,418,2.724,419,2.724,420,2.724,421,2.724,422,2.724,423,3.696,424,2.724,425,2.724,426,2.724,427,2.724,428,2.724,429,2.724,430,2.724,431,2.724,432,2.724,433,2.724,434,2.724,435,2.724,436,2.724,437,2.724,438,2.724,439,2.724,440,2.724,441,2.724,442,2.724,443,4.667,444,4.667,445,4.667,446,2.61,447,2.61,448,2.61,449,2.61,450,2.61,451,0.959,452,1.217,453,2.191,454,2.51]],["title/entities/GpsFileMetadataEntity.html",[264,0.72,1679,3.578]],["body/entities/GpsFileMetadataEntity.html",[3,0.146,4,0.127,5,0.047,8,0.055,10,0.112,13,1.26,15,0.58,16,0.892,30,0.792,44,0.007,46,0.187,61,3.796,74,0.221,86,0.136,87,2.37,115,0.005,116,0.005,182,2.725,203,1.341,218,3.517,264,1.244,295,1.43,314,1.504,326,6.154,332,2.274,364,4.27,365,4.43,443,5.067,444,5.067,445,5.067,456,1.626,458,3.96,459,2.615,460,2.582,462,3.48,471,6.63,472,7.365,473,7.365,474,7.365,477,2.95,478,4.171,487,1.823,488,3.646,489,3.242,491,2.95,494,6.63,1678,5.163,1679,5.627,2183,8.827,2184,5.807,2185,5.807,2186,5.807]],["title/classes/GraphicCaptchaService.html",[10,0.091,792,3.834]],["body/classes/GraphicCaptchaService.html",[3,0.086,4,0.075,5,0.017,8,0.065,10,0.141,15,0.225,18,1.775,19,4.374,21,3.472,23,1.26,24,3.307,25,2.837,30,0.816,33,2.958,35,2.706,43,1.051,44,0.007,45,0.368,46,0.149,47,1.031,50,1.858,51,2.512,52,1.052,53,3.193,58,1.033,63,0.459,65,3.193,68,3.332,73,3.332,74,0.264,76,0.756,86,0.08,87,0.874,88,2.055,89,3.024,93,3.27,96,3.043,98,1.775,103,2.158,115,0.004,116,0.004,118,0.976,125,3.933,137,1.812,144,2.125,182,1.033,183,2.055,203,1.345,218,1.482,353,3.392,366,4.44,459,1.812,499,3.179,504,1.91,506,1.446,509,1.791,510,2.052,571,2.334,573,2.334,604,4.887,609,2.163,635,3.49,645,4.544,646,1.643,691,3.49,784,3.991,789,5.067,792,5.553,797,4.551,799,5.403,800,2.793,802,5.231,818,5.183,819,3.676,821,3.898,825,2.458,827,2.872,828,4.177,862,2.958,945,2.112,1007,3.7,1063,2.228,1106,3.043,1117,2.607,1178,2.607,2039,4.551,2146,3.043,2154,3.043,2155,4.551,2158,4.551,2159,3.898,2164,7.116,2168,4.551,2171,3.043,2172,3.043,2173,4.551,2174,3.043,2175,3.043,2187,7.922,2188,5.553,2189,6.803,2190,6.13,2191,6.803,2192,6.803,2193,6.803,2194,5.117,2195,3.422,2196,3.422,2197,5.117,2198,3.422,2199,3.422,2200,5.117,2201,5.117,2202,3.422,2203,4.67,2204,3.422,2205,7.243,2206,6.477,2207,3.422,2208,5.117,2209,5.117,2210,3.422,2211,6.796,2212,5.117,2213,5.117,2214,5.117,2215,3.422,2216,5.117,2217,3.422,2218,5.117,2219,3.043,2220,3.422,2221,3.422,2222,4.551,2223,3.043,2224,3.422,2225,3.422,2226,3.422,2227,3.422,2228,3.422,2229,3.422,2230,3.422,2231,3.422,2232,3.422,2233,6.796,2234,3.422,2235,3.043,2236,3.422,2237,5.117,2238,3.422,2239,3.422,2240,3.422,2241,3.422,2242,3.422,2243,3.422,2244,5.117,2245,3.422,2246,3.422,2247,3.422,2248,3.043,2249,2.793,2250,3.422,2251,6.13,2252,3.422,2253,3.422,2254,3.422,2255,3.422,2256,3.422,2257,3.422,2258,3.422,2259,3.422,2260,3.422,2261,3.422,2262,3.422,2263,3.422,2264,3.422,2265,3.422,2266,3.422,2267,3.422]],["title/interfaces/IccFileMetadata.html",[327,0.653,363,2.817]],["body/interfaces/IccFileMetadata.html",[3,0.097,4,0.085,5,0.045,8,0.037,10,0.127,15,0.254,16,0.676,44,0.007,45,0.232,46,0.203,52,0.795,63,0.6,74,0.197,86,0.202,115,0.004,116,0.004,121,2.155,203,1.46,240,1.852,279,2.159,296,1.191,314,1.555,327,1.288,328,3.358,329,1.214,330,2.412,331,3.126,332,2.646,333,2.412,334,2.412,335,3.358,336,3.358,337,2.412,338,3.358,339,3.237,340,2.412,341,2.412,342,2.412,343,2.412,344,2.319,345,2.412,346,2.412,347,1.535,348,1.634,349,3.025,350,2.932,351,2.235,352,0.726,353,1.716,354,1.909,355,1.369,356,1.525,357,2.319,358,2.424,359,1.288,360,2.412,361,1.634,362,3.805,363,3.948,364,3.237,365,3.358,366,2.932,367,3.358,368,3.358,369,3.645,370,3.126,371,3.358,372,2.412,373,2.311,374,2.311,375,2.412,376,2.412,377,2.412,378,2.412,379,2.412,380,2.412,381,2.089,382,2.412,383,4.502,384,4.502,385,4.502,386,4.502,387,4.502,388,4.502,389,4.502,390,4.502,391,4.502,392,4.502,393,4.502,394,4.502,395,4.502,396,4.502,397,2.412,398,2.412,399,2.517,400,2.517,401,2.517,402,2.517,403,1.146,404,2.517,405,2.517,406,2.517,407,2.517,408,2.517,409,2.517,410,2.517,411,2.517,412,2.517,413,2.517,414,2.517,415,2.517,416,2.517,417,2.517,418,2.517,419,2.517,420,2.517,421,2.517,422,2.517,423,3.493,424,2.517,425,2.517,426,2.517,427,2.517,428,2.517,429,2.517,430,2.517,431,2.517,432,2.517,433,2.517,434,2.517,435,2.517,436,2.517,437,2.517,438,2.517,439,2.517,440,2.517,441,2.517,442,2.517,443,2.412,444,2.412,445,2.412,446,2.412,447,2.412,448,2.412,449,2.412,450,2.412,451,0.886,452,1.124,453,2.024,454,2.319]],["title/entities/IccFileMetadataEntity.html",[264,0.72,1682,3.578]],["body/entities/IccFileMetadataEntity.html",[3,0.105,4,0.092,5,0.048,8,0.04,10,0.081,13,0.908,15,0.613,16,0.716,30,0.858,44,0.007,45,0.579,46,0.203,63,0.577,74,0.178,86,0.098,87,2.474,115,0.004,116,0.004,203,1.136,240,1.433,264,1.054,295,1.03,314,0.96,332,1.824,362,3.425,363,3.554,383,4.292,384,4.292,385,4.292,386,4.292,387,4.292,388,4.292,389,4.292,390,4.292,391,4.292,392,4.292,393,4.292,394,4.292,395,4.292,396,4.292,456,1.172,458,2.854,459,2.098,460,2.799,461,4.9,462,3.723,465,2.61,466,3.187,467,3.187,469,3.415,470,3.187,477,2.126,478,3.005,481,3.187,483,3.005,485,3.187,487,1.314,488,2.925,489,2.336,491,2.126,492,3.927,493,2.336,1676,3.721,1682,4.514,2268,9.316,2269,5.925,2270,5.925,2271,3.721,2272,5.925,2273,3.721,2274,5.925,2275,5.925,2276,4.184,2277,3.721,2278,5.925,2279,5.925,2280,5.925,2281,5.925,2282,5.925,2283,5.925,2284,4.184,2285,5.925,2286,5.925,2287,3.721,2288,5.925,2289,3.721,2290,4.184,2291,3.721]],["title/interfaces/ImageFileMetadata.html",[327,0.653,367,2.817]],["body/interfaces/ImageFileMetadata.html",[3,0.099,4,0.086,5,0.045,8,0.038,10,0.129,15,0.26,16,0.687,44,0.007,45,0.237,46,0.2,52,0.812,63,0.599,74,0.2,86,0.203,115,0.004,116,0.004,121,2.167,203,1.466,240,1.867,279,2.205,296,1.216,314,1.579,327,1.292,328,3.409,329,1.239,330,2.463,331,3.174,332,2.66,333,2.463,334,2.463,335,3.409,336,3.409,337,2.463,338,3.409,339,3.286,340,2.463,341,2.463,342,2.463,343,2.463,344,2.368,345,2.463,346,2.463,347,1.554,348,1.669,349,3.071,350,2.976,351,2.282,352,0.742,353,1.752,354,1.949,355,1.398,356,1.557,357,2.368,358,2.461,359,1.315,360,2.463,361,1.669,362,3.286,363,3.409,364,3.286,365,3.409,366,3.487,367,3.995,368,3.409,369,3.701,370,3.174,371,3.409,372,4.546,373,3.188,374,3.188,375,4.546,376,4.546,377,4.546,378,4.546,379,4.546,380,4.546,381,3.937,382,4.546,383,2.463,384,2.463,385,2.463,386,2.463,387,2.463,388,2.463,389,2.463,390,2.463,391,2.463,392,2.463,393,2.463,394,2.463,395,2.463,396,2.463,397,2.463,398,2.463,399,2.57,400,2.57,401,2.57,402,2.57,403,1.17,404,2.57,405,2.57,406,2.57,407,2.57,408,2.57,409,2.57,410,2.57,411,2.57,412,2.57,413,2.57,414,2.57,415,2.57,416,2.57,417,2.57,418,2.57,419,2.57,420,2.57,421,2.57,422,2.57,423,3.547,424,2.57,425,2.57,426,2.57,427,2.57,428,2.57,429,2.57,430,2.57,431,2.57,432,2.57,433,2.57,434,2.57,435,2.57,436,2.57,437,2.57,438,2.57,439,2.57,440,2.57,441,2.57,442,2.57,443,2.463,444,2.463,445,2.463,446,2.463,447,2.463,448,2.463,449,2.463,450,2.463,451,0.904,452,1.148,453,2.067,454,2.368]],["title/entities/ImageFileMetadataEntity.html",[264,0.72,1684,3.578]],["body/entities/ImageFileMetadataEntity.html",[3,0.117,4,0.102,5,0.048,8,0.045,10,0.09,13,1.014,15,0.612,16,0.773,30,0.856,44,0.007,45,0.471,46,0.202,61,3.667,63,0.545,74,0.192,86,0.11,87,2.471,115,0.005,116,0.005,182,2.673,203,1.205,218,3.398,240,1.547,264,1.118,295,1.151,314,1.498,332,1.97,366,3.35,367,3.838,372,4.552,373,3.012,374,3.012,375,4.552,376,4.552,377,4.552,378,4.552,379,4.552,380,4.552,381,3.942,382,4.552,456,1.309,458,3.187,459,2.265,460,2.792,461,4.586,462,3.715,465,4.896,466,3.559,467,3.559,469,3.814,470,3.559,477,2.374,478,3.356,481,3.559,483,3.356,485,3.559,487,1.467,488,3.158,489,2.609,491,2.374,492,3.675,493,4.382,1684,4.874,2271,4.155,2273,4.155,2277,4.155,2287,4.155,2289,4.155,2291,4.155,2292,9.307,2293,6.398,2294,6.398,2295,4.673]],["title/classes/InvalidTokenMsException.html",[10,0.091,2296,4.177]],["body/classes/InvalidTokenMsException.html",[3,0.17,4,0.149,5,0.035,8,0.065,10,0.131,30,0.629,42,5.538,43,1.164,44,0.007,45,0.407,46,0.149,47,1.143,63,0.523,74,0.244,76,1.501,86,0.159,115,0.006,116,0.006,118,1.938,137,2.405,181,3.704,184,2.739,300,7.111,499,3.802,663,4.632,664,5.076,665,5.076,666,4.703,669,5.297,670,5.156,671,5.55,672,4.632,673,4.421,674,4.632,2296,7.235,2297,8.137,2298,6.039]],["title/classes/JwtDto.html",[10,0.091,608,3.374]],["body/classes/JwtDto.html",[3,0.116,4,0.101,5,0.024,8,0.044,10,0.17,12,4.2,15,0.305,16,0.769,30,0.759,41,3.666,42,5.575,44,0.007,46,0.196,47,1.222,58,1.71,63,0.544,71,2.931,74,0.254,76,1.024,86,0.184,98,1.607,115,0.005,116,0.005,118,1.322,174,1.871,203,0.765,240,2.136,276,2.973,291,3.754,451,1.062,452,1.347,460,2.476,511,1.062,520,3.328,522,1.664,542,1.483,575,3.161,576,3.53,602,3.328,605,5.218,606,4.955,608,5.218,610,6.229,611,5.617,614,3.53,615,5.218,620,4.955,630,3.328,634,4.339,657,3.328,658,3.328,784,5.512,789,3.437,804,3.084,805,5.218,812,6.082,813,2.891,857,1.607,991,5.218,1030,2.287,1221,3.161,1355,2.426,1441,3.53,1442,3.53,1443,4.879,1444,5.193,1445,3.783,1448,5.193,1449,6.69,1450,3.666,1451,4.521,1452,3.783,1453,3.783,1454,3.925,1455,3.328,1456,3.783,1457,3.783,1458,3.783,1459,3.783,1460,4.847,1461,5.193,1462,6.384,1463,5.93,1464,5.93,2299,4.634,2300,4.634,2301,4.634,2302,4.634,2303,3.328,2304,4.634]],["title/interfaces/Language.html",[327,0.653,555,1.446]],["body/interfaces/Language.html",[3,0.162,4,0.141,5,0.033,8,0.061,15,0.424,16,0.952,44,0.007,45,0.532,46,0.186,63,0.576,74,0.193,86,0.2,115,0.006,116,0.006,183,2.381,203,1.529,264,1.359,314,1.278,327,1.304,329,2.023,347,2.16,352,1.481,356,3.499,555,2.851,948,5.321,1350,2.147,2305,5.261,2306,5.261,2307,5.662,2308,5.662,2309,4.63]],["title/entities/LanguageEntity.html",[264,0.72,2310,3.204]],["body/entities/LanguageEntity.html",[3,0.14,4,0.122,5,0.037,8,0.053,10,0.108,13,1.212,15,0.573,16,0.87,30,0.78,44,0.007,45,0.478,46,0.184,63,0.536,74,0.239,81,1.823,86,0.131,87,2.152,115,0.005,116,0.005,203,1.317,264,1.222,267,1.719,295,1.375,319,2.399,352,1.498,356,3.144,403,1.655,456,1.564,459,2.55,460,2.545,461,3.016,462,3.249,487,1.753,492,3.119,525,1.897,526,1.897,527,1.86,528,1.86,529,1.897,530,2.71,531,1.86,532,2.966,533,1.823,534,2.352,535,1.753,536,1.897,537,1.897,538,1.897,539,1.897,540,1.897,541,1.897,542,1.787,543,1.897,544,1.897,545,1.897,546,1.86,547,2.448,548,1.897,549,1.86,550,1.897,551,1.897,552,1.897,553,1.897,554,1.897,555,2.455,556,1.897,557,1.86,558,1.897,810,2.718,842,3.458,843,3.228,845,3.561,846,2.837,847,4.494,869,3.66,875,4.558,945,2.973,962,4.164,1393,2.478,1486,3.117,1494,3.635,2310,4.913,2311,5.583,2312,6.405,2313,5.583,2314,5.583,2315,5.583,2316,5.583,2317,4.558,2318,5.583]],["title/injectables/LiteAuthGuard.html",[495,1.475,2319,4.177]],["body/injectables/LiteAuthGuard.html",[0,5.502,1,6.841,3,0.154,4,0.135,5,0.031,7,5.471,8,0.059,9,1.756,10,0.148,12,5.046,15,0.405,16,0.925,17,5.491,18,2.893,19,4.717,20,7.417,21,3.745,22,5.016,30,0.71,43,1.055,44,0.007,45,0.369,46,0.135,47,1.035,71,2.452,74,0.269,76,1.36,82,5.022,83,4.687,86,0.144,115,0.006,116,0.006,137,2.712,182,1.858,183,1.858,495,2.405,497,2.801,499,4.079,500,4.594,503,6.812,504,3.435,506,2.6,507,5.471,508,5.471,509,3.221,510,3.69,549,2.551,945,3.162,2319,7.417,2320,8.341,2321,7.66,2322,7.66]],["title/modules/LocaleModule.html",[511,1.076,2323,3.578]],["body/modules/LocaleModule.html",[3,0.146,4,0.127,5,0.038,8,0.055,10,0.112,44,0.007,74,0.271,76,1.283,81,1.896,86,0.136,115,0.005,116,0.005,267,1.788,403,1.721,511,2.022,513,2.454,525,1.973,526,1.973,527,1.934,528,1.934,529,1.973,530,2.76,531,1.934,532,2.993,533,1.896,534,2.412,535,1.823,536,1.973,537,1.973,538,1.973,539,1.973,540,1.973,541,1.973,542,1.859,543,1.973,544,1.973,545,1.973,546,1.934,547,2.51,548,1.973,549,1.934,550,1.973,551,1.973,552,1.973,553,1.973,554,1.973,555,1.788,556,1.973,557,1.934,558,1.973,577,2.713,588,3.698,592,3.698,679,3.867,709,3.04,724,3.242,725,3.483,726,3.483,727,3.483,732,4.43,733,3.483,734,3.242,850,3.753,872,3.137,886,5.627,887,6.029,891,3.78,2310,5.038,2323,6.983,2324,5.163,2325,5.163,2326,5.163,2327,7.276,2328,5.807,2329,5.305,2330,6.568,2331,5.163,2332,6.568,2333,5.305,2334,4.423,2335,5.807,2336,5.163]],["title/injectables/LocaleService.html",[495,1.475,2327,3.578]],["body/injectables/LocaleService.html",[3,0.134,4,0.117,5,0.027,8,0.067,10,0.103,15,0.351,18,2.707,23,1.723,24,2.822,25,2.45,30,0.648,43,1.199,44,0.007,45,0.42,46,0.153,47,1.394,50,1.492,63,0.529,74,0.265,76,1.18,86,0.125,88,2.113,89,2.982,93,3.01,98,1.852,103,1.415,115,0.005,116,0.005,137,2.478,144,1.897,183,2.665,184,2.154,295,1.315,352,1.713,495,2.197,497,2.431,500,4.197,522,1.603,555,2.155,607,2.889,681,7.091,708,3.836,709,2.796,761,5.712,850,4.369,872,2.885,939,5.712,953,6.761,1244,3.106,1281,4.555,1437,3.454,1468,4.773,2307,6.337,2310,3.642,2312,7.365,2327,5.331,2329,5.026,2330,6.222,2331,4.749,2332,6.222,2333,3.836,2334,4.068,2337,5.34,2338,7.805,2339,5.34,2340,7.805,2341,7.805,2342,5.34,2343,6.997,2344,5.34,2345,5.34,2346,5.34,2347,5.34,2348,5.34,2349,5.34,2350,5.34,2351,5.34,2352,5.34,2353,6.997,2354,5.34,2355,5.34,2356,5.34,2357,5.34,2358,5.34,2359,5.34,2360,5.34]],["title/injectables/LocaleSubscriber.html",[495,1.475,2361,4.177]],["body/injectables/LocaleSubscriber.html",[3,0.102,4,0.089,5,0.021,8,0.065,10,0.131,13,0.886,15,0.269,17,2.449,18,2.02,21,3.564,23,1.434,24,2.454,25,1.282,30,0.54,41,2.522,43,0.998,44,0.007,45,0.349,46,0.127,47,0.98,50,1.241,74,0.244,76,0.902,86,0.096,87,1.487,88,2.05,89,3.021,93,2.246,98,2.567,103,1.798,115,0.004,116,0.004,125,4.947,137,2.062,144,1.695,203,1.343,263,3.632,264,1.353,265,4.754,268,4.754,286,5.637,295,1.006,456,2.072,495,1.828,497,1.859,500,4.438,504,2.28,506,1.726,509,2.138,606,3.972,607,2.404,609,2.461,623,6.519,701,4.818,702,4.727,709,2.138,741,2.548,807,4.183,850,4.829,852,3.146,862,4.278,867,3.049,868,3.049,872,2.206,1318,7.212,1340,3.049,1342,3.493,1410,4.132,1454,3.146,1708,6.04,1747,4.754,2036,5.179,2307,4.183,2333,6.346,2334,3.111,2361,7.856,2362,6.788,2363,5.824,2364,5.824,2365,7.4,2366,8.134,2367,3.633,2368,5.824,2369,5.824,2370,7.4,2371,8.835,2372,4.084,2373,4.436,2374,3.972,2375,5.824,2376,5.824,2377,8.134,2378,4.084,2379,5.824,2380,5.179,2381,5.179,2382,5.824,2383,4.084,2384,4.084,2385,5.824,2386,5.824,2387,5.824,2388,5.824,2389,5.824,2390,4.084,2391,8.134,2392,5.824,2393,5.824,2394,7.4,2395,5.824,2396,7.4,2397,5.824,2398,5.824,2399,4.084]],["title/interfaces/LocalizedMedia.html",[327,0.653,2309,3.374]],["body/interfaces/LocalizedMedia.html",[3,0.16,4,0.139,5,0.032,8,0.061,15,0.418,16,0.945,44,0.007,45,0.382,46,0.193,63,0.567,74,0.191,86,0.199,115,0.006,116,0.006,183,2.739,203,1.525,264,1.353,314,1.432,327,1.301,329,1.997,347,2.181,352,1.703,356,2.509,555,2.842,948,5.297,1350,2.119,2305,5.193,2306,5.193,2307,6.082,2308,6.513,2309,5.617]],["title/entities/LocalizedMediaEntity.html",[264,0.72,2333,3.374]],["body/entities/LocalizedMediaEntity.html",[3,0.138,4,0.12,5,0.036,8,0.052,10,0.106,13,1.191,15,0.52,16,0.861,30,0.775,44,0.007,46,0.183,63,0.427,74,0.251,81,1.792,86,0.129,87,2.02,115,0.005,116,0.005,183,2.389,203,1.306,264,1.212,267,1.69,295,1.352,314,1.155,319,2.788,347,1.662,352,1.486,403,1.627,456,1.537,459,2.523,460,2.528,462,2.748,477,2.789,487,1.723,488,3.517,491,2.789,492,2.377,525,1.866,526,1.866,527,1.828,528,1.828,529,1.866,530,2.688,531,1.828,532,2.955,533,1.792,534,2.326,535,1.723,536,1.866,537,1.866,538,1.866,539,1.866,540,1.866,541,1.866,542,1.757,543,1.866,544,1.866,545,1.866,546,1.828,547,2.421,548,1.866,549,1.828,550,1.866,551,1.866,552,1.866,553,1.866,554,1.866,555,1.69,556,1.866,557,1.828,558,1.866,810,2.071,842,2.635,843,3.173,845,3.538,846,3.62,847,4.445,869,4.019,875,4.481,904,4.638,945,2.941,1244,3.162,2308,5.681,2309,5.117,2310,5.709,2317,4.481,2333,5.117,2400,7.714,2401,5.49,2402,7.125,2403,5.49,2404,5.49,2405,5.49,2406,5.49,2407,4.882,2408,5.49]],["title/interfaces/LocalizedString.html",[327,0.653,1350,1.565]],["body/interfaces/LocalizedString.html",[3,0.16,4,0.139,5,0.032,8,0.061,15,0.418,16,0.945,44,0.007,45,0.382,46,0.193,63,0.578,74,0.191,86,0.199,115,0.006,116,0.006,183,2.739,203,1.525,264,1.353,314,1.432,327,1.301,329,1.997,347,2.06,352,1.703,356,2.509,555,2.842,948,5.297,1350,2.605,2305,5.193,2306,5.193,2307,6.082,2308,6.513,2309,4.57]],["title/entities/LocalizedStringEntity.html",[264,0.72,850,2.387]],["body/entities/LocalizedStringEntity.html",[3,0.139,4,0.122,5,0.037,8,0.053,10,0.107,13,1.207,15,0.523,16,0.868,30,0.779,44,0.007,46,0.184,63,0.505,74,0.239,81,1.815,86,0.131,87,2.224,115,0.005,116,0.005,183,2.404,203,1.314,264,1.219,267,1.712,295,1.369,314,1.164,319,2.392,352,1.495,403,1.648,456,1.557,459,2.543,460,2.541,462,3.244,477,2.825,487,1.745,488,3.546,491,2.825,492,2.407,525,1.889,526,1.889,527,1.852,528,1.852,529,1.889,530,2.704,531,1.852,532,2.963,533,1.815,534,2.345,535,1.745,536,1.889,537,1.889,538,1.889,539,1.889,540,1.889,541,1.889,542,1.78,543,1.889,544,1.889,545,1.889,546,1.852,547,2.441,548,1.889,549,1.852,550,1.889,551,1.889,552,1.889,553,1.889,554,1.889,555,1.712,556,1.889,557,1.852,558,1.889,810,2.098,842,2.669,843,3.214,846,2.825,850,3.65,869,3.65,904,4.676,945,2.965,1350,2.392,1531,4.538,1539,4.538,2308,5.716,2310,5.737,2317,4.538,2400,7.744,2407,4.944,2409,5.56,2410,7.183,2411,6.388,2412,5.56,2413,5.56,2414,5.56,2415,5.56,2416,5.56]],["title/modules/LogModule.html",[511,1.076,567,2.195]],["body/modules/LogModule.html",[3,0.175,4,0.153,5,0.035,8,0.067,10,0.135,21,3.553,44,0.007,74,0.264,76,1.541,86,0.164,115,0.006,116,0.006,277,4.957,511,2.087,513,2.947,567,3.862,588,3.174,589,3.442,590,4.031,592,3.174,679,4.327,737,5.156,2373,6.296,2417,6.972,2418,6.939,2419,6.972,2420,6.972]],["title/classes/LogService.html",[10,0.091,2418,3.578]],["body/classes/LogService.html",[3,0.082,4,0.072,5,0.036,8,0.077,10,0.063,15,0.215,21,2.882,23,1.219,25,2.583,30,0.744,43,1.48,44,0.007,45,0.511,46,0.193,47,1.384,48,6.202,50,1.816,51,2.204,58,1.344,63,0.565,74,0.179,76,0.723,86,0.077,88,2.638,89,2.955,98,1.135,103,1.763,115,0.004,116,0.004,118,0.934,121,1.241,149,3.935,152,5.068,174,2.122,175,3.771,178,6.112,181,4.389,184,1.997,185,4.926,190,2.493,195,2.672,196,2.672,218,1.417,242,2.911,247,1.892,248,2.911,314,1.079,319,3.058,353,3.171,499,3.109,515,3.555,522,1.134,609,2.092,737,3.088,795,3.376,933,4.286,936,2.672,1007,2.515,1023,4.779,1037,4.652,1138,2.911,1140,6.683,1490,3.555,2249,6.371,2374,3.376,2418,3.771,2421,3.273,2422,4.401,2423,4.95,2424,6.683,2425,6.653,2426,4.95,2427,4.95,2428,6.683,2429,4.401,2430,4.95,2431,3.273,2432,5.719,2433,4.95,2434,8.385,2435,3.273,2436,6.354,2437,3.273,2438,8.227,2439,7.145,2440,7.145,2441,4.95,2442,3.273,2443,4.95,2444,3.273,2445,4.95,2446,4.95,2447,4.95,2448,3.273,2449,4.95,2450,4.95,2451,4.95,2452,4.95,2453,3.273,2454,4.95,2455,3.273,2456,6.653,2457,7.145,2458,3.273,2459,3.273,2460,3.273,2461,6.653,2462,3.273,2463,3.273,2464,3.273,2465,6.653,2466,3.273,2467,3.273,2468,3.273,2469,6.653,2470,4.95,2471,4.95,2472,3.273,2473,3.273,2474,4.95,2475,3.273,2476,3.273,2477,2.911,2478,3.273,2479,3.273,2480,2.911,2481,4.95,2482,3.273,2483,3.273,2484,2.493,2485,3.273,2486,3.273,2487,3.273,2488,3.273,2489,3.273]],["title/classes/LoginPayload.html",[10,0.091,602,3.374]],["body/classes/LoginPayload.html",[3,0.115,4,0.101,5,0.023,8,0.044,10,0.17,12,4.507,15,0.303,16,0.765,30,0.757,41,3.134,42,5.367,44,0.007,46,0.196,47,1.524,58,1.651,63,0.557,71,2.927,74,0.253,76,1.017,86,0.183,98,1.596,115,0.005,116,0.005,118,1.313,174,1.807,203,1.046,240,1.886,276,3.82,291,4.295,451,1.054,452,1.338,460,2.469,511,1.054,520,3.305,522,1.658,542,2.027,575,3.138,576,3.505,602,4.548,605,5.872,606,4.937,608,4.548,610,5.6,611,4.548,614,3.505,615,3.305,620,3.138,630,4.548,634,3.138,657,4.548,658,5.199,784,4.712,789,4.212,804,3.075,805,5.199,808,5.63,812,6.069,813,2.871,857,1.596,991,5.199,1030,2.271,1221,3.138,1355,2.409,1441,3.505,1442,3.505,1443,4.864,1444,5.168,1445,3.756,1446,5.63,1448,5.168,1449,6.674,1450,3.376,1451,4.184,1452,3.756,1453,3.756,1454,4.565,1455,4.548,1456,5.168,1457,5.168,1458,5.909,1459,5.909,1460,3.505,1461,3.756,1462,5.168,1463,3.756,1464,3.756,2490,4.601,2491,4.601,2492,4.601,2493,4.601,2494,4.601,2495,4.601]],["title/interfaces/Media.html",[327,0.653,347,1.096]],["body/interfaces/Media.html",[3,0.101,4,0.088,5,0.04,8,0.039,9,2.515,10,0.168,13,1.598,15,0.266,16,0.698,25,1.815,35,1.431,44,0.007,45,0.545,46,0.208,52,1.667,58,1.685,63,0.578,74,0.234,86,0.212,115,0.004,116,0.004,121,2.14,144,1.955,174,1.628,203,1.41,240,1.781,292,3.846,296,1.245,314,1.534,327,1.264,329,1.269,332,2.399,347,2.208,352,1.72,355,2.047,358,3.374,359,2.595,361,2.443,373,3.04,374,3.04,451,0.926,452,1.175,522,1.324,804,2.904,845,1.708,857,1.402,968,2.94,1273,2.632,1350,2.78,1351,1.493,1450,4.152,1645,1.94,1653,1.995,1655,2.054,1657,2.054,1661,2.054,1663,2.054,1667,2.054,2496,2.184,2497,4.244,2498,4.244,2499,2.701,2500,2.257,2501,2.184,2502,3.123,2503,3.027,2504,3.533,2505,2.854,2506,3.856,2507,2.257,2508,2.184,2509,2.257,2510,2.257,2511,3.123,2512,4.21,2513,2.184,2514,3.123,2515,2.116,2516,2.257,2517,2.257,2518,2.257,2519,2.257,2520,2.257,2521,2.257,2522,1.94,2523,2.116]],["title/classes/MediaDto.html",[10,0.091,2513,2.538]],["body/classes/MediaDto.html",[3,0.099,4,0.086,5,0.039,8,0.038,9,2.502,10,0.167,13,1.676,15,0.26,16,0.687,25,1.785,30,0.768,35,1.398,44,0.007,45,0.538,46,0.207,52,1.654,58,1.674,63,0.575,74,0.232,86,0.211,115,0.004,116,0.004,118,1.127,121,2.078,144,1.943,174,1.706,203,1.369,240,1.611,292,3.812,296,1.216,314,1.525,327,1.248,332,2.244,347,2.202,352,1.7,355,2.013,358,3.155,359,2.427,361,2.403,373,3.008,374,3.008,451,0.904,452,1.148,460,2.503,522,1.302,804,3.045,845,1.669,857,1.369,968,2.749,1273,2.588,1350,2.679,1351,1.458,1450,4.181,1645,1.895,1653,1.949,1655,2.006,1657,2.006,1661,2.006,1663,2.006,1667,2.006,2303,4.083,2496,2.133,2497,4.043,2498,4.043,2499,2.656,2500,2.205,2501,2.133,2502,3.071,2503,2.976,2504,3.487,2505,2.806,2506,3.815,2507,2.205,2508,2.133,2509,2.205,2510,2.205,2511,3.071,2512,4.172,2513,3.071,2514,3.071,2515,2.067,2516,2.205,2517,2.205,2518,2.205,2519,2.205,2520,2.205,2521,2.205,2522,1.895,2523,2.067,2524,3.948,2525,3.948,2526,3.948,2527,3.948,2528,3.948,2529,3.948,2530,3.948]],["title/entities/MediaEntity.html",[264,0.72,845,1.985]],["body/entities/MediaEntity.html",[3,0.129,4,0.113,5,0.026,8,0.049,10,0.132,13,1.119,15,0.537,16,0.826,30,0.826,44,0.007,45,0.51,46,0.209,63,0.41,74,0.262,86,0.121,87,2.382,115,0.005,116,0.005,203,1.267,240,1.654,264,1.175,295,1.27,314,1.109,319,2.278,332,2.362,347,2.038,352,1.441,359,2.555,456,1.444,459,2.421,460,2.692,462,2.959,477,2.621,487,2.147,488,3.376,491,2.621,492,2.233,810,1.946,842,2.476,843,2.981,845,2.891,846,2.621,850,4.151,851,3.093,852,4.816,853,3.093,867,3.581,868,3.581,869,3.475,872,2.786,904,4.452,968,2.895,1244,3.035,1483,3.218,1593,4.21,1611,5.582,1621,5.319,1622,4.21,1623,5.582,1624,4.21,1633,3.518,1634,4.664,1635,4.664,1637,4.664,1638,5.582,1639,5.582,1640,5.582,1641,3.518,1643,4.21,2411,6.081,2531,5.158,2532,5.158,2533,6.224,2534,6.839,2535,6.839,2536,5.158,2537,5.158,2538,5.158,2539,5.158,2540,5.158,2541,6.224,2542,6.081,2543,5.158,2544,4.586,2545,4.586,2546,3.518,2547,5.158,2548,5.158]],["title/interfaces/MediaExt.html",[327,0.653,2504,2.459]],["body/interfaces/MediaExt.html",[3,0.105,4,0.092,5,0.04,8,0.04,9,2.535,10,0.169,13,1.625,15,0.276,16,0.717,25,1.863,35,1.485,44,0.007,45,0.549,46,0.203,52,1.687,58,1.657,63,0.581,74,0.237,86,0.213,115,0.004,116,0.004,121,2.161,144,1.974,174,1.655,203,1.305,240,1.435,292,3.901,296,1.291,314,1.53,327,1.272,329,1.316,332,1.827,347,2.21,352,1.73,355,2.101,358,2.982,359,1.976,361,2.508,373,3.091,374,3.091,451,0.961,452,1.219,522,1.359,804,2.953,845,1.772,857,1.454,968,2.239,1273,2.701,1350,2.632,1351,1.548,1450,4.166,1645,2.013,1653,2.929,1655,2.13,1657,2.13,1661,2.13,1663,2.13,1667,2.13,2496,2.265,2497,3.921,2498,3.921,2499,2.773,2500,2.341,2501,2.265,2502,3.206,2503,3.107,2504,3.921,2505,2.929,2506,3.921,2507,2.341,2508,2.265,2509,2.341,2510,2.341,2511,3.206,2512,4.269,2513,2.265,2514,3.206,2515,2.195,2516,2.341,2517,2.341,2518,2.341,2519,2.341,2520,2.341,2521,2.341,2522,2.013,2523,2.195]],["title/entities/MediaExtEntity.html",[264,0.72,2549,3.834]],["body/entities/MediaExtEntity.html",[3,0.166,4,0.145,5,0.034,8,0.063,10,0.128,13,1.434,15,0.588,16,0.967,30,0.741,44,0.007,45,0.517,46,0.175,63,0.537,74,0.24,86,0.155,87,1.688,115,0.006,116,0.006,264,1.319,295,1.627,347,1.867,352,1.617,456,1.851,459,2.834,460,2.417,461,3.57,462,3.087,487,2.075,492,2.861,810,2.494,842,3.172,945,3.304,1244,3.552,1393,2.933,1486,3.69,1494,4.302,2504,4.19,2546,4.507,2549,6.533,2550,6.559,2551,6.608,2552,7.117,2553,6.608,2554,6.608,2555,6.608]],["title/interfaces/MediaFile.html",[327,0.653,2497,2.459]],["body/interfaces/MediaFile.html",[3,0.101,4,0.088,5,0.041,8,0.038,9,2.511,10,0.167,13,1.593,15,0.264,16,0.695,25,1.805,35,1.421,44,0.007,45,0.545,46,0.207,52,1.663,58,1.633,63,0.579,74,0.233,86,0.211,115,0.004,116,0.004,121,2.136,144,1.951,174,1.622,203,1.407,240,1.391,292,4.205,296,1.236,314,1.557,327,1.263,329,1.26,332,1.771,347,2.23,352,1.718,355,2.751,358,2.91,359,1.916,361,2.431,373,3.438,374,3.438,451,0.919,452,1.167,522,1.317,804,2.895,845,1.696,857,1.392,968,2.17,1273,2.618,1350,2.588,1351,1.482,1450,4.149,1645,1.926,1653,1.981,1655,2.039,1657,2.039,1661,2.039,1663,2.039,1667,2.039,2496,2.168,2497,4.069,2498,3.844,2499,2.688,2500,2.241,2501,2.168,2502,3.107,2503,3.011,2504,3.519,2505,2.839,2506,4.234,2507,2.241,2508,2.168,2509,2.241,2510,2.241,2511,3.107,2512,4.198,2513,2.168,2514,3.107,2515,2.101,2516,2.241,2517,2.241,2518,2.241,2519,2.241,2520,2.241,2521,2.241,2522,1.926,2523,2.101]],["title/classes/MediaFileDto.html",[10,0.091,2514,2.538]],["body/classes/MediaFileDto.html",[3,0.098,4,0.085,5,0.041,8,0.037,9,2.496,10,0.166,13,1.669,15,0.257,16,0.681,25,1.77,30,0.783,35,1.383,44,0.007,45,0.537,46,0.206,52,1.647,58,1.668,63,0.576,74,0.231,86,0.21,115,0.004,116,0.004,118,1.114,121,2.071,144,1.937,174,1.699,203,1.364,240,1.364,292,4.077,296,1.202,314,1.538,327,1.245,332,1.736,347,2.213,352,1.697,355,2.567,358,2.866,359,1.878,361,2.384,373,3.307,374,3.307,451,0.895,452,1.136,460,2.554,522,1.292,804,3.032,845,1.651,857,1.354,968,2.128,1273,2.567,1350,2.561,1351,1.442,1450,4.184,1645,1.875,1653,1.928,1655,1.984,1657,1.984,1661,1.984,1663,1.984,1667,1.984,2303,2.805,2496,2.11,2497,4.025,2498,3.796,2499,3.093,2500,2.18,2501,2.11,2502,3.047,2503,2.953,2504,3.466,2505,2.784,2506,3.796,2507,2.18,2508,2.11,2509,2.18,2510,2.18,2511,3.047,2512,4.329,2513,2.11,2514,3.576,2515,2.045,2516,2.18,2517,2.18,2518,2.18,2519,2.18,2520,2.18,2521,2.18,2522,1.875,2523,2.045,2556,3.905,2557,3.905,2558,3.905,2559,3.905,2560,3.905,2561,3.905,2562,3.905,2563,3.905]],["title/entities/MediaFileEntity.html",[264,0.72,2533,3.578]],["body/entities/MediaFileEntity.html",[3,0.135,4,0.118,5,0.027,8,0.051,10,0.104,13,1.167,15,0.546,16,0.849,30,0.846,44,0.007,45,0.47,46,0.204,58,1.419,63,0.498,74,0.249,86,0.126,87,2.426,115,0.005,116,0.005,203,1.293,264,1.2,292,3.865,295,1.324,314,1.481,347,2.062,352,1.471,355,2.773,373,3.233,374,3.233,456,1.506,459,2.489,460,2.759,461,2.905,462,3.594,477,2.732,487,1.688,488,3.469,491,2.732,492,3.043,493,3.002,810,2.029,842,2.581,843,3.108,845,3.51,846,3.571,869,3.979,968,2.652,1631,4.389,2334,4.096,2497,3.68,2533,5.354,2542,6.25,2546,3.667,2550,7.036,2564,5.377,2565,7.029,2566,5.377,2567,5.965,2568,5.377,2569,6.25,2570,5.377,2571,5.377,2572,5.377,2573,5.377,2574,5.377,2575,5.377,2576,4.389,2577,5.377,2578,6.25]],["title/interfaces/MediaFormat.html",[327,0.653,2506,2.459]],["body/interfaces/MediaFormat.html",[3,0.104,4,0.09,5,0.04,8,0.039,9,2.527,10,0.169,13,1.614,15,0.272,16,0.709,25,1.843,35,1.463,44,0.007,45,0.547,46,0.205,52,1.679,58,1.649,63,0.584,74,0.236,86,0.212,115,0.004,116,0.004,121,2.153,144,1.966,174,1.644,203,1.298,240,1.42,292,4.03,296,1.272,314,1.528,327,1.269,329,1.297,332,1.808,347,2.206,352,1.726,355,2.079,358,2.958,359,1.956,361,2.482,373,3.467,374,3.467,451,0.946,452,1.201,522,1.345,804,2.933,845,1.746,857,1.433,968,2.216,1273,2.673,1350,2.617,1351,1.526,1450,4.16,1645,1.983,1653,2.039,1655,2.099,1657,2.099,1661,2.099,1663,2.099,1667,2.099,2496,2.232,2497,3.895,2498,3.895,2499,2.744,2500,2.307,2501,2.232,2502,3.172,2503,3.074,2504,3.576,2505,2.898,2506,4.114,2507,2.307,2508,2.232,2509,2.307,2510,2.307,2511,3.172,2512,4.245,2513,2.232,2514,3.172,2515,2.163,2516,2.307,2517,2.307,2518,2.307,2519,2.307,2520,2.307,2521,2.307,2522,1.983,2523,2.163]],["title/classes/MediaFormatDto.html",[10,0.091,2512,2.538]],["body/classes/MediaFormatDto.html",[3,0.102,4,0.089,5,0.04,8,0.039,9,2.519,10,0.168,13,1.695,15,0.267,16,0.701,25,1.823,30,0.684,35,1.44,44,0.007,45,0.541,46,0.204,52,1.67,58,1.688,63,0.58,74,0.234,86,0.212,115,0.004,116,0.004,118,1.161,121,2.097,144,1.958,174,1.726,203,1.29,240,1.404,292,4.009,296,1.252,314,1.525,327,1.255,332,1.788,347,2.202,352,1.709,355,2.056,358,2.932,359,1.934,361,2.454,373,3.353,374,3.353,451,0.932,452,1.183,460,2.231,522,1.33,804,3.08,845,1.719,857,1.411,968,2.191,1273,2.643,1350,2.602,1351,1.502,1450,4.185,1645,1.952,1653,2.008,1655,2.066,1657,2.066,1661,2.066,1663,2.066,1667,2.066,2496,2.197,2497,3.867,2498,3.867,2499,2.713,2500,2.271,2501,2.197,2502,3.137,2503,3.04,2504,3.546,2505,2.866,2506,4.09,2507,2.271,2508,2.197,2509,2.271,2510,2.271,2511,3.137,2512,4.388,2513,2.197,2514,3.137,2515,2.129,2516,2.271,2517,2.271,2518,2.271,2519,2.271,2520,2.271,2521,2.271,2522,1.952,2523,2.129,2579,4.067,2580,4.067,2581,4.067,2582,4.067]],["title/entities/MediaFormatEntity.html",[264,0.72,2567,3.374]],["body/entities/MediaFormatEntity.html",[3,0.155,4,0.136,5,0.031,8,0.059,10,0.119,13,1.344,15,0.575,16,0.929,30,0.81,44,0.007,45,0.502,46,0.192,63,0.564,74,0.231,86,0.145,87,2.298,115,0.006,116,0.006,264,1.281,295,1.525,347,1.794,352,1.571,373,3.453,374,3.453,456,1.734,459,2.723,460,2.642,461,3.345,462,3.536,487,1.944,492,2.681,810,2.336,842,2.972,945,3.174,1244,3.413,1393,2.748,1486,3.457,1494,4.031,2505,3.796,2506,4.026,2546,4.223,2550,6.854,2567,5.524,2569,6.838,2578,6.838,2583,6.191,2584,6.191,2585,6.191,2586,6.191,2587,6.191,2588,6.191]],["title/classes/MediaManager.html",[10,0.091,2515,2.459]],["body/classes/MediaManager.html",[3,0.089,4,0.078,5,0.039,8,0.034,9,2.71,10,0.165,13,1.506,15,0.234,23,1.298,25,1.655,30,0.763,35,1.261,43,1.413,44,0.007,45,0.557,46,0.206,47,1.387,50,1.757,52,1.761,58,1.566,63,0.577,74,0.222,86,0.206,115,0.004,116,0.004,118,1.016,121,2.067,144,2.083,174,1.533,184,3.129,203,1.414,240,1.275,292,3.962,296,1.097,314,1.552,327,1.223,332,1.623,347,2.19,352,1.683,355,1.867,358,2.718,359,1.756,361,2.228,373,2.864,374,2.864,451,0.816,452,1.036,522,1.438,701,3.432,804,2.736,845,1.505,857,1.235,968,1.989,1273,3.159,1350,2.673,1351,1.315,1450,4.101,1645,2.531,1647,4.304,1649,4.304,1650,4.304,1653,1.758,1655,3.189,1657,2.679,1661,2.679,1663,2.679,1667,2.679,2496,1.924,2497,3.633,2498,3.633,2499,2.464,2500,1.988,2501,1.924,2502,2.848,2503,2.76,2504,3.287,2505,2.602,2506,3.633,2507,1.988,2508,1.924,2509,1.988,2510,1.988,2511,2.848,2512,4.002,2513,1.924,2514,2.848,2515,2.76,2516,3.505,2517,3.505,2518,2.944,2519,3.505,2520,3.505,2521,3.505,2522,1.71,2523,1.865,2589,5.272,2590,3.561,2591,3.561,2592,3.561,2593,3.561,2594,3.561,2595,3.561,2596,3.561,2597,3.561,2598,3.561,2599,3.561,2600,3.561]],["title/modules/MediaModule.html",[511,1.076,2522,2.255]],["body/modules/MediaModule.html",[3,0.137,4,0.119,5,0.036,8,0.052,10,0.105,23,1.343,30,0.505,43,0.934,44,0.007,45,0.327,46,0.119,47,0.917,50,1.162,74,0.282,76,1.205,81,1.78,86,0.128,103,1.444,115,0.005,116,0.005,182,1.647,183,1.647,267,1.679,347,1.654,403,1.615,451,1.625,453,2.854,511,1.983,513,2.304,517,3.603,518,4.617,519,3.549,522,1.625,524,4.728,525,1.853,526,1.853,527,1.816,528,1.816,529,1.853,530,2.679,531,1.816,532,2.95,533,1.78,534,2.316,535,1.711,536,1.853,537,1.853,538,1.853,539,1.853,540,1.853,541,1.853,542,1.745,543,1.853,544,1.853,545,1.853,546,1.816,547,2.41,548,1.853,549,1.816,550,1.853,551,1.853,552,1.853,553,1.853,554,1.853,555,1.679,556,1.853,557,1.816,558,1.853,565,4.1,566,3.718,567,3.314,568,3.401,577,2.547,588,2.482,589,2.691,590,3.151,591,3.916,592,2.482,709,2.854,845,2.998,891,3.549,962,4.1,1645,3.405,2336,4.848,2501,2.945,2515,4.127,2522,3.784,2523,4.371,2533,5.403,2541,5.403,2544,4.848,2545,4.848,2546,3.718,2567,5.094,2576,4.45,2601,5.452,2602,5.452,2603,7.883,2604,5.452,2605,7.883,2606,4.848,2607,4.848]],["title/interfaces/MediaType.html",[327,0.653,2498,2.459]],["body/interfaces/MediaType.html",[3,0.101,4,0.088,5,0.04,8,0.039,9,2.515,10,0.168,13,1.598,15,0.266,16,0.698,25,2.446,35,1.431,44,0.007,45,0.545,46,0.207,52,1.812,58,1.637,63,0.58,74,0.234,86,0.212,115,0.004,116,0.004,121,2.14,144,1.955,174,1.628,203,1.287,240,1.398,292,3.846,296,1.245,314,1.534,327,1.264,329,1.269,332,1.78,347,2.2,352,1.72,355,2.047,358,2.922,359,1.925,361,3.294,373,3.04,374,3.04,451,0.926,452,1.175,522,1.324,804,2.904,845,1.708,857,1.402,968,2.181,1273,2.632,1350,2.595,1351,1.493,1450,4.152,1645,1.94,1653,1.995,1655,2.054,1657,2.054,1661,2.054,1663,2.054,1667,2.054,2496,2.184,2497,3.856,2498,4.08,2499,2.701,2500,2.257,2501,2.184,2502,4.21,2503,4.08,2504,4.08,2505,3.846,2506,4.244,2507,2.257,2508,2.184,2509,2.257,2510,2.257,2511,3.123,2512,4.21,2513,2.184,2514,3.123,2515,2.116,2516,2.257,2517,2.257,2518,2.257,2519,2.257,2520,2.257,2521,2.257,2522,1.94,2523,2.116]],["title/classes/MediaTypeDto.html",[10,0.091,2511,2.538]],["body/classes/MediaTypeDto.html",[3,0.099,4,0.086,5,0.039,8,0.038,9,2.502,10,0.167,13,1.675,15,0.259,16,0.686,25,2.286,30,0.768,35,1.397,44,0.007,45,0.538,46,0.207,52,1.744,58,1.673,63,0.576,74,0.231,86,0.211,115,0.004,116,0.004,118,1.126,121,2.078,144,1.942,174,1.706,203,1.275,240,1.374,292,3.81,296,1.214,314,1.525,327,1.248,332,1.749,347,2.194,352,1.7,355,2.011,358,2.882,359,1.892,361,3.078,373,3.007,374,3.007,451,0.904,452,1.147,460,2.502,522,1.301,804,3.044,845,1.667,857,1.368,968,2.143,1273,2.586,1350,2.571,1351,1.457,1450,4.187,1645,1.894,1653,1.947,1655,2.004,1657,2.004,1661,2.004,1663,2.004,1667,2.004,2303,2.833,2496,2.131,2497,3.813,2498,4.041,2499,2.654,2500,2.202,2501,2.131,2502,3.935,2503,3.813,2504,3.813,2505,3.595,2506,3.813,2507,2.202,2508,2.131,2509,2.202,2510,2.202,2511,3.597,2512,4.343,2513,2.131,2514,3.069,2515,2.065,2516,2.202,2517,2.202,2518,2.202,2519,2.202,2520,2.202,2521,2.202,2522,1.894,2523,2.065,2608,3.944,2609,3.944,2610,3.944,2611,3.944,2612,3.944,2613,3.944,2614,3.944]],["title/entities/MediaTypeEntity.html",[264,0.72,2541,3.578]],["body/entities/MediaTypeEntity.html",[3,0.139,4,0.121,5,0.028,8,0.053,10,0.107,13,1.203,15,0.553,16,0.866,25,2.495,30,0.84,44,0.007,45,0.477,46,0.199,52,1.728,63,0.504,74,0.252,86,0.13,87,2.03,115,0.005,116,0.005,182,2.538,220,5.15,264,1.217,295,1.365,314,1.162,347,1.96,352,1.493,361,3.359,456,1.553,459,2.539,460,2.74,461,2.995,462,3.24,487,1.74,492,2.4,493,3.095,810,2.092,842,2.661,846,2.817,867,3.754,868,3.754,869,3.643,902,4.223,945,3.679,1244,3.182,1357,3.874,1393,2.461,1486,3.095,1494,3.609,1540,4.89,1629,6.376,1631,4.525,2498,3.754,2502,4.293,2503,4.161,2505,3.923,2541,5.462,2546,3.781,2549,6.859,2550,7.002,2567,6.035,2576,4.525,2615,5.544,2616,5.544,2617,7.17,2618,5.544,2619,5.544,2620,5.544,2621,5.544,2622,5.544,2623,5.544,2624,5.544,2625,5.544]],["title/interfaces/MessageBus.html",[327,0.653,2626,3.834]],["body/interfaces/MessageBus.html",[3,0.145,4,0.127,5,0.029,8,0.055,15,0.381,23,1.817,30,0.752,43,1.546,44,0.007,45,0.487,46,0.203,47,1.366,50,1.73,74,0.174,86,0.173,115,0.005,116,0.005,144,1.69,174,2.07,181,3.359,184,3.638,314,0.94,327,1.129,329,1.82,451,1.328,760,5.621,778,6.478,823,3.352,1330,4.164,2626,6.023,2627,6.137,2628,6.137,2629,5.156,2630,6.023,2631,6.562,2632,7.218,2633,6.183,2634,7.218,2635,5.156,2636,8.492,2637,8.328,2638,7.704,2639,5.798,2640,7.218,2641,5.156,2642,5.798,2643,7.845,2644,5.156,2645,5.798,2646,4.733,2647,3.954,2648,4.733]],["title/interfaces/MessagesBroker.html",[327,0.653,2649,3.578]],["body/interfaces/MessagesBroker.html",[3,0.142,4,0.124,5,0.029,8,0.081,15,0.372,23,1.79,30,0.744,43,1.501,44,0.007,45,0.482,46,0.192,47,1.351,50,1.711,63,0.56,86,0.133,88,2.646,115,0.005,116,0.005,144,1.665,174,2.078,181,3.988,266,4.733,267,2.76,319,3.036,327,1.011,329,1.778,760,4.315,933,4.36,1260,5.254,1338,4.988,2630,4.623,2633,6.828,2649,5.538,2650,6.453,2651,5.514,2652,5.664,2653,4.623,2654,7.532,2655,7.532,2656,6.464,2657,5.664,2658,5.934,2659,8.464,2660,7.971,2661,6.464,2662,5.664,2663,6.464,2664,6.464,2665,5.664,2666,6.464]],["title/modules/MessagesBrokerModule.html",[511,1.076,2667,3.374]],["body/modules/MessagesBrokerModule.html",[3,0.139,4,0.121,5,0.036,8,0.053,10,0.107,21,3.51,44,0.007,74,0.272,76,1.225,81,1.81,86,0.13,103,1.469,115,0.005,116,0.005,181,3.264,267,1.707,276,2.591,277,4.3,403,1.643,506,2.343,511,1.993,513,2.343,525,1.884,526,1.884,527,1.847,528,1.847,529,1.884,530,2.701,531,1.847,532,2.961,533,1.81,534,2.341,535,1.74,536,1.884,537,1.884,538,1.884,539,1.884,540,1.884,541,1.884,542,1.775,543,1.884,544,1.884,545,1.884,546,1.847,547,2.437,548,1.884,549,1.847,550,1.884,551,1.884,552,1.884,553,1.884,554,1.884,555,1.707,556,1.884,557,1.847,558,1.884,567,3.351,577,3.714,580,3.609,588,3.264,589,2.737,590,3.205,592,3.264,679,3.754,724,3.095,725,3.325,726,3.325,727,3.325,731,5.665,732,4.3,733,3.325,734,3.095,737,4.473,738,4.473,740,3.982,741,3.459,742,3.982,743,3.982,747,4.525,748,3.781,749,3.781,750,3.781,751,4.525,752,3.982,753,4.525,754,4.223,755,4.525,756,4.223,757,4.525,758,4.525,2374,4.89,2650,4.223,2651,3.609,2653,5.853,2667,6.402,2668,4.93,2669,5.544,2670,5.544,2671,6.054,2672,4.525,2673,4.93,2674,5.15,2675,4.93]],["title/injectables/MessagesBrokerService.html",[495,1.475,2674,3.374]],["body/injectables/MessagesBrokerService.html",[3,0.102,4,0.089,5,0.021,8,0.078,10,0.079,13,1.471,15,0.268,16,0.703,18,2.902,23,1.432,24,2.451,25,2.858,30,0.792,43,1.492,44,0.007,45,0.488,46,0.196,47,1.368,50,1.783,58,1.493,63,0.567,74,0.222,76,0.901,86,0.096,88,2.527,89,1.414,93,1.572,98,2.017,103,2.071,115,0.004,116,0.004,137,1.443,149,3.045,174,2.087,181,3.7,182,1.231,183,1.231,212,3.488,219,3.628,265,5.534,266,3.786,267,2.503,277,3.488,319,2.976,327,0.809,495,1.826,497,1.855,506,1.723,522,1.332,738,5.336,856,5.336,933,4.688,1260,4.688,1329,6.035,1338,4.703,2374,2.78,2633,6.192,2649,5.632,2650,6.632,2651,5.667,2653,4.747,2654,6.574,2655,6.574,2656,5.171,2658,4.747,2659,8.026,2660,7.439,2661,5.171,2663,5.171,2664,5.171,2666,5.171,2674,4.177,2676,4.076,2677,6.78,2678,5.815,2679,5.815,2680,4.076,2681,4.076,2682,5.815,2683,4.076,2684,5.815,2685,4.076,2686,7.393,2687,5.815,2688,5.815,2689,5.815,2690,5.815,2691,4.076,2692,5.815,2693,5.815,2694,5.815,2695,4.076,2696,4.076,2697,4.076,2698,4.076,2699,2.927,2700,3.624,2701,2.927,2702,3.624,2703,4.076,2704,4.076,2705,4.076,2706,4.076,2707,4.076,2708,4.076,2709,4.076,2710,4.076,2711,4.076,2712,4.076,2713,4.076,2714,4.076,2715,4.076,2716,4.076,2717,4.076,2718,4.076,2719,4.076]],["title/classes/MsClient.html",[10,0.091,2720,3.834]],["body/classes/MsClient.html",[3,0.089,4,0.184,5,0.018,8,0.071,10,0.069,13,1.144,15,0.234,18,1.829,21,3.237,23,1.298,25,2.325,30,0.686,35,2.457,43,1.443,44,0.007,45,0.444,46,0.184,47,1.495,50,1.757,51,1.315,58,1.065,66,4.061,74,0.252,76,0.787,85,2.558,86,0.084,88,2.683,89,2.407,97,3.289,98,2.177,103,1.962,115,0.004,116,0.004,118,1.016,124,2.848,137,1.867,144,1.59,149,3.878,170,4.016,174,2.132,181,4.333,182,1.076,183,1.076,184,2.799,190,2.713,195,2.907,196,2.907,319,1.186,451,1.888,504,1.988,506,1.505,509,1.865,624,4.016,665,2.222,666,2.059,670,2.944,673,2.319,741,2.222,778,6.901,820,5.048,823,4.95,827,3.25,936,2.907,1325,2.907,1330,2.558,2065,2.319,2164,4.304,2373,4.016,2374,3.596,2626,5.124,2627,5.571,2628,5.571,2632,5.582,2633,4.782,2634,6.587,2635,3.167,2636,7.818,2637,8.182,2638,7.251,2640,5.582,2641,3.167,2643,8.088,2644,3.167,2647,4.733,2648,5.124,2658,4.304,2720,4.304,2721,3.561,2722,4.688,2723,4.304,2724,6.277,2725,6.277,2726,6.17,2727,3.561,2728,3.561,2729,5.272,2730,5.272,2731,3.561,2732,5.272,2733,3.561,2734,3.561,2735,5.272,2736,3.561,2737,5.272,2738,2.713,2739,3.561,2740,3.561,2741,5.272,2742,3.167,2743,3.561,2744,4.016,2745,3.561,2746,2.558,2747,2.558,2748,5.272,2749,6.277,2750,3.561,2751,3.167,2752,3.561,2753,3.561,2754,3.561,2755,6.277,2756,3.561,2757,3.561,2758,3.167,2759,3.561,2760,3.561,2761,4.688,2762,3.561,2763,3.561,2764,3.561,2765,3.561,2766,3.561,2767,3.561,2768,3.561,2769,3.561,2770,3.561]],["title/modules/MsClientModule.html",[511,1.076,2771,3.578]],["body/modules/MsClientModule.html",[3,0.135,4,0.118,5,0.036,8,0.052,10,0.104,21,3.687,44,0.007,45,0.324,74,0.27,76,1.193,81,1.763,86,0.127,98,1.873,103,1.43,115,0.005,116,0.005,267,1.662,403,1.6,451,1.237,506,2.979,511,1.977,513,2.282,525,1.835,526,1.835,527,1.798,528,1.798,529,1.835,530,2.667,531,1.798,532,2.943,533,1.763,534,2.301,535,1.695,536,1.835,537,1.835,538,1.835,539,1.835,540,1.835,541,1.835,542,1.728,543,1.835,544,1.835,545,1.835,546,1.798,547,2.395,548,1.835,549,1.798,550,1.835,551,1.835,552,1.835,553,1.835,554,1.835,555,1.662,556,1.835,557,1.798,558,1.835,567,4.212,577,3.667,580,4.588,588,3.208,589,2.665,592,3.208,679,3.69,724,3.014,725,3.238,726,3.238,727,3.238,732,4.227,733,3.238,734,3.014,737,4.397,740,3.878,741,3.368,742,3.878,743,3.878,748,3.682,750,3.682,752,3.878,823,4.988,2374,4.807,2627,3.878,2628,3.878,2647,5.673,2648,4.407,2720,4.407,2722,6.267,2723,5.753,2726,6.267,2738,4.113,2742,6.267,2758,4.801,2771,6.741,2772,4.801,2773,5.399,2774,5.399,2775,5.399,2776,6.977,2777,6.977,2778,5.399,2779,5.399,2780,5.399,2781,5.399,2782,5.399,2783,5.399,2784,5.399]],["title/classes/MsException.html",[10,0.091,670,2.623]],["body/classes/MsException.html",[3,0.166,4,0.145,5,0.034,8,0.063,10,0.166,18,2.991,30,0.614,43,1.136,44,0.007,45,0.398,46,0.176,47,1.116,63,0.517,74,0.24,85,4.763,86,0.156,115,0.006,116,0.006,118,1.892,137,2.84,181,4.078,184,2.675,218,2.871,314,1.398,352,1.62,499,3.748,510,3.977,664,5.004,665,5.004,669,5.221,670,4.478,2436,7.966,2738,5.051,2744,6.11,2785,6.631,2786,8.02,2787,8.02,2788,9.173,2789,6.631,2790,6.631]],["title/injectables/NotEmptyPipe.html",[495,1.475,2791,4.177]],["body/injectables/NotEmptyPipe.html",[3,0.166,4,0.145,5,0.034,8,0.063,10,0.128,13,1.434,15,0.435,18,2.292,23,1.971,30,0.741,43,1.372,44,0.007,45,0.48,46,0.175,47,1.347,50,1.409,63,0.517,74,0.198,76,1.46,86,0.155,97,4.123,98,2.292,103,1.751,115,0.006,116,0.006,137,2.34,183,2.768,293,5.394,495,2.513,497,3.008,862,3.82,1221,5.459,1333,4.747,1709,7.656,2791,7.117,2792,8.61,2793,6.608,2794,8.004,2795,8.004,2796,6.608,2797,6.608,2798,7.117,2799,8.004,2800,6.608,2801,8.004,2802,6.608,2803,6.608]],["title/classes/NotFoundMsException.html",[10,0.091,2804,4.177]],["body/classes/NotFoundMsException.html",[3,0.171,4,0.149,5,0.035,8,0.065,10,0.131,30,0.63,43,1.166,44,0.007,45,0.408,46,0.149,47,1.145,59,6.635,63,0.523,74,0.244,76,1.503,86,0.16,115,0.006,116,0.006,118,1.941,137,2.409,181,3.708,184,2.744,499,3.806,663,4.64,664,5.081,665,5.081,666,4.708,668,5.555,669,5.303,670,5.158,671,5.555,672,4.64,673,4.429,674,4.64,2804,7.243,2805,8.145,2806,6.803]],["title/classes/PageableData.html",[10,0.091,1064,2.538]],["body/classes/PageableData.html",[3,0.128,4,0.112,5,0.026,8,0.065,10,0.172,18,2.824,30,0.473,34,5.079,43,1.165,44,0.007,45,0.307,46,0.206,47,1.37,63,0.534,74,0.204,86,0.179,88,2.459,103,1.801,115,0.005,116,0.005,118,1.458,125,3.929,137,2.407,174,1.688,182,2.053,247,3.929,314,1.58,319,2.823,381,3.672,595,4.172,813,3.188,814,2.676,857,1.773,914,6.202,924,2.676,948,4.077,1005,2.761,1008,5.106,1012,4.172,1064,4.398,1082,3.893,1083,5.818,1094,5.178,1098,6.645,1281,4.425,1415,4.264,1468,4.636,1480,4.636,1489,4.172,1826,6.234,2807,4.172,2808,5.111,2809,7.239,2810,7.239,2811,5.111,2812,7.737,2813,6.045,2814,4.545,2815,4.545,2816,6.045,2817,4.545,2818,6.045,2819,6.645,2820,4.545,2821,4.172,2822,4.545,2823,5.178]],["title/classes/PageableParams.html",[10,0.091,1005,2.538]],["body/classes/PageableParams.html",[3,0.124,4,0.108,5,0.025,8,0.047,10,0.17,15,0.325,16,0.804,18,2.787,30,0.777,34,4.151,43,1.14,44,0.007,46,0.209,47,1.529,63,0.545,74,0.199,86,0.177,88,2.427,103,1.763,115,0.005,116,0.005,118,1.412,125,2.861,137,1.752,174,1.47,182,2.427,183,2.01,247,4.345,314,1.549,319,2.503,381,4.342,460,2.533,595,5.431,813,3.088,814,2.591,857,1.717,914,6.578,924,2.591,948,2.969,1005,3.595,1008,5.008,1012,5.431,1064,3.595,1082,5.725,1083,6.388,1094,5.068,1098,5.431,1281,3.222,1415,3.715,1468,3.376,1480,4.538,1489,4.04,1826,5.431,2807,4.04,2809,5.916,2810,5.916,2812,7.495,2813,4.401,2814,4.401,2815,4.401,2816,5.916,2817,4.401,2818,6.683,2819,6.845,2820,4.401,2821,4.04,2822,4.401,2823,5.068,2824,7.516,2825,4.95,2826,4.95,2827,4.95,2828,4.95,2829,4.95,2830,4.95,2831,4.95]],["title/interfaces/ProcessLog.html",[327,0.653,2832,3.578]],["body/interfaces/ProcessLog.html",[3,0.159,4,0.139,5,0.032,8,0.075,15,0.418,16,0.944,44,0.007,46,0.198,52,1.306,63,0.544,74,0.234,86,0.183,115,0.006,116,0.006,121,2.122,122,5.101,123,4.839,147,3.809,178,5.086,179,5.951,187,4.332,194,4.332,203,1.458,240,2.261,314,1.372,327,1.261,329,1.994,352,1.193,359,3.019,826,4.135,1003,4.929,1350,2.602,1351,2.346,2432,4.332,2832,6.446,2833,5.648,2834,6.725,2835,6.341,2836,5.185]],["title/entities/ProcessLogEntity.html",[140,3.058,264,0.72]],["body/entities/ProcessLogEntity.html",[3,0.136,4,0.119,5,0.036,8,0.052,10,0.104,13,1.175,15,0.548,16,0.853,30,0.8,44,0.007,45,0.424,46,0.202,63,0.424,74,0.236,81,1.768,86,0.127,87,2.127,115,0.005,116,0.005,122,4.245,140,4.596,203,1.298,240,2.014,264,1.204,267,1.667,295,1.333,314,1.145,319,2.352,359,2.617,403,1.604,456,1.516,459,2.5,460,2.608,462,2.723,477,2.751,487,1.7,488,3.485,491,2.751,525,1.84,526,1.84,527,1.803,528,1.803,529,1.84,530,2.67,531,1.803,532,2.945,533,1.768,534,2.305,535,1.7,536,1.84,537,1.84,538,1.84,539,1.84,540,1.84,541,1.84,542,1.733,543,1.84,544,1.84,545,1.84,546,1.803,547,2.399,548,1.84,549,1.803,550,1.84,551,1.84,552,1.84,553,1.84,554,1.84,555,1.667,556,1.84,557,1.803,558,1.84,846,2.751,847,4.405,869,3.587,962,4.081,1003,4.387,1036,4.405,1531,4.419,1539,4.419,1633,3.693,1634,4.816,1635,5.679,1637,4.816,2432,4.816,2832,5.379,2834,5.985,2837,5.414,2838,5.414,2839,5.414,2840,5.981,2841,5.414,2842,5.414,2843,5.414,2844,7.06,2845,5.414,2846,7.06,2847,5.414,2848,4.419,2849,5.414]],["title/injectables/ProcessManagerService.html",[142,3.058,495,1.475]],["body/injectables/ProcessManagerService.html",[3,0.066,4,0.058,5,0.013,8,0.077,10,0.051,15,0.173,16,0.504,18,2.238,21,3.014,23,1.028,24,3.277,25,2.527,30,0.78,33,2.412,34,2.604,43,1.38,44,0.007,45,0.483,46,0.179,47,1.355,50,1.866,51,1.917,52,0.858,63,0.544,74,0.253,76,0.58,86,0.062,87,1.908,88,2.511,89,2.792,93,3.105,97,3.239,98,2.238,103,1.98,115,0.003,116,0.003,122,5.201,123,6.009,124,2.255,125,4.869,126,3.406,134,2.717,135,2.997,137,1.478,140,5.547,142,2.717,146,5.692,147,5.25,163,3.179,166,2.846,167,2.604,169,3.179,172,2.255,174,1.518,178,4.865,182,1.786,183,1.26,187,1.792,189,2.144,194,4.034,202,2.144,203,1.189,206,2.144,288,2.33,295,0.647,311,4.238,314,1.167,352,1.787,451,0.956,456,1.169,495,1.31,497,1.196,506,1.11,509,1.375,517,2.638,522,1.355,641,4.688,681,5.486,693,3.179,705,2.33,708,1.887,709,1.375,715,1.419,826,5.011,836,2.12,924,2.185,945,1.723,1003,1.467,1015,3.179,1036,4.493,1063,1.71,1082,4.915,1083,2.001,1143,2.144,1281,2.717,1318,3.406,1387,1.467,1437,2.06,2043,4.617,2056,2.144,2432,4.034,2484,4.505,2649,4.505,2651,2.717,2671,2.001,2672,2.144,2700,2.336,2823,2.001,2834,2.001,2840,3.729,2850,7.576,2851,2.627,2852,5.192,2853,4.173,2854,4.173,2855,4.173,2856,4.173,2857,4.173,2858,5.914,2859,5.914,2860,4.173,2861,3.711,2862,3.711,2863,4.173,2864,4.173,2865,2.627,2866,4.505,2867,4.617,2868,5.192,2869,5.192,2870,4.173,2871,3.711,2872,4.173,2873,2.627,2874,6.452,2875,4.173,2876,2.627,2877,4.173,2878,3.711,2879,4.173,2880,2.627,2881,3.179,2882,4.173,2883,4.173,2884,2.627,2885,4.173,2886,2.627,2887,2.627,2888,5.914,2889,5.259,2890,3.711,2891,2.627,2892,3.711,2893,4.173,2894,2.627,2895,4.173,2896,2.627,2897,4.173,2898,2.627,2899,4.173,2900,2.627,2901,4.173,2902,4.173,2903,4.173,2904,2.627,2905,2.336,2906,1.792,2907,2.336,2908,2.336,2909,3.406,2910,2.144,2911,2.336,2912,2.627,2913,2.627,2914,2.336,2915,2.336,2916,2.627,2917,2.627,2918,4.173,2919,2.627,2920,2.627,2921,2.627,2922,4.173,2923,4.173,2924,7.491,2925,2.336,2926,2.336,2927,4.617,2928,2.144,2929,2.336,2930,2.144,2931,2.336,2932,4.173,2933,5.914,2934,2.627,2935,2.627,2936,2.627,2937,2.627,2938,4.173,2939,5.192,2940,4.173,2941,2.627,2942,4.173,2943,2.627,2944,2.627,2945,2.627,2946,2.627,2947,2.627,2948,2.627,2949,2.627,2950,2.336]],["title/modules/ProcessModule.html",[511,1.076,2951,3.578]],["body/modules/ProcessModule.html",[3,0.128,4,0.111,5,0.034,8,0.049,10,0.098,13,1.103,18,1.763,23,1.252,24,2.449,30,0.471,44,0.007,50,1.084,74,0.277,76,1.123,81,1.66,86,0.119,93,1.961,115,0.005,116,0.005,122,3.66,124,3.66,127,3.873,140,4.41,142,6.135,188,3.873,189,4.15,267,1.565,403,1.507,511,1.938,513,2.149,525,1.728,526,1.728,527,1.693,528,1.693,529,1.728,530,2.589,531,1.693,532,2.9,533,1.66,534,2.212,535,1.596,536,1.728,537,1.728,538,1.728,539,1.728,540,1.728,541,1.728,542,1.628,543,1.728,544,1.728,545,1.728,546,1.693,547,2.302,548,1.728,549,1.693,550,1.728,551,1.728,552,1.728,553,1.728,554,1.728,555,1.565,556,1.728,557,1.693,558,1.728,567,4.066,568,3.172,577,3.165,588,3.468,592,3.468,709,2.662,724,2.839,725,3.049,726,3.049,727,3.049,732,4.063,733,3.049,734,2.839,891,3.31,965,4.866,966,5.16,1036,5.068,1047,5.529,1333,3.652,2651,3.31,2667,6.25,2840,3.652,2905,4.521,2909,4.15,2951,7.248,2952,4.521,2953,4.521,2954,4.521,2955,4.521,2956,6.25,2957,6.629,2958,5.084,2959,6.774,2960,6.024,2961,6.774,2962,6.774,2963,6.774,2964,8.883,2965,6.024,2966,6.024,2967,5.084,2968,5.084,2969,4.15,2970,5.084,2971,5.084,2972,5.084,2973,5.084,2974,5.084,2975,5.084]],["title/injectables/ProcessRegisterService.html",[495,1.475,2957,3.578]],["body/injectables/ProcessRegisterService.html",[3,0.097,4,0.084,5,0.02,8,0.073,10,0.074,15,0.253,18,2.651,21,3.317,23,1.374,24,3.045,25,2.905,30,0.708,43,1.31,44,0.007,45,0.459,46,0.167,47,1.286,50,1.699,51,2.06,60,5.485,74,0.272,76,0.85,86,0.09,87,2.036,88,2.175,89,2.651,93,2.152,98,1.335,103,2.231,115,0.004,116,0.004,122,5.047,124,3.014,127,5.001,134,3.632,135,4.008,137,1.976,142,4.687,147,2.308,163,4.25,169,4.25,174,1.973,187,2.624,188,2.931,194,2.624,202,5.358,207,4.962,352,1.048,495,1.752,497,1.752,504,2.148,506,1.626,509,2.015,522,1.278,933,3.346,945,3.395,1036,3.481,1063,2.505,1387,2.148,1435,4.962,2056,3.141,2651,3.632,2671,2.931,2672,3.141,2674,5.171,2675,3.422,2835,6.473,2848,3.141,2850,7.088,2861,4.962,2862,4.962,2866,5.485,2867,5.837,2871,5.837,2890,4.962,2906,2.624,2907,3.422,2908,3.422,2909,4.554,2910,3.141,2911,3.422,2914,3.422,2915,3.422,2924,7.49,2925,3.422,2926,7.634,2927,3.422,2928,7.356,2929,3.422,2930,7.415,2931,3.422,2950,3.422,2957,4.25,2969,3.141,2976,3.848,2977,5.58,2978,5.58,2979,5.58,2980,5.58,2981,8.223,2982,3.848,2983,5.58,2984,3.848,2985,5.837,2986,5.58,2987,3.848,2988,5.58,2989,3.848,2990,5.58,2991,3.848,2992,5.58,2993,5.837,2994,5.58,2995,3.848,2996,3.848,2997,3.848,2998,3.848,2999,3.848,3000,3.848,3001,3.848,3002,3.848,3003,3.848,3004,3.848,3005,3.848,3006,3.848,3007,7.971,3008,6.564,3009,6.564,3010,3.848,3011,5.58,3012,3.848,3013,5.58,3014,3.848,3015,3.848,3016,3.848,3017,3.848,3018,3.848,3019,3.848,3020,3.848,3021,3.848,3022,3.848,3023,3.848]],["title/interfaces/ProcessUnit.html",[327,0.653,2835,3.374]],["body/interfaces/ProcessUnit.html",[3,0.156,4,0.136,5,0.032,8,0.086,15,0.409,16,0.932,44,0.007,46,0.204,52,1.724,63,0.558,74,0.231,86,0.181,115,0.006,116,0.006,121,2.102,122,4.867,123,5.875,147,5.256,178,4.05,179,4.739,187,4.243,194,5.718,203,1.027,240,2.179,314,1.008,327,1.253,329,1.953,352,1.646,359,3.001,826,5.705,1003,3.473,1350,2.919,1351,2.297,2432,5.977,2832,6.676,2833,5.532,2834,4.739,2835,6.021,2836,7.154]],["title/entities/ProcessUnitEntity.html",[264,0.72,2840,3.374]],["body/entities/ProcessUnitEntity.html",[3,0.123,4,0.107,5,0.034,8,0.076,10,0.095,13,1.065,15,0.566,16,0.799,30,0.815,44,0.007,45,0.449,46,0.201,52,1.36,61,2.293,63,0.48,74,0.251,81,1.602,86,0.115,87,2.248,115,0.005,116,0.005,122,2.651,140,5.213,147,4.488,182,2.419,187,3.346,194,4.511,218,2.864,240,1.6,264,1.146,267,1.511,295,1.208,352,1.405,359,2.492,403,1.454,456,1.374,459,2.342,460,2.659,461,2.651,462,3.088,487,2.076,492,2.124,525,1.667,526,1.667,527,1.634,528,1.634,529,1.667,530,2.543,531,1.634,532,2.874,533,1.602,534,2.159,535,1.54,536,1.667,537,1.667,538,1.667,539,1.667,540,1.667,541,1.667,542,1.571,543,1.667,544,1.667,545,1.667,546,1.634,547,2.248,548,1.667,549,1.634,550,1.667,551,1.667,552,1.667,553,1.667,554,1.667,555,1.511,556,1.667,557,1.634,558,1.667,826,4.871,827,2.608,850,4.069,851,2.943,852,4.326,853,2.943,867,3.463,868,3.463,872,2.651,945,2.73,962,3.823,1036,4.126,1393,2.178,1473,3.737,1479,4.005,1480,5.462,1483,3.061,1486,2.739,1496,3.737,1540,3.346,1593,4.005,1594,5.399,1611,5.399,1633,3.346,1634,4.511,1635,4.511,1637,4.511,2432,5.103,2835,4.751,2836,6.108,2840,4.751,2848,4.005,3024,4.906,3025,5.399,3026,4.906,3027,6.614,3028,4.906,3029,4.906,3030,4.906,3031,6.614,3032,4.906,3033,4.906,3034,4.906,3035,4.906,3036,4.906,3037,4.906,3038,4.906,3039,4.906]],["title/injectables/RedisCacheService.html",[495,1.475,745,3.834]],["body/injectables/RedisCacheService.html",[3,0.073,4,0.064,5,0.015,8,0.076,10,0.107,13,0.63,15,0.191,18,1.566,19,3.175,21,3.017,23,1.112,24,3.279,25,1.417,30,0.736,43,1.361,44,0.007,45,0.477,46,0.174,47,1.432,50,1.871,51,1.667,52,1.285,60,5.459,61,3.349,63,0.561,66,3.271,68,2.939,74,0.203,76,0.641,86,0.068,87,2.074,88,2.498,89,2.167,93,2.983,98,1.921,103,2.255,115,0.003,116,0.004,137,1.598,144,2.105,149,4.665,166,4.262,167,4.956,180,4.032,183,2.796,184,1.171,212,4.059,219,4.223,314,1.288,317,3.079,327,0.628,495,1.417,497,1.321,504,1.621,506,1.227,509,1.52,522,1.034,585,6.751,607,3.467,635,6.354,636,6.185,646,4.659,679,2.363,737,2.816,738,5.311,741,1.811,744,2.581,745,3.685,762,4.014,763,4.014,764,4.014,765,4.014,766,4.014,767,4.014,768,4.014,770,4.014,772,4.014,774,4.014,776,4.014,778,5.372,779,4.014,781,4.014,783,2.581,784,5.384,823,3.202,945,3.279,954,3.685,989,3.685,1007,3.929,1041,6.372,1042,5.556,1073,7.657,1344,3.747,1437,2.228,2065,1.89,2203,6.186,2233,5.556,2699,2.085,2701,2.085,2746,2.085,2747,2.085,2761,4.925,2878,6.372,2881,2.211,3040,8.12,3041,2.903,3042,4.514,3043,2.903,3044,2.903,3045,2.903,3046,4.76,3047,4.514,3048,2.903,3049,2.903,3050,2.903,3051,6.768,3052,2.903,3053,6.248,3054,2.903,3055,4.514,3056,4.514,3057,2.903,3058,2.581,3059,2.903,3060,2.903,3061,4.514,3062,4.514,3063,4.514,3064,2.903,3065,2.903,3066,2.903,3067,2.903,3068,2.903,3069,2.903,3070,2.903,3071,2.903,3072,2.903,3073,2.903,3074,2.581,3075,2.903,3076,2.903,3077,2.903,3078,2.903,3079,2.903,3080,2.211]],["title/modules/RedisModule.html",[511,1.076,731,3.058]],["body/modules/RedisModule.html",[3,0.135,4,0.118,5,0.036,8,0.051,10,0.104,21,3.157,23,1.322,24,1.941,25,1.686,30,0.497,43,0.92,44,0.007,45,0.322,46,0.171,47,0.903,50,1.145,61,3.282,63,0.47,74,0.249,76,1.187,81,1.753,86,0.126,89,2.714,98,1.862,103,1.86,115,0.005,116,0.005,267,1.653,276,2.509,314,1.138,403,1.591,451,1.609,506,3.308,511,1.973,513,2.269,517,3.976,524,4.693,525,1.825,526,1.825,527,1.788,528,1.788,529,1.825,530,2.659,531,1.788,532,2.939,533,1.753,534,2.293,535,1.686,536,1.825,537,1.825,538,1.825,539,1.825,540,1.825,541,1.825,542,1.719,543,1.825,544,1.825,545,1.825,546,1.788,547,2.387,548,1.825,549,1.788,550,1.825,551,1.825,552,1.825,553,1.825,554,1.825,555,1.653,556,1.825,557,1.788,558,1.825,577,3.879,580,5.095,588,2.444,589,2.65,592,2.444,679,3.677,731,5.095,738,5.178,742,3.857,743,3.857,748,3.662,749,3.662,750,3.662,752,3.857,754,4.09,756,4.09,793,4.775,794,6.245,795,4.79,801,6.245,823,4.059,827,2.769,1747,4.383,2699,3.857,2701,5.621,3058,4.775,3081,5.369,3082,7.023,3083,5.369,3084,5.369,3085,7.826,3086,5.369,3087,5.369,3088,5.369,3089,5.369,3090,5.369]],["title/classes/Roles.html",[10,0.091,899,2.387]],["body/classes/Roles.html",[3,0.142,4,0.124,5,0.029,8,0.054,10,0.14,15,0.372,16,0.969,18,3.234,30,0.743,34,3.529,35,2.841,41,3.791,42,3.392,44,0.007,45,0.436,46,0.176,58,1.142,63,0.481,71,2.325,84,4.309,85,4.062,86,0.188,89,2.519,115,0.005,116,0.005,118,1.614,121,1.821,175,5.533,182,2.423,183,2.423,311,7.534,500,3.392,517,4.776,609,3.07,620,5.472,625,6.91,666,3.269,670,3.158,811,3.682,899,4.076,923,6.63,948,5.374,1030,4.179,1346,4.479,1455,6.63,2329,4.062,2647,3.858,2744,4.309,3091,5.029,3092,4.617,3093,5.656,3094,5.18,3095,7.263,3096,5.656,3097,5.656,3098,7.263,3099,5.929]],["title/guards/RolesGuard.html",[0,3.374,3100,4.177]],["body/guards/RolesGuard.html",[0,5.376,2,4.84,3,0.149,4,0.13,5,0.03,8,0.057,10,0.144,13,1.287,14,7.66,15,0.39,18,2.057,23,1.843,28,6.656,29,6.562,30,0.693,38,3.695,41,3.241,43,1.283,44,0.007,45,0.449,46,0.164,47,1.259,48,4.259,50,1.264,52,1.539,57,4.84,74,0.276,76,1.31,83,4.517,84,4.517,85,4.259,86,0.139,87,2.095,89,2.988,90,5.273,103,2.282,115,0.005,116,0.005,137,2.099,247,3.428,495,2.35,899,4.167,945,2.448,1333,4.259,3094,4.741,3100,7.293,3101,5.929,3102,5.702,3103,5.929,3104,9.071,3105,5.929,3106,5.929,3107,5.273,3108,5.929,3109,5.929,3110,6.656,3111,5.929,3112,5.929,3113,4.489,3114,5.929,3115,5.929,3116,5.929,3117,5.929,3118,7.485,3119,5.929,3120,5.929,3121,5.273,3122,5.929]],["title/interfaces/TargetData.html",[327,0.653,1392,2.817]],["body/interfaces/TargetData.html",[3,0.079,4,0.069,5,0.016,8,0.067,9,2.37,10,0.126,15,0.207,16,0.581,38,1.557,41,3.044,43,1.362,44,0.007,45,0.507,46,0.194,47,0.531,50,1.643,51,1.165,52,1.887,58,1.677,63,0.563,66,1.652,71,1.868,74,0.238,86,0.201,88,2.692,115,0.004,116,0.003,121,2.148,144,2.112,172,1.704,174,1.835,180,2.31,203,1.273,240,0.763,264,1.464,285,1.824,295,0.777,296,0.971,314,1.388,319,2.175,327,1.23,329,0.99,347,1.123,348,1.333,352,0.904,355,1.704,356,1.244,451,0.723,452,0.917,456,0.884,487,1.832,502,1.652,511,0.723,522,1.103,607,3.181,609,2.034,633,1.761,696,1.761,702,2.52,705,2.687,715,3.153,810,1.19,814,1.652,836,3.317,838,2.6,901,3.055,910,1.761,920,2.782,924,1.652,949,1.704,1005,3.153,1007,3.317,1009,1.892,1030,1.557,1040,1.704,1064,2.6,1065,1.892,1220,1.557,1243,1.892,1244,1.4,1336,1.824,1337,1.892,1338,1.704,1339,1.892,1340,1.652,1341,1.968,1342,1.892,1343,1.968,1344,1.892,1345,1.892,1346,1.761,1348,4.546,1349,1.761,1350,2.766,1351,1.165,1352,1.892,1353,4.279,1354,1.824,1355,1.652,1356,1.824,1357,1.704,1358,2.887,1359,1.892,1360,4.706,1361,1.892,1362,1.761,1363,4.593,1364,1.652,1365,2.687,1366,1.892,1367,1.892,1368,1.892,1369,1.892,1370,1.824,1371,1.824,1372,1.892,1373,1.892,1374,1.892,1375,1.892,1376,1.892,1377,1.892,1378,1.892,1379,1.892,1380,1.892,1381,1.892,1382,1.892,1383,1.892,1384,1.892,1385,3.373,1386,1.892,1387,2.687,1388,2.782,1389,1.968,1390,2.782,1391,1.704,1392,3.5,1393,2.898,1394,4.073,1395,2.887,1396,5.065,1397,2.52,1398,1.968,1399,1.968,1400,1.968,1401,1.968,1402,1.892,1403,1.892,1404,1.824,1405,1.968,1406,1.968,1407,1.824,1408,1.824,1409,1.603,1410,1.761,1411,1.968,1412,1.824,1413,1.968,1414,1.968,1415,2.687,1416,1.892,1417,5.182,1418,4.622,1419,4.386,1420,1.968,1421,1.892,1422,2.887,1423,1.968,1424,1.968,1425,3.641,1426,1.892,1427,1.968,1428,1.704,1429,3.003,1430,1.968,1431,1.968,1432,1.968,1433,1.968,1434,1.968,1435,1.824,1436,1.892,1437,1.557,1438,1.968,1439,1.968,1440,1.968]],["title/classes/TmpDirCleanerProcess.html",[10,0.091,3123,4.177]],["body/classes/TmpDirCleanerProcess.html",[3,0.094,4,0.082,5,0.033,8,0.072,9,2.157,10,0.125,15,0.246,16,0.66,17,5.528,18,2.828,19,4.142,21,3.494,23,1.346,24,3.365,25,2.72,30,0.837,34,3.411,43,1.295,44,0.007,45,0.453,46,0.19,47,1.328,49,3.054,50,1.871,51,1.382,58,1.104,63,0.474,74,0.256,76,0.827,86,0.088,87,1.396,88,1.13,89,2.464,93,3.044,98,1.298,103,1.448,115,0.004,116,0.004,117,7.434,118,1.068,122,4.884,126,4.462,127,5.758,128,5.8,129,5.744,130,4.861,131,5.744,132,5.744,133,4.861,134,4.205,135,4.64,136,4.861,137,1.936,140,2.436,142,4.921,146,4.921,147,5.013,148,3.327,149,3.72,151,4.921,152,4.921,153,5.744,154,3.327,155,5.744,156,5.744,157,5.744,158,3.327,159,3.327,161,3.327,163,4.165,164,3.327,166,2.552,167,2.334,169,2.85,170,2.85,172,2.021,173,3.327,174,1.57,175,5.413,177,3.327,178,4.626,179,2.85,180,1.796,181,2.941,182,1.651,183,1.13,184,1.509,185,2.089,186,4.861,188,2.85,212,2.244,216,3.327,314,1.152,317,3.729,499,2.555,504,2.089,506,1.581,509,1.959,510,2.244,571,2.552,573,2.552,609,2.311,641,2.436,646,1.796,691,6.056,795,3.729,862,3.16,968,2.437,992,5.384,1053,4.165,1063,2.436,1117,2.85,1143,3.054,1178,5.413,1204,2.85,1239,4.861,1268,2.85,1294,3.327,1302,3.327,1436,3.279,1718,3.054,3123,4.861,3124,6.46,3125,3.741,3126,5.467,3127,5.8,3128,5.467,3129,3.741,3130,3.741,3131,3.741,3132,3.741,3133,3.741,3134,5.467,3135,5.467,3136,5.467,3137,3.741,3138,5.467,3139,6.46,3140,5.467,3141,7.105,3142,7.105,3143,7.105,3144,4.165,3145,3.741,3146,3.741,3147,3.741,3148,3.741,3149,3.741,3150,3.741,3151,3.741,3152,3.741,3153,3.741,3154,3.741,3155,3.741,3156,3.741,3157,3.741,3158,3.741,3159,3.741,3160,3.741,3161,3.741,3162,4.861,3163,3.741,3164,3.741,3165,3.741,3166,3.741,3167,3.741,3168,3.741,3169,3.741]],["title/classes/TooManyRequestsMsException.html",[10,0.091,3170,4.177]],["body/classes/TooManyRequestsMsException.html",[3,0.168,4,0.146,5,0.034,8,0.064,10,0.129,30,0.619,43,1.146,44,0.007,45,0.401,46,0.146,47,1.125,63,0.519,74,0.242,76,1.478,86,0.157,115,0.006,116,0.006,118,1.908,137,2.368,181,3.67,184,2.697,212,4.011,499,3.767,510,4.011,663,4.561,664,5.029,665,5.029,666,4.66,668,6.271,669,5.248,670,5.134,671,5.498,672,4.561,673,4.354,674,4.561,3170,7.168,3171,8.061,3172,9.195,3173,6.687,3174,5.947,3175,5.947,3176,6.687,3177,6.687]],["title/classes/UnauthorizedMsException.html",[10,0.091,3178,4.177]],["body/classes/UnauthorizedMsException.html",[3,0.171,4,0.149,5,0.035,8,0.065,10,0.132,30,0.631,35,2.413,43,1.168,44,0.007,45,0.409,46,0.149,47,1.147,63,0.523,74,0.244,76,1.506,86,0.16,115,0.006,116,0.006,118,1.945,137,2.413,181,3.712,184,2.749,499,3.81,663,4.648,664,5.087,665,5.087,666,4.713,668,5.561,669,5.308,670,5.16,671,5.561,672,4.648,673,4.437,674,4.648,2298,6.06,3178,7.25,3179,8.153,3180,8.725]],["title/interfaces/UpsertMediaRequest.html",[327,0.653,2508,2.538]],["body/interfaces/UpsertMediaRequest.html",[3,0.102,4,0.089,5,0.043,8,0.039,9,2.519,10,0.168,13,1.603,15,0.267,16,0.701,25,1.823,35,2.056,44,0.007,45,0.53,46,0.207,47,1.367,52,1.67,58,1.688,63,0.58,74,0.234,86,0.212,115,0.004,116,0.004,121,2.144,144,1.958,174,1.632,203,1.29,240,1.404,292,3.856,296,1.252,314,1.535,327,1.266,329,1.277,332,1.788,347,2.202,352,1.722,355,2.056,358,2.932,359,1.934,361,2.454,373,3.049,374,3.049,451,0.932,452,1.183,522,1.33,804,2.913,845,1.719,857,1.411,968,2.191,1273,3.362,1350,2.785,1351,1.502,1450,4.154,1645,1.952,1653,2.008,1655,2.066,1657,2.066,1661,2.066,1663,2.066,1667,2.066,2496,2.197,2497,3.867,2498,3.867,2499,2.713,2500,2.271,2501,2.197,2502,3.137,2503,3.04,2504,3.546,2505,2.866,2506,3.867,2507,3.242,2508,3.137,2509,4.124,2510,4.124,2511,3.137,2512,4.22,2513,2.197,2514,3.137,2515,2.129,2516,2.271,2517,2.271,2518,2.271,2519,2.271,2520,2.271,2521,2.271,2522,1.952,2523,2.129]],["title/interfaces/User.html",[71,1.504,327,0.653]],["body/interfaces/User.html",[3,0.12,4,0.105,5,0.024,8,0.046,9,2.494,10,0.169,13,1.409,15,0.314,16,0.784,22,2.58,35,1.691,44,0.007,45,0.39,46,0.207,52,1.628,58,1.599,63,0.59,71,3.021,74,0.248,86,0.205,115,0.005,116,0.005,121,2.077,144,1.897,174,1.435,203,1.411,240,2.066,276,3.87,288,2.666,291,3.976,296,1.47,297,2.58,298,2.864,327,1.216,329,1.499,347,1.932,348,2.018,352,1.22,359,2.911,451,1.094,452,1.388,522,1.488,569,2.666,690,3.109,694,3.109,697,3.109,699,3.109,703,3.109,714,5.167,804,2.561,857,1.656,899,4.208,1350,2.458,1351,1.763,1450,4.017,1451,2.76,2367,5.167,2499,3.701,3094,3.754,3113,4.968,3181,3.109,3182,5.167,3183,5.392,3184,5.392,3185,5.392,3186,4.804,3187,3.109,3188,2.979]],["title/classes/UserDto.html",[10,0.091,1451,2.715]],["body/classes/UserDto.html",[3,0.115,4,0.1,5,0.023,8,0.044,9,2.467,10,0.167,13,1.567,15,0.301,16,0.762,22,2.474,30,0.846,35,1.622,44,0.007,45,0.379,46,0.205,52,1.485,58,1.571,63,0.583,71,3.004,74,0.245,86,0.203,115,0.005,116,0.005,118,1.307,121,1.951,144,1.87,174,1.596,203,1.348,240,1.974,276,3.636,288,2.557,291,3.736,296,1.41,297,2.474,298,2.747,327,1.174,347,1.815,348,1.936,352,1.185,359,2.81,451,1.049,452,1.332,460,2.76,522,1.446,569,2.557,690,2.982,694,2.982,697,2.982,699,2.982,703,2.982,714,4.855,804,2.847,857,1.588,899,3.954,1350,2.405,1351,1.691,1450,4.141,1451,3.648,2303,3.29,2367,4.855,2499,3.943,3094,3.648,3113,4.331,3181,2.982,3182,4.855,3183,5.066,3184,5.066,3185,5.066,3186,5.066,3187,2.982,3188,2.857,3189,4.58,3190,4.58,3191,4.58,3192,4.58,3193,4.58,3194,4.58,3195,4.58,3196,4.58,3197,4.58,3198,4.58,3199,4.58]],["title/entities/UserEntity.html",[264,0.72,297,2.538]],["body/entities/UserEntity.html",[3,0.114,4,0.099,5,0.032,8,0.043,10,0.121,13,0.982,15,0.578,16,0.756,30,0.845,44,0.007,45,0.504,46,0.204,52,1.287,63,0.559,71,2.297,74,0.232,81,1.478,86,0.106,87,2.348,115,0.005,116,0.005,182,1.891,203,1.185,240,1.514,264,1.099,267,1.394,276,3.354,291,3.445,295,1.115,297,3.382,319,2.085,359,2.39,403,1.341,456,1.268,459,2.217,460,2.754,461,3.877,462,3.572,487,1.965,488,3.542,492,3.64,525,1.538,526,1.538,527,1.508,528,1.508,529,1.538,530,2.439,531,1.508,532,2.814,533,1.478,534,2.044,535,1.421,536,1.538,537,1.538,538,1.538,539,1.538,540,1.538,541,1.538,542,1.449,543,1.538,544,1.538,545,1.538,546,1.508,547,2.128,548,1.538,549,1.508,550,1.538,551,1.538,552,1.538,553,1.538,554,1.538,555,1.394,556,1.538,557,1.508,558,1.538,707,3.449,714,4.477,810,2.708,842,2.173,843,2.617,845,3.273,846,2.3,847,3.906,865,4.769,867,3.278,868,3.278,869,3.181,899,3.646,901,4.054,902,3.449,910,2.528,945,3.47,962,3.619,1496,3.449,1540,3.088,1612,3.695,1633,3.088,1634,4.27,1635,4.27,1637,4.27,1640,5.11,1643,3.695,2367,4.477,3182,4.477,3183,4.672,3184,4.672,3185,4.672,3200,4.527,3201,4.497,3202,4.527,3203,4.527,3204,4.527,3205,6.261,3206,4.527,3207,4.527,3208,6.261,3209,4.527,3210,4.527,3211,4.527,3212,4.527,3213,4.527,3214,4.527,3215,4.527]],["title/injectables/UserEntityPwdAndRolesSaveHandler.html",[495,1.475,3216,4.177]],["body/injectables/UserEntityPwdAndRolesSaveHandler.html",[3,0.157,4,0.137,5,0.032,8,0.06,10,0.121,13,1.361,15,0.412,23,1.909,30,0.581,43,1.075,44,0.007,45,0.376,46,0.137,47,1.055,50,1.337,63,0.505,71,3.059,74,0.263,76,1.386,86,0.147,103,1.661,115,0.006,116,0.006,264,1.187,266,5.046,317,5.738,456,2.171,495,2.433,497,2.855,557,2.582,605,6.312,899,4.274,1336,4.48,1338,4.187,1339,4.649,1345,4.649,1346,4.697,1348,3.01,1355,3.283,1482,4.082,3121,5.576,3216,6.892,3217,7.751,3218,7.751,3219,7.751,3220,6.27,3221,7.751,3222,6.892,3223,7.751,3224,6.27,3225,6.27,3226,6.27,3227,6.27,3228,6.27,3229,6.27,3230,6.27,3231,6.27]],["title/modules/UserModule.html",[511,1.076,569,2.623]],["body/modules/UserModule.html",[3,0.145,4,0.126,5,0.037,8,0.055,10,0.111,22,4.373,23,1.419,30,0.534,43,0.988,44,0.007,45,0.346,46,0.126,47,0.97,50,1.229,71,1.845,74,0.264,76,1.274,81,1.882,86,0.135,103,1.527,115,0.005,116,0.005,124,3.972,182,1.741,183,1.741,267,1.775,297,3.114,298,3.457,403,1.708,451,1.684,511,2.017,513,2.436,517,3.735,518,4.786,519,3.752,522,1.854,524,4.855,525,1.959,526,1.959,527,1.92,528,1.92,529,1.959,530,2.751,531,1.92,532,2.988,533,1.882,534,2.4,535,1.809,536,1.959,537,1.959,538,1.959,539,1.959,540,1.959,541,1.959,542,1.845,543,1.959,544,1.959,545,1.959,546,1.92,547,2.498,548,1.959,549,1.92,550,1.959,551,1.959,552,1.959,553,1.959,554,1.959,555,1.775,556,1.959,557,1.92,558,1.959,569,4.519,577,2.693,588,2.624,589,2.845,590,3.332,591,4.14,592,2.624,676,6.607,707,4.391,709,3.018,891,3.752,962,4.25,965,5.28,3188,5.319,3201,5.28,3232,5.764,3233,5.764,3234,5.764,3235,5.764]],["title/interfaces/UserRole.html",[327,0.653,3113,2.817]],["body/interfaces/UserRole.html",[3,0.129,4,0.112,5,0.026,8,0.049,9,2.54,10,0.172,13,1.478,15,0.337,16,0.823,22,2.768,35,1.814,44,0.007,45,0.509,46,0.195,52,1.4,58,1.544,63,0.584,71,3.035,74,0.254,86,0.209,115,0.005,116,0.005,121,2.127,144,1.943,174,1.505,203,1.263,240,2.109,276,3.182,288,2.861,291,3.269,296,1.578,297,2.768,298,3.073,327,1.238,329,1.609,347,1.784,348,2.166,352,1.593,359,2.964,451,1.174,452,1.49,522,1.56,569,2.861,690,3.336,694,3.336,697,3.336,699,3.336,703,3.336,714,4.248,804,2.685,857,1.777,899,3.46,1350,2.825,1351,1.892,1450,4.061,1451,2.962,2367,4.248,2499,3.808,3094,4.421,3113,4.888,3181,3.336,3182,4.248,3183,4.433,3184,4.433,3185,4.433,3186,4.979,3187,3.336,3188,3.197]],["title/classes/UserRoleDto.html",[10,0.091,3186,3.058]],["body/classes/UserRoleDto.html",[3,0.127,4,0.11,5,0.026,8,0.048,9,2.53,10,0.171,13,1.647,15,0.332,16,0.814,22,2.726,30,0.703,35,1.786,44,0.007,45,0.486,46,0.194,52,1.386,58,1.635,63,0.582,71,3.029,74,0.253,86,0.208,115,0.005,116,0.005,118,1.44,121,2.031,144,1.933,174,1.677,203,1.253,240,2.041,276,3.149,288,2.817,291,3.235,296,1.553,297,2.726,298,3.026,327,1.208,347,1.77,348,2.132,352,1.521,359,2.892,451,1.156,452,1.467,460,2.292,522,1.544,569,2.817,690,3.284,694,3.284,697,3.284,699,3.284,703,3.284,714,4.204,804,2.992,857,1.75,899,3.424,1350,2.697,1351,1.863,1450,4.097,1451,2.916,2367,4.204,2499,3.944,3094,4.387,3113,4.857,3181,3.284,3182,4.204,3183,4.387,3184,4.387,3185,4.387,3186,5.272,3187,3.284,3188,3.147,3236,5.045,3237,5.045,3238,5.045]],["title/entities/UserRoleEntity.html",[264,0.72,901,2.459]],["body/entities/UserRoleEntity.html",[3,0.143,4,0.125,5,0.037,8,0.054,10,0.11,13,1.235,15,0.558,16,0.881,30,0.745,44,0.007,45,0.509,46,0.192,63,0.437,74,0.241,81,1.857,86,0.134,87,1.862,115,0.005,116,0.005,240,1.763,264,1.232,267,1.752,295,1.401,352,1.511,359,2.679,403,1.686,456,1.593,459,2.581,460,2.43,525,1.933,526,1.933,527,1.895,528,1.895,529,1.933,530,2.734,531,1.895,532,2.979,533,1.857,534,2.38,535,1.786,536,1.933,537,1.933,538,1.933,539,1.933,540,1.933,541,1.933,542,1.821,543,1.933,544,1.933,545,1.933,546,1.895,547,2.477,548,1.933,549,1.895,550,1.933,551,1.933,552,1.933,553,1.933,554,1.933,555,1.752,556,1.933,557,1.895,558,1.933,707,4.334,810,2.146,842,2.731,850,4.311,851,3.412,852,3.938,853,3.412,867,3.817,868,3.817,872,3.073,899,3.704,901,3.817,962,4.214,1393,2.525,1483,3.549,1486,3.176,1494,3.703,1633,3.88,1634,4.972,1635,4.972,1637,4.972,3113,4.372,3201,5.236,3239,8.484,3240,5.689,3241,5.689,3242,5.689,3243,5.689,3244,5.689]],["title/classes/UserService.html",[10,0.091,22,2.538]],["body/classes/UserService.html",[3,0.117,4,0.102,5,0.024,8,0.045,9,2.718,10,0.171,13,1.389,15,0.307,22,3.457,23,1.576,30,0.761,35,1.654,43,1.409,44,0.007,45,0.521,46,0.197,47,1.383,50,1.752,52,1.316,58,1.474,63,0.585,71,3.076,74,0.246,86,0.204,115,0.005,116,0.005,118,1.333,121,2.061,144,2.081,174,1.414,203,1.402,240,1.898,276,2.99,288,2.609,291,3.503,296,1.439,297,2.524,298,2.802,327,1.181,347,1.702,348,1.975,352,1.202,359,2.614,451,1.07,452,1.359,522,1.672,569,2.609,682,4.874,683,5.69,684,5.69,685,5.69,686,5.69,690,4.165,694,4.165,697,4.165,699,4.165,703,4.165,714,3.992,804,2.523,857,1.621,899,3.251,1350,2.43,1351,1.726,1450,4.002,1451,2.701,2367,3.992,2499,3.667,3094,3.699,3113,4.376,3181,3.042,3182,3.992,3183,4.165,3184,4.165,3185,4.165,3186,4.75,3187,3.042,3188,2.915,3245,4.673,3246,4.673,3247,4.673,3248,4.673,3249,4.673]],["title/classes/UserSubscriber.html",[10,0.091,3250,4.177]],["body/classes/UserSubscriber.html",[3,0.146,4,0.128,5,0.03,8,0.056,9,1.664,10,0.113,13,1.608,15,0.384,16,0.895,17,4.882,18,2.823,23,1.824,24,3.266,30,0.793,43,1.27,44,0.007,45,0.444,46,0.193,47,1.246,50,1.735,65,4.621,71,1.867,74,0.257,86,0.137,93,3.302,103,1.545,115,0.005,116,0.005,118,1.664,170,5.642,182,1.762,183,1.762,261,6.046,264,1.135,268,6.99,275,6.587,276,3.461,282,7.614,283,7.614,286,5.642,287,6.046,288,4.136,291,3.556,294,5.186,295,1.436,297,4.88,499,2.725,1340,3.878,2380,7.238,2381,6.587,3250,6.587,3251,5.832,3252,8.139,3253,6.587,3254,7.407,3255,7.407,3256,8.563,3257,5.832,3258,7.407,3259,5.832,3260,7.407,3261,5.832,3262,5.832,3263,5.832,3264,7.407,3265,7.407,3266,5.832]],["title/interfaces/UserUpdateRequest.html",[327,0.653,3187,3.058]],["body/interfaces/UserUpdateRequest.html",[3,0.13,4,0.113,5,0.026,8,0.049,9,2.545,10,0.172,13,1.486,15,0.34,16,0.827,22,2.79,35,2.424,44,0.007,45,0.411,46,0.191,52,1.407,58,1.55,63,0.584,71,3.091,74,0.255,86,0.209,115,0.005,116,0.005,121,2.133,144,1.948,174,1.513,203,1.444,240,1.977,276,3.199,288,3.822,291,3.286,296,1.59,297,2.79,298,3.097,327,1.24,329,1.621,347,1.791,348,2.183,352,1.286,359,2.723,451,1.183,452,1.502,522,1.568,569,2.884,690,3.362,694,3.362,697,3.362,699,3.362,703,3.362,714,4.27,804,2.699,857,1.791,899,3.478,1350,2.557,1351,1.907,1450,4.066,1451,2.985,2367,4.27,2499,3.82,3094,3.957,3113,4.605,3181,3.362,3182,4.27,3183,4.456,3184,4.456,3185,4.456,3186,4.998,3187,4.456,3188,3.222]],["title/interfaces/VideoFileMetadata.html",[327,0.653,371,2.817]],["body/interfaces/VideoFileMetadata.html",[3,0.098,4,0.086,5,0.045,8,0.037,10,0.128,15,0.258,16,0.683,44,0.007,45,0.235,46,0.201,52,0.806,63,0.6,74,0.199,86,0.203,115,0.004,116,0.004,121,2.163,203,1.464,240,1.605,279,2.189,296,1.207,314,1.575,327,1.291,328,3.392,329,1.231,330,2.446,331,3.158,332,2.655,333,2.446,334,2.446,335,4.619,336,4.619,337,2.446,338,4.619,339,4.451,340,2.446,341,2.446,342,2.446,343,2.446,344,2.352,345,2.446,346,2.446,347,1.548,348,1.657,349,3.056,350,2.961,351,2.266,352,0.736,353,1.74,354,1.935,355,1.388,356,1.546,357,2.352,358,2.449,359,1.306,360,2.446,361,1.657,362,3.269,363,3.392,364,3.269,365,3.392,366,2.961,367,3.392,368,3.392,369,3.682,370,3.704,371,3.979,372,2.446,373,3.179,374,3.179,375,2.446,376,2.446,377,2.446,378,2.446,379,2.446,380,2.446,381,2.118,382,2.446,383,2.446,384,2.446,385,2.446,386,2.446,387,2.446,388,2.446,389,2.446,390,2.446,391,2.446,392,2.446,393,2.446,394,2.446,395,2.446,396,2.446,397,2.446,398,2.446,399,2.553,400,2.553,401,2.553,402,2.553,403,1.162,404,2.553,405,2.553,406,2.553,407,2.553,408,2.553,409,2.553,410,2.553,411,2.553,412,2.553,413,2.553,414,2.553,415,2.553,416,2.553,417,2.553,418,2.553,419,2.553,420,2.553,421,2.553,422,2.553,423,4.804,424,2.553,425,2.553,426,2.553,427,2.553,428,2.553,429,2.553,430,2.553,431,2.553,432,2.553,433,2.553,434,2.553,435,2.553,436,2.553,437,2.553,438,2.553,439,2.553,440,2.553,441,2.553,442,2.553,443,2.446,444,2.446,445,2.446,446,4.531,447,4.531,448,4.531,449,4.531,450,4.531,451,0.898,452,1.14,453,2.053,454,2.352]],["title/entities/VideoFileMetadataEntity.html",[264,0.72,1686,3.578]],["body/entities/VideoFileMetadataEntity.html",[3,0.112,4,0.098,5,0.048,8,0.043,10,0.086,13,0.97,15,0.612,16,0.75,30,0.856,44,0.007,45,0.54,46,0.202,61,3.331,63,0.564,74,0.186,86,0.105,87,2.471,115,0.004,116,0.004,182,2.529,203,1.177,218,3.087,264,1.092,295,1.101,314,1.459,326,4.233,332,1.911,335,4.276,336,4.276,338,4.276,339,4.121,370,3.465,371,3.722,373,2.943,374,2.943,423,4.448,446,4.448,447,4.448,448,4.448,449,4.448,450,4.448,456,1.252,458,3.049,459,2.197,460,2.792,461,4.731,462,3.716,463,3.649,464,3.975,465,4.448,466,3.405,467,3.405,470,3.405,471,3.649,472,5.066,473,5.066,474,5.066,475,3.975,477,2.271,478,3.211,481,3.405,483,3.211,484,3.975,486,3.975,487,1.403,488,3.063,489,2.496,491,2.271,492,3.791,493,3.98,494,3.649,1686,4.728,3267,9.302,3268,6.206,3269,6.206,3270,6.206,3271,4.47,3272,6.206,3273,6.206,3274,4.47,3275,4.47]],["title/modules/WarlockModule.html",[511,1.076,2956,3.374]],["body/modules/WarlockModule.html",[3,0.128,4,0.112,5,0.035,8,0.049,10,0.098,21,3.416,24,1.843,44,0.007,63,0.306,74,0.277,76,1.126,81,1.664,86,0.12,89,1.768,93,1.966,103,2.021,115,0.005,116,0.005,144,1.168,267,1.569,276,2.382,277,4.07,312,3.319,403,1.511,506,2.868,511,1.94,513,2.154,525,1.732,526,1.732,527,1.698,528,1.698,529,1.732,530,2.592,531,1.698,532,2.902,533,1.664,534,2.215,535,1.6,536,1.732,537,1.732,538,1.732,539,1.732,540,1.732,541,1.732,542,1.632,543,1.732,544,1.732,545,1.732,546,1.698,547,2.306,548,1.732,549,1.698,550,1.732,551,1.732,552,1.732,553,1.732,554,1.732,555,1.569,556,1.732,557,1.698,558,1.732,567,3.171,577,3.564,580,4.418,588,3.089,589,2.516,592,3.089,679,3.553,724,2.846,725,3.057,726,3.057,727,3.057,731,5.513,732,4.07,733,3.057,734,2.846,737,4.233,738,5.283,740,3.661,741,3.18,742,3.661,743,3.661,747,4.161,748,3.477,749,3.477,750,3.477,751,4.161,752,3.661,753,4.161,754,3.883,755,4.161,756,3.883,757,4.161,758,4.161,823,2.947,1260,4.07,2065,4.418,2673,4.533,2699,3.661,2701,4.874,2702,4.533,2866,5.169,2906,5.94,2956,6.255,3276,5.097,3277,5.097,3278,5.097,3279,6.034,3280,6.034,3281,3.661,3282,5.097,3283,5.097,3284,6.786,3285,5.097,3286,5.097,3287,5.097,3288,5.097,3289,5.097,3290,6.786,3291,5.097,3292,5.097,3293,7.628]],["title/classes/XdbExportService.html",[10,0.091,3294,3.374]],["body/classes/XdbExportService.html",[3,0.094,4,0.082,5,0.028,8,0.036,9,2.475,10,0.146,15,0.247,23,1.351,24,1.983,30,0.348,33,2.173,43,0.644,44,0.007,45,0.226,46,0.082,47,0.633,50,1.74,51,1.388,52,1.128,53,2.345,58,1.438,61,3.027,63,0.226,74,0.227,86,0.206,87,1.819,88,2.287,89,3.256,98,1.903,103,2.298,115,0.004,116,0.004,118,1.073,121,0.943,125,3.744,144,1.811,149,1.968,151,2.864,174,1.886,183,1.135,295,0.926,312,3.571,607,1.552,609,1.589,646,1.805,702,1.968,811,2.447,820,4.271,836,1.91,886,4.935,923,3.94,933,3.29,945,2.94,949,3.847,999,2.864,1003,3.063,1029,4.179,1032,4.179,1040,2.031,1244,2.875,1260,4.542,1273,3.242,1287,4.857,1348,2.634,1349,3.617,1364,2.872,1391,3.5,1409,4.148,1428,2.964,1437,3.738,1710,4.478,2038,2.564,2065,4.217,2746,2.7,2747,2.7,3080,2.864,3281,2.7,3294,3.94,3295,3.571,3296,3.571,3297,3.069,3298,5.545,3299,5.486,3300,4.878,3301,5.425,3302,3.759,3303,4.179,3304,6.023,3305,2.864,3306,6.22,3307,4.179,3308,3.069,3309,4.478,3310,6.695,3311,3.343,3312,2.7,3313,3.343,3314,3.343,3315,3.069,3316,3.069,3317,3.343,3318,4.478,3319,3.069,3320,3.069,3321,3.069,3322,3.069,3323,3.343,3324,3.343,3325,3.343,3326,3.343,3327,3.343,3328,5.425,3329,3.343,3330,3.343,3331,4.878,3332,3.343,3333,3.343,3334,3.343,3335,3.343,3336,5.288,3337,4.478,3338,3.343,3339,3.343,3340,3.343,3341,4.878,3342,4.878,3343,3.343,3344,3.343,3345,3.343,3346,3.343,3347,3.343,3348,3.343,3349,3.343,3350,3.343,3351,3.343,3352,3.343,3353,3.343,3354,3.343,3355,3.343,3356,3.343,3357,3.343,3358,3.343,3359,3.343,3360,3.343,3361,3.343,3362,3.343,3363,3.069,3364,4.878,3365,4.878,3366,6.333,3367,3.343,3368,6.734,3369,3.343,3370,3.343,3371,4.878,3372,3.343,3373,3.343,3374,3.343,3375,3.343,3376,3.343,3377,3.343,3378,3.343,3379,3.343]],["title/classes/XdbImportService.html",[10,0.091,3312,3.374]],["body/classes/XdbImportService.html",[3,0.092,4,0.081,5,0.027,8,0.035,9,2.526,10,0.145,15,0.242,23,1.331,24,1.953,30,0.5,33,2.128,43,0.926,44,0.007,45,0.324,46,0.118,47,0.909,50,1.773,51,1.36,52,1.111,53,2.297,58,1.424,61,2.991,63,0.221,74,0.235,86,0.203,87,1.801,88,2.268,89,3.247,98,1.874,103,2.286,115,0.004,116,0.004,118,1.051,121,0.923,125,3.7,144,1.858,149,1.928,151,2.805,174,1.933,183,1.112,295,0.907,312,3.517,607,1.52,609,1.556,646,1.767,702,1.928,811,2.397,820,4.229,886,4.876,923,3.881,933,3.24,945,2.911,949,3.809,999,2.805,1003,3.017,1029,4.116,1032,4.116,1040,1.989,1244,2.841,1260,4.504,1273,3.573,1287,4.809,1348,2.594,1349,3.573,1364,2.829,1391,3.458,1409,4.121,1428,2.919,1437,3.707,1710,4.41,2038,2.511,2065,4.167,2746,2.644,2747,2.644,3080,2.805,3281,2.644,3294,2.644,3295,4.167,3296,4.167,3297,3.005,3298,5.577,3300,3.274,3301,4.116,3303,4.116,3304,5.979,3305,2.805,3306,6.467,3307,4.116,3308,3.005,3309,4.41,3310,6.665,3311,3.274,3312,3.881,3313,4.804,3314,4.804,3315,3.005,3316,3.005,3317,3.274,3318,4.41,3319,3.005,3320,3.005,3321,3.005,3322,3.005,3323,3.274,3324,3.274,3325,3.274,3326,3.274,3327,3.274,3328,5.371,3329,3.274,3330,3.274,3331,4.804,3332,3.274,3333,3.274,3334,3.274,3335,3.274,3336,5.224,3337,4.41,3338,3.274,3339,3.274,3340,3.274,3341,4.804,3342,4.804,3343,3.274,3344,3.274,3345,3.274,3346,3.274,3347,3.274,3348,3.274,3349,3.274,3350,3.274,3351,3.274,3352,3.274,3353,3.274,3354,3.274,3355,3.274,3356,3.274,3357,3.274,3358,3.274,3359,3.274,3360,3.274,3361,3.274,3362,3.274,3363,3.005,3364,4.804,3365,4.804,3366,6.27,3367,3.274,3368,6.677,3369,3.274,3370,3.274,3371,4.804,3372,3.274,3373,3.274,3374,3.274,3375,3.274,3376,3.274,3377,3.274,3378,3.274,3379,3.274,3380,5.403,3381,5.403,3382,3.682,3383,3.682,3384,3.682]],["title/interfaces/XdbRequest.html",[327,0.653,3385,4.177]],["body/interfaces/XdbRequest.html",[3,0.116,4,0.101,5,0.043,8,0.044,10,0.14,15,0.304,16,0.767,35,2.247,43,0.791,44,0.007,45,0.381,46,0.212,52,1.305,58,0.932,63,0.583,71,2.321,74,0.254,86,0.218,115,0.005,116,0.005,121,2.295,144,1.058,174,2.094,183,1.917,203,1.352,264,0.707,295,1.137,296,1.422,314,0.749,327,1.009,329,1.45,332,1.422,347,1.48,352,1.192,353,2.049,354,2.279,451,1.058,452,1.343,524,3.806,577,2.158,646,3.047,701,3.006,920,2.669,969,3.518,1002,3.769,1003,2.578,1287,3.149,1319,3.769,1348,4.06,1349,3.544,1355,2.418,1391,3.429,1409,2.346,1428,4.219,1437,3.58,2017,4.106,2798,4.106,3294,3.317,3295,3.006,3296,3.006,3298,5.756,3301,3.518,3303,4.835,3304,3.518,3305,3.518,3306,3.518,3307,3.518,3312,3.317,3336,3.769,3337,5.181,3385,5.644,3386,4.106,3387,6.572,3388,4.618,3389,4.618,3390,6.347,3391,4.618,3392,4.618,3393,3.769,3394,6.449,3395,4.618,3396,4.106,3397,4.618,3398,4.106,3399,4.106,3400,4.618,3401,3.317,3402,3.769,3403,4.106,3404,4.106,3405,4.618,3406,4.618,3407,4.106]],["title/injectables/XmlDataBridgeMiddleware.html",[495,1.475,3408,4.177]],["body/injectables/XmlDataBridgeMiddleware.html",[3,0.127,4,0.111,5,0.026,8,0.072,10,0.098,13,1.098,15,0.333,16,0.816,18,2.635,23,1.662,24,2.747,25,2.728,30,0.704,35,3.392,43,1.157,44,0.007,45,0.405,46,0.166,47,1.136,50,1.62,57,6.618,58,1.791,74,0.228,76,1.118,81,1.651,86,0.119,88,2.449,93,1.951,98,1.754,103,1.34,115,0.005,116,0.005,144,1.857,174,2.117,182,1.528,183,1.528,495,2.119,497,2.303,535,2.119,607,2.787,668,4.604,820,3.034,822,5.926,939,6.618,1029,6.176,1032,5.143,1260,4.049,1325,7.241,2065,4.395,2746,3.633,2747,3.633,2751,4.498,3074,6.003,3080,3.853,3295,5.278,3296,5.278,3298,5.694,3310,5.788,3315,4.129,3318,5.51,3328,5.143,3393,4.129,3408,6.003,3409,5.058,3410,6.751,3411,6.751,3412,6.751,3413,6.751,3414,5.058,3415,6.751,3416,8.107,3417,5.058,3418,6.751,3419,6.751,3420,6.751,3421,5.058,3422,6.751,3423,5.058,3424,5.058,3425,6.751,3426,5.058,3427,5.058,3428,5.058,3429,5.058,3430,5.058]],["title/modules/XmlDataBridgeModule.html",[511,1.076,3401,3.374]],["body/modules/XmlDataBridgeModule.html",[3,0.131,4,0.114,5,0.035,8,0.05,10,0.101,23,1.287,30,0.484,43,0.896,44,0.007,45,0.314,46,0.114,47,0.879,50,1.114,74,0.282,76,1.155,81,1.706,86,0.181,103,1.385,115,0.005,116,0.005,174,2.006,182,1.579,183,1.579,267,1.609,403,1.549,451,1.58,453,2.736,511,1.956,513,2.209,517,3.505,518,4.491,519,3.403,524,4.632,525,1.776,526,1.776,527,1.741,528,1.741,529,1.776,530,2.625,531,1.741,532,2.92,533,1.706,534,2.252,535,1.641,536,1.776,537,1.776,538,1.776,539,1.776,540,1.776,541,1.776,542,1.673,543,1.776,544,1.776,545,1.776,546,1.741,547,2.345,548,1.776,549,1.741,550,1.776,551,1.776,552,1.776,553,1.776,554,1.776,555,1.609,556,1.776,557,1.741,558,1.776,565,4.464,566,3.565,567,3.609,568,3.261,577,3.609,588,2.379,589,3.405,590,3.988,592,2.379,827,2.721,965,4.955,1550,3.981,2522,2.509,2606,4.648,2607,6.135,3294,5.547,3295,4.491,3296,4.491,3298,5.472,3308,4.266,3312,5.547,3387,4.955,3393,4.266,3401,5.547,3402,6.704,3403,6.135,3404,6.135,3431,5.226,3432,5.226,3433,7.723,3434,7.723,3435,6.899,3436,6.899,3437,5.226,3438,5.226,3439,5.226,3440,5.226,3441,5.226,3442,5.226,3443,5.226]],["title/dependencies.html",[724,3.156,3444,3.484]],["body/dependencies.html",[5,0.032,10,0.15,44,0.007,46,0.139,58,1.279,76,1.399,115,0.006,116,0.006,247,4.884,278,5.63,279,3.535,295,1.559,326,6.176,332,2.401,517,3.217,560,5.63,562,5.63,724,3.535,738,3.95,813,3.95,857,2.196,1330,4.548,1714,5.63,1715,5.63,1716,6.933,2169,5.63,2219,5.63,2222,5.63,2235,7.513,2480,6.933,2484,6.436,2699,4.548,2738,4.823,2906,4.318,2969,5.168,3107,5.63,3281,4.548,3309,5.168,3445,6.331,3446,6.331,3447,6.331,3448,7.797,3449,6.331,3450,6.365,3451,6.331,3452,6.331,3453,6.331,3454,6.331,3455,6.331,3456,6.331,3457,6.331,3458,5.63,3459,8.449,3460,6.331,3461,7.513,3462,6.331,3463,6.331,3464,6.331,3465,6.331,3466,6.331,3467,6.331,3468,6.331]],["title/miscellaneous/enumerations.html",[3469,2.672,3470,5.027]],["body/miscellaneous/enumerations.html",[15,0.435,44,0.007,115,0.006,116,0.006,122,4.328,128,6.54,134,4.309,135,4.755,147,4.805,149,4.195,178,5.609,183,2.952,197,7.124,223,7.124,1094,6.103,1480,5.877,2424,7.124,2428,7.124,2429,7.124,2807,5.403,2819,6.54,2823,6.103,2889,5.886,2892,7.124,2910,6.54,2985,5.886,2993,5.886,3469,4.515,3470,5.886,3471,7.662,3472,6.62,3473,5.886,3474,8.012,3475,6.62,3476,6.62,3477,6.62,3478,6.62,3479,6.62,3480,6.62]],["title/index.html",[15,0.258,2881,2.984,3481,3.484]],["body/index.html",[5,0.026,12,2.954,16,0.617,25,1.604,38,3.77,41,2.213,44,0.005,46,0.112,68,3.327,71,1.636,115,0.005,116,0.005,122,2.761,124,2.761,134,3.327,172,2.761,174,1.799,264,0.783,267,1.574,276,2.388,277,3.065,295,1.259,331,2.853,332,2.352,347,1.585,354,2.523,362,2.954,364,2.954,368,3.065,370,2.853,459,1.81,502,3.559,511,1.75,513,2.873,515,4.882,534,1.669,589,2.523,594,5.549,640,3.893,641,3.327,642,3.893,679,3.999,737,3.188,761,4.172,788,3.893,789,4.398,804,2.68,827,3.012,888,4.172,897,3.327,948,3.065,962,3.929,966,5.818,968,3.288,970,4.545,991,3.671,1024,4.172,1036,3.188,1047,4.172,1220,3.77,1240,4.172,1253,4.172,1287,4.636,1340,3.559,1353,2.523,1356,2.954,1357,3.672,1408,2.954,1409,2.597,1410,2.853,1412,2.954,1415,2.853,1455,4.882,1470,3.893,1645,3.908,1692,4.545,1875,4.545,2005,6.045,2156,4.172,2157,4.172,2159,3.893,2188,4.172,2203,3.893,2329,3.671,2373,3.893,2422,4.545,2505,2.523,2723,4.172,2928,4.172,2930,4.172,2960,4.545,2966,4.545,3025,4.172,3092,5.549,3094,2.954,3099,6.234,3102,5.178,3144,3.893,3162,4.545,3175,6.045,3201,5.486,3298,4.241,3363,4.172,3387,3.671,3482,5.111,3483,5.111,3484,5.111,3485,5.111,3486,6.797,3487,5.111,3488,5.111,3489,6.797,3490,5.111,3491,5.111,3492,5.111,3493,5.549,3494,5.111,3495,5.111,3496,6.797,3497,5.111,3498,5.111,3499,7.638,3500,5.111,3501,5.111,3502,5.111,3503,5.111,3504,5.111,3505,5.111,3506,5.111,3507,6.797,3508,5.111,3509,7.638,3510,6.797,3511,5.111,3512,5.111,3513,5.111,3514,5.111,3515,5.111,3516,6.045,3517,5.111,3518,5.111,3519,5.111,3520,4.545,3521,6.797,3522,5.111,3523,5.111,3524,8.141,3525,4.545,3526,5.111,3527,5.111,3528,6.045,3529,6.797,3530,5.111,3531,5.111,3532,6.797,3533,6.797,3534,5.111,3535,4.172,3536,5.111,3537,5.111,3538,5.111,3539,5.111,3540,4.545,3541,4.545,3542,5.111,3543,5.111,3544,5.111,3545,5.111,3546,5.111,3547,5.111,3548,5.111,3549,5.111,3550,4.172,3551,5.111,3552,5.111,3553,5.111,3554,5.111,3555,5.111,3556,4.545,3557,5.111,3558,5.111,3559,4.545,3560,5.111,3561,5.111,3562,6.797,3563,5.111,3564,5.111,3565,5.111,3566,4.545,3567,3.671,3568,5.111,3569,5.111,3570,5.111,3571,4.545]],["title/license.html",[532,1.279,2881,2.984,3481,3.484]],["body/license.html",[4,0.182,5,0.039,8,0.027,10,0.054,30,0.258,33,3.529,38,1.373,44,0.005,45,0.262,58,1.422,60,5.362,68,2.842,74,0.083,81,1.425,115,0.003,116,0.003,185,3.704,206,2.27,240,0.673,247,1.608,264,1.229,267,0.856,277,1.668,285,1.608,286,2.119,292,1.373,329,0.873,344,1.668,347,0.649,352,1.012,397,1.735,403,1.294,456,0.779,502,4.105,522,0.637,525,2.825,526,0.945,527,0.926,528,0.926,529,0.945,530,2.664,531,2.033,532,3.073,533,1.76,534,1.76,535,2.518,536,1.831,537,0.945,538,0.945,539,1.831,540,0.945,541,2.075,542,1.954,543,1.831,544,1.831,545,1.831,546,2.033,547,1.831,548,1.484,549,2.209,550,1.831,551,2.865,552,1.484,553,1.484,554,0.945,555,0.856,556,0.945,557,1.795,558,0.945,589,1.373,597,2.473,604,4.764,606,1.897,647,2.978,652,2.27,679,2.286,734,1.553,788,7.171,804,1.097,807,1.998,820,1.668,827,1.097,950,5.429,965,1.998,968,2.033,1002,4.399,1003,1.553,1008,1.553,1089,2.473,1100,2.473,1241,3.882,1252,2.27,1288,2.473,1332,2.473,1340,4.631,1357,1.503,1397,1.456,1426,1.668,1454,3.298,1460,2.119,1468,1.897,1469,2.119,1490,3.136,1587,7.495,1594,2.27,1645,1.335,2028,2.473,2211,5.429,2248,2.473,2630,3.564,2646,3.564,2821,3.564,3025,2.27,3092,2.27,3102,4.651,3174,3.882,3222,2.473,3461,2.473,3516,2.473,3520,4.792,3528,2.473,3535,2.27,3556,2.473,3559,4.792,3571,3.882,3572,2.781,3573,2.781,3574,2.781,3575,7.84,3576,6.105,3577,6.633,3578,2.781,3579,8.624,3580,8.022,3581,2.781,3582,2.781,3583,8.022,3584,6.633,3585,3.882,3586,2.781,3587,6.633,3588,2.781,3589,2.781,3590,2.781,3591,2.27,3592,6.105,3593,4.366,3594,2.781,3595,5.389,3596,4.366,3597,4.366,3598,2.781,3599,2.781,3600,4.366,3601,2.781,3602,2.781,3603,2.781,3604,2.781,3605,2.781,3606,2.781,3607,5.389,3608,2.781,3609,4.366,3610,2.781,3611,2.781,3612,7.039,3613,6.105,3614,2.781,3615,2.781,3616,2.781,3617,2.781,3618,2.781,3619,5.389,3620,2.781,3621,7.84,3622,4.366,3623,4.366,3624,2.781,3625,8.845,3626,8.905,3627,2.781,3628,2.781,3629,2.781,3630,2.781,3631,2.781,3632,4.366,3633,3.882,3634,2.781,3635,2.781,3636,2.781,3637,2.781,3638,2.781,3639,6.105,3640,6.633,3641,2.781,3642,4.366,3643,6.105,3644,4.366,3645,2.781,3646,6.633,3647,4.366,3648,2.781,3649,2.781,3650,2.781,3651,2.781,3652,2.781,3653,2.781,3654,2.781,3655,5.389,3656,2.781,3657,2.781,3658,5.389,3659,2.781,3660,2.781,3661,2.781,3662,8.022,3663,2.781,3664,2.781,3665,4.366,3666,6.779,3667,5.389,3668,4.366,3669,4.366,3670,4.366,3671,4.366,3672,4.366,3673,5.389,3674,4.366,3675,5.389,3676,4.366,3677,4.366,3678,4.366,3679,4.366,3680,2.781,3681,4.366,3682,2.781,3683,2.781,3684,6.633,3685,7.361,3686,4.366,3687,4.366,3688,4.366,3689,2.781,3690,5.389,3691,4.366,3692,2.781,3693,2.781,3694,2.781,3695,5.389,3696,2.781,3697,2.781,3698,2.781,3699,4.366,3700,2.781,3701,2.781,3702,2.781,3703,2.781,3704,2.781,3705,2.781,3706,2.781,3707,4.366,3708,2.781,3709,2.781,3710,2.781,3711,2.781,3712,2.781,3713,2.781,3714,5.389,3715,2.781,3716,2.781,3717,2.781,3718,2.781,3719,2.781,3720,7.623,3721,2.781,3722,2.781,3723,2.781,3724,6.105,3725,4.366,3726,6.105,3727,2.781,3728,2.781,3729,2.781,3730,2.781,3731,2.781,3732,2.781,3733,2.781,3734,4.366,3735,4.366,3736,2.781,3737,2.781,3738,2.781,3739,4.366,3740,4.366,3741,2.781,3742,2.781,3743,2.781,3744,2.781,3745,2.781,3746,2.781,3747,2.781,3748,5.389,3749,2.781,3750,2.781,3751,2.781,3752,2.781,3753,2.781,3754,2.781,3755,2.781,3756,2.781,3757,2.781,3758,4.366,3759,2.781,3760,2.781,3761,2.781,3762,2.781,3763,2.781,3764,2.781,3765,2.781,3766,2.781,3767,2.781,3768,2.781,3769,6.105,3770,4.366,3771,2.781,3772,2.781,3773,2.781,3774,2.781,3775,2.781,3776,2.781,3777,4.366,3778,2.781,3779,2.781,3780,2.781,3781,6.633,3782,2.781,3783,2.781,3784,2.781,3785,2.781,3786,2.781,3787,2.781,3788,2.781,3789,2.781,3790,6.633,3791,2.781,3792,2.781,3793,2.781,3794,2.781,3795,2.781,3796,2.781,3797,2.781,3798,2.781,3799,2.781,3800,2.781,3801,2.781,3802,2.781,3803,2.781,3804,2.781,3805,2.781,3806,2.781,3807,2.781,3808,5.389,3809,2.781,3810,2.781,3811,2.781,3812,2.781,3813,4.366,3814,2.781,3815,2.781,3816,2.781,3817,2.781,3818,2.781,3819,2.781,3820,2.781,3821,2.781,3822,2.781,3823,2.781,3824,2.781,3825,2.781,3826,2.781,3827,2.781,3828,2.781,3829,2.781,3830,4.366,3831,4.366,3832,2.781,3833,2.781,3834,2.781,3835,2.781,3836,2.781,3837,2.781,3838,2.781,3839,2.781,3840,2.781,3841,2.781]],["title/modules.html",[513,2.714]],["body/modules.html",[44,0.006,115,0.006,116,0.006,453,3.507,512,5.468,513,2.831,565,3.872,567,3.13,569,3.74,731,4.361,786,5.468,879,5.103,955,4.811,1468,6.546,1550,5.103,2323,5.103,2522,3.216,2667,4.811,2771,5.103,2951,5.103,2956,4.811,3401,4.811,3535,7.781,3842,9.597,3843,9.848,3844,9.533,3845,8.477]],["title/overview.html",[3846,5.71]],["body/overview.html",[2,4.747,19,4.346,44,0.007,115,0.005,116,0.005,118,1.659,142,5.97,329,1.825,456,1.629,497,2.647,511,1.332,513,2.458,565,5.365,567,4.285,588,2.647,592,2.647,724,3.247,725,3.488,726,3.488,727,3.488,728,5.171,729,5.171,730,5.171,731,5.749,732,4.434,733,3.488,734,3.247,879,6.986,880,5.171,881,5.171,882,5.171,884,6.986,955,6.731,956,5.171,957,5.171,958,5.171,960,6.587,2323,6.727,2324,5.171,2325,5.171,2326,5.171,2327,6.986,2667,6.343,2668,5.171,2771,6.516,2772,5.171,2951,7.31,2952,5.171,2953,5.171,2954,5.171,2955,5.171,2956,6.343,2957,6.192,3458,5.171,3846,5.171,3847,5.815,3848,5.815,3849,5.815,3850,5.815,3851,5.815]],["title/properties.html",[16,0.683,3444,3.484]],["body/properties.html",[8,0.082,16,0.903,44,0.007,115,0.006,116,0.006,527,2.49,528,2.49,531,2.49,532,2.441,533,2.441,534,2.441,3566,6.649,3852,7.477,3853,7.477]],["title/miscellaneous/typealiases.html",[3469,2.672,3854,5.653]],["body/miscellaneous/typealiases.html",[5,0.025,12,2.829,15,0.322,43,1.281,44,0.006,46,0.216,51,1.807,52,1.006,58,1.333,63,0.294,86,0.155,115,0.005,116,0.005,121,2.363,174,2.146,183,1.478,240,1.184,264,1.145,314,0.793,330,3.053,347,1.142,451,2.049,452,2.558,453,2.562,454,3.96,487,1.536,500,2.935,511,1.712,520,4.743,569,2.732,696,2.732,789,3.567,790,5.03,795,6.568,803,3.995,822,3.338,823,3.817,824,3.995,825,4.743,1260,3.96,1319,3.995,1337,2.935,1353,3.949,1356,2.829,1357,2.644,1358,3.96,1359,2.935,1391,2.644,1395,2.935,1396,3.96,1397,2.562,1402,2.935,1403,3.96,1404,3.817,1418,2.935,1428,4.322,1442,3.728,2496,2.644,2522,2.349,2523,3.457,2627,3.515,2628,3.515,2629,5.872,2638,5.39,2646,5.39,2647,3.338,2866,5.03,2906,3.338,3181,3.186,3188,4.119,3279,4.352,3280,4.352,3295,3.186,3296,3.186,3298,5.656,3301,5.03,3303,5.03,3304,5.03,3305,5.03,3306,5.03,3307,5.03,3386,8.22,3387,6.511,3394,5.872,3396,4.352,3398,5.872,3399,5.872,3401,3.515,3402,5.39,3407,4.352,3469,3.338,3855,4.894,3856,4.894,3857,6.603,3858,8,3859,4.894,3860,8.148,3861,4.894,3862,4.352,3863,4.894,3864,6.603,3865,4.352,3866,4.894,3867,4.352,3868,4.894]],["title/miscellaneous/variables.html",[1000,4.614,3469,2.672]],["body/miscellaneous/variables.html",[4,0.052,5,0.036,8,0.036,15,0.155,16,0.896,21,2.239,24,0.851,29,2.91,34,2.383,35,2.438,36,3.397,38,1.161,41,3.107,42,4.984,44,0.007,45,0.457,46,0.205,48,1.69,51,2.05,58,1.32,63,0.552,69,1.605,71,1.544,77,3.118,78,3.118,79,3.118,84,2.91,89,2.267,93,2.14,98,0.816,103,1.901,115,0.003,116,0.003,121,0.958,125,1.36,149,2,174,1.757,181,2.195,182,2.89,183,2.893,212,1.411,218,1.019,219,1.468,220,1.69,264,0.739,287,1.92,291,2.664,292,1.885,312,2.487,314,0.381,332,0.724,347,1.606,352,0.442,356,2.407,361,0.994,456,1.554,487,0.739,500,5.041,501,1.92,511,0.539,522,0.539,533,0.768,546,0.784,573,1.605,593,2.092,609,2.038,610,3.463,615,1.69,620,4.697,623,2.91,624,2.91,625,3.118,626,2.092,627,3.397,628,2.092,629,3.397,630,2.744,631,2.092,632,3.397,633,3.65,634,2.605,635,4.894,636,3.986,637,2.092,638,3.397,639,2.092,640,3.673,641,3.139,642,1.792,643,3.397,644,2.092,645,3.463,646,3.138,647,1.605,648,3.397,649,2.092,650,3.397,651,2.092,652,3.118,653,3.118,655,3.397,656,2.092,657,1.69,658,1.69,659,3.397,660,2.092,664,3.008,666,1.36,670,1.314,710,3.397,715,3.876,734,1.314,738,1.468,748,1.605,749,2.605,760,2.91,778,2.744,789,2.064,811,2.487,823,2.208,827,2.407,833,1.792,856,2.383,857,0.816,858,2.605,899,3.101,923,3.463,934,3.397,948,2.892,953,3.118,955,1.69,960,1.69,966,1.792,968,2.467,992,1.605,1000,3.118,1003,2.133,1015,2.91,1018,2.092,1023,1.69,1024,1.92,1030,2.74,1031,2.092,1036,1.468,1048,2.092,1054,3.397,1055,3.397,1056,3.397,1057,3.397,1058,3.397,1059,3.397,1060,3.397,1068,2.91,1220,1.885,1238,2.092,1244,1.044,1252,1.92,1253,3.118,1254,2.092,1255,3.397,1256,2.092,1257,2.092,1260,1.411,1287,2.605,1290,2.092,1317,2.092,1329,3.118,1338,1.271,1340,1.232,1346,3.407,1348,2.664,1362,2.692,1364,2.525,1370,1.36,1371,1.36,1397,1.232,1409,1.195,1435,1.36,1437,2.74,1558,1.92,1653,1.161,2038,2.605,2223,3.397,2249,3.118,2329,1.69,2418,1.792,2477,2.092,2503,1.232,2505,1.161,2552,3.397,2627,1.69,2628,1.69,2631,2.092,2647,2.605,2650,1.792,2651,1.532,2671,2.91,2674,1.69,2701,2.744,2744,2.91,2776,3.397,2777,3.397,2812,1.92,2906,3.289,2965,2.092,3091,2.092,3094,1.36,3099,4.53,3102,2.91,3110,3.397,3182,1.468,3281,1.69,3295,2.487,3296,2.487,3297,4.53,3298,3.008,3310,3.673,3316,3.118,3319,1.92,3320,1.92,3321,1.92,3322,3.118,3328,2.91,3387,2.744,3469,1.605,3471,2.092,3473,2.092,3525,2.092,3540,2.092,3633,4.935,3666,2.092,3845,4.935,3860,4.935,3862,3.397,3865,5.427,3867,2.092,3869,7.798,3870,2.353,3871,3.82,3872,3.82,3873,4.822,3874,3.82,3875,3.82,3876,2.353,3877,2.353,3878,6.887,3879,2.353,3880,3.82,3881,3.82,3882,6.887,3883,3.82,3884,3.82,3885,2.353,3886,4.822,3887,3.82,3888,2.353,3889,3.82,3890,2.353,3891,3.82,3892,3.82,3893,2.353,3894,3.82,3895,4.822,3896,3.82,3897,2.353,3898,3.82,3899,2.353,3900,3.82,3901,3.82,3902,3.82,3903,3.82,3904,3.82,3905,4.822,3906,2.353,3907,2.353,3908,2.353,3909,3.82,3910,3.82,3911,2.353,3912,4.822,3913,3.82,3914,2.353,3915,2.353,3916,2.353,3917,2.353,3918,2.353,3919,2.353,3920,2.353,3921,2.353,3922,2.353,3923,2.353,3924,2.353,3925,2.353,3926,2.353,3927,6.103,3928,6.103,3929,6.103,3930,6.103,3931,6.103,3932,6.103,3933,6.537,3934,2.353,3935,2.353,3936,1.92,3937,2.353,3938,2.353,3939,2.353,3940,2.353,3941,1.792,3942,3.82,3943,3.82,3944,2.353,3945,2.353,3946,2.353,3947,2.353,3948,2.353,3949,2.353,3950,2.353,3951,2.353,3952,2.353,3953,2.353,3954,2.353,3955,2.353,3956,6.537,3957,2.353,3958,3.82,3959,4.822,3960,4.822,3961,2.353,3962,2.353,3963,3.82,3964,3.82,3965,3.82,3966,3.82,3967,3.82,3968,3.82,3969,3.82,3970,3.82,3971,3.82,3972,3.82,3973,3.82,3974,3.82,3975,3.82,3976,4.822,3977,4.822,3978,4.822,3979,4.822,3980,2.353,3981,2.353,3982,2.353,3983,2.353,3984,2.353,3985,1.92,3986,2.353,3987,2.353,3988,2.353,3989,2.353,3990,2.353,3991,2.353,3992,2.353,3993,2.353,3994,2.353,3995,2.353,3996,2.353,3997,2.353,3998,2.353,3999,6.537,4000,2.353,4001,2.353,4002,2.353,4003,2.353,4004,2.353,4005,2.353,4006,2.353,4007,3.82,4008,2.353,4009,2.353,4010,2.353,4011,2.353,4012,2.353,4013,2.353,4014,2.353,4015,2.353,4016,2.353,4017,2.353,4018,2.353,4019,2.353,4020,2.353,4021,2.353,4022,2.353,4023,2.353,4024,2.353,4025,2.353]],["title/additional-documentation/properties.html",[16,0.473,185,2.187,1008,2.187]],["body/additional-documentation/properties.html",[5,0.048,8,0.08,16,1.012,44,0.006,46,0.183,63,0.503,69,4.868,115,0.006,116,0.006,347,1.665,353,3.719,517,4.258,647,4.868,827,3.62,968,3.162,1023,5.127,1068,5.437,1454,4.527,3127,5.826,3144,5.437,3493,5.826,3550,5.826,3591,5.826,3936,5.826,3941,5.437,3985,5.826,4026,6.347,4027,6.347,4028,6.347]],["title/additional-documentation/properties/kp.properties.html",[185,2.187,1008,2.187,3941,2.984]],["body/additional-documentation/properties/kp.properties.html",[5,0.048,8,0.08,16,1.012,44,0.006,46,0.183,63,0.503,69,4.868,115,0.006,116,0.006,347,1.665,353,3.719,517,4.258,647,4.868,827,3.62,968,3.162,1023,5.127,1068,5.437,1454,4.527,3127,5.826,3144,5.437,3493,5.826,3550,5.826,3591,5.826,3936,5.826,3941,5.437,3985,5.826,4026,6.347,4027,6.347,4028,6.347]],["title/additional-documentation/properties/auth.properties.html",[185,2.187,1008,2.187,4029,3.484]],["body/additional-documentation/properties/auth.properties.html",[5,0.035,8,0.084,12,3.981,41,3.552,42,5.441,44,0.006,46,0.192,63,0.413,73,5.341,115,0.006,116,0.006,247,3.981,277,4.13,288,3.845,314,1.33,326,4.697,500,4.13,582,5.622,594,6.697,611,4.947,634,5.596,646,3.306,827,3.235,856,4.297,897,4.483,1443,4.297,1454,4.735,3046,6.25,3567,5.893,4029,6.124,4030,6.887,4031,6.887,4032,6.887,4033,6.887,4034,6.887,4035,8.205,4036,8.764,4037,5.622,4038,6.887,4039,6.887,4040,6.887,4041,6.887,4042,6.887]],["title/additional-documentation/properties/bruteforce.properties.html",[185,2.187,1008,2.187,4043,3.484]],["body/additional-documentation/properties/bruteforce.properties.html",[5,0.035,8,0.084,44,0.006,46,0.192,52,1.426,68,4.515,71,2.637,87,1.771,115,0.006,116,0.006,291,3.329,314,1.474,339,4.009,640,6.696,641,5.722,642,6.276,653,6.725,827,3.249,897,4.515,924,4.314,1443,4.327,1454,4.749,2484,5.283,3046,5.283,3253,6.167,3450,5.661,3541,6.167,3567,4.982,4037,5.661,4043,6.167,4044,6.936,4045,6.936,4046,6.936,4047,6.936,4048,6.936,4049,6.936,4050,6.936,4051,8.239,4052,6.936,4053,7.326]],["title/additional-documentation/properties/captcha.properties.html",[185,2.187,1008,2.187,4054,3.484]],["body/additional-documentation/properties/captcha.properties.html",[5,0.04,8,0.09,44,0.006,46,0.208,52,1.637,53,4.088,63,0.549,73,4.266,87,1.674,115,0.006,116,0.006,182,1.979,314,1.062,353,2.909,354,3.235,500,5.145,582,5.349,646,3.823,784,4.266,789,5.13,819,4.707,826,4.266,827,3.14,897,4.266,1291,5.349,1443,4.088,1454,5.083,2156,6.5,2157,6.5,2159,4.992,2188,6.5,2203,4.992,2205,7.081,2206,5.827,3046,4.992,3450,5.349,3567,4.707,4037,5.349,4053,7.081,4054,5.827,4055,6.553,4056,6.553,4057,6.553,4058,6.553,4059,6.553,4060,6.553,4061,6.553,4062,6.553,4063,6.553,4064,7.963,4065,6.553]],["title/additional-documentation/properties/file.properties.html",[185,2.187,1008,2.187,4066,3.484]],["body/additional-documentation/properties/file.properties.html",[5,0.037,8,0.081,25,2.291,44,0.006,46,0.186,63,0.438,69,4.977,115,0.006,116,0.006,314,1.183,353,3.767,354,3.602,827,3.347,897,4.75,968,3.488,1443,4.552,1454,4.586,2038,5.79,4066,6.488,4067,7.297,4068,7.297,4069,7.297,4070,7.297]],["title/additional-documentation/properties/media.properties.html",[185,2.187,1008,2.187,4071,3.484]],["body/additional-documentation/properties/media.properties.html",[5,0.035,8,0.079,25,2.765,44,0.006,46,0.181,63,0.496,115,0.006,116,0.006,124,3.767,347,2.2,354,4.348,827,3.259,897,4.539,968,3.324,992,6.213,1003,4.615,1240,5.691,1443,4.35,1454,4.465,2038,6.008,3201,5.937,3567,5.937,3585,6.2,4071,6.2,4072,6.972,4073,6.972,4074,8.265,4075,8.265,4076,6.972,4077,6.972,4078,6.972]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["0",{"_index":862,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/NotEmptyPipe.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["0.0.1",{"_index":3852,"title":{},"body":{"properties.html":{}}}],["0.14",{"_index":3452,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":3464,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":3467,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":3466,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3448,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":3468,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":247,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10",{"_index":326,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"dependencies.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10000",{"_index":3285,"title":{},"body":{"modules/WarlockModule.html":{}}}],["15",{"_index":473,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["16",{"_index":3454,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3847,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3455,"title":{},"body":{"dependencies.html":{}}}],["192.168.0.1",{"_index":1457,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["2",{"_index":3458,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["2).join",{"_index":2486,"title":{},"body":{"classes/LogService.html":{}}}],["2.0",{"_index":534,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["2.11",{"_index":3451,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2818,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["2004",{"_index":3573,"title":{},"body":{"license.html":{}}}],["2023",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["22",{"_index":3849,"title":{},"body":{"overview.html":{}}}],["256",{"_index":1272,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["27",{"_index":3848,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2484,"title":{},"body":{"classes/LogService.html":{},"injectables/ProcessManagerService.html":{},"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["300",{"_index":4053,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["30px",{"_index":2262,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["34",{"_index":3851,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":4039,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["4",{"_index":2480,"title":{},"body":{"classes/LogService.html":{},"dependencies.html":{}}}],["43",{"_index":3850,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3450,"title":{},"body":{"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["50",{"_index":2248,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["502",{"_index":1225,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["6",{"_index":4042,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["600",{"_index":4036,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["7",{"_index":2235,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["78",{"_index":3951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":3938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":3461,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["9]*$/.test(variablename",{"_index":1155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["9_",{"_index":304,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["_a",{"_index":1153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.localecompare(b",{"_index":1097,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a[sort",{"_index":1091,"title":{},"body":{"injectables/ConfigService.html":{}}}],["abc123456",{"_index":4064,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["abortable",{"_index":1250,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["above",{"_index":3751,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["abstractauthguard",{"_index":1,"title":{"guards/AbstractAuthGuard.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["abstractprocess",{"_index":117,"title":{"classes/AbstractProcess.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:140",{"_index":3147,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:148",{"_index":3148,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:157",{"_index":3146,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:165",{"_index":3145,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:173",{"_index":3149,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:31",{"_index":3130,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:32",{"_index":3132,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:33",{"_index":3131,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:42",{"_index":3133,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:44",{"_index":3150,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:80",{"_index":3151,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:94",{"_index":3152,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractusersubscriber",{"_index":261,"title":{"classes/AbstractUserSubscriber.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["acceptance",{"_index":3811,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":3808,"title":{},"body":{"license.html":{}}}],["access",{"_index":41,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["access_token",{"_index":637,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token_error_msg",{"_index":77,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accessible",{"_index":4074,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["accesstoken",{"_index":620,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["act",{"_index":3817,"title":{},"body":{"license.html":{}}}],["acting",{"_index":3589,"title":{},"body":{"license.html":{}}}],["action",{"_index":1391,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["action.entity",{"_index":1613,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["action.entity.ts",{"_index":1467,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:36",{"_index":1474,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:40",{"_index":1476,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:44",{"_index":1475,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:53",{"_index":1481,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:60",{"_index":1477,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:63",{"_index":1478,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action?.$?.content",{"_index":3335,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.read",{"_index":3334,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.target",{"_index":3333,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action[\"#name",{"_index":3332,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["actions",{"_index":1364,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["actions.description",{"_index":3978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.description.lang",{"_index":3979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name",{"_index":3976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name.lang",{"_index":3977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":714,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["acts",{"_index":3788,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3553,"title":{},"body":{"index.html":{}}}],["add",{"_index":3740,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":3742,"title":{},"body":{"license.html":{}}}],["additional",{"_index":185,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"license.html":{}}}],["additions",{"_index":3641,"title":{},"body":{"license.html":{}}}],["address",{"_index":657,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":631,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["adm",{"_index":3446,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1455,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"index.html":{}}}],["administrative",{"_index":3095,"title":{},"body":{"classes/Roles.html":{}}}],["advanced",{"_index":3517,"title":{},"body":{"index.html":{}}}],["advised",{"_index":3806,"title":{},"body":{"license.html":{}}}],["afterremove",{"_index":2370,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["afterremove(event",{"_index":2376,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["again",{"_index":3176,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["against",{"_index":68,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["agree",{"_index":3820,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":545,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["agreement",{"_index":3756,"title":{},"body":{"license.html":{}}}],["album",{"_index":333,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alexander",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["alias",{"_index":1588,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["aliases",{"_index":3855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":3704,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3551,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":36,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["allowedformetadatakey",{"_index":3110,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["allowfor",{"_index":900,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["allows",{"_index":3544,"title":{},"body":{"index.html":{}}}],["alone",{"_index":3696,"title":{},"body":{"license.html":{}}}],["along",{"_index":1460,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["alongside",{"_index":3741,"title":{},"body":{"license.html":{}}}],["already",{"_index":3014,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["altitude",{"_index":445,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["analysis",{"_index":1413,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzedatabase",{"_index":1414,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzes",{"_index":1408,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["analyzing",{"_index":1553,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["and/or",{"_index":3814,"title":{},"body":{"license.html":{}}}],["angular",{"_index":3555,"title":{},"body":{"index.html":{}}}],["annotate",{"_index":3916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["annotations",{"_index":3629,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":2489,"title":{},"body":{"classes/LogService.html":{}}}],["apache",{"_index":531,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["aperture",{"_index":414,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["app",{"_index":3985,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["app.close",{"_index":3992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":3987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(configmodule).get(configservice",{"_index":3989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(logmodule).get(logger",{"_index":3988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appear",{"_index":3737,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":3623,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":543,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["application",{"_index":966,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/xml",{"_index":3424,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["applications",{"_index":3487,"title":{},"body":{"index.html":{}}}],["applied",{"_index":3223,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["applies",{"_index":3689,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2821,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["appropriate",{"_index":3222,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"license.html":{}}}],["appropriateness",{"_index":3776,"title":{},"body":{"license.html":{}}}],["archives",{"_index":3841,"title":{},"body":{"license.html":{}}}],["arg",{"_index":3087,"title":{},"body":{"modules/RedisModule.html":{}}}],["args",{"_index":801,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["args.find((arg",{"_index":3086,"title":{},"body":{"modules/RedisModule.html":{}}}],["argumentshost",{"_index":1229,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["arising",{"_index":3795,"title":{},"body":{"license.html":{}}}],["array",{"_index":1437,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(obj",{"_index":1745,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["array.isarray(value",{"_index":2387,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["array.reverse().foreach((obj",{"_index":3357,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["arrays",{"_index":1242,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["artist",{"_index":334,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asc",{"_index":1094,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["asserted",{"_index":3825,"title":{},"body":{"license.html":{}}}],["associated",{"_index":807,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"injectables/LocaleSubscriber.html":{},"license.html":{}}}],["assume",{"_index":3778,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":3942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":24,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["asynchronously",{"_index":3994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atexp",{"_index":1463,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["attach",{"_index":3827,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1426,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["attacks",{"_index":3541,"title":{},"body":{"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attempts",{"_index":653,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attribution",{"_index":3724,"title":{},"body":{"license.html":{}}}],["attrs",{"_index":3337,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["audio",{"_index":331,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["audiofilemetadata",{"_index":328,"title":{"interfaces/AudioFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadataentity",{"_index":455,"title":{"entities/AudioFileMetadataEntity.html":{}},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["audiomd",{"_index":1754,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.bit_rate",{"_index":1767,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.channels",{"_index":1765,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_long_name",{"_index":1761,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_name?.touppercase",{"_index":1759,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["auth",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.access.token.expiration",{"_index":4034,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.constants",{"_index":576,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["auth.guard",{"_index":507,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts",{"_index":7,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":2322,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:49",{"_index":31,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:74",{"_index":64,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:85",{"_index":55,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.jwt.secret",{"_index":4031,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.properties",{"_index":4029,"title":{"additional-documentation/properties/auth.properties.html":{}},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.refresh.token.expiration",{"_index":4038,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.types",{"_index":564,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["auth_access_token_prefix",{"_index":78,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix",{"_index":79,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${accesstoken",{"_index":649,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${token",{"_index":105,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth_jwt_cache_prefix}:${auth_refresh_token_prefix}:${accesstoken}:${refreshtoken",{"_index":651,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_refresh_token_prefix",{"_index":638,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":572,"title":{},"body":{"modules/AuthModule.html":{}}}],["authconfig.access_token_expiration",{"_index":587,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":598,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticate(data",{"_index":601,"title":{},"body":{"classes/AuthService.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authguard",{"_index":496,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":512,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authmoduleoptions",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":3853,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":594,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authorization.service",{"_index":563,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorizationheader",{"_index":109,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationheader.match(/bearer\\s+(\\s+)\\s",{"_index":112,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationservice",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorized",{"_index":3585,"title":{},"body":{"license.html":{},"additional-documentation/properties/media.properties.html":{}}}],["authorship",{"_index":3619,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":575,"title":{"classes/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["automates",{"_index":3497,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":3509,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":4012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1468,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{},"modules.html":{}}}],["avalue",{"_index":1090,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avalue.localecompare(bvalue",{"_index":1095,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avatar",{"_index":3182,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["avatar.files",{"_index":4018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.files.format",{"_index":4019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name",{"_index":4016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name.lang",{"_index":4017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type",{"_index":4020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type.ext",{"_index":4021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":93,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":3449,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1089,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["b[sort",{"_index":1093,"title":{},"body":{"injectables/ConfigService.html":{}}}],["background",{"_index":3507,"title":{},"body":{"index.html":{}}}],["bad",{"_index":667,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{}}}],["badrequestexception",{"_index":293,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileService.html":{},"injectables/NotEmptyPipe.html":{}}}],["badrequestexception(`${this.fieldname",{"_index":2803,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["badrequestmsexception",{"_index":661,"title":{"classes/BadRequestMsException.html":{}},"body":{"classes/BadRequestMsException.html":{}}}],["base",{"_index":2786,"title":{},"body":{"classes/MsException.html":{}}}],["base64",{"_index":2213,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["based",{"_index":38,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basename(filepath",{"_index":1194,"title":{},"body":{"injectables/ConfigService.html":{}}}],["basic",{"_index":1558,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/FileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["basic.service",{"_index":3234,"title":{},"body":{"modules/UserModule.html":{}}}],["basic.service.ts",{"_index":678,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basic.service.ts:29",{"_index":688,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basicexplorerservice",{"_index":1555,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["basicuserservice",{"_index":676,"title":{"injectables/BasicUserService.html":{}},"body":{"injectables/BasicUserService.html":{},"modules/UserModule.html":{}}}],["basis",{"_index":548,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["bcrypt",{"_index":278,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":322,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["bcrypt.hash(password",{"_index":325,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["before",{"_index":3253,"title":{},"body":{"classes/UserSubscriber.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["beforeinsert",{"_index":3254,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":3258,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":3255,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":3260,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["behalf",{"_index":3646,"title":{},"body":{"license.html":{}}}],["being",{"_index":1405,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["below",{"_index":3624,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":3606,"title":{},"body":{"license.html":{}}}],["between",{"_index":2723,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"index.html":{}}}],["bind",{"_index":3638,"title":{},"body":{"license.html":{}}}],["bitdepth",{"_index":378,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitrate",{"_index":335,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["blocked",{"_index":4051,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["blocking",{"_index":4049,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["body",{"_index":3328,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["body.schema",{"_index":3330,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["body_token",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":3828,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["bootstrap",{"_index":727,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["both",{"_index":952,"title":{},"body":{"interfaces/ConfigItem.html":{},"entities/ExplorerActionEntity.html":{}}}],["bps",{"_index":372,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["brackets",{"_index":3831,"title":{},"body":{"license.html":{}}}],["break",{"_index":232,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["bridge",{"_index":3387,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants",{"_index":3393,"title":{},"body":{"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.constants.ts",{"_index":3297,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants.ts:33",{"_index":3384,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:35",{"_index":3382,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:41",{"_index":3302,"title":{},"body":{"classes/XdbExportService.html":{}}}],["bridge.middleware.ts",{"_index":3409,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:26",{"_index":3421,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:34",{"_index":3417,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:47",{"_index":3414,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.module.ts",{"_index":3431,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:36",{"_index":3432,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.types",{"_index":3308,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.types.ts",{"_index":3386,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["bridge/xml",{"_index":3296,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightness",{"_index":415,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["broker",{"_index":2867,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants",{"_index":2672,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants.ts",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker.module",{"_index":2971,"title":{},"body":{"modules/ProcessModule.html":{}}}],["broker.module.ts",{"_index":2670,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["broker.service",{"_index":2675,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.service.ts",{"_index":2676,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:27",{"_index":2697,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:28",{"_index":2698,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:29",{"_index":2681,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:47",{"_index":2683,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:56",{"_index":2695,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:65",{"_index":2696,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:75",{"_index":2691,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:88",{"_index":2685,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.subscribe(command.register",{"_index":2999,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.start",{"_index":3003,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.stop",{"_index":3005,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.unregister",{"_index":3001,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.types",{"_index":2700,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["broker.types.ts",{"_index":2652,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:26",{"_index":2657,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:33",{"_index":2662,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:39",{"_index":2665,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker/messages",{"_index":2651,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["brokering",{"_index":2653,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{}}}],["browse",{"_index":3843,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3844,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":640,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce",{"_index":644,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce.block.duration",{"_index":4050,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.enabled",{"_index":4045,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.max.attempts",{"_index":4048,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.properties",{"_index":4043,"title":{"additional-documentation/properties/bruteforce.properties.html":{}},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce_jwt_cache_prefix",{"_index":643,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:ip:${ipaddress",{"_index":660,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:login:${login",{"_index":656,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceipkey",{"_index":659,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceloginkey",{"_index":655,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["buf",{"_index":1672,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["buffer",{"_index":1273,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["builder",{"_index":2018,"title":{},"body":{"injectables/FileService.html":{}}}],["built",{"_index":2422,"title":{},"body":{"classes/LogService.html":{},"index.html":{}}}],["bus",{"_index":2631,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/variables.html":{}}}],["bvalue",{"_index":1092,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bvalue.localecompare(avalue",{"_index":1096,"title":{},"body":{"injectables/ConfigService.html":{}}}],["c",{"_index":1594,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["c.process",{"_index":3031,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["c.target",{"_index":1595,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["cache",{"_index":635,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["cache.constants",{"_index":3058,"title":{},"body":{"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{}}}],["cache.service",{"_index":746,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.service.ts",{"_index":3041,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:102",{"_index":3044,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:121",{"_index":3054,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:139",{"_index":3045,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:157",{"_index":3050,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:27",{"_index":3043,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:39",{"_index":3048,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:54",{"_index":3049,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:65",{"_index":3052,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:78",{"_index":3057,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.types",{"_index":744,"title":{},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["cache/cache.constants",{"_index":2702,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{}}}],["cache/redis.module",{"_index":2673,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["cached",{"_index":2216,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["cachemodule",{"_index":565,"title":{"modules/CacheModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":19,"title":{"classes/CacheService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["caching",{"_index":736,"title":{},"body":{"modules/CacheModule.html":{}}}],["call",{"_index":3419,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["callback",{"_index":151,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["called",{"_index":153,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["caller",{"_index":3290,"title":{},"body":{"modules/WarlockModule.html":{}}}],["callhandler",{"_index":1326,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["calling",{"_index":2438,"title":{},"body":{"classes/LogService.html":{}}}],["can't",{"_index":207,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessRegisterService.html":{}}}],["canactivate",{"_index":14,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":28,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canread",{"_index":1370,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canread.name",{"_index":3980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canread.name.lang",{"_index":3981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":2222,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["canvas.getcontext(\"2d",{"_index":2250,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.height",{"_index":2260,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.width",{"_index":2259,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canwrite",{"_index":1371,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canwrite.name",{"_index":3982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canwrite.name.lang",{"_index":3983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":3522,"title":{},"body":{"index.html":{}}}],["capex",{"_index":2237,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontfamily",{"_index":2251,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontpath",{"_index":2253,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha",{"_index":789,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.constants",{"_index":2224,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.enabled",{"_index":4055,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.expiration",{"_index":4056,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.family",{"_index":4060,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.path",{"_index":4058,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.public.key",{"_index":4063,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.secret.key",{"_index":4065,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.properties",{"_index":4054,"title":{"additional-documentation/properties/captcha.properties.html":{}},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.service",{"_index":798,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.service.ts",{"_index":2154,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:129",{"_index":2198,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:137",{"_index":2202,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:145",{"_index":2204,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:153",{"_index":2207,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:33",{"_index":2162,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captcha.service.ts:39",{"_index":2195,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:96",{"_index":2210,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.type",{"_index":4062,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.types",{"_index":800,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha_cache_prefix",{"_index":2223,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["captcha_cache_prefix}:${request.id",{"_index":2242,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchabody",{"_index":815,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["captchaconfig",{"_index":2171,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.enabled",{"_index":2175,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.google_secret_key",{"_index":2178,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaenabled",{"_index":2173,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaid",{"_index":1458,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captchamodule",{"_index":786,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules.html":{}}}],["captchamoduleoptions",{"_index":790,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchapayload",{"_index":1459,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captcharequest",{"_index":802,"title":{"classes/CaptchaRequest.html":{}},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcharesponse",{"_index":825,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchas",{"_index":2189,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice",{"_index":799,"title":{"classes/CaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaservice:46",{"_index":2163,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:55",{"_index":2196,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice:62",{"_index":2165,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:76",{"_index":2215,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["carry",{"_index":3718,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":852,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["cascade'})@joincolumn",{"_index":1624,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["case",{"_index":230,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["cat",{"_index":929,"title":{},"body":{"injectables/CategoryService.html":{}}}],["catch",{"_index":219,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":2063,"title":{},"body":{"injectables/FileService.html":{}}}],["catch(exception",{"_index":1227,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1233,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catcherror",{"_index":2739,"title":{},"body":{"classes/MsClient.html":{}}}],["catcherror((error",{"_index":2759,"title":{},"body":{"classes/MsClient.html":{}}}],["catches",{"_index":1224,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["categories",{"_index":889,"title":{},"body":{"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":833,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["category.constants",{"_index":935,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":908,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["category.service",{"_index":890,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category_relations",{"_index":934,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["categoryentity",{"_index":831,"title":{"entities/CategoryEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":879,"title":{"modules/CategoryModule.html":{}},"body":{"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrestrictionentity",{"_index":894,"title":{"entities/CategoryRestrictionEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["categoryservice",{"_index":884,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["catrep",{"_index":918,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cause",{"_index":3597,"title":{},"body":{"license.html":{}}}],["caused",{"_index":158,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["certain",{"_index":3504,"title":{},"body":{"index.html":{}}}],["chanel",{"_index":2660,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["change",{"_index":3548,"title":{},"body":{"index.html":{}}}],["changed",{"_index":285,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["changes",{"_index":1439,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["changetarget",{"_index":1564,"title":{},"body":{"classes/ExplorerService.html":{}}}],["changetarget(target",{"_index":1440,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["channel",{"_index":2659,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["character",{"_index":3794,"title":{},"body":{"license.html":{}}}],["charat(0",{"_index":1198,"title":{},"body":{"injectables/ConfigService.html":{}}}],["charge",{"_index":3675,"title":{},"body":{"license.html":{}}}],["check",{"_index":1419,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["checking",{"_index":67,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["checks",{"_index":3362,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["checkuseraccess",{"_index":1401,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["child",{"_index":257,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["children",{"_index":835,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["choose",{"_index":3809,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":3074,"title":{},"body":{"injectables/RedisCacheService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["claim",{"_index":3701,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3691,"title":{},"body":{"license.html":{}}}],["class",{"_index":10,"title":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{}}}],["class\"]?.description",{"_index":1867,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["class\"]?.value",{"_index":1869,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"overview.html":{}}}],["clean",{"_index":3135,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaned",{"_index":3167,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts",{"_index":3125,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:30",{"_index":3129,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:63",{"_index":3137,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaning",{"_index":3126,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["client",{"_index":823,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["client.constants",{"_index":2778,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.constants.ts",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.module.ts",{"_index":2774,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.ts",{"_index":2721,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:30",{"_index":2727,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:43",{"_index":2728,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:64",{"_index":2736,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:80",{"_index":2731,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:97",{"_index":2734,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types",{"_index":2743,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types.ts",{"_index":2629,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/typealiases.html":{}}}],["client.types.ts:30",{"_index":2639,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:36",{"_index":2645,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:42",{"_index":2642,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client/ms",{"_index":2628,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":2726,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["clientsmodule",{"_index":2775,"title":{},"body":{"modules/MsClientModule.html":{}}}],["clientsmodule.registerasync",{"_index":2779,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_cachemodule",{"_index":728,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":730,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_imports",{"_index":729,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":880,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_exports",{"_index":881,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":883,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":882,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":956,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":958,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_imports",{"_index":959,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cluster_configmodule_providers",{"_index":957,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_localemodule",{"_index":2324,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_exports",{"_index":2325,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_providers",{"_index":2326,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule",{"_index":2668,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule_imports",{"_index":2669,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["cluster_msclientmodule",{"_index":2772,"title":{},"body":{"modules/MsClientModule.html":{},"overview.html":{}}}],["cluster_msclientmodule_imports",{"_index":2773,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_processmodule",{"_index":2952,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_exports",{"_index":2954,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_imports",{"_index":2955,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_providers",{"_index":2953,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_warlockmodule",{"_index":3276,"title":{},"body":{"modules/WarlockModule.html":{}}}],["cluster_warlockmodule_imports",{"_index":3277,"title":{},"body":{"modules/WarlockModule.html":{}}}],["code",{"_index":352,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/MsException.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["codebase",{"_index":3564,"title":{},"body":{"index.html":{}}}],["codec",{"_index":336,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["codec_profile",{"_index":468,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["codecprofile",{"_index":337,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["code}_${language.id",{"_index":2354,"title":{},"body":{"injectables/LocaleService.html":{}}}],["color",{"_index":2201,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["color_components",{"_index":2293,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["color_range",{"_index":3268,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["color_space",{"_index":3269,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["colorcomponents",{"_index":375,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorrange",{"_index":448,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colorspace",{"_index":423,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colortype",{"_index":379,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["column",{"_index":487,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["column(\"boolean",{"_index":1540,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["column(\"date",{"_index":2291,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["column(\"decimal",{"_index":494,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"int",{"_index":493,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/FileEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"simple",{"_index":878,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column(\"smallint",{"_index":2578,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column(\"text",{"_index":1539,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column(\"varchar",{"_index":492,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column('boolean",{"_index":1629,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('int",{"_index":1631,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('simple",{"_index":855,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column('smallint",{"_index":2569,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column('text",{"_index":1531,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column('varchar",{"_index":865,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/UserEntity.html":{}}}],["column.entity",{"_index":1561,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["column.entity.ts",{"_index":1488,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:103",{"_index":1501,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:107",{"_index":1525,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:111",{"_index":1510,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:115",{"_index":1521,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:119",{"_index":1506,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:127",{"_index":1523,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:135",{"_index":1508,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:138",{"_index":1527,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:41",{"_index":1495,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:45",{"_index":1512,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:49",{"_index":1498,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:53",{"_index":1493,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:56",{"_index":1530,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:59",{"_index":1532,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:63",{"_index":1534,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:67",{"_index":1511,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:71",{"_index":1533,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:75",{"_index":1497,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:79",{"_index":1499,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:83",{"_index":1514,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:87",{"_index":1516,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:91",{"_index":1520,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:95",{"_index":1503,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:99",{"_index":1518,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["columndatatype",{"_index":1358,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":1362,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["columns.description",{"_index":3961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.description.lang",{"_index":3962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name",{"_index":3959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name.lang",{"_index":3960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer",{"_index":3963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description",{"_index":3966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description.lang",{"_index":3967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name",{"_index":3964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name.lang",{"_index":3965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer",{"_index":3968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description",{"_index":3971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description.lang",{"_index":3972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name",{"_index":3969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name.lang",{"_index":3970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab",{"_index":3973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name",{"_index":3974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name.lang",{"_index":3975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":3697,"title":{},"body":{"license.html":{}}}],["combining",{"_index":2450,"title":{},"body":{"classes/LogService.html":{}}}],["command",{"_index":2910,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["commands",{"_index":3475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comment",{"_index":3835,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":3803,"title":{},"body":{"license.html":{}}}],["common",{"_index":3591,"title":{},"body":{"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["common/auth/auth.constants",{"_index":80,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["common/media/entity/media.entity",{"_index":875,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{}}}],["common/media/media.types",{"_index":2306,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["common/user/entity/user",{"_index":909,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["common/user/user.types",{"_index":83,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["communication",{"_index":3520,"title":{},"body":{"index.html":{},"license.html":{}}}],["compiled",{"_index":3617,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2379,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["compliance",{"_index":537,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["complies",{"_index":3746,"title":{},"body":{"license.html":{}}}],["components\"]?.value",{"_index":1835,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["compositeimage",{"_index":440,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["comprehensive",{"_index":3511,"title":{},"body":{"index.html":{}}}],["compression",{"_index":380,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["computer",{"_index":3800,"title":{},"body":{"license.html":{}}}],["concat(config_file_ext_pattern",{"_index":1195,"title":{},"body":{"injectables/ConfigService.html":{}}}],["conditions",{"_index":551,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["config",{"_index":749,"title":{},"body":{"modules/CacheModule.html":{},"injectables/ConfigService.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["config.constants",{"_index":1061,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service",{"_index":963,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.ts",{"_index":3936,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["config.types",{"_index":1062,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix",{"_index":1054,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["config_cache_prefix}:${!filter",{"_index":1086,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${filenameprefix}.${keywithoutprefix",{"_index":1159,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${item.key",{"_index":1110,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${key",{"_index":1113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_file_ext_pattern",{"_index":1055,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configfilename",{"_index":1193,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configfilepath",{"_index":1196,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configitem",{"_index":946,"title":{"interfaces/ConfigItem.html":{}},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{}}}],["configmodule",{"_index":955,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":960,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.initwithpropertiesfiles(gencnfdir",{"_index":3991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":827,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["configurations",{"_index":887,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{}}}],["configuring",{"_index":452,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["connection",{"_index":2375,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["connection_space",{"_index":2269,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["connectionspace",{"_index":386,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["consequential",{"_index":3793,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3816,"title":{},"body":{"license.html":{}}}],["consists",{"_index":951,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["conspicuously",{"_index":3659,"title":{},"body":{"license.html":{}}}],["const",{"_index":89,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":625,"title":{},"body":{"classes/AuthService.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":85,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{}}}],["constitutes",{"_index":3705,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(@inject(redis_client",{"_index":2703,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(catrep",{"_index":915,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(code",{"_index":2789,"title":{},"body":{"classes/MsException.html":{}}}],["constructor(fieldname",{"_index":2796,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["constructor(items",{"_index":2808,"title":{},"body":{"classes/PageableData.html":{}}}],["constructor(languagerep",{"_index":2339,"title":{},"body":{"injectables/LocaleService.html":{}}}],["constructor(lockexec",{"_index":2865,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["constructor(logger",{"_index":504,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["constructor(message",{"_index":671,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(private",{"_index":1333,"title":{},"body":{"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/NotEmptyPipe.html":{},"modules/ProcessModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(pubclient",{"_index":2680,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(reflector",{"_index":3103,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(serializer",{"_index":1321,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["constructor(userrep",{"_index":687,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["constructs",{"_index":2036,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["construed",{"_index":3743,"title":{},"body":{"license.html":{}}}],["contain",{"_index":306,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["contained",{"_index":3730,"title":{},"body":{"license.html":{}}}],["container",{"_index":338,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["containing",{"_index":609,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["contains",{"_index":1443,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content",{"_index":1003,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content.split(\"\\n",{"_index":1139,"title":{},"body":{"injectables/ConfigService.html":{}}}],["contents",{"_index":1288,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["context",{"_index":48,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"classes/LogService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["context.gethandler",{"_index":3117,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":90,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["continue",{"_index":1143,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["contract",{"_index":2630,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"license.html":{}}}],["contrast",{"_index":434,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["contribution",{"_index":3640,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":3695,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":3748,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3662,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":3706,"title":{},"body":{"license.html":{}}}],["control",{"_index":3102,"title":{},"body":{"guards/RolesGuard.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":3590,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":3918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conversions",{"_index":3618,"title":{},"body":{"license.html":{}}}],["convert",{"_index":3457,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":3528,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":539,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright\"]?.description",{"_index":1899,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["corresponding",{"_index":2042,"title":{},"body":{"injectables/FileService.html":{}}}],["counterclaim",{"_index":3702,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1436,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crash",{"_index":159,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crashed",{"_index":223,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["crashes",{"_index":154,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["create",{"_index":682,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/UserService.html":{}}}],["create(user",{"_index":690,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createbasicfindqb",{"_index":2007,"title":{},"body":{"injectables/FileService.html":{}}}],["createcanvas",{"_index":2220,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["createcanvas(200",{"_index":2247,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["created",{"_index":693,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["createdatecolumn",{"_index":1637,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["createdirectoriesifnotexist",{"_index":2050,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(dir",{"_index":2143,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(directorypath",{"_index":1284,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["createfiledirectory",{"_index":2008,"title":{},"body":{"injectables/FileService.html":{}}}],["createfiledirectory(ispublic",{"_index":2019,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity",{"_index":2009,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity(ispublic",{"_index":2023,"title":{},"body":{"injectables/FileService.html":{}}}],["createfilemetadataentity",{"_index":1671,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createfilemetadataentity(buf",{"_index":1673,"title":{},"body":{"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createlocalizedstrings",{"_index":2338,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createlocalizedstrings(value",{"_index":2344,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createloginstance",{"_index":2853,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createloginstance(processcode",{"_index":2872,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createorupdatefile",{"_index":1646,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["createorupdatefile(file",{"_index":1652,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["createorupdatemedia",{"_index":2519,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createorupdatemedia(file",{"_index":2590,"title":{},"body":{"classes/MediaManager.html":{}}}],["createparamdecorator",{"_index":3909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(\"file",{"_index":2107,"title":{},"body":{"injectables/FileService.html":{}}}],["creates",{"_index":1281,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["creating",{"_index":11,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["creation",{"_index":1692,"title":{},"body":{"injectables/FileMetadataService.html":{},"index.html":{}}}],["creator\"]?.description",{"_index":1895,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["criteria",{"_index":2820,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["cron",{"_index":2928,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["cron/dist/job",{"_index":2996,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cron_tab",{"_index":3027,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["cronjob",{"_index":2995,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cronjob(processdata.crontab",{"_index":3016,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["crontab",{"_index":2836,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["cross",{"_index":3700,"title":{},"body":{"license.html":{}}}],["crud",{"_index":3491,"title":{},"body":{"index.html":{}}}],["crutch",{"_index":1265,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto",{"_index":1247,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto.createhash(\"sha256",{"_index":1278,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["cs",{"_index":581,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.get(authconfig.jwt_secret",{"_index":583,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.getnumber",{"_index":586,"title":{},"body":{"modules/AuthModule.html":{}}}],["ctx",{"_index":2249,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["ctx.fillrect(0",{"_index":2258,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.fillstyle",{"_index":2256,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.font",{"_index":2261,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.methodname",{"_index":2459,"title":{},"body":{"classes/LogService.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.textbaseline",{"_index":2263,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx?.filepath}:${ctx?.linenumber",{"_index":2466,"title":{},"body":{"classes/LogService.html":{}}}],["ctx?.methodname",{"_index":2467,"title":{},"body":{"classes/LogService.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["currentpage",{"_index":2809,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["currentpath",{"_index":1296,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["currentuser",{"_index":1346,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["currentuser.roles.find((v",{"_index":3226,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["custom",{"_index":664,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":3764,"title":{},"body":{"license.html":{}}}],["customrendered",{"_index":429,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["d",{"_index":3727,"title":{},"body":{"license.html":{}}}],["d\\s()]*$/.test(processedvalue",{"_index":1168,"title":{},"body":{"injectables/ConfigService.html":{}}}],["damages",{"_index":3790,"title":{},"body":{"license.html":{}}}],["data",{"_index":174,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/FileEntity.html":{},"injectables/FileMetadataService.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.tostring",{"_index":2718,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["data:image/png;base64,${image",{"_index":2241,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["database",{"_index":1220,"title":{},"body":{"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":2371,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["datasource.manager.connection.subscribers.push(this",{"_index":2383,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["date",{"_index":240,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["date\"]?.value",{"_index":1876,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date(exifdata.icc[\"icc",{"_index":1874,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date.tolocalestring",{"_index":253,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["date_time",{"_index":2294,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["dates",{"_index":1461,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["datetime",{"_index":377,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["db",{"_index":754,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["dbexceptionfilter",{"_index":1217,"title":{"classes/DbExceptionFilter.html":{}},"body":{"classes/DbExceptionFilter.html":{}}}],["debug",{"_index":2424,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":2430,"title":{},"body":{"classes/LogService.html":{}}}],["declarations",{"_index":726,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["decomposed",{"_index":3407,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["decorator",{"_index":3912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":460,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["decorators/for",{"_index":3111,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deepequal(obj1",{"_index":3370,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(obj1[key",{"_index":3378,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(uniqueobj",{"_index":3359,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deeply",{"_index":3364,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["default",{"_index":182,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["default_action_create",{"_index":1597,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_delete",{"_index":1599,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_duplicate",{"_index":1601,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_save",{"_index":1603,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_media_quality",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_media_type",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultactioncreate",{"_index":1366,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactiondelete",{"_index":1368,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionduplicate",{"_index":1369,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionsave",{"_index":1367,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaults",{"_index":1430,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["defend",{"_index":3822,"title":{},"body":{"license.html":{}}}],["defined",{"_index":30,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["defines",{"_index":595,"title":{},"body":{"classes/AuthService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["defining",{"_index":760,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":2646,"title":{},"body":{"interfaces/MessageBus.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":3578,"title":{},"body":{"license.html":{}}}],["del",{"_index":762,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["del(...keys",{"_index":768,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["delete",{"_index":317,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["deleted",{"_index":3140,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["deleteexistingconfigtsfiles",{"_index":975,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleteexistingconfigtsfiles(directory",{"_index":987,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletes",{"_index":989,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{}}}],["deleting",{"_index":3066,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["deliberate",{"_index":3785,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":724,"title":{"dependencies.html":{}},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":920,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"interfaces/XdbRequest.html":{}}}],["depth\"]?.value",{"_index":1842,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["derivative",{"_index":3625,"title":{},"body":{"license.html":{}}}],["derived",{"_index":597,"title":{},"body":{"classes/AuthService.html":{},"license.html":{}}}],["desc",{"_index":2823,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["descendants",{"_index":922,"title":{},"body":{"injectables/CategoryService.html":{}}}],["describing",{"_index":3765,"title":{},"body":{"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["description\"]?.description",{"_index":1897,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["description.lang",{"_index":3958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserialize",{"_index":2688,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserialized",{"_index":2689,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserializes",{"_index":2687,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["designated",{"_index":3661,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":1470,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"index.html":{}}}],["details",{"_index":3557,"title":{},"body":{"index.html":{}}}],["detect",{"_index":3320,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":32,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["determining",{"_index":3775,"title":{},"body":{"license.html":{}}}],["development",{"_index":3485,"title":{},"body":{"index.html":{}}}],["device_manufacturer",{"_index":2270,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["device_model_number",{"_index":2272,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["devicemanufacturer",{"_index":390,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["devicemodelnumber",{"_index":391,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["different",{"_index":3092,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"license.html":{}}}],["digitalzoomratio",{"_index":432,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dir",{"_index":1178,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["direct",{"_index":3595,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3598,"title":{},"body":{"license.html":{}}}],["directories",{"_index":1240,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directory",{"_index":992,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directorypath",{"_index":1283,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["directorystructure",{"_index":1237,"title":{"interfaces/DirectoryStructure.html":{}},"body":{"interfaces/DirectoryStructure.html":{}}}],["dirpath",{"_index":1189,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["dirs",{"_index":1071,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dirstruct",{"_index":3141,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["dirstruct[key].length",{"_index":3168,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["disables",{"_index":4047,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["disclaimer",{"_index":3768,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":3656,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":2632,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatch(pattern",{"_index":2635,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatched",{"_index":2730,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatches",{"_index":2729,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatching",{"_index":2722,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["display",{"_index":1490,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"classes/LogService.html":{},"license.html":{}}}],["display_aspect_ratio",{"_index":3270,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["displayaspectratio",{"_index":447,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["displaying",{"_index":3492,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":3684,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":547,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["distribution",{"_index":3577,"title":{},"body":{"license.html":{}}}],["document",{"_index":3582,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3559,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentations",{"_index":3562,"title":{},"body":{"index.html":{}}}],["don't",{"_index":3834,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":3453,"title":{},"body":{"dependencies.html":{}}}],["drawn",{"_index":2212,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["dto",{"_index":1319,"title":{},"body":{"injectables/DtoInterceptor.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["dtointerceptor",{"_index":1313,"title":{"injectables/DtoInterceptor.html":{}},"body":{"injectables/DtoInterceptor.html":{}}}],["duplicate",{"_index":3353,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duplicates",{"_index":3354,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duration",{"_index":339,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["dynamic",{"_index":3510,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":1253,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dynamicmodule",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["e",{"_index":220,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"entities/MediaTypeEntity.html":{},"miscellaneous/variables.html":{}}}],["e.code",{"_index":2617,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["each",{"_index":950,"title":{},"body":{"interfaces/ConfigItem.html":{},"license.html":{}}}],["easier",{"_index":3840,"title":{},"body":{"license.html":{}}}],["easy",{"_index":3534,"title":{},"body":{"index.html":{}}}],["editing",{"_index":1471,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["editorial",{"_index":3627,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3545,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":3513,"title":{},"body":{"index.html":{}}}],["elaborations",{"_index":3630,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3647,"title":{},"body":{"license.html":{}}}],["email",{"_index":3183,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["embedded",{"_index":1356,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["emit",{"_index":2633,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emit(chanel",{"_index":2656,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["emit(pattern",{"_index":2641,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["emits",{"_index":2658,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emitted",{"_index":2732,"title":{},"body":{"classes/MsClient.html":{}}}],["empty",{"_index":1709,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts",{"_index":2793,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:23",{"_index":2797,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:26",{"_index":2800,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["enabled",{"_index":826,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["enables",{"_index":4046,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["enabling",{"_index":3512,"title":{},"body":{"index.html":{}}}],["enclosed",{"_index":3830,"title":{},"body":{"license.html":{}}}],["encoded",{"_index":2214,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["encoding",{"_index":1290,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["encrypting",{"_index":3538,"title":{},"body":{"index.html":{}}}],["end",{"_index":1100,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["ensure",{"_index":2795,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["ensuring",{"_index":3221,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entire",{"_index":3944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":456,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity(\"categories",{"_index":876,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity(\"category_restriction",{"_index":911,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["entity(\"explorer_actions",{"_index":1485,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["entity(\"explorer_column_renderers",{"_index":1549,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["entity(\"explorer_columns",{"_index":1538,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["entity(\"explorer_tabs",{"_index":1585,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["entity(\"explorer_targets",{"_index":1614,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["entity(\"file_metadata",{"_index":1688,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["entity(\"file_metadata_audio",{"_index":490,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["entity(\"file_metadata_gps",{"_index":2186,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["entity(\"file_metadata_icc",{"_index":2290,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["entity(\"file_metadata_image",{"_index":2295,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["entity(\"file_metadata_video",{"_index":3275,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["entity(\"files",{"_index":1642,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity(\"languages",{"_index":2318,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["entity(\"localized_medias",{"_index":2408,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["entity(\"localized_strings",{"_index":2416,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["entity(\"medias",{"_index":2548,"title":{},"body":{"entities/MediaEntity.html":{}}}],["entity(\"medias_ext",{"_index":2555,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["entity(\"medias_files",{"_index":2577,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["entity(\"medias_format",{"_index":2588,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["entity(\"medias_types",{"_index":2625,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["entity(\"process_logs",{"_index":2849,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["entity(\"process_units",{"_index":3036,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["entity(\"users",{"_index":3215,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity(\"users_roles",{"_index":3244,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["entity.code",{"_index":2074,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.constructor.name",{"_index":2392,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entity.id",{"_index":2081,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.id.tostring",{"_index":2060,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.metadata",{"_index":2076,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.name",{"_index":2073,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.path",{"_index":2072,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.public",{"_index":2057,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.size",{"_index":2070,"title":{},"body":{"injectables/FileService.html":{}}}],["entity/audio",{"_index":1719,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/category.entity",{"_index":892,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["entity/exif",{"_index":1723,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/explorer",{"_index":1560,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["entity/file",{"_index":1670,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["entity/file.entity",{"_index":1669,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["entity/gps",{"_index":1722,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/icc",{"_index":1724,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/image",{"_index":1721,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/language.entity",{"_index":2331,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/localized",{"_index":2332,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/media",{"_index":2605,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/media.entity",{"_index":2501,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entity/process.log.entity",{"_index":189,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/process.unit.entity",{"_index":2905,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/user.entity",{"_index":298,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["entity/video",{"_index":1720,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity_save_handler",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityid",{"_index":2020,"title":{},"body":{"injectables/FileService.html":{}}}],["entityidforpatch",{"_index":2509,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitymanager.remove(myentity",{"_index":2368,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entityname",{"_index":2510,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitysavehandler",{"_index":1336,"title":{"interfaces/EntitySaveHandler.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entitysubscriber",{"_index":2363,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entitysubscriberinterface",{"_index":2380,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["entries",{"_index":4057,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["entry",{"_index":179,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["enum",{"_index":1480,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessUnitEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":2822,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["enumerations",{"_index":3470,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments",{"_index":3554,"title":{},"body":{"index.html":{}}}],["envloader",{"_index":742,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["envloader.loadenvironment(logger",{"_index":748,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":3365,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["err",{"_index":2065,"title":{},"body":{"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["err.code",{"_index":2765,"title":{},"body":{"classes/MsClient.html":{}}}],["err.message",{"_index":2762,"title":{},"body":{"classes/MsClient.html":{}}}],["err.stack",{"_index":2763,"title":{},"body":{"classes/MsClient.html":{}}}],["err_token_a",{"_index":626,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["err_token_r",{"_index":628,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":149,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error().stack",{"_index":2475,"title":{},"body":{"classes/LogService.html":{}}}],["error(`invalid",{"_index":1157,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(message",{"_index":2433,"title":{},"body":{"classes/LogService.html":{}}}],["error.name",{"_index":2766,"title":{},"body":{"classes/MsClient.html":{}}}],["error?.type",{"_index":2760,"title":{},"body":{"classes/MsClient.html":{}}}],["errors",{"_index":624,"title":{},"body":{"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"classes/MsClient.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1263,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["etc",{"_index":3493,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["eval('import(\"file",{"_index":1267,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["eval(processedvalue",{"_index":1169,"title":{},"body":{"injectables/ConfigService.html":{}}}],["even",{"_index":3805,"title":{},"body":{"license.html":{}}}],["event",{"_index":286,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{},"license.html":{}}}],["event.entity",{"_index":2384,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.entity.login",{"_index":3266,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entityid",{"_index":2393,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.manager.remove(relatedentity",{"_index":2397,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["events",{"_index":268,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["eventsubscriber",{"_index":2381,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["ex",{"_index":3064,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["example",{"_index":1454,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["exceeding",{"_index":4052,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["except",{"_index":536,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["exception",{"_index":666,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1236,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["exceptions",{"_index":2787,"title":{},"body":{"classes/MsException.html":{}}}],["exceptions/ms.exception",{"_index":2745,"title":{},"body":{"classes/MsClient.html":{}}}],["exchange",{"_index":614,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchanged",{"_index":1444,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangetoken",{"_index":599,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetoken(refreshtoken",{"_index":612,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetokenpayload",{"_index":1441,"title":{"classes/ExchangeTokenPayload.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exclude",{"_index":2499,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["excludeproperties",{"_index":3406,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["excluding",{"_index":3658,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3674,"title":{},"body":{"license.html":{}}}],["execute",{"_index":128,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["executed",{"_index":206,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"license.html":{}}}],["executes",{"_index":3134,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["execution",{"_index":49,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["executioncontext",{"_index":29,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3780,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3608,"title":{},"body":{"license.html":{}}}],["exif",{"_index":368,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["exifdata",{"_index":1819,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif",{"_index":1900,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.aperturevalue?.description",{"_index":1939,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.brightnessvalue?.description",{"_index":1941,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.colorspace?.description",{"_index":1957,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.contrast?.description",{"_index":1979,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.customrendered?.description",{"_index":1969,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.digitalzoomratio?.description",{"_index":1975,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exifversion?.description",{"_index":1933,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposurebiasvalue?.description",{"_index":1943,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuremode?.description",{"_index":1971,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposureprogram?.description",{"_index":1929,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuretime?.description",{"_index":1925,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flash?.description",{"_index":1951,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flashpixversion?.description",{"_index":1955,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.fnumber?.description",{"_index":1927,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.focallength?.description",{"_index":1953,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.interoperabilityindex?.description",{"_index":1993,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.isospeedratings?.description",{"_index":1931,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmake?.description",{"_index":1987,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmodel?.description",{"_index":1989,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.make?.description",{"_index":1903,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.maxaperturevalue?.description",{"_index":1945,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.meteringmode?.description",{"_index":1949,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.model?.description",{"_index":1905,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.offsettime?.description",{"_index":1935,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.orientation?.description",{"_index":1907,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelxdimension?.description",{"_index":1959,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelydimension?.description",{"_index":1961,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.resolutionunit?.description",{"_index":1913,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.saturation?.description",{"_index":1981,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenecapturetype?.description",{"_index":1977,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenetype?.description",{"_index":1967,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sensingmethod?.description",{"_index":1965,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sharpness?.description",{"_index":1983,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.shutterspeedvalue?.description",{"_index":1937,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.software?.description",{"_index":1915,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistance?.description",{"_index":1947,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistancerange?.description",{"_index":1985,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.whitebalance?.description",{"_index":1973,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.xresolution?.description",{"_index":1909,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.ycbcrpositioning?.description",{"_index":1917,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.yresolution?.description",{"_index":1911,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"compositeimage\"]?.description",{"_index":1991,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"exif",{"_index":1919,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"gps",{"_index":1923,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperability",{"_index":1963,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperabilityversion\"]?.description",{"_index":1995,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"bits",{"_index":1825,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"color",{"_index":1834,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"image",{"_index":1829,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"subsampling\"]?.description",{"_index":1837,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps",{"_index":1852,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.altitude",{"_index":1855,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.latitude",{"_index":1859,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.longitude",{"_index":1857,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc",{"_index":1860,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"connection",{"_index":1871,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"device",{"_index":1885,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"icc",{"_index":1877,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"primary",{"_index":1882,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile",{"_index":1863,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile/device",{"_index":1866,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"rendering",{"_index":1890,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png",{"_index":1838,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"bit",{"_index":1841,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"color",{"_index":1844,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"compression\"]?.description",{"_index":1847,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"filter\"]?.description",{"_index":1849,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"image",{"_index":1839,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"interlace\"]?.description",{"_index":1851,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exiffilemetadata",{"_index":369,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exiffilemetadataentity",{"_index":1677,"title":{},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["exififdpointer",{"_index":405,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifreader",{"_index":1715,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["exifreader.load(buf",{"_index":1820,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifversion",{"_index":411,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exist",{"_index":1282,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["existed",{"_index":2355,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existed?.id",{"_index":2358,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existedentityid",{"_index":1655,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["existing",{"_index":990,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exists",{"_index":2056,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["expanded",{"_index":1821,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["expiration",{"_index":784,"title":{},"body":{"classes/CacheService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["expire",{"_index":763,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expire(key",{"_index":770,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expiresin",{"_index":585,"title":{},"body":{"modules/AuthModule.html":{},"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["explicitarray",{"_index":3325,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitchildren",{"_index":3327,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitly",{"_index":3749,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":1353,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["explorer.constants",{"_index":1354,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer.service",{"_index":1559,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.types",{"_index":1482,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["explorer.variation",{"_index":1390,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer/explorer.module",{"_index":3439,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exploreraction",{"_index":1365,"title":{"interfaces/ExplorerAction.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["exploreractionentity",{"_index":1465,"title":{"entities/ExplorerActionEntity.html":{}},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumn",{"_index":1363,"title":{"interfaces/ExplorerColumn.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnentity",{"_index":1487,"title":{"entities/ExplorerColumnEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumnrenderer",{"_index":1385,"title":{"interfaces/ExplorerColumnRenderer.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnrendererentity",{"_index":1504,"title":{"entities/ExplorerColumnRendererEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{}}}],["explorermodule",{"_index":1550,"title":{"modules/ExplorerModule.html":{}},"body":{"modules/ExplorerModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["explorermodule.forroot",{"_index":3435,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["explorermoduleoptions",{"_index":1404,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerselectparams",{"_index":1403,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerservice",{"_index":1407,"title":{"classes/ExplorerService.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertab",{"_index":1388,"title":{"interfaces/ExplorerTab.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertabentity",{"_index":1526,"title":{"entities/ExplorerTabEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["explorertarget",{"_index":1360,"title":{"interfaces/ExplorerTarget.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorertargetentity",{"_index":1528,"title":{"entities/ExplorerTargetEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorertargetparams",{"_index":1396,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["exploring",{"_index":1552,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["export",{"_index":86,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["export.service",{"_index":3438,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exporting",{"_index":3501,"title":{},"body":{"index.html":{}}}],["exports",{"_index":592,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["exportservice",{"_index":3404,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["exportxml",{"_index":3299,"title":{},"body":{"classes/XdbExportService.html":{}}}],["exportxml(params",{"_index":3300,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["expose",{"_index":1450,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["expose()@type(undefined",{"_index":2303,"title":{},"body":{"classes/JwtDto.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaTypeDto.html":{},"classes/UserDto.html":{}}}],["exposurebias",{"_index":416,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuremode",{"_index":430,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposureprogram",{"_index":409,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuretime",{"_index":407,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["express",{"_index":81,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["expression",{"_index":1261,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ext",{"_index":361,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["ext.entity",{"_index":2624,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["ext.entity.ts",{"_index":2551,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:11",{"_index":2553,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:15",{"_index":2554,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["extend",{"_index":3533,"title":{},"body":{"index.html":{}}}],["extended",{"_index":3536,"title":{},"body":{"index.html":{}}}],["extending",{"_index":669,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["extends",{"_index":499,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserSubscriber.html":{}}}],["extensibility",{"_index":3495,"title":{},"body":{"index.html":{}}}],["extension",{"_index":1653,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["extensions",{"_index":2552,"title":{},"body":{"entities/MediaExtEntity.html":{},"miscellaneous/variables.html":{}}}],["extracting",{"_index":3913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracts",{"_index":56,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["f",{"_index":2534,"title":{},"body":{"entities/MediaEntity.html":{}}}],["f.media",{"_index":2535,"title":{},"body":{"entities/MediaEntity.html":{}}}],["failed",{"_index":2064,"title":{},"body":{"injectables/FileService.html":{}}}],["failure",{"_index":3801,"title":{},"body":{"license.html":{}}}],["false",{"_index":945,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["family",{"_index":2206,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["fast",{"_index":970,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["features",{"_index":3508,"title":{},"body":{"index.html":{}}}],["fee",{"_index":3810,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1418,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["fetching",{"_index":503,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["fetchuser",{"_index":20,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["ffprobe",{"_index":1716,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["ffprobe(filepath",{"_index":1752,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd",{"_index":1751,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd.streams.find((v",{"_index":1755,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic",{"_index":1717,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic.path",{"_index":1753,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["field",{"_index":1489,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["fieldname",{"_index":2798,"title":{},"body":{"injectables/NotEmptyPipe.html":{},"interfaces/XdbRequest.html":{}}}],["fields",{"_index":3829,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":3601,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["file's",{"_index":2027,"title":{},"body":{"injectables/FileService.html":{}}}],["file.constants",{"_index":351,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["file.entity",{"_index":2545,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["file.entity.ts",{"_index":2564,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:18",{"_index":2571,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:22",{"_index":2566,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:26",{"_index":2573,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:29",{"_index":2575,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:32",{"_index":2570,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:35",{"_index":2574,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:38",{"_index":2568,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:41",{"_index":2572,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.id.tostring",{"_index":2094,"title":{},"body":{"injectables/FileService.html":{}}}],["file.isdirectory",{"_index":1130,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.isfile",{"_index":1118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.length",{"_index":2071,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata",{"_index":2095,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.audio",{"_index":2100,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.gps",{"_index":2098,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.image",{"_index":2096,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.video",{"_index":2102,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name",{"_index":1119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.path",{"_index":2093,"title":{},"body":{"injectables/FileService.html":{}}}],["file.private.dir",{"_index":4069,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.properties",{"_index":4066,"title":{"additional-documentation/properties/file.properties.html":{}},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.public",{"_index":2091,"title":{},"body":{"injectables/FileService.html":{}}}],["file.public.dir",{"_index":4067,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.service",{"_index":1999,"title":{},"body":{"modules/FileModule.html":{}}}],["file.types",{"_index":489,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["file/entity/file",{"_index":2547,"title":{},"body":{"entities/MediaEntity.html":{}}}],["file/file.module",{"_index":2606,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["file/file.types",{"_index":2500,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["filebuffer",{"_index":1274,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fileconfig",{"_index":2044,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.private_dir",{"_index":2047,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.public_dir",{"_index":2049,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent",{"_index":1133,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filed",{"_index":3710,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3383,"title":{},"body":{"classes/XdbImportService.html":{}}}],["fileentity",{"_index":1615,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filemanager",{"_index":349,"title":{"classes/FileManager.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemanager:131",{"_index":2032,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:148",{"_index":2030,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:159",{"_index":2034,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:168",{"_index":2033,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:177",{"_index":2035,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:187",{"_index":2041,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:66",{"_index":2025,"title":{},"body":{"injectables/FileService.html":{}}}],["filemd",{"_index":350,"title":{"classes/FileMd.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemd:45",{"_index":1697,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filemetadata",{"_index":358,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemetadataentity",{"_index":1621,"title":{"entities/FileMetadataEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["filemetadataservice",{"_index":1689,"title":{"injectables/FileMetadataService.html":{}},"body":{"injectables/FileMetadataService.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":453,"title":{"modules/FileModule.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/MediaModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["filemodule.forroot",{"_index":2607,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["filemoduleoptions",{"_index":454,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":2069,"title":{},"body":{"injectables/FileService.html":{}}}],["filenameprefix",{"_index":1034,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filepath",{"_index":1037,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/LogService.html":{}}}],["filepromises",{"_index":1299,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filerep",{"_index":2012,"title":{},"body":{"injectables/FileService.html":{}}}],["filerow",{"_index":3399,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["files",{"_index":968,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["files.format",{"_index":3954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files.map(async",{"_index":1300,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["files_encoding",{"_index":1056,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":3142,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fileservice",{"_index":1998,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filesutils",{"_index":1268,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["filesutils.createdirectoriesifnotexist",{"_index":2051,"title":{},"body":{"injectables/FileService.html":{}}}],["filesutils.filetype",{"_index":1727,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.gethashfrombuffer",{"_index":1726,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.readdirectoryrecursively",{"_index":3155,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["filetype",{"_index":1269,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{}}}],["filetype().filetypefrombuffer(buf",{"_index":1729,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata",{"_index":1728,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.ext",{"_index":1735,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.mime",{"_index":1733,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypemodule",{"_index":1255,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["filetypemodule.lib",{"_index":1270,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fill",{"_index":1411,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["filter",{"_index":381,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filter.ts",{"_index":1219,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filter.ts:27",{"_index":1230,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filtering",{"_index":1011,"title":{},"body":{"injectables/ConfigService.html":{}}}],["find",{"_index":696,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["findbycode",{"_index":1647,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findbycode(code",{"_index":1657,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findbyid",{"_index":683,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbyid(id",{"_index":694,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findbylogin",{"_index":684,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbylogin(login",{"_index":697,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findfilebyid",{"_index":1648,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["findfilebyid(id",{"_index":1659,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["finding",{"_index":2006,"title":{},"body":{"injectables/FileService.html":{}}}],["findmediabyid",{"_index":2516,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findmediabyid(id",{"_index":2593,"title":{},"body":{"classes/MediaManager.html":{}}}],["findprivatebyid",{"_index":1649,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findprivatebyid(id",{"_index":1661,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findpublicbyid",{"_index":1650,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findpublicbyid(id",{"_index":1663,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["finds",{"_index":2031,"title":{},"body":{"injectables/FileService.html":{}}}],["finished",{"_index":217,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["finishes",{"_index":161,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["first",{"_index":3367,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["first_name",{"_index":3205,"title":{},"body":{"entities/UserEntity.html":{}}}],["firstname",{"_index":2367,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["fitness",{"_index":3772,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1291,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["flash",{"_index":420,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpixversion",{"_index":422,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flexibility",{"_index":3494,"title":{},"body":{"index.html":{}}}],["flexibly",{"_index":3552,"title":{},"body":{"index.html":{}}}],["fn.ts",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fnumber",{"_index":408,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focallength",{"_index":421,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["folder",{"_index":3144,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["folders",{"_index":3139,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["folderscount",{"_index":3143,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["following",{"_index":3714,"title":{},"body":{"license.html":{}}}],["font",{"_index":2205,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["for_roles",{"_index":3915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":2150,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["forbiddenexception",{"_index":75,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenexception(access_token_error_msg",{"_index":99,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenmsexception",{"_index":2148,"title":{"classes/ForbiddenMsException.html":{}},"body":{"classes/ForbiddenMsException.html":{}}}],["force",{"_index":641,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["form",{"_index":1587,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["format",{"_index":292,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["format.entity",{"_index":2576,"title":{},"body":{"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["format.entity.ts",{"_index":2583,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:11",{"_index":2584,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:15",{"_index":2586,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:18",{"_index":2587,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:21",{"_index":2585,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["formats",{"_index":2505,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":2446,"title":{},"body":{"classes/LogService.html":{}}}],["forroles",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroot",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forroot(options",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forrootasync",{"_index":793,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":794,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forwardreference",{"_index":3390,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["found",{"_index":59,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/NotFoundMsException.html":{}}}],["founduser",{"_index":318,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["founduser.password",{"_index":323,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["fourth",{"_index":2478,"title":{},"body":{"classes/LogService.html":{}}}],["frame_rate",{"_index":3272,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["framerate",{"_index":449,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["framework",{"_index":3483,"title":{},"body":{"index.html":{}}}],["free",{"_index":3677,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":4008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":1053,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["fs.existssync(localpropertiespath",{"_index":1125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.existssync(tmpdir",{"_index":3158,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises",{"_index":2061,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.access(directorypath",{"_index":1285,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(directorypath",{"_index":1286,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(gensrcpath",{"_index":1203,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(currentpath",{"_index":1298,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.readdir(directory",{"_index":1115,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(fullpath",{"_index":1176,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile",{"_index":1127,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(fullpath",{"_index":1134,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(kppath",{"_index":1122,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(path",{"_index":1292,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.rm(tmpdir",{"_index":3165,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises.stat(filepath",{"_index":1303,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.unlink(path.join(fullpath",{"_index":1184,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.writefile(`${outputpath}/${filename",{"_index":2075,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.writefile(configfilepath",{"_index":1205,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ft",{"_index":1264,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ft.lib",{"_index":1266,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["full",{"_index":501,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"miscellaneous/variables.html":{}}}],["fullkey",{"_index":1109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullpath",{"_index":1129,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullrelations",{"_index":1398,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["fun",{"_index":2708,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["fun(this.safedeserialize(data",{"_index":2710,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["function",{"_index":1260,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":737,"title":{},"body":{"modules/CacheModule.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["gateway",{"_index":1226,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["gen",{"_index":573,"title":{},"body":{"modules/AuthModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["gen_src_dir",{"_index":1057,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["gencnfdir",{"_index":1018,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["generatecaptcha",{"_index":818,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["generatecolor",{"_index":2190,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generateconfigtsfiles",{"_index":976,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generated",{"_index":647,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["generatedcontent",{"_index":1170,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedfilecontent",{"_index":1201,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedtsoutput",{"_index":972,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables",{"_index":977,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables(namespacename",{"_index":996,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generaterandomint",{"_index":2231,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring",{"_index":2229,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring(5",{"_index":2234,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generates",{"_index":645,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":817,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{}}}],["generation",{"_index":2159,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["genre",{"_index":340,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gensrcfile",{"_index":1179,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.isfile",{"_index":1180,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name",{"_index":1183,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name.endswith(config_file_ext_pattern",{"_index":1181,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfiles",{"_index":1175,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcpath",{"_index":1191,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(key",{"_index":772,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getaccesstokenfromrequest",{"_index":26,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getaccesstokenfromrequest(req",{"_index":54,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getboolean",{"_index":764,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getboolean(key",{"_index":774,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getcallingcontext",{"_index":2425,"title":{},"body":{"classes/LogService.html":{}}}],["getcaptchaexp",{"_index":2191,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontfamily",{"_index":2192,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontpath",{"_index":2193,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getdeletestats",{"_index":3128,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdeletestats(dirstruct",{"_index":3136,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdescendantsbycodeofroot",{"_index":913,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getdescendantsbycodeofroot(code",{"_index":919,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getentitydata",{"_index":1432,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata(target",{"_index":1567,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getfilepath",{"_index":1651,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["getfilepath(file",{"_index":1665,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["getfrompattern",{"_index":765,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getfrompattern(pattern",{"_index":776,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gethashfrombuffer",{"_index":1725,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(buf",{"_index":1731,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(filebuffer",{"_index":1276,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["getlastlogsbyprocess",{"_index":2854,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlastlogsbyprocess(processcode",{"_index":2875,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getmediapath",{"_index":2520,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath(media",{"_index":2597,"title":{},"body":{"classes/MediaManager.html":{}}}],["getnumber",{"_index":766,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getnumber(key",{"_index":779,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getone",{"_index":2089,"title":{},"body":{"injectables/FileService.html":{}}}],["getpageableentitydata",{"_index":1420,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getpageableentitydata(target",{"_index":1569,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getprivatedir",{"_index":2010,"title":{},"body":{"injectables/FileService.html":{}}}],["getprocessdata",{"_index":2855,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessdata(code",{"_index":2879,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessinstance",{"_index":2997,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocessinstance(processdata.code",{"_index":3008,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocesslogbyid",{"_index":2856,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocesslogbyid(id",{"_index":2883,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus",{"_index":2857,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus(code",{"_index":2885,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getpropertiespage",{"_index":978,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpropertiespage(params",{"_index":1004,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpublicdir",{"_index":2011,"title":{},"body":{"injectables/FileService.html":{}}}],["gets",{"_index":146,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/DirectoryStructure.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["getstatus",{"_index":129,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["gettargetdata",{"_index":1433,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettargetdata(target",{"_index":1571,"title":{},"body":{"classes/ExplorerService.html":{}}}],["gettargetlist",{"_index":1438,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getting",{"_index":2881,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["getxmlparser",{"_index":3323,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["getxmlparser().parsestring(xmldata",{"_index":3350,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["give",{"_index":3715,"title":{},"body":{"license.html":{}}}],["given",{"_index":66,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["global",{"_index":1047,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{}}}],["globalkpcontent",{"_index":1044,"title":{},"body":{"injectables/ConfigService.html":{}}}],["goodwill",{"_index":3798,"title":{},"body":{"license.html":{}}}],["google",{"_index":2156,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["google's",{"_index":2166,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["googlecaptchaservice",{"_index":2152,"title":{"classes/GoogleCaptchaService.html":{}},"body":{"classes/GoogleCaptchaService.html":{}}}],["governing",{"_index":556,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["gps",{"_index":364,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["gpsfilemetadata",{"_index":365,"title":{"interfaces/GpsFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadataentity",{"_index":1679,"title":{"entities/GpsFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["gpsinfoifdpointer",{"_index":406,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["grant",{"_index":3667,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3609,"title":{},"body":{"license.html":{}}}],["granting",{"_index":3586,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3670,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3842,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":797,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["graphical",{"_index":2188,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["graphiccaptcharesponse",{"_index":2197,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["graphiccaptchaservice",{"_index":792,"title":{"classes/GraphicCaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["grossly",{"_index":3786,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guides",{"_index":3561,"title":{},"body":{"index.html":{}}}],["handle",{"_index":266,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handle(target",{"_index":1345,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handled",{"_index":1406,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handler",{"_index":1338,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.ts",{"_index":3220,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler.ts:29",{"_index":3224,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handlerequest",{"_index":2724,"title":{},"body":{"classes/MsClient.html":{}}}],["handlerequest(source",{"_index":2733,"title":{},"body":{"classes/MsClient.html":{}}}],["handlers",{"_index":1341,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handles",{"_index":170,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/MsClient.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["handling",{"_index":2329,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["harmless",{"_index":3823,"title":{},"body":{"license.html":{}}}],["hash",{"_index":279,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["hashed",{"_index":280,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashes",{"_index":275,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["hashpassword",{"_index":269,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpassword(password",{"_index":273,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded",{"_index":270,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded(event",{"_index":281,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashsum",{"_index":1277,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.digest(\"hex",{"_index":1280,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.update(filebuffer",{"_index":1279,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hasn't",{"_index":2927,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["hasprocessinstance",{"_index":2912,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hasprocessinstance(code",{"_index":2936,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hassomerole",{"_index":3114,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hassomerole(userroles",{"_index":3120,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heic",{"_index":3456,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":374,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["height\"]?.value",{"_index":1830,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["helper",{"_index":2016,"title":{},"body":{"injectables/FileService.html":{}}}],["here",{"_index":3558,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":3669,"title":{},"body":{"license.html":{}}}],["herein",{"_index":3753,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1275,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["highest",{"_index":3098,"title":{},"body":{"classes/Roles.html":{}}}],["hold",{"_index":1252,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":2963,"title":{},"body":{"modules/ProcessModule.html":{}}}],["host",{"_index":750,"title":{},"body":{"modules/CacheModule.html":{},"classes/DbExceptionFilter.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1234,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["hour",{"_index":4041,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["http",{"_index":1222,"title":{},"body":{"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{}}}],["http://www.apache.org/licenses",{"_index":3574,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["httpexception",{"_index":2741,"title":{},"body":{"classes/MsClient.html":{}}}],["httpexception(err.message",{"_index":2764,"title":{},"body":{"classes/MsClient.html":{}}}],["https://www.google.com/recaptcha/api/siteverify?secret=${secretkey}&response=${request.data",{"_index":2180,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpservice",{"_index":2161,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpstatus",{"_index":673,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["httpstatus.request_timeout",{"_index":2769,"title":{},"body":{"classes/MsClient.html":{}}}],["httpstatus.too_many_requests",{"_index":3173,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["icc",{"_index":362,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["icc_copyright",{"_index":2274,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_description",{"_index":2275,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_profile_date",{"_index":2278,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_signature",{"_index":2279,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icccopyright",{"_index":396,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccdescription",{"_index":395,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadata",{"_index":363,"title":{"interfaces/IccFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadataentity",{"_index":1682,"title":{"entities/IccFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/IccFileMetadataEntity.html":{}}}],["iccprofiledate",{"_index":387,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccsignature",{"_index":388,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icon",{"_index":356,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["icon.files",{"_index":3929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.files.format",{"_index":3930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name",{"_index":3927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name.lang",{"_index":3928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type",{"_index":3931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type.ext",{"_index":3932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfiles",{"_index":2123,"title":{},"body":{"injectables/FileService.html":{}}}],["iconfilesformat",{"_index":2125,"title":{},"body":{"injectables/FileService.html":{}}}],["iconlang",{"_index":2121,"title":{},"body":{"injectables/FileService.html":{}}}],["iconname",{"_index":2119,"title":{},"body":{"injectables/FileService.html":{}}}],["icontype",{"_index":2127,"title":{},"body":{"injectables/FileService.html":{}}}],["icontypeext",{"_index":2129,"title":{},"body":{"injectables/FileService.html":{}}}],["id",{"_index":203,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{}}}],["identification",{"_index":2028,"title":{},"body":{"injectables/FileService.html":{},"license.html":{}}}],["identifier",{"_index":811,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["identifying",{"_index":3833,"title":{},"body":{"license.html":{}}}],["identity",{"_index":72,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["ifd",{"_index":1920,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ii",{"_index":3599,"title":{},"body":{"license.html":{}}}],["iife",{"_index":1262,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["iii",{"_index":3605,"title":{},"body":{"license.html":{}}}],["image",{"_index":366,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadata",{"_index":367,"title":{"interfaces/ImageFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadataentity",{"_index":1684,"title":{"entities/ImageFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["imagemin",{"_index":3459,"title":{},"body":{"dependencies.html":{}}}],["images",{"_index":3532,"title":{},"body":{"index.html":{}}}],["immediately",{"_index":1258,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["implement",{"_index":256,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["implementation",{"_index":3543,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":596,"title":{},"body":{"classes/AuthService.html":{}}}],["implementing",{"_index":3042,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["implied",{"_index":553,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import(\"file",{"_index":1257,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["import.service",{"_index":3437,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["imported",{"_index":1254,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["importfromfile",{"_index":3380,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importfromfile(filedata",{"_index":3314,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["importing",{"_index":3500,"title":{},"body":{"index.html":{}}}],["imports",{"_index":577,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importservice",{"_index":3403,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importxml",{"_index":3381,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importxml(xml",{"_index":3313,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["improving",{"_index":3657,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3796,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3792,"title":{},"body":{"license.html":{}}}],["include",{"_index":1002,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["included",{"_index":3622,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3728,"title":{},"body":{"license.html":{}}}],["includeunknown",{"_index":1822,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["including",{"_index":502,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"license.html":{}}}],["inclusion",{"_index":3644,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3665,"title":{},"body":{"license.html":{}}}],["incr",{"_index":767,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incr(key",{"_index":781,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["increment",{"_index":3056,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incrementing",{"_index":3069,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["increments",{"_index":3055,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incurred",{"_index":3824,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":3821,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":3812,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column('boolean",{"_index":1496,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["index()@column('date",{"_index":2277,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["index()@column('decimal",{"_index":471,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('int",{"_index":465,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('varchar",{"_index":461,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column({type",{"_index":1479,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["index()@createdatecolumn({name",{"_index":1633,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["index()@manytoone(undefined",{"_index":1505,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["index()@updatedatecolumn({name",{"_index":2843,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["index({unique",{"_index":842,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["indexable",{"_index":1245,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["indicated",{"_index":3620,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":53,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["indirect",{"_index":3596,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3607,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1431,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["information",{"_index":606,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["informational",{"_index":3738,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3694,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3707,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":691,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["init",{"_index":2858,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["initconfig",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial",{"_index":1172,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialize",{"_index":2965,"title":{},"body":{"modules/ProcessModule.html":{},"miscellaneous/variables.html":{}}}],["initializes",{"_index":1015,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/variables.html":{}}}],["initializing",{"_index":2959,"title":{},"body":{"modules/ProcessModule.html":{}}}],["initwithpropertiesfiles",{"_index":979,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles(gencnfdir",{"_index":1013,"title":{},"body":{"injectables/ConfigService.html":{}}}],["inject",{"_index":506,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{}}}],["inject(logger",{"_index":509,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["inject(messages_broker",{"_index":2915,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["inject(redis_client",{"_index":3059,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["inject(warlock",{"_index":2914,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["injectable",{"_index":495,"title":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["injectables",{"_index":497,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"overview.html":{}}}],["injectdatasource",{"_index":2382,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["injecting",{"_index":3956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":708,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["injectrepository(categoryentity",{"_index":937,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectrepository(fileentity",{"_index":2052,"title":{},"body":{"injectables/FileService.html":{}}}],["injectrepository(languageentity",{"_index":2346,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedmediaentity",{"_index":2348,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedstringentity",{"_index":2347,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(processlogentity",{"_index":2917,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(processunitentity",{"_index":2916,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(userentity",{"_index":712,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["insert",{"_index":287,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{},"miscellaneous/variables.html":{}}}],["insertevent",{"_index":282,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["insertupdate",{"_index":3400,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["inspect",{"_index":195,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["inspect(data",{"_index":248,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(message",{"_index":242,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(pattern",{"_index":2755,"title":{},"body":{"classes/MsClient.html":{}}}],["instance",{"_index":125,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1747,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/LocaleSubscriber.html":{},"modules/RedisModule.html":{}}}],["instances",{"_index":1318,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/LocaleSubscriber.html":{},"injectables/ProcessManagerService.html":{}}}],["institute",{"_index":3698,"title":{},"body":{"license.html":{}}}],["integration",{"_index":3496,"title":{},"body":{"index.html":{}}}],["intent\"]?.description",{"_index":1891,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intent\"]?.value",{"_index":1893,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intentionally",{"_index":3642,"title":{},"body":{"license.html":{}}}],["inter",{"_index":3519,"title":{},"body":{"index.html":{}}}],["interact",{"_index":680,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["intercept",{"_index":1320,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["intercept(context",{"_index":1324,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interceptor",{"_index":1315,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interface",{"_index":327,"title":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["interfaces",{"_index":329,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"overview.html":{}}}],["interlace",{"_index":382,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internalservererrorexception",{"_index":2043,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["internalservererrorexception(`process",{"_index":2937,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["internationalized",{"_index":2402,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["interoperabilityifdpointer",{"_index":426,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityindex",{"_index":441,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityversion",{"_index":442,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["invalid",{"_index":300,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileMetadataService.html":{},"classes/InvalidTokenMsException.html":{}}}],["invalidate",{"_index":619,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidated",{"_index":621,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken",{"_index":600,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken(accesstoken",{"_index":617,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidtokenmsexception",{"_index":2296,"title":{"classes/InvalidTokenMsException.html":{}},"body":{"classes/InvalidTokenMsException.html":{}}}],["invoked",{"_index":1259,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ioredis",{"_index":2699,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["ip",{"_index":630,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["ipaddress",{"_index":658,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":3678,"title":{},"body":{"license.html":{}}}],["isip",{"_index":1448,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isip()@isoptional",{"_index":2492,"title":{},"body":{"classes/LoginPayload.html":{}}}],["isnotempty",{"_index":805,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isoptional",{"_index":1449,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isospeedratings",{"_index":410,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ispublic",{"_index":1654,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["isstring",{"_index":812,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isnotempty",{"_index":808,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isoptional",{"_index":1446,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/LoginPayload.html":{}}}],["issue",{"_index":3653,"title":{},"body":{"license.html":{}}}],["item",{"_index":949,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$$.map((r",{"_index":3345,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$.key",{"_index":3343,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item._",{"_index":3342,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.value",{"_index":1112,"title":{},"body":{"injectables/ConfigService.html":{}}}],["item[\"#name",{"_index":3340,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["itemname",{"_index":3339,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["items",{"_index":2812,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2411,"title":{},"body":{"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["january",{"_index":3572,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1317,"title":{},"body":{"injectables/DtoInterceptor.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":2930,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["job.start",{"_index":3018,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["job.stop",{"_index":3021,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["jobs",{"_index":2978,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["join(\"_",{"_index":1152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["joincolumn",{"_index":1638,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["jointable",{"_index":867,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["json",{"_index":856,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["json.parse(data",{"_index":2719,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.parse(processedvalue",{"_index":1167,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(value",{"_index":4009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":2717,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.transformer",{"_index":874,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["json.transformer.ts",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":634,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["jwt_secret_key",{"_index":4033,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["jwtaccesstokenkey",{"_index":648,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwtdto",{"_index":608,"title":{"classes/JwtDto.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["jwtmodule",{"_index":559,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":579,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtokenkey",{"_index":650,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":3162,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["key",{"_index":646,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["key.length",{"_index":3169,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key.replace(`${config_cache_prefix",{"_index":1107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.slice(filenameprefix.length",{"_index":1147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.startswith(filenameprefix",{"_index":1146,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keys",{"_index":636,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["keys.join",{"_index":3067,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys.push(...chunk",{"_index":3075,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys1",{"_index":3371,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys1.length",{"_index":3375,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2",{"_index":3373,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.includes(key",{"_index":3377,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.length",{"_index":3376,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keystoretrieve",{"_index":1101,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keystoretrieve.map(async",{"_index":1105,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywithoutprefix",{"_index":1145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["kind",{"_index":552,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["kiriliuk",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["kp",{"_index":1048,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kp.properties",{"_index":3941,"title":{"additional-documentation/properties/kp.properties.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.static.files",{"_index":4028,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.tmp.dir",{"_index":4026,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp_properties_file_name",{"_index":1058,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kpconfig",{"_index":3153,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["kppath",{"_index":1120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["label",{"_index":341,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lang",{"_index":2308,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{}}}],["language",{"_index":555,"title":{"interfaces/Language.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["language.entity",{"_index":2407,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languageentity",{"_index":2310,"title":{"entities/LanguageEntity.html":{}},"body":{"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languagerep",{"_index":2343,"title":{},"body":{"injectables/LocaleService.html":{}}}],["languages",{"_index":2312,"title":{},"body":{"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{}}}],["last",{"_index":2877,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["last_name",{"_index":3208,"title":{},"body":{"entities/UserEntity.html":{}}}],["lastname",{"_index":3184,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["lastvaluefrom",{"_index":2170,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lastvaluefrom(response",{"_index":2181,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["later",{"_index":3177,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["latin",{"_index":307,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["latitude",{"_index":443,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["law",{"_index":544,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["lawsuit",{"_index":3703,"title":{},"body":{"license.html":{}}}],["leftjoinandselect(\"file.icon",{"_index":2108,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.metadata",{"_index":2109,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.preview",{"_index":2130,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.files",{"_index":2122,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.name",{"_index":2118,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.type",{"_index":2126,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconfiles.format",{"_index":2124,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconname.lang",{"_index":2120,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icontype.ext",{"_index":2128,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.audio",{"_index":2114,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.gps",{"_index":2110,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.image",{"_index":2112,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.video",{"_index":2116,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.files",{"_index":2135,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.name",{"_index":2131,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.type",{"_index":2139,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewfiles.format",{"_index":2137,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewname.lang",{"_index":2133,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewtype.ext",{"_index":2141,"title":{},"body":{"injectables/FileService.html":{}}}],["legal",{"_index":3587,"title":{},"body":{"license.html":{}}}],["legend",{"_index":725,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["lensmake",{"_index":438,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmodel",{"_index":439,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["letters",{"_index":308,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["level",{"_index":175,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["levels",{"_index":3480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liability",{"_index":3781,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3789,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1256,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/.../access",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.constants.ts",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.types.ts",{"_index":3856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../cache.constants.ts",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.constants.ts",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.types.ts",{"_index":3857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../category.constants.ts",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.constants.ts",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.init",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../constants.ts",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../current",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../explorer.constants.ts",{"_index":3865,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../explorer.types.ts",{"_index":3858,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../file.types.ts",{"_index":3859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../files.utils.ts",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../for",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../log.constants.ts",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.constants.ts",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.types.ts",{"_index":3861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../messages",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../ms",{"_index":3862,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../pageable.types.ts",{"_index":3472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../process.constants.ts",{"_index":3471,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/.../simple",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.constants.ts",{"_index":3906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.types.ts",{"_index":3863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../warlock.constants.ts",{"_index":3907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../warlock.types.ts",{"_index":3866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../xml",{"_index":3860,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts",{"_index":593,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts:109",{"_index":603,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:116",{"_index":618,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:123",{"_index":613,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.module.ts",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.module.ts:34",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.types.ts",{"_index":1442,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/auth/auth.types.ts:103",{"_index":2299,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:109",{"_index":2301,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:115",{"_index":2300,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:121",{"_index":2302,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:36",{"_index":2494,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:45",{"_index":2495,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:55",{"_index":2493,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:63",{"_index":2490,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:71",{"_index":2491,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:84",{"_index":1447,"title":{},"body":{"classes/ExchangeTokenPayload.html":{}}}],["lib/common/auth/auth.types.ts:97",{"_index":2304,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/captcha/captcha.constants.ts",{"_index":3925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/captcha/captcha.module.ts",{"_index":787,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:28",{"_index":791,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:44",{"_index":796,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.types.ts",{"_index":803,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/captcha/captcha.types.ts:29",{"_index":829,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:36",{"_index":830,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:49",{"_index":809,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:55",{"_index":806,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/google",{"_index":2153,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lib/common/captcha/graphic",{"_index":2187,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["lib/common/captcha/montserrat.ttf",{"_index":4059,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["lib/common/config/config.constants.ts",{"_index":3935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.init",{"_index":3984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.module.ts",{"_index":961,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.service.ts",{"_index":964,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:113",{"_index":1050,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:123",{"_index":1039,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:133",{"_index":1045,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:211",{"_index":1035,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:251",{"_index":1028,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:273",{"_index":998,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:290",{"_index":988,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:322",{"_index":994,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:357",{"_index":1021,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:44",{"_index":1051,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:46",{"_index":1052,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:47",{"_index":986,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:57",{"_index":1014,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:78",{"_index":1006,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.types.ts",{"_index":947,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["lib/common/explorer/entity/explorer",{"_index":1466,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["lib/common/explorer/explorer.constants.ts",{"_index":3867,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/explorer/explorer.module.ts",{"_index":1551,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:30",{"_index":1554,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:56",{"_index":1557,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.types.ts",{"_index":1337,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/explorer/explorer.types.ts:165",{"_index":1347,"title":{},"body":{"interfaces/EntitySaveHandler.html":{}}}],["lib/common/explorer/explorer.types.ts:176",{"_index":1565,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:185",{"_index":1570,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:198",{"_index":1577,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:211",{"_index":1575,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:225",{"_index":1568,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:238",{"_index":1572,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:247",{"_index":1573,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:254",{"_index":1566,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/handlers/user",{"_index":3217,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["lib/common/file/entity/audio",{"_index":457,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["lib/common/file/entity/file",{"_index":1675,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["lib/common/file/entity/file.entity.ts",{"_index":1616,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:25",{"_index":1620,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:29",{"_index":1618,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:32",{"_index":1626,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:35",{"_index":1627,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:38",{"_index":1630,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:41",{"_index":1632,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:44",{"_index":1619,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:47",{"_index":1628,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:54",{"_index":1625,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:58",{"_index":1636,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/gps",{"_index":2183,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["lib/common/file/entity/icc",{"_index":2268,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["lib/common/file/entity/image",{"_index":2292,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["lib/common/file/entity/video",{"_index":3267,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["lib/common/file/file",{"_index":1690,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["lib/common/file/file.constants.ts",{"_index":1644,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{}}}],["lib/common/file/file.constants.ts:25",{"_index":1656,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:34",{"_index":1658,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:36",{"_index":1660,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:38",{"_index":1664,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:40",{"_index":1662,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:42",{"_index":1666,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:44",{"_index":1668,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:51",{"_index":1674,"title":{},"body":{"classes/FileMd.html":{}}}],["lib/common/file/file.module.ts",{"_index":1996,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.module.ts:32",{"_index":1997,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.service.ts",{"_index":2004,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:226",{"_index":2015,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:256",{"_index":2021,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:273",{"_index":2024,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:283",{"_index":2040,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:292",{"_index":2037,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:44",{"_index":2014,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.types.ts",{"_index":330,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/entity/media",{"_index":2550,"title":{},"body":{"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["lib/common/media/entity/media.entity.ts",{"_index":2531,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:30",{"_index":2537,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:34",{"_index":2532,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:38",{"_index":2539,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:41",{"_index":2543,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:44",{"_index":2536,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:51",{"_index":2538,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:55",{"_index":2540,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/media.constants.ts",{"_index":3950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/media/media.module.ts",{"_index":2601,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.module.ts:34",{"_index":2602,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.types.ts",{"_index":2496,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/media.types.ts:100",{"_index":2609,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:104",{"_index":2610,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:107",{"_index":2611,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:110",{"_index":2612,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:113",{"_index":2614,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:116",{"_index":2613,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:124",{"_index":2579,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:127",{"_index":2580,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:130",{"_index":2581,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:133",{"_index":2582,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:141",{"_index":2526,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:144",{"_index":2524,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:147",{"_index":2528,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:151",{"_index":2530,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:155",{"_index":2525,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:158",{"_index":2527,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:161",{"_index":2529,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:169",{"_index":2559,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:172",{"_index":2556,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:176",{"_index":2557,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:179",{"_index":2558,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:182",{"_index":2560,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:185",{"_index":2561,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:188",{"_index":2562,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:191",{"_index":2563,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:198",{"_index":2592,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:200",{"_index":2594,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:205",{"_index":2596,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:207",{"_index":2595,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:209",{"_index":2600,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:211",{"_index":2599,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:213",{"_index":2591,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:221",{"_index":2598,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:97",{"_index":2608,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/process/abstract",{"_index":119,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["lib/common/process/default/tmp",{"_index":3124,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["lib/common/process/entity/process.log.entity.ts",{"_index":2837,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:35",{"_index":2839,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:38",{"_index":2838,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:42",{"_index":2842,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:46",{"_index":2845,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:49",{"_index":2841,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts",{"_index":3024,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:38",{"_index":3026,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:51",{"_index":3033,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:55",{"_index":3030,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:59",{"_index":3029,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:63",{"_index":3028,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:66",{"_index":3032,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:70",{"_index":3034,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/process",{"_index":2850,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lib/common/process/process.constants.ts",{"_index":3473,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/common/process/process.module.ts",{"_index":2958,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.module.ts:47",{"_index":2967,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.types.ts",{"_index":2833,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{}}}],["lib/common/user/abstract",{"_index":262,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["lib/common/user/entity/user",{"_index":3239,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["lib/common/user/entity/user.entity.ts",{"_index":3200,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:41",{"_index":3207,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:44",{"_index":3203,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:47",{"_index":3211,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:50",{"_index":3210,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:54",{"_index":3204,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:58",{"_index":3212,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:62",{"_index":3206,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:66",{"_index":3209,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:70",{"_index":3202,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:74",{"_index":3213,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:78",{"_index":3214,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.subscriber.ts",{"_index":3251,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:35",{"_index":3257,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:37",{"_index":3262,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:41",{"_index":3259,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:46",{"_index":3261,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/user",{"_index":677,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["lib/common/user/user.constants.ts",{"_index":4015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/user/user.module.ts",{"_index":3232,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.module.ts:28",{"_index":3233,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.types.ts",{"_index":3181,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/user/user.types.ts:114",{"_index":3247,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:116",{"_index":3246,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:118",{"_index":3249,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:120",{"_index":3245,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:122",{"_index":3248,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:54",{"_index":3236,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:57",{"_index":3237,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:60",{"_index":3238,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:68",{"_index":3193,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:71",{"_index":3195,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:74",{"_index":3191,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:77",{"_index":3192,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:80",{"_index":3194,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:83",{"_index":3196,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:87",{"_index":3198,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:90",{"_index":3189,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:93",{"_index":3190,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:96",{"_index":3197,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:99",{"_index":3199,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/xml",{"_index":3295,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts",{"_index":3091,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts:25",{"_index":3097,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:30",{"_index":3093,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:35",{"_index":3096,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/decorators/access",{"_index":3908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/current",{"_index":3948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/for",{"_index":3914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/exceptions/bad",{"_index":662,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["lib/shared/exceptions/forbidden",{"_index":2149,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["lib/shared/exceptions/invalid",{"_index":2297,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts",{"_index":2785,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts:23",{"_index":2790,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/not",{"_index":2805,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["lib/shared/exceptions/too",{"_index":3171,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["lib/shared/exceptions/unauthorized",{"_index":3179,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["lib/shared/filters/db",{"_index":1218,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["lib/shared/guards/abstract",{"_index":6,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts",{"_index":498,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts:28",{"_index":505,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/lite",{"_index":2320,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["lib/shared/guards/roles.guard.ts",{"_index":3101,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:30",{"_index":3105,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:33",{"_index":3106,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts",{"_index":1314,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:32",{"_index":1322,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:35",{"_index":1327,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/modules/cache/cache.constants.ts",{"_index":4003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/cache/cache.module.ts",{"_index":735,"title":{},"body":{"modules/CacheModule.html":{}}}],["lib/shared/modules/cache/cache.types.ts",{"_index":759,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:21",{"_index":773,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:23",{"_index":780,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:25",{"_index":775,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:27",{"_index":785,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:33",{"_index":769,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:35",{"_index":782,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:37",{"_index":771,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:39",{"_index":777,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/redis",{"_index":3040,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["lib/shared/modules/cache/redis.module.ts",{"_index":3081,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/cache/redis.module.ts:29",{"_index":3083,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/category/category.constants.ts",{"_index":3926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/category/category.module.ts",{"_index":885,"title":{},"body":{"modules/CategoryModule.html":{}}}],["lib/shared/modules/category/category.service.ts",{"_index":912,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:29",{"_index":917,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:42",{"_index":921,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:60",{"_index":927,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/entity/category",{"_index":895,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts",{"_index":832,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:40",{"_index":849,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:44",{"_index":844,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:47",{"_index":866,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:51",{"_index":854,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:58",{"_index":859,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:61",{"_index":848,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:65",{"_index":864,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:68",{"_index":861,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:71",{"_index":841,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts",{"_index":2311,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:28",{"_index":2315,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:32",{"_index":2313,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:36",{"_index":2316,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:39",{"_index":2314,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/locale",{"_index":2362,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["lib/shared/modules/locale/entity/localized",{"_index":2400,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["lib/shared/modules/locale/locale.module.ts",{"_index":2328,"title":{},"body":{"modules/LocaleModule.html":{}}}],["lib/shared/modules/locale/locale.service.ts",{"_index":2337,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:28",{"_index":2342,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:44",{"_index":2345,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.types.ts",{"_index":2305,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["lib/shared/modules/log/log.constants.ts",{"_index":3997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/log/log.module.ts",{"_index":2417,"title":{},"body":{"modules/LogModule.html":{}}}],["lib/shared/modules/log/log.service.ts",{"_index":2421,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:100",{"_index":2437,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:14",{"_index":2442,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:24",{"_index":2435,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:34",{"_index":2455,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:44",{"_index":2453,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:54",{"_index":2431,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:64",{"_index":2444,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:82",{"_index":2448,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/messages",{"_index":2650,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/ms",{"_index":2627,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts",{"_index":2807,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:16",{"_index":2827,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:25",{"_index":2830,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:33",{"_index":2831,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:41",{"_index":2828,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:49",{"_index":2825,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:56",{"_index":2811,"title":{},"body":{"classes/PageableData.html":{}}}],["lib/shared/modules/warlock/warlock.constants.ts",{"_index":4024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/warlock/warlock.module.ts",{"_index":3278,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lib/shared/modules/warlock/warlock.types.ts",{"_index":3868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/shared/pipes/not",{"_index":2792,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["lib/shared/transformers/simple",{"_index":4006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts",{"_index":1238,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts:43",{"_index":1246,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["licensable",{"_index":3692,"title":{},"body":{"license.html":{}}}],["license",{"_index":532,"title":{"license.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":529,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["licenses",{"_index":3708,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":3583,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2962,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lifetime",{"_index":4035,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["lightweight",{"_index":2321,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["limit",{"_index":1082,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["limitation",{"_index":3770,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":558,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["limited",{"_index":3613,"title":{},"body":{"license.html":{}}}],["line",{"_index":1140,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["line.split",{"_index":1144,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().length",{"_index":1142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().startswith",{"_index":1141,"title":{},"body":{"injectables/ConfigService.html":{}}}],["linenumber",{"_index":2440,"title":{},"body":{"classes/LogService.html":{}}}],["lines",{"_index":1138,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["lines.length",{"_index":2479,"title":{},"body":{"classes/LogService.html":{}}}],["lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d",{"_index":2482,"title":{},"body":{"classes/LogService.html":{}}}],["link",{"_index":3637,"title":{},"body":{"license.html":{}}}],["links",{"_index":2565,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["list",{"_index":1434,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["listens",{"_index":2364,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["listento",{"_index":3256,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lists",{"_index":1469,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["liteauthguard",{"_index":2319,"title":{"injectables/LiteAuthGuard.html":{}},"body":{"injectables/LiteAuthGuard.html":{}}}],["literal",{"_index":795,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/ConfigService.html":{},"classes/LogService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3699,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":3934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loads",{"_index":3995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1024,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["local.properties",{"_index":3945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local_properties_file_name",{"_index":1059,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localcontent",{"_index":1020,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontent.split(\"\\n",{"_index":1210,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontentlines",{"_index":1209,"title":{},"body":{"injectables/ConfigService.html":{}}}],["locale.service",{"_index":2335,"title":{},"body":{"modules/LocaleModule.html":{}}}],["locale.types",{"_index":2317,"title":{},"body":{"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["locale/entity/localized",{"_index":871,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["localemodule",{"_index":2323,"title":{"modules/LocaleModule.html":{}},"body":{"modules/LocaleModule.html":{},"modules.html":{},"overview.html":{}}}],["localeservice",{"_index":2327,"title":{"injectables/LocaleService.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"overview.html":{}}}],["localesubscriber",{"_index":2361,"title":{"injectables/LocaleSubscriber.html":{}},"body":{"injectables/LocaleSubscriber.html":{}}}],["localization",{"_index":2330,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["localized",{"_index":2307,"title":{},"body":{"interfaces/Language.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmedia",{"_index":2309,"title":{"interfaces/LocalizedMedia.html":{}},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmediaentity",{"_index":2333,"title":{"entities/LocalizedMediaEntity.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{}}}],["localizedmediaproperties",{"_index":2398,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediaproperties.length",{"_index":2399,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediarep",{"_index":2341,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localizedstring",{"_index":1350,"title":{"interfaces/LocalizedString.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["localizedstringentity",{"_index":850,"title":{"entities/LocalizedStringEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["localizedstringproperties",{"_index":2385,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringproperties.length",{"_index":2390,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringrep",{"_index":2340,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localkey",{"_index":1215,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline",{"_index":1212,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.split",{"_index":1216,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().length",{"_index":1214,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().startswith",{"_index":1213,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiescontent",{"_index":1126,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiespath",{"_index":1123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["located",{"_index":2477,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3287,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockcode",{"_index":3289,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockexec",{"_index":2871,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["locking",{"_index":3279,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["lockkey",{"_index":3286,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockkey}:${lockcode",{"_index":3292,"title":{},"body":{"modules/WarlockModule.html":{}}}],["locklifetime",{"_index":3284,"title":{},"body":{"modules/WarlockModule.html":{}}}],["log",{"_index":178,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":2441,"title":{},"body":{"classes/LogService.html":{}}}],["log.constants",{"_index":2420,"title":{},"body":{"modules/LogModule.html":{}}}],["log.service",{"_index":2419,"title":{},"body":{"modules/LogModule.html":{}}}],["log/log.constants",{"_index":741,"title":{},"body":{"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["log/log.module",{"_index":740,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/WarlockModule.html":{}}}],["logger",{"_index":21,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2373,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/MsClient.html":{},"index.html":{}}}],["login",{"_index":291,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["loginpayload",{"_index":602,"title":{"classes/LoginPayload.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["loginregex",{"_index":301,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginregex.test(login",{"_index":305,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginstance",{"_index":126,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel",{"_index":197,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":236,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.error",{"_index":224,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.log",{"_index":186,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel.verbose",{"_index":238,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.warn",{"_index":234,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["logmodule",{"_index":567,"title":{"modules/LogModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["logs",{"_index":2432,"title":{},"body":{"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["logservice",{"_index":2418,"title":{"classes/LogService.html":{}},"body":{"modules/LogModule.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":444,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["loss",{"_index":3797,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3804,"title":{},"body":{"license.html":{}}}],["ls",{"_index":2350,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.code",{"_index":2353,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.id",{"_index":2357,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.lang",{"_index":2351,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.value",{"_index":2352,"title":{},"body":{"injectables/LocaleService.html":{}}}],["m",{"_index":2469,"title":{},"body":{"classes/LogService.html":{}}}],["m.endswith",{"_index":2471,"title":{},"body":{"classes/LogService.html":{}}}],["m.length",{"_index":2473,"title":{},"body":{"classes/LogService.html":{}}}],["m.startswith",{"_index":2470,"title":{},"body":{"classes/LogService.html":{}}}],["m.substring(1",{"_index":2472,"title":{},"body":{"classes/LogService.html":{}}}],["made",{"_index":3174,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"license.html":{}}}],["mailing",{"_index":3652,"title":{},"body":{"license.html":{}}}],["main",{"_index":1023,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["maincontent",{"_index":1025,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontent.split(\"\\n",{"_index":1208,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontentlines",{"_index":1207,"title":{},"body":{"injectables/ConfigService.html":{}}}],["make",{"_index":397,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["makeimagefromtext",{"_index":2194,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["makeimagefromtext(text",{"_index":2209,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["making",{"_index":3611,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":3802,"title":{},"body":{"license.html":{}}}],["manage",{"_index":3546,"title":{},"body":{"index.html":{}}}],["managed",{"_index":3654,"title":{},"body":{"license.html":{}}}],["management",{"_index":1645,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"license.html":{}}}],["manager",{"_index":311,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{}}}],["manager.findone(this.type",{"_index":320,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["manager.service",{"_index":188,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["manager.service.ts",{"_index":2851,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:111",{"_index":2900,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:130",{"_index":2894,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:141",{"_index":2886,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:151",{"_index":2873,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:164",{"_index":2904,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:174",{"_index":2880,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:184",{"_index":2884,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:197",{"_index":2876,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:208",{"_index":2891,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:42",{"_index":2870,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:57",{"_index":2887,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:83",{"_index":2896,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:97",{"_index":2898,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manages",{"_index":2158,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["managing",{"_index":124,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"modules/UserModule.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["manufacturer\"]?.description",{"_index":1886,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["many",{"_index":3172,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["manytomany",{"_index":868,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined",{"_index":851,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":902,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":869,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":846,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":1329,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["map((part",{"_index":1150,"title":{},"body":{"injectables/ConfigService.html":{}}}],["marked",{"_index":3660,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3761,"title":{},"body":{"license.html":{}}}],["markup",{"_index":3502,"title":{},"body":{"index.html":{}}}],["match",{"_index":3051,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["matches",{"_index":2481,"title":{},"body":{"classes/LogService.html":{}}}],["matches.length",{"_index":2483,"title":{},"body":{"classes/LogService.html":{}}}],["matches[1",{"_index":2487,"title":{},"body":{"classes/LogService.html":{}}}],["matches[2].split(\"/\").slice",{"_index":2485,"title":{},"body":{"classes/LogService.html":{}}}],["matches[3",{"_index":2488,"title":{},"body":{"classes/LogService.html":{}}}],["matching",{"_index":116,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["max",{"_index":2814,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["max(1000",{"_index":2817,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["maxaperture",{"_index":417,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["maxdepth",{"_index":1429,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["maximum",{"_index":924,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["md",{"_index":1700,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio",{"_index":1757,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.album",{"_index":1809,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.artist",{"_index":1811,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.bitrate",{"_index":1766,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codec",{"_index":1760,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codecprofile",{"_index":1802,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.container",{"_index":1758,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.duration",{"_index":1762,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.genre",{"_index":1815,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.label",{"_index":1817,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.numberofchannels",{"_index":1764,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.samplerate",{"_index":1798,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.title",{"_index":1807,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.tool",{"_index":1804,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.year",{"_index":1813,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif",{"_index":1901,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.aperture",{"_index":1938,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.brightness",{"_index":1940,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.colorspace",{"_index":1956,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.compositeimage",{"_index":1990,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.contrast",{"_index":1978,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.customrendered",{"_index":1968,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.digitalzoomratio",{"_index":1974,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exififdpointer",{"_index":1918,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exifversion",{"_index":1932,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposurebias",{"_index":1942,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuremode",{"_index":1970,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposureprogram",{"_index":1928,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuretime",{"_index":1924,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flash",{"_index":1950,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flashpixversion",{"_index":1954,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.fnumber",{"_index":1926,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.focallength",{"_index":1952,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.gpsinfoifdpointer",{"_index":1922,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityifdpointer",{"_index":1962,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityindex",{"_index":1992,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityversion",{"_index":1994,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.isospeedratings",{"_index":1930,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmake",{"_index":1986,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmodel",{"_index":1988,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.make",{"_index":1902,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.maxaperture",{"_index":1944,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.meteringmode",{"_index":1948,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.model",{"_index":1904,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.offsettime",{"_index":1934,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.orientation",{"_index":1906,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelxdimension",{"_index":1958,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelydimension",{"_index":1960,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionunit",{"_index":1912,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionx",{"_index":1908,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutiony",{"_index":1910,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.saturation",{"_index":1980,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenecapturetype",{"_index":1976,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenetype",{"_index":1966,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sensingmethod",{"_index":1964,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sharpness",{"_index":1982,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.shutterspeedvalue",{"_index":1936,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.software",{"_index":1914,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistance",{"_index":1946,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistancerange",{"_index":1984,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.whitebalance",{"_index":1972,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.ycbcrpositioning",{"_index":1916,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.ext",{"_index":1734,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps",{"_index":1853,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.altitude",{"_index":1854,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.latitude",{"_index":1858,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.longitude",{"_index":1856,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.hash",{"_index":1730,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc",{"_index":1861,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.connectionspace",{"_index":1870,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemanufacturer",{"_index":1884,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemodelnumber",{"_index":1887,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.icccopyright",{"_index":1898,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccdescription",{"_index":1896,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccprofiledate",{"_index":1873,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccsignature",{"_index":1879,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.primaryplatform",{"_index":1881,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassname",{"_index":1865,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassvalue",{"_index":1868,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profilecreator",{"_index":1894,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileversion",{"_index":1862,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentname",{"_index":1889,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentvalue",{"_index":1892,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image",{"_index":1823,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bitdepth",{"_index":1840,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bps",{"_index":1824,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colorcomponents",{"_index":1833,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colortype",{"_index":1843,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.compression",{"_index":1846,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.datetime",{"_index":1878,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.filter",{"_index":1848,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.height",{"_index":1828,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.interlace",{"_index":1850,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.subsampling",{"_index":1836,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.width",{"_index":1831,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime",{"_index":1732,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"audio",{"_index":1738,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"image",{"_index":1736,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"video",{"_index":1740,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video",{"_index":1769,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.bitrate",{"_index":1778,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.codec",{"_index":1770,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorrange",{"_index":1786,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorspace",{"_index":1788,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.container",{"_index":1772,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.displayaspectratio",{"_index":1784,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.duration",{"_index":1780,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.framerate",{"_index":1790,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.height",{"_index":1776,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.rotate",{"_index":1792,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.sampleaspectratio",{"_index":1782,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.width",{"_index":1774,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["mean",{"_index":3580,"title":{},"body":{"license.html":{}}}],["means",{"_index":3593,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":3615,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":3540,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":3280,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["media",{"_index":347,"title":{"interfaces/Media.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["media.entity",{"_index":2334,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaFileEntity.html":{}}}],["media.entity.ts",{"_index":2401,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:34",{"_index":2404,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:38",{"_index":2403,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:41",{"_index":2405,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:44",{"_index":2406,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.private.dir",{"_index":4076,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.properties",{"_index":4071,"title":{"additional-documentation/properties/media.properties.html":{}},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.public.dir",{"_index":4072,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.service",{"_index":2604,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.types",{"_index":2546,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["media/entity/media.entity",{"_index":1612,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/UserEntity.html":{}}}],["media/media.module",{"_index":3440,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["media/media.types",{"_index":348,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["media_relations",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media_type_relations",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediadto",{"_index":2513,"title":{"classes/MediaDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaentity",{"_index":845,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{}}}],["mediaext",{"_index":2504,"title":{"interfaces/MediaExt.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaextentity",{"_index":2549,"title":{"entities/MediaExtEntity.html":{}},"body":{"entities/MediaExtEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["mediafile",{"_index":2497,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafiledto",{"_index":2514,"title":{"classes/MediaFileDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafileentity",{"_index":2533,"title":{"entities/MediaFileEntity.html":{}},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{}}}],["mediaformat",{"_index":2506,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatdto",{"_index":2512,"title":{"classes/MediaFormatDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatentity",{"_index":2567,"title":{"entities/MediaFormatEntity.html":{}},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["mediamanager",{"_index":2515,"title":{"classes/MediaManager.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediamodule",{"_index":2522,"title":{"modules/MediaModule.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mediamodule.forroot",{"_index":3436,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["mediamoduleoptions",{"_index":2523,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediarow",{"_index":3398,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediaservice",{"_index":2603,"title":{},"body":{"modules/MediaModule.html":{}}}],["mediatype",{"_index":2498,"title":{"interfaces/MediaType.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypedto",{"_index":2511,"title":{"classes/MediaTypeDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypeentity",{"_index":2541,"title":{"entities/MediaTypeEntity.html":{}},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["medium",{"_index":3712,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3713,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3771,"title":{},"body":{"license.html":{}}}],["merely",{"_index":3636,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1026,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergedcontent",{"_index":1211,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent",{"_index":980,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent(maincontent",{"_index":1019,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merges",{"_index":1022,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":181,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/LogService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["messagebus",{"_index":2626,"title":{"interfaces/MessageBus.html":{}},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["messages",{"_index":2374,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["messages_broker",{"_index":2671,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["messagesbroker",{"_index":2649,"title":{"interfaces/MessagesBroker.html":{}},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["messagesbrokermodule",{"_index":2667,"title":{"modules/MessagesBrokerModule.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesbrokerservice",{"_index":2674,"title":{"injectables/MessagesBrokerService.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["metaaudio",{"_index":2115,"title":{},"body":{"injectables/FileService.html":{}}}],["metadata",{"_index":332,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["metadata.entity",{"_index":1641,"title":{},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["metadata.entity.ts",{"_index":458,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:10",{"_index":478,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:14",{"_index":470,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:18",{"_index":467,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:19",{"_index":2184,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:22",{"_index":483,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:25",{"_index":1685,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:26",{"_index":481,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:28",{"_index":1678,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:30",{"_index":466,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:31",{"_index":1681,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:34",{"_index":469,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:37",{"_index":2185,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:38",{"_index":485,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:39",{"_index":3271,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:42",{"_index":2271,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:43",{"_index":3274,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:45",{"_index":1680,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:46",{"_index":2273,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:47",{"_index":475,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:50",{"_index":2289,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:51",{"_index":484,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:52",{"_index":1683,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:54",{"_index":2287,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:55",{"_index":464,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:58",{"_index":2284,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:59",{"_index":463,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:62",{"_index":2276,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:63",{"_index":486,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:66",{"_index":1676,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:67",{"_index":476,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:71",{"_index":479,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:73",{"_index":1687,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.service",{"_index":2000,"title":{},"body":{"modules/FileModule.html":{}}}],["metadata.service.ts",{"_index":1691,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:101",{"_index":1704,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:139",{"_index":1699,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:166",{"_index":1702,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:72",{"_index":1706,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadataservice",{"_index":2013,"title":{},"body":{"injectables/FileService.html":{}}}],["metagps",{"_index":2111,"title":{},"body":{"injectables/FileService.html":{}}}],["metaimage",{"_index":2113,"title":{},"body":{"injectables/FileService.html":{}}}],["metavideo",{"_index":2117,"title":{},"body":{"injectables/FileService.html":{}}}],["meteringmode",{"_index":419,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["method",{"_index":152,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["methodname",{"_index":2439,"title":{},"body":{"classes/LogService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["microservice",{"_index":665,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["microservices",{"_index":2647,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["middle",{"_index":2264,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["middleware",{"_index":3410,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["mime",{"_index":360,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["min",{"_index":2815,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1",{"_index":2816,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1)@max(1000)@type(undefined",{"_index":2826,"title":{},"body":{"classes/PageableParams.html":{}}}],["min(1)@type(undefined",{"_index":2829,"title":{},"body":{"classes/PageableParams.html":{}}}],["minutes",{"_index":4037,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["miscellaneous",{"_index":3469,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":3396,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["model",{"_index":398,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["modern",{"_index":3486,"title":{},"body":{"index.html":{}}}],["modifications",{"_index":3612,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3717,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3418,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["modify",{"_index":3739,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3744,"title":{},"body":{"license.html":{}}}],["module",{"_index":511,"title":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module.interface",{"_index":3389,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["modules",{"_index":513,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/cache/cache.types",{"_index":82,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["modules/log/log.constants",{"_index":508,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["montserrat",{"_index":4061,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["more",{"_index":3556,"title":{},"body":{"index.html":{},"license.html":{}}}],["mozjpeg",{"_index":3460,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":2742,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["ms.exception",{"_index":674,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts",{"_index":663,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts:23",{"_index":672,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms_client",{"_index":2776,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["ms_exception_id",{"_index":2744,"title":{},"body":{"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["msclient",{"_index":2720,"title":{"classes/MsClient.html":{}},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["msclient(logger",{"_index":2784,"title":{},"body":{"modules/MsClientModule.html":{}}}],["msclientmodule",{"_index":2771,"title":{"modules/MsClientModule.html":{}},"body":{"modules/MsClientModule.html":{},"modules.html":{},"overview.html":{}}}],["msclientoptions",{"_index":2638,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"miscellaneous/typealiases.html":{}}}],["msexception",{"_index":670,"title":{"classes/MsException.html":{}},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":241,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.endswith",{"_index":244,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.length",{"_index":246,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/\\[/g",{"_index":249,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/]/g",{"_index":250,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.startswith",{"_index":243,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.substring(1",{"_index":245,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg_bus",{"_index":2777,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1374,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["music",{"_index":1714,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["musicmd",{"_index":1794,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.album",{"_index":1810,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.artists?.join",{"_index":1812,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.genre?.join",{"_index":1816,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.label?.join",{"_index":1818,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.title",{"_index":1808,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.year",{"_index":1814,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.bitrate",{"_index":1801,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codec",{"_index":1797,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codecprofile",{"_index":1803,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.container",{"_index":1796,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.duration",{"_index":1806,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.numberofchannels",{"_index":1800,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.samplerate",{"_index":1799,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.tool",{"_index":1805,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["myentity",{"_index":2366,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["mysql",{"_index":3570,"title":{},"body":{"index.html":{}}}],["n",{"_index":254,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["name",{"_index":45,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name.lang",{"_index":3933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["named",{"_index":1375,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["namedcolumn",{"_index":1394,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["names",{"_index":1241,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["namespace",{"_index":999,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["namespacename",{"_index":1001,"title":{},"body":{"injectables/ConfigService.html":{}}}],["navigate",{"_index":3560,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":3693,"title":{},"body":{"license.html":{}}}],["need",{"_index":931,"title":{},"body":{"injectables/CategoryService.html":{}}}],["needed",{"_index":157,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["needs",{"_index":258,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["negligence",{"_index":3784,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":3787,"title":{},"body":{"license.html":{}}}],["neighboring",{"_index":3946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2423,"title":{},"body":{"classes/LogService.html":{}}}],["nested",{"_index":1243,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["nestfactory.createapplicationcontext(configmodule",{"_index":3986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1328,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["nestjs",{"_index":2961,"title":{},"body":{"modules/ProcessModule.html":{}}}],["nestjs/axios",{"_index":2169,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":76,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/modules/dynamic",{"_index":3388,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/forward",{"_index":3391,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":296,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["nestjs/core",{"_index":3107,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":560,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":2738,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":562,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":2969,"title":{},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":709,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":3422,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["new",{"_index":98,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["newrelativepath",{"_index":1304,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["newuser",{"_index":719,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["next",{"_index":1325,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["nextfunction",{"_index":3416,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["node",{"_index":3281,"title":{},"body":{"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node:events",{"_index":1251,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node:fs",{"_index":1249,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node_modules",{"_index":1174,"title":{},"body":{"injectables/ConfigService.html":{}}}],["non",{"_index":3673,"title":{},"body":{"license.html":{}}}],["normalized",{"_index":2039,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["normalizes",{"_index":2208,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normally",{"_index":3736,"title":{},"body":{"license.html":{}}}],["note",{"_index":3567,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["notemptypipe",{"_index":2791,"title":{"injectables/NotEmptyPipe.html":{}},"body":{"injectables/NotEmptyPipe.html":{}}}],["notfoundexception",{"_index":706,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{}}}],["notfoundexception(`file",{"_index":2086,"title":{},"body":{"injectables/FileService.html":{}}}],["notfoundexception(`user",{"_index":722,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["notfoundmsexception",{"_index":2804,"title":{"classes/NotFoundMsException.html":{}},"body":{"classes/NotFoundMsException.html":{}}}],["nothing",{"_index":3752,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3621,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3720,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3750,"title":{},"body":{"license.html":{}}}],["now",{"_index":205,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["null",{"_index":61,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["nullable",{"_index":462,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["number",{"_index":314,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"classes/MsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["number\"]?.description",{"_index":1888,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["number_of_channels",{"_index":480,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["numberofchannels",{"_index":342,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["numbers",{"_index":309,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["numberutils",{"_index":2227,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numberutils.generaterandomint",{"_index":2232,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numeric",{"_index":3053,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["oauth",{"_index":3539,"title":{},"body":{"index.html":{}}}],["obj",{"_index":1710,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.indexof",{"_index":1744,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.map(this.trimproperties",{"_index":1746,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.rows.push(rowobj",{"_index":3347,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.trim",{"_index":1743,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj1",{"_index":3366,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2",{"_index":3368,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2[key",{"_index":3379,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object",{"_index":58,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj1",{"_index":3372,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(obj2",{"_index":3374,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(value).length",{"_index":2802,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["object.values(entity).filter((value",{"_index":2386,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["object_enabled",{"_index":1500,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_priority",{"_index":1502,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_renderer_params",{"_index":1507,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_visibility",{"_index":1509,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objectenabled",{"_index":1381,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectliteral",{"_index":1349,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["objectpriority",{"_index":1379,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrenderer",{"_index":1386,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrendererparams",{"_index":1491,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objects",{"_index":1244,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["objectutils",{"_index":190,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.inspect",{"_index":196,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.sort(cat.children",{"_index":944,"title":{},"body":{"injectables/CategoryService.html":{}}}],["objectvisibility",{"_index":1383,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["obligations",{"_index":3813,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2643,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["obtain",{"_index":538,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["occurs",{"_index":1344,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["offer",{"_index":3687,"title":{},"body":{"license.html":{}}}],["offsettime",{"_index":412,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["onapplicationbootstrap",{"_index":2964,"title":{},"body":{"modules/ProcessModule.html":{}}}],["oncrash",{"_index":130,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["oncrash(error",{"_index":148,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["ondelete",{"_index":1623,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["one",{"_index":3731,"title":{},"body":{"license.html":{}}}],["ones",{"_index":3947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetomany",{"_index":1611,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetomany(undefined",{"_index":1593,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetoone",{"_index":1639,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onetoone(undefined",{"_index":1622,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onfinish",{"_index":131,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["onmoduleinit",{"_index":1556,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["onstop",{"_index":132,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["openmode",{"_index":1248,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["operation",{"_index":1041,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["operations",{"_index":761,"title":{},"body":{"classes/CacheService.html":{},"injectables/LocaleService.html":{},"index.html":{}}}],["operator",{"_index":3321,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["optimized",{"_index":3527,"title":{},"body":{"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["options",{"_index":451,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["options.exportservice",{"_index":3443,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.filemanager",{"_index":2002,"title":{},"body":{"modules/FileModule.html":{}}}],["options.filemd",{"_index":2003,"title":{},"body":{"modules/FileModule.html":{}}}],["options.imports",{"_index":3441,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.importservice",{"_index":3442,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.service",{"_index":591,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["opts",{"_index":2637,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["opts).subscribe",{"_index":2750,"title":{},"body":{"classes/MsClient.html":{}}}],["order",{"_index":1083,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["orientation",{"_index":399,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["origin",{"_index":3766,"title":{},"body":{"license.html":{}}}],["original",{"_index":3633,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":60,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"license.html":{}}}],["out",{"_index":734,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outputpath",{"_index":2067,"title":{},"body":{"injectables/FileService.html":{}}}],["outputpath}/${filename",{"_index":2078,"title":{},"body":{"injectables/FileService.html":{}}}],["outstanding",{"_index":3603,"title":{},"body":{"license.html":{}}}],["overridden",{"_index":155,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["override",{"_index":3943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overrides",{"_index":3550,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["overview",{"_index":3846,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":3584,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":3600,"title":{},"body":{"license.html":{}}}],["p",{"_index":2465,"title":{},"body":{"classes/LogService.html":{}}}],["p@ssw0rd",{"_index":1456,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["package",{"_index":3444,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1008,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["pageable",{"_index":1009,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["pageabledata",{"_index":1064,"title":{"classes/PageableData.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pageabledata(propertieswithvalues",{"_index":1108,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageableparams",{"_index":1005,"title":{"classes/PageableParams.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pages",{"_index":1472,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["pagesize",{"_index":2810,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["paginated",{"_index":1415,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["pagination",{"_index":1012,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["pair",{"_index":1445,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["panel",{"_index":3489,"title":{},"body":{"index.html":{}}}],["param",{"_index":88,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["params",{"_index":836,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{}}}],["parent",{"_index":837,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["parse",{"_index":1031,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["parsebuffer",{"_index":1713,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsebuffer(buf",{"_index":1795,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsed",{"_index":1032,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsefloat(audiomd.duration",{"_index":1763,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(videomd.duration",{"_index":1781,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parseint(process.env.redis_db",{"_index":755,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.redis_port",{"_index":753,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.transport_port",{"_index":2783,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_timeout",{"_index":2758,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_type",{"_index":2781,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parser",{"_index":3310,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["parses",{"_index":1029,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsestring",{"_index":3317,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsevalue",{"_index":981,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsevalue(value",{"_index":1027,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsexmlbody(body",{"_index":3329,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlbody(result",{"_index":3351,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfile(xmldata",{"_index":3349,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfromrequest",{"_index":3412,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsexmlfromrequest(req",{"_index":3413,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsing",{"_index":3411,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["part",{"_index":3726,"title":{},"body":{"license.html":{}}}],["part.touppercase",{"_index":1151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["partial",{"_index":616,"title":{},"body":{"classes/AuthService.html":{}}}],["particular",{"_index":3773,"title":{},"body":{"license.html":{}}}],["parts",{"_index":111,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts.length",{"_index":113,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts[1",{"_index":114,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["party",{"_index":3735,"title":{},"body":{"license.html":{}}}],["passportmodule",{"_index":561,"title":{},"body":{"modules/AuthModule.html":{}}}],["password",{"_index":276,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["patch",{"_index":2029,"title":{},"body":{"injectables/FileService.html":{}}}],["patches",{"_index":2445,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx",{"_index":2426,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx(ctx",{"_index":2443,"title":{},"body":{"classes/LogService.html":{}}}],["patent",{"_index":3685,"title":{},"body":{"license.html":{}}}],["path",{"_index":353,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["path.basename",{"_index":1135,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.basename(filepath",{"_index":1187,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.dirname(filepath",{"_index":1190,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.extname(file.name",{"_index":1132,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join",{"_index":1124,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["path.join(currentpath",{"_index":1301,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.join(directory",{"_index":1121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(dirpath",{"_index":1192,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(gensrcpath",{"_index":1197,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(relativepath",{"_index":1305,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.normalize(dir",{"_index":2146,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["pattern",{"_index":778,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":605,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.id",{"_index":3228,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.login",{"_index":3230,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.password",{"_index":3229,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.roles",{"_index":3231,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["peer",{"_index":3445,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":1826,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["percent",{"_index":3602,"title":{},"body":{"license.html":{}}}],["perform",{"_index":3682,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3759,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":557,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["perpetual",{"_index":3671,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":3725,"title":{},"body":{"license.html":{}}}],["phone",{"_index":3185,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["pinpoint",{"_index":3503,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":2794,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pipe(map((data",{"_index":1334,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["pipetransform",{"_index":2801,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pixelxdimension",{"_index":424,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelydimension",{"_index":425,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["placeholder",{"_index":629,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":3732,"title":{},"body":{"license.html":{}}}],["plain",{"_index":1316,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance",{"_index":1331,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance(this.serializer",{"_index":1335,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["platform",{"_index":3482,"title":{},"body":{"index.html":{}}}],["platform\"]?.description",{"_index":1883,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["platform's",{"_index":3488,"title":{},"body":{"index.html":{}}}],["please",{"_index":3175,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"index.html":{}}}],["pminitstatus",{"_index":2852,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["pmservice",{"_index":127,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["pngquant",{"_index":3462,"title":{},"body":{"dependencies.html":{}}}],["pointer\"]?.description",{"_index":1921,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["port",{"_index":752,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["possibility",{"_index":3807,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["postgres",{"_index":3569,"title":{},"body":{"index.html":{}}}],["power",{"_index":3594,"title":{},"body":{"license.html":{}}}],["powerful",{"_index":3521,"title":{},"body":{"index.html":{}}}],["precision",{"_index":472,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["preferred",{"_index":3610,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":633,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["prepare",{"_index":3680,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2451,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage",{"_index":2427,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage(message",{"_index":2447,"title":{},"body":{"classes/LogService.html":{}}}],["prepares",{"_index":2449,"title":{},"body":{"classes/LogService.html":{}}}],["presence",{"_index":39,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["preservechildrenorder",{"_index":3326,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["preview",{"_index":357,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["previewfiles",{"_index":2136,"title":{},"body":{"injectables/FileService.html":{}}}],["previewfilesformat",{"_index":2138,"title":{},"body":{"injectables/FileService.html":{}}}],["previewlang",{"_index":2134,"title":{},"body":{"injectables/FileService.html":{}}}],["previewname",{"_index":2132,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtype",{"_index":2140,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtypeext",{"_index":2142,"title":{},"body":{"injectables/FileService.html":{}}}],["primary",{"_index":1372,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["primary_platform",{"_index":2280,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["primarycolumn",{"_index":1393,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn(\"varchar",{"_index":1486,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1473,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["primarygeneratedcolumn",{"_index":488,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primarygeneratedcolumn({zerofill",{"_index":477,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primaryplatform",{"_index":389,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["printed",{"_index":3839,"title":{},"body":{"license.html":{}}}],["priority",{"_index":838,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["private",{"_index":25,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["private_dir",{"_index":2046,"title":{},"body":{"injectables/FileService.html":{}}}],["privatemedia",{"_index":2517,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["proceed",{"_index":37,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["process",{"_index":122,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/AuthModule.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["process.command",{"_index":2911,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["process.constants",{"_index":187,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.cwd",{"_index":1117,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.cwd()}/${process.env.config_src_dir",{"_index":3990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":751,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_password",{"_index":758,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_user",{"_index":757,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.transport_host",{"_index":2782,"title":{},"body":{"modules/MsClientModule.html":{}}}],["process.exit(0",{"_index":3993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.getprocessinstance",{"_index":2998,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["process.hasprocessinstance",{"_index":2913,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["process.log.entity",{"_index":3035,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.loglevel",{"_index":198,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.pid",{"_index":252,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.registerprocess",{"_index":193,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.status",{"_index":194,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.status.crashed",{"_index":3039,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.execute",{"_index":3038,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.ready",{"_index":3037,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.ts",{"_index":120,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:140",{"_index":160,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:148",{"_index":162,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:157",{"_index":150,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:165",{"_index":145,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:173",{"_index":165,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:31",{"_index":139,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:32",{"_index":143,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:33",{"_index":141,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:35",{"_index":138,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:44",{"_index":168,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:80",{"_index":171,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:94",{"_index":176,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.types",{"_index":2848,"title":{},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.unit.entity",{"_index":2847,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["process:register",{"_index":3476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:start",{"_index":3478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:stop",{"_index":3479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:unregister",{"_index":3477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processandvalidatepropertiescontent",{"_index":982,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processandvalidatepropertiescontent(filepath",{"_index":1033,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processcode",{"_index":2874,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata",{"_index":2924,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.code",{"_index":2926,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.crontab?.length",{"_index":2925,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.enabled",{"_index":2939,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata.status",{"_index":2942,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processed",{"_index":995,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata",{"_index":997,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata[variablename",{"_index":1160,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue",{"_index":1165,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue};\\n",{"_index":1171,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processes",{"_index":1036,"title":{},"body":{"injectables/ConfigService.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["processinstance",{"_index":3007,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.start",{"_index":3011,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.stop",{"_index":3012,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processlist",{"_index":2922,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processlog",{"_index":2832,"title":{"interfaces/ProcessLog.html":{}},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{}}}],["processlogentity",{"_index":140,"title":{"entities/ProcessLogEntity.html":{}},"body":{"classes/AbstractProcess.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["processlogrep",{"_index":2869,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmanagerservice",{"_index":142,"title":{"injectables/ProcessManagerService.html":{}},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["processmanagerservice.pminitstatus",{"_index":2918,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmodule",{"_index":2951,"title":{"modules/ProcessModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["processregisterservice",{"_index":2957,"title":{"injectables/ProcessRegisterService.html":{}},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"overview.html":{}}}],["processunit",{"_index":2835,"title":{"interfaces/ProcessUnit.html":{}},"body":{"interfaces/ProcessLog.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitentity",{"_index":2840,"title":{"entities/ProcessUnitEntity.html":{}},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitrep",{"_index":2868,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["product",{"_index":3762,"title":{},"body":{"license.html":{}}}],["profile",{"_index":1875,"title":{},"body":{"injectables/FileMetadataService.html":{},"index.html":{}}}],["profile_class_name",{"_index":2281,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_class_value",{"_index":2282,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_creator",{"_index":2283,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_version",{"_index":2285,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profileclassname",{"_index":385,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileclassvalue",{"_index":384,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profilecreator",{"_index":394,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileversion",{"_index":383,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["project",{"_index":1068,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["prominent",{"_index":3719,"title":{},"body":{"license.html":{}}}],["promise",{"_index":144,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise((resolve",{"_index":2746,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise.all",{"_index":1104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["promise.all(filepromises",{"_index":1311,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{},"additional-documentation/properties.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["properties_file_ext_pattern",{"_index":1060,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties_file_ext_pattern).slice(1",{"_index":1200,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertiesfiles",{"_index":973,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertieswithvalues",{"_index":1103,"title":{},"body":{"injectables/ConfigService.html":{}}}],["property",{"_index":1030,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1158,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"kp",{"_index":1161,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"local",{"_index":1162,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys",{"_index":1084,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys.sort((a",{"_index":1088,"title":{},"body":{"injectables/ConfigService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["protecting",{"_index":4044,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["protection",{"_index":642,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["provide",{"_index":589,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":604,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["providers",{"_index":588,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["provides",{"_index":679,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{}}}],["providing",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/LogService.html":{},"index.html":{}}}],["proxy",{"_index":2725,"title":{},"body":{"classes/MsClient.html":{}}}],["pubclient",{"_index":2682,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["public",{"_index":354,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["public/private",{"_index":2022,"title":{},"body":{"injectables/FileService.html":{}}}],["public_dir",{"_index":2048,"title":{},"body":{"injectables/FileService.html":{}}}],["publicly",{"_index":3681,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3655,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3592,"title":{},"body":{"license.html":{}}}],["push",{"_index":3397,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["pwd",{"_index":3218,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["qb",{"_index":2082,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.andwhere(`file.public",{"_index":2084,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.getone",{"_index":2085,"title":{},"body":{"injectables/FileService.html":{}}}],["quality",{"_index":2503,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":2017,"title":{},"body":{"injectables/FileService.html":{},"interfaces/XdbRequest.html":{}}}],["queryfailederror",{"_index":1228,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["r._",{"_index":3346,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["random",{"_index":2199,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rapid",{"_index":3484,"title":{},"body":{"index.html":{}}}],["read",{"_index":1287,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["read/write",{"_index":1543,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["readable",{"_index":3729,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":1295,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(dirpath",{"_index":1312,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(filepath",{"_index":1308,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdirectoryrecursively",{"_index":1294,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["readdirectoryrecursively(tmpdir",{"_index":3160,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["readfile",{"_index":1289,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reading",{"_index":3939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["readoperatorre",{"_index":3322,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["readrequest",{"_index":1399,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reads",{"_index":967,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["ready",{"_index":2892,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["real",{"_index":3547,"title":{},"body":{"index.html":{}}}],["reason",{"_index":3826,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3763,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":2157,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["recaptchas",{"_index":2160,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["received",{"_index":3663,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3716,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":3837,"title":{},"body":{"license.html":{}}}],["record",{"_index":1748,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["recording",{"_index":1343,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["records",{"_index":3505,"title":{},"body":{"index.html":{}}}],["recreate",{"_index":2589,"title":{},"body":{"classes/MediaManager.html":{}}}],["recreate(id",{"_index":2518,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recurring",{"_index":3515,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":1204,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["recursively",{"_index":1293,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["redis",{"_index":738,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["redis(redisoptions",{"_index":3090,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.module",{"_index":739,"title":{},"body":{"modules/CacheModule.html":{}}}],["redis_client",{"_index":2701,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["rediscacheservice",{"_index":745,"title":{"injectables/RedisCacheService.html":{}},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["redisinstance",{"_index":3084,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":731,"title":{"modules/RedisModule.html":{}},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":747,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["redismodule.redisinstance",{"_index":3085,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisoptions",{"_index":3088,"title":{},"body":{"modules/RedisModule.html":{}}}],["redistributing",{"_index":3777,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":3711,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1359,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["reference.interface",{"_index":3392,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["referenced_entity_name",{"_index":1513,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referenced_table_name",{"_index":1515,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referencedentityname",{"_index":1377,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["referencedtablename",{"_index":1376,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reflect",{"_index":3463,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":3104,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":610,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":639,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_error_msg",{"_index":627,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":615,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":3757,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2882,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["regex",{"_index":3319,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":2985,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["register.service",{"_index":2970,"title":{},"body":{"modules/ProcessModule.html":{}}}],["register.service.ts",{"_index":2976,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:126",{"_index":2991,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:36",{"_index":2982,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:62",{"_index":2987,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:77",{"_index":2989,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:91",{"_index":2984,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob",{"_index":2979,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob(processdata",{"_index":2983,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered",{"_index":1435,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["registered_processes",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerfont",{"_index":2221,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerfont(capfontpath",{"_index":2255,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registering",{"_index":2977,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registerprocess",{"_index":192,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registerprocess(this",{"_index":199,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registers",{"_index":2890,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["registration",{"_index":2931,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["reject",{"_index":2747,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(err",{"_index":3080,"title":{},"body":{"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(error",{"_index":2752,"title":{},"body":{"classes/MsClient.html":{}}}],["related",{"_index":623,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"miscellaneous/variables.html":{}}}],["relatedentities",{"_index":2394,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity",{"_index":2395,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity.id",{"_index":2396,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relations",{"_index":715,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["relationships",{"_index":1410,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["relativepath",{"_index":1297,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reliable",{"_index":3514,"title":{},"body":{"index.html":{}}}],["remain",{"_index":3634,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2365,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["remove",{"_index":701,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"classes/FileManager.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"classes/MediaManager.html":{},"interfaces/XdbRequest.html":{}}}],["remove(id",{"_index":1667,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removebyid",{"_index":685,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["removebyid(id",{"_index":699,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removed",{"_index":702,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeduplicateobjects",{"_index":3355,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeentity",{"_index":1424,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeentity(target",{"_index":1574,"title":{},"body":{"classes/ExplorerService.html":{}}}],["removeevent",{"_index":2377,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["removeproperty",{"_index":983,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeproperty(key",{"_index":1038,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removes",{"_index":1040,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removing",{"_index":1708,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["renderer",{"_index":1389,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["renderer.entity",{"_index":1536,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["renderer.entity.ts",{"_index":1541,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:36",{"_index":1544,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:40",{"_index":1546,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:44",{"_index":1545,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:53",{"_index":1548,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:60",{"_index":1547,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering",{"_index":1542,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering_intent_name",{"_index":2286,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["rendering_intent_value",{"_index":2288,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["renderingintentname",{"_index":393,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["renderingintentvalue",{"_index":392,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["replace",{"_index":3923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaced",{"_index":3832,"title":{},"body":{"license.html":{}}}],["repository",{"_index":681,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["represent",{"_index":3631,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":3651,"title":{},"body":{"license.html":{}}}],["representing",{"_index":121,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":948,"title":{},"body":{"interfaces/ConfigItem.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reproduce",{"_index":3679,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":3767,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":3576,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.body",{"_index":3425,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.cookies.accesstoken",{"_index":107,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.cookies?.accesstoken",{"_index":106,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers.authorization",{"_index":110,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers?.authorization",{"_index":108,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers[\"content",{"_index":3423,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"data",{"_index":3428,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"end",{"_index":3429,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req[request_props.accesstoken",{"_index":95,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser",{"_index":102,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser]?.roles",{"_index":3119,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":35,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/BadRequestMsException.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.data",{"_index":2245,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.id",{"_index":2244,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request[request_props.accesstoken",{"_index":3911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request[request_props.currentuser",{"_index":3949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_props",{"_index":84,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":668,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["required",{"_index":542,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["res",{"_index":939,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/LocaleService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["res.children?.foreach((cat",{"_index":941,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.push(ls",{"_index":2360,"title":{},"body":{"injectables/LocaleService.html":{}}}],["reset",{"_index":733,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["resetallprocessstatuses",{"_index":2859,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resets",{"_index":2888,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resolutionunit",{"_index":402,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionx",{"_index":400,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutiony",{"_index":401,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolve(body",{"_index":3352,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["resolve(keys",{"_index":3077,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["resolve(result",{"_index":2751,"title":{},"body":{"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolves",{"_index":607,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolving",{"_index":2164,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{}}}],["response",{"_index":822,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{}}}],["response.status(502).json",{"_index":1235,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["response?.data?.success",{"_index":2182,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["responses",{"_index":1223,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["responsibility",{"_index":3819,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":965,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["restricted",{"_index":4078,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["restricting",{"_index":898,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts",{"_index":896,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:35",{"_index":907,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:39",{"_index":906,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:43",{"_index":903,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:46",{"_index":905,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["result",{"_index":820,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/MsClient.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"license.html":{}}}],["result.schema.push(obj",{"_index":3348,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["result[key",{"_index":1750,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["result[newrelativepath",{"_index":1307,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["result[relativepath",{"_index":1309,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["resulting",{"_index":3614,"title":{},"body":{"license.html":{}}}],["results",{"_index":115,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["retain",{"_index":3722,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":971,"title":{},"body":{"injectables/ConfigService.html":{}}}],["retrieve",{"_index":2878,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["retrieves",{"_index":1007,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["return",{"_index":103,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":816,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["returns",{"_index":50,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["revisions",{"_index":3628,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":2200,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rights",{"_index":3815,"title":{},"body":{"license.html":{}}}],["risks",{"_index":3779,"title":{},"body":{"license.html":{}}}],["rm(dir",{"_index":2062,"title":{},"body":{"injectables/FileService.html":{}}}],["role",{"_index":3094,"title":{},"body":{"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":910,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["role.entity.ts",{"_index":3240,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:35",{"_index":3241,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:39",{"_index":3242,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:43",{"_index":3243,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["roles",{"_index":899,"title":{"classes/Roles.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["roles.decorator",{"_index":3112,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.decorator.ts",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.indexof(role.code",{"_index":3122,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.name",{"_index":4022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.name.lang",{"_index":4023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.root",{"_index":3121,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["roles.save",{"_index":3219,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["rolesguard",{"_index":3100,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{}}}],["root",{"_index":923,"title":{},"body":{"injectables/CategoryService.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["roottoken",{"_index":3316,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":450,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["route",{"_index":3920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":3917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":1428,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["rowid",{"_index":1425,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["rowobj",{"_index":3338,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname",{"_index":3341,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname].values",{"_index":3344,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rows",{"_index":3336,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["royalty",{"_index":3676,"title":{},"body":{"license.html":{}}}],["rpcexception",{"_index":2788,"title":{},"body":{"classes/MsException.html":{}}}],["rtexp",{"_index":1464,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["rxjs",{"_index":1330,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"dependencies.html":{}}}],["safedeserialize",{"_index":2678,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safedeserialize(data",{"_index":2684,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safely",{"_index":2686,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize",{"_index":2679,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize(data",{"_index":2690,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safety",{"_index":3549,"title":{},"body":{"index.html":{}}}],["same",{"_index":3838,"title":{},"body":{"license.html":{}}}],["sample\"]?.value",{"_index":1827,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sample_aspect_ratio",{"_index":3273,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["sample_rate",{"_index":482,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["sampleaspectratio",{"_index":446,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["samplerate",{"_index":343,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saturation",{"_index":435,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["save",{"_index":3957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saved",{"_index":1422,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata",{"_index":1423,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata(target",{"_index":1576,"title":{},"body":{"classes/ExplorerService.html":{}}}],["saves",{"_index":1421,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saving",{"_index":1339,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["scalable",{"_index":3537,"title":{},"body":{"index.html":{}}}],["scale",{"_index":474,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["scan",{"_index":993,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles",{"_index":984,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles(directory",{"_index":1043,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanning",{"_index":1016,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scans",{"_index":1046,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scenecapturetype",{"_index":433,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenetype",{"_index":428,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["schedulemodule",{"_index":2968,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulemodule.forroot",{"_index":2974,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulerregistry",{"_index":2981,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["scheduling",{"_index":3518,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1409,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":925,"title":{},"body":{"injectables/CategoryService.html":{}}}],["second",{"_index":3369,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["seconds",{"_index":3046,"title":{},"body":{"injectables/RedisCacheService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secret",{"_index":582,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secretkey",{"_index":2177,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["section",{"_index":1397,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["section_enabled",{"_index":1517,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_priority",{"_index":1519,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_renderer_params",{"_index":1522,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_visibility",{"_index":1524,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sectionenabled",{"_index":1380,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionpriority",{"_index":1378,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrenderer",{"_index":1384,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrendererparams",{"_index":1492,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sections",{"_index":3581,"title":{},"body":{"license.html":{}}}],["sectionvisibility",{"_index":1382,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["see",{"_index":554,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["selection",{"_index":1402,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["sell",{"_index":3688,"title":{},"body":{"license.html":{}}}],["send",{"_index":2634,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["send(pattern",{"_index":2644,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["sends",{"_index":2737,"title":{},"body":{"classes/MsClient.html":{}}}],["sensingmethod",{"_index":427,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sent",{"_index":3650,"title":{},"body":{"license.html":{}}}],["separable",{"_index":3635,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3755,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":2693,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serialized",{"_index":2694,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serializer",{"_index":1323,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["serializes",{"_index":2692,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["servers",{"_index":3506,"title":{},"body":{"index.html":{}}}],["serves",{"_index":4075,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["service",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":886,"title":{},"body":{"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["set",{"_index":167,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["set(key",{"_index":783,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["setaudiomd",{"_index":1693,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setaudiomd(md",{"_index":1698,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd",{"_index":1694,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd(md",{"_index":1701,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setmetadata(allowedformetadatakey",{"_index":3919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprocessunitstatus",{"_index":2860,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setprocessunitstatus(code",{"_index":2893,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setproperty",{"_index":985,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setproperty(item",{"_index":1049,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sets",{"_index":166,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus",{"_index":133,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus(status",{"_index":164,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setting",{"_index":954,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/FileMetadataService.html":{},"injectables/RedisCacheService.html":{}}}],["settings",{"_index":897,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["setup",{"_index":3082,"title":{},"body":{"modules/RedisModule.html":{}}}],["setvideomd",{"_index":1695,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setvideomd(md",{"_index":1703,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sha",{"_index":1271,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["shall",{"_index":3579,"title":{},"body":{"license.html":{}}}],["shared/constants",{"_index":3225,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["shared/modules/cache/cache.module",{"_index":566,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/cache/cache.types",{"_index":571,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/locale/entity/localized",{"_index":1483,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["shared/modules/locale/locale.types",{"_index":1351,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["shared/modules/log/log.constants",{"_index":1063,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/log/log.module",{"_index":568,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/messages",{"_index":2909,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/pageable/pageable.types",{"_index":1065,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["shared/modules/warlock/warlock.constants",{"_index":2907,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/warlock/warlock.module",{"_index":2972,"title":{},"body":{"modules/ProcessModule.html":{}}}],["shared/modules/warlock/warlock.types",{"_index":2908,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/transformers/simple",{"_index":1484,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["shared/utils/files.utils",{"_index":1718,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/utils/number.utils",{"_index":2228,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/object.utils",{"_index":191,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["shared/utils/string.utils",{"_index":2226,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/transform.utils",{"_index":1453,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["shares",{"_index":3604,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":3465,"title":{},"body":{"dependencies.html":{}}}],["sharpness",{"_index":436,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutterspeedvalue",{"_index":413,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["side",{"_index":824,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":4032,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["signature\"]?.description",{"_index":1880,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["signoptions",{"_index":584,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplejsontransformer",{"_index":858,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"miscellaneous/variables.html":{}}}],["simplifying",{"_index":3498,"title":{},"body":{"index.html":{}}}],["size",{"_index":355,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["skip",{"_index":2929,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["slicing",{"_index":3526,"title":{},"body":{"index.html":{}}}],["software",{"_index":403,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sole",{"_index":3818,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3774,"title":{},"body":{"license.html":{}}}],["sore",{"_index":4005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":914,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["sort(cat",{"_index":926,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sorted",{"_index":932,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sortedkeys",{"_index":1087,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.length",{"_index":1099,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.slice(start",{"_index":1102,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sorting",{"_index":1010,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortorder",{"_index":2819,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["sorts",{"_index":928,"title":{},"body":{"injectables/CategoryService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["source.pipe",{"_index":2756,"title":{},"body":{"classes/MsClient.html":{}}}],["space\"]?.description",{"_index":1872,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["special",{"_index":3791,"title":{},"body":{"license.html":{}}}],["specialization",{"_index":2155,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["specific",{"_index":267,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["specified",{"_index":180,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["split",{"_index":1149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src",{"_index":3940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.config",{"_index":574,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/captcha.config",{"_index":2172,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["src/file.config",{"_index":2045,"title":{},"body":{"injectables/FileService.html":{}}}],["src/kp.config",{"_index":3154,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stack",{"_index":2436,"title":{},"body":{"classes/LogService.html":{},"classes/MsException.html":{}}}],["stacktrace",{"_index":2474,"title":{},"body":{"classes/LogService.html":{}}}],["stacktrace.split(\"\\n",{"_index":2476,"title":{},"body":{"classes/LogService.html":{}}}],["standard",{"_index":3542,"title":{},"body":{"index.html":{}}}],["start",{"_index":134,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["started",{"_index":3481,"title":{"index.html":{},"license.html":{}},"body":{}}],["startprocess",{"_index":2861,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["startprocess(code",{"_index":2895,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["startprocess(processdata",{"_index":2986,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["starts",{"_index":169,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["startup",{"_index":2966,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["state",{"_index":3025,"title":{},"body":{"entities/ProcessUnitEntity.html":{},"index.html":{},"license.html":{}}}],["stated",{"_index":3686,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3745,"title":{},"body":{"license.html":{}}}],["static",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["static/file",{"_index":4068,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/media",{"_index":4073,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/private/file",{"_index":4070,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/private/media",{"_index":4077,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/tmp",{"_index":4027,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stating",{"_index":3721,"title":{},"body":{"license.html":{}}}],["statistics",{"_index":3138,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats",{"_index":1302,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["stats.filescount",{"_index":3163,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.folderscount",{"_index":3164,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.isdirectory",{"_index":1306,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["status",{"_index":147,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["status.execute",{"_index":201,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["status.ready",{"_index":2950,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["statuses",{"_index":2889,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["stop",{"_index":135,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["stoppage",{"_index":3799,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":228,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["stopprocess",{"_index":2862,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stopprocess(code",{"_index":2897,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["stopprocess(processdata",{"_index":2988,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["stops",{"_index":163,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["storage",{"_index":1073,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["store",{"_index":69,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["stored",{"_index":2038,"title":{},"body":{"injectables/FileService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["stores",{"_index":459,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["storing",{"_index":3099,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":3071,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"data",{"_index":3073,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"end",{"_index":3076,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"error",{"_index":3078,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["string",{"_index":63,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["string.entity",{"_index":872,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["string.entity.ts",{"_index":2409,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:33",{"_index":2413,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:37",{"_index":2412,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:40",{"_index":2414,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:43",{"_index":2415,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string[]).push(file",{"_index":1310,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["strings",{"_index":953,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["stringutils",{"_index":2225,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stringutils.generaterandomstring",{"_index":2230,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["structure",{"_index":1239,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclasses",{"_index":156,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclient",{"_index":2677,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["subject",{"_index":3668,"title":{},"body":{"license.html":{}}}],["subjectdistance",{"_index":418,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subjectdistancerange",{"_index":437,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sublicense",{"_index":3683,"title":{},"body":{"license.html":{}}}],["submission",{"_index":3747,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3645,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":3643,"title":{},"body":{"license.html":{}}}],["subsampling",{"_index":376,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subscribe",{"_index":2654,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribe(chanel",{"_index":2661,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscriber",{"_index":3252,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts",{"_index":263,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:28",{"_index":272,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:35",{"_index":290,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:47",{"_index":2372,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:48",{"_index":284,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:69",{"_index":2378,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:76",{"_index":274,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscribers",{"_index":265,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribes",{"_index":2663,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subsequently",{"_index":3664,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3047,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["successful",{"_index":1042,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["successfully",{"_index":622,"title":{},"body":{"classes/AuthService.html":{}}}],["such",{"_index":1340,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/UserSubscriber.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":510,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"classes/MsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{}}}],["super(httpstatus.bad_request",{"_index":675,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["super(httpstatus.forbidden",{"_index":2151,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["super(httpstatus.not_found",{"_index":2806,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["super(httpstatus.unauthorized",{"_index":2298,"title":{},"body":{"classes/InvalidTokenMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["super.debug(this.preparemessage(message",{"_index":2464,"title":{},"body":{"classes/LogService.html":{}}}],["super.error(this.preparemessage(message",{"_index":2460,"title":{},"body":{"classes/LogService.html":{}}}],["super.log(this.preparemessage(message",{"_index":2458,"title":{},"body":{"classes/LogService.html":{}}}],["super.verbose(this.preparemessage(message",{"_index":2463,"title":{},"body":{"classes/LogService.html":{}}}],["super.warn(this.preparemessage(message",{"_index":2462,"title":{},"body":{"classes/LogService.html":{}}}],["supersede",{"_index":3754,"title":{},"body":{"license.html":{}}}],["support",{"_index":3535,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["supports",{"_index":3524,"title":{},"body":{"index.html":{}}}],["svg",{"_index":3845,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":229,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["symbol",{"_index":3999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"entity_save_handler",{"_index":3955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"logger_service",{"_index":3998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"ms_client",{"_index":4001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_broker",{"_index":4000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_bus",{"_index":4002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"redis_client",{"_index":4004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"warlock",{"_index":4025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1081,"title":{},"body":{"injectables/ConfigService.html":{}}}],["synchronizing",{"_index":1017,"title":{},"body":{"injectables/ConfigService.html":{}}}],["syntax",{"_index":3836,"title":{},"body":{"license.html":{}}}],["system",{"_index":962,"title":{},"body":{"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/LanguageEntity.html":{},"modules/MediaModule.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"index.html":{}}}],["systems",{"_index":3571,"title":{},"body":{"index.html":{},"license.html":{}}}],["t",{"_index":319,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"entities/MediaEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["t.code",{"_index":847,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["t.id",{"_index":904,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["t.target",{"_index":1529,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["tab",{"_index":1387,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{}}}],["tab.entity",{"_index":1537,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["tab.entity.ts",{"_index":1578,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:38",{"_index":1580,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:42",{"_index":1581,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:46",{"_index":1582,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:53",{"_index":1583,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:56",{"_index":1584,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tabbed",{"_index":1579,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["table",{"_index":1416,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["table_name",{"_index":1608,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["tableinheritance",{"_index":1640,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["tablename",{"_index":1361,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tables",{"_index":1412,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["tagname",{"_index":3331,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["take",{"_index":2948,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["target",{"_index":1348,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["target.entity",{"_index":1535,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{}}}],["target.entity.ts",{"_index":1586,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:103",{"_index":1591,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:107",{"_index":1592,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:41",{"_index":1610,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:45",{"_index":1609,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:49",{"_index":1590,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:53",{"_index":1607,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:57",{"_index":1605,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:60",{"_index":1606,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:63",{"_index":1596,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:67",{"_index":1589,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:75",{"_index":1598,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:83",{"_index":1604,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:91",{"_index":1600,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:99",{"_index":1602,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target_relations_basic",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_full",{"_index":3902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_object",{"_index":3903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_section",{"_index":3904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetdata",{"_index":1392,"title":{"interfaces/TargetData.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targetparams",{"_index":1417,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targets",{"_index":1395,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":3499,"title":{},"body":{"index.html":{}}}],["template",{"_index":814,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["templated",{"_index":3924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates",{"_index":3922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temporary",{"_index":3127,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["terminate",{"_index":3709,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3575,"title":{},"body":{"license.html":{}}}],["tested",{"_index":3568,"title":{},"body":{"index.html":{}}}],["text",{"_index":2211,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["theory",{"_index":3782,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":3639,"title":{},"body":{"license.html":{}}}],["third",{"_index":3734,"title":{},"body":{"license.html":{}}}],["this.broker.emit(command.register",{"_index":2932,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.start",{"_index":2934,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.stop",{"_index":2935,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.unregister",{"_index":2941,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.cacheservice.del(config_cache_prefix",{"_index":1074,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(fullkey",{"_index":1114,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(key",{"_index":2243,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get",{"_index":104,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_family",{"_index":2266,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_path",{"_index":2267,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.google_public_key",{"_index":2176,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(key",{"_index":1106,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(kpconfig.tmp_dir",{"_index":3157,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.cacheservice.get(private_dir",{"_index":2147,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.get(public_dir",{"_index":2145,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.getboolean",{"_index":2174,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.getfrompattern",{"_index":1085,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.getnumber(captchaconfig.expiration",{"_index":2265,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${captcha_cache_prefix}:${id",{"_index":2239,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${key",{"_index":1078,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.set(fullkey",{"_index":1111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.catrep.finddescendantstree(cat",{"_index":940,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.catrep.findone",{"_index":938,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.client.del(...keys",{"_index":3065,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.expire(key",{"_index":3070,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.get(key",{"_index":3060,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.incr(key",{"_index":3068,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.scanstream",{"_index":3072,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.set(key",{"_index":3063,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.constructor.name",{"_index":204,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.createbasicfindqb",{"_index":2087,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createbasicfindqb().where(\"file.id",{"_index":2083,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfiledirectory",{"_index":2068,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfileentity(ispublic",{"_index":2066,"title":{},"body":{"injectables/FileService.html":{}}}],["this.deleteexistingconfigtsfiles(fullpath",{"_index":1185,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.deleteexistingconfigtsfiles(process.cwd",{"_index":1072,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.execute",{"_index":213,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.fetchuser",{"_index":100,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.filerep",{"_index":2106,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.manager.transaction(async",{"_index":2053,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.save(entity",{"_index":2144,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findbyid(id",{"_index":718,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.findfilebyid(existedentityid",{"_index":2055,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findfilebyid(id",{"_index":2090,"title":{},"body":{"injectables/FileService.html":{}}}],["this.generatecolor",{"_index":2257,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.generateconfigtsfiles",{"_index":1076,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatedtsoutput",{"_index":1066,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatenamespacewithvariables",{"_index":1202,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.get(key",{"_index":3062,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.getaccesstokenfromrequest(req",{"_index":91,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.getcallingcontext",{"_index":2457,"title":{},"body":{"classes/LogService.html":{}}}],["this.getcaptchaexp",{"_index":2238,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontfamily",{"_index":2252,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontpath",{"_index":2254,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getdeletestats(dirstruct",{"_index":3161,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.getprivatedir",{"_index":2058,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getprocessdata(code",{"_index":2933,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getprocessdata(processcode",{"_index":2943,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getpublicdir",{"_index":2059,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getpublicdir()}/${file.id",{"_index":2092,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getstatus",{"_index":200,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.handlerequest(source",{"_index":2749,"title":{},"body":{"classes/MsClient.html":{}}}],["this.hashpassword(user.password",{"_index":324,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["this.hashpasswordifneeded(event",{"_index":3265,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.http.post",{"_index":2179,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.languagerep.find",{"_index":2349,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.findone",{"_index":2356,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.save(ls",{"_index":2359,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.lockexec",{"_index":3017,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.lockexec(`${processdata.code}_start",{"_index":3010,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.debug(`generated",{"_index":2240,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.debug(`sending",{"_index":2754,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.debug(message",{"_index":237,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.error",{"_index":2761,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["this.logger.error(`error",{"_index":3061,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(`invalid",{"_index":1156,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.error(`process",{"_index":3009,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.error(err",{"_index":3079,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(message",{"_index":233,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.log",{"_index":2080,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(\"init",{"_index":2921,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.log(`clean",{"_index":1070,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`config",{"_index":1080,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`file",{"_index":2105,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(`generate",{"_index":1075,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`scan",{"_index":1067,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(message",{"_index":231,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.verbose",{"_index":2391,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["this.logger.verbose(`delete",{"_index":1182,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`generated",{"_index":1206,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`read",{"_index":1177,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(message",{"_index":239,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.warn",{"_index":202,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["this.logger.warn(\"autostart",{"_index":2919,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.warn(`incorrect",{"_index":2246,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`invalid",{"_index":96,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`request",{"_index":2768,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.warn(message",{"_index":235,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance",{"_index":208,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance.content",{"_index":251,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.makeimagefromtext(val",{"_index":2236,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.mergepropertiescontent",{"_index":1128,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.metadataservice.createfilemetadataentity",{"_index":2077,"title":{},"body":{"injectables/FileService.html":{}}}],["this.oncrash(e",{"_index":222,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onfinish",{"_index":215,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onstop",{"_index":226,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.parser.parsestring(xmldata",{"_index":3430,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.parsevalue(value.trim",{"_index":1164,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.parsexmlfromrequest(req",{"_index":3426,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.patchfromctx(ctx",{"_index":2461,"title":{},"body":{"classes/LogService.html":{}}}],["this.pmservice.createloginstance",{"_index":209,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.getprocessunitstatus(this.constructor.name",{"_index":259,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.init",{"_index":2975,"title":{},"body":{"modules/ProcessModule.html":{}}}],["this.pmservice.setprocessunitstatus(processdata.code",{"_index":3015,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.setprocessunitstatus(this.constructor.name",{"_index":260,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.stopprocess(processdata.code",{"_index":3023,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.updateloginstance(this.loginstance",{"_index":255,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.processandvalidatepropertiescontent",{"_index":1137,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.processlogrep.find",{"_index":2947,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.findone",{"_index":2946,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save",{"_index":2944,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save(loginstance",{"_index":2945,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.find",{"_index":2923,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.findone",{"_index":2938,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.save(processdata",{"_index":2940,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.propertiesfiles",{"_index":1186,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[filepath",{"_index":1188,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[fullpath",{"_index":1136,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.proxy.emit(pattern",{"_index":2753,"title":{},"body":{"classes/MsClient.html":{}}}],["this.proxy.send(pattern",{"_index":2748,"title":{},"body":{"classes/MsClient.html":{}}}],["this.pubclient.duplicate",{"_index":2705,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.pubclient.publish(chanel",{"_index":2711,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.reflector.get",{"_index":3116,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registercronjob(data",{"_index":3000,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.resetallprocessstatuses",{"_index":2920,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.safeserialize(data",{"_index":2712,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.scanforpropertiesfiles(fullpath",{"_index":1131,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.scanforpropertiesfiles(process.cwd",{"_index":1069,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.schedulerregistry.addcronjob(processdata.code",{"_index":3019,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.deletecronjob(processdata.code",{"_index":3022,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.doesexist(\"cron",{"_index":3013,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.getcronjob(processdata.code",{"_index":3020,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.service.analyzedatabase",{"_index":1563,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["this.setaudiomd(md",{"_index":1739,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setimagemd(md",{"_index":1737,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setprocessunitstatus(processdata.code",{"_index":2949,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.setstatus(status.crashed",{"_index":221,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.execute",{"_index":211,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.ready",{"_index":214,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setvideomd(md",{"_index":1741,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.sort(cat",{"_index":942,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.sort(res",{"_index":943,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.startprocess(data",{"_index":3004,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.stopprocess(data",{"_index":3006,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.subclient",{"_index":2704,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.on(\"message",{"_index":2706,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.subscribe(chanel",{"_index":2713,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.unsubscribe(chanel",{"_index":2715,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.delete(chanel",{"_index":2716,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.get(chanel",{"_index":2709,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.has(chanel",{"_index":2707,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.set(chanel",{"_index":2714,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.trimproperties(md",{"_index":1742,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.trimproperties(obj[key",{"_index":1749,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.unregistercronjob(data",{"_index":3002,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.userrep.create(user",{"_index":720,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.findone",{"_index":713,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.remove(user",{"_index":723,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(newuser",{"_index":721,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(user",{"_index":717,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userservice.findbylogin(useridentity",{"_index":101,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.validatelogin(event.entity.login",{"_index":3264,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.validatetoken(token",{"_index":94,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.valuesofproperties",{"_index":1077,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[key",{"_index":1079,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[processedvalue.substring(1,processedvalue.length",{"_index":1173,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[propertykey",{"_index":1163,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.writelog",{"_index":216,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`nothing",{"_index":3159,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`process",{"_index":227,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`start",{"_index":210,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`tmp",{"_index":3166,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`try",{"_index":225,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["those",{"_index":3690,"title":{},"body":{"license.html":{}}}],["through",{"_index":3516,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":97,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{}}}],["throwerror",{"_index":2740,"title":{},"body":{"classes/MsClient.html":{}}}],["throwerror(error",{"_index":2770,"title":{},"body":{"classes/MsClient.html":{}}}],["throws",{"_index":299,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["thumb",{"_index":3905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3525,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":2203,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["timeout",{"_index":2648,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["timeout(opts?.timeout",{"_index":2757,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouterror",{"_index":2767,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouts",{"_index":2735,"title":{},"body":{"classes/MsClient.html":{}}}],["timestamp",{"_index":1635,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["tinput",{"_index":2636,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["title",{"_index":344,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["tmpdir",{"_index":3156,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["tmpdircleanerprocess",{"_index":3123,"title":{"classes/TmpDirCleanerProcess.html":{}},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["to(value",{"_index":4010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":3566,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toggle",{"_index":2902,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess",{"_index":2863,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess(code",{"_index":2899,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggles",{"_index":2901,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["token",{"_index":42,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["token.decorator.ts",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokenizing",{"_index":3921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokens",{"_index":611,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["tool",{"_index":345,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toomanyrequestsmsexception",{"_index":3170,"title":{"classes/TooManyRequestsMsException.html":{}},"body":{"classes/TooManyRequestsMsException.html":{}}}],["tort",{"_index":3783,"title":{},"body":{"license.html":{}}}],["total",{"_index":2813,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["totalcount",{"_index":1098,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["touppercase",{"_index":1199,"title":{},"body":{"injectables/ConfigService.html":{}}}],["trace",{"_index":2434,"title":{},"body":{"classes/LogService.html":{}}}],["tracking",{"_index":652,"title":{},"body":{"classes/AuthService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trade",{"_index":3760,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3723,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3758,"title":{},"body":{"license.html":{}}}],["transactionmanager",{"_index":2054,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file",{"_index":2104,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.audio",{"_index":2101,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.gps",{"_index":2099,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.image",{"_index":2097,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.video",{"_index":2103,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.save(entity",{"_index":2079,"title":{},"body":{"injectables/FileService.html":{}}}],["transfer",{"_index":804,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{}}}],["transform",{"_index":1221,"title":{},"body":{"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/NotEmptyPipe.html":{}}}],["transform(transformutils.datetotime",{"_index":1462,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["transform(value",{"_index":2799,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["transformation",{"_index":1332,"title":{},"body":{"injectables/DtoInterceptor.html":{},"license.html":{}}}],["transformer",{"_index":857,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["transformers/simple",{"_index":873,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["transforming",{"_index":4011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformutils",{"_index":1452,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["translation",{"_index":3616,"title":{},"body":{"license.html":{}}}],["translations",{"_index":2410,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["transport",{"_index":2780,"title":{},"body":{"modules/MsClientModule.html":{}}}],["tree",{"_index":870,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["tree(\"nested",{"_index":877,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treechildren",{"_index":840,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treeparent",{"_index":860,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treerepository",{"_index":916,"title":{},"body":{"injectables/CategoryService.html":{}}}],["trees",{"_index":834,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["tresult",{"_index":2640,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["trigger",{"_index":2369,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["triggered",{"_index":1342,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{}}}],["trim",{"_index":1711,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimmed",{"_index":1712,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties",{"_index":1696,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties(obj",{"_index":1705,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trims",{"_index":1707,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["true",{"_index":87,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["true})@column('varchar",{"_index":843,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":853,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["true})@primarycolumn('varchar",{"_index":1494,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserRoleEntity.html":{}}}],["try",{"_index":212,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"miscellaneous/variables.html":{}}}],["ts_created",{"_index":1634,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["ts_updated",{"_index":2844,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["tscreated",{"_index":359,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tsupdated",{"_index":2834,"title":{},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["two",{"_index":3363,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["type\"]?.description",{"_index":1845,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["type(undefined",{"_index":2824,"title":{},"body":{"classes/PageableParams.html":{}}}],["type.code",{"_index":2542,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{}}}],["type.entity",{"_index":2544,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["type.entity.ts",{"_index":2615,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:21",{"_index":2616,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:25",{"_index":2620,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:28",{"_index":2623,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:31",{"_index":2621,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:34",{"_index":2622,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:37",{"_index":2618,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:41",{"_index":2619,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.ext",{"_index":3953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type.formats",{"_index":3952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3854,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":312,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":295,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/error/typeormerror",{"_index":1232,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeorm/subscriber/event/insertevent",{"_index":294,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["typeormerror",{"_index":1231,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeormmodule",{"_index":891,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":2336,"title":{},"body":{"modules/LocaleModule.html":{},"modules/MediaModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":893,"title":{},"body":{"modules/CategoryModule.html":{}}}],["typeormmodule.forfeature([explorertargetentity",{"_index":1562,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":2001,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([processunitentity",{"_index":2973,"title":{},"body":{"modules/ProcessModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3235,"title":{},"body":{"modules/UserModule.html":{}}}],["types",{"_index":1357,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":991,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{}}}],["ui",{"_index":3490,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":3180,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["unauthorizedmsexception",{"_index":3178,"title":{"classes/UnauthorizedMsException.html":{}},"body":{"classes/UnauthorizedMsException.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"entities/ProcessUnitEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["undefined:undefined",{"_index":2468,"title":{},"body":{"classes/LogService.html":{}}}],["under",{"_index":530,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["underscores",{"_index":310,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["union",{"_index":3588,"title":{},"body":{"license.html":{}}}],["unique",{"_index":810,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["uniqueobjects",{"_index":3356,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.push(obj",{"_index":3360,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.reverse",{"_index":3361,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.some((uniqueobj",{"_index":3358,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["unit",{"_index":123,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["unknown",{"_index":51,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unknown_ip",{"_index":632,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":541,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["unlock",{"_index":3293,"title":{},"body":{"modules/WarlockModule.html":{}}}],["unregister",{"_index":2993,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["unregistercronjob",{"_index":2980,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistercronjob(processdata",{"_index":2990,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistered",{"_index":2994,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregisters",{"_index":2992,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unsigned",{"_index":863,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["unsubscribe",{"_index":2655,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribe(chanel",{"_index":2664,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribes",{"_index":2666,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["up",{"_index":1427,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["update",{"_index":288,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["updatebyid",{"_index":686,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["updatebyid(id",{"_index":703,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updated",{"_index":705,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{}}}],["updatedatecolumn",{"_index":2846,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["updateevent",{"_index":283,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["updateloginstance",{"_index":2864,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updateloginstance(loginstance",{"_index":2903,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updates",{"_index":172,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["upgrade",{"_index":4040,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["uploaded",{"_index":1617,"title":{},"body":{"entities/FileEntity.html":{}}}],["uploading",{"_index":2005,"title":{},"body":{"injectables/FileService.html":{},"index.html":{}}}],["uploads",{"_index":2026,"title":{},"body":{"injectables/FileService.html":{}}}],["upsert",{"_index":2507,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["upsertmediarequest",{"_index":2508,"title":{"interfaces/UpsertMediaRequest.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["uri",{"_index":3395,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["url",{"_index":839,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["use",{"_index":535,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["use(req",{"_index":3415,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["useclass",{"_index":590,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["used",{"_index":500,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["usefactory",{"_index":580,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["usefactory(...args).config",{"_index":3089,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefiles",{"_index":3405,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["user",{"_index":71,"title":{"interfaces/User.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["user's",{"_index":654,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["user.constants",{"_index":711,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.decorator.ts",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.entity",{"_index":3263,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.id",{"_index":321,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{}}}],["user.login",{"_index":716,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.password",{"_index":313,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password.tostring",{"_index":315,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password?.length",{"_index":316,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.types",{"_index":707,"title":{},"body":{"injectables/BasicUserService.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["user/entity/user",{"_index":1352,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["user/user.module",{"_index":570,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.types",{"_index":1355,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/XdbRequest.html":{}}}],["user_relations",{"_index":710,"title":{},"body":{"injectables/BasicUserService.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":1451,"title":{"classes/UserDto.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentity",{"_index":297,"title":{"entities/UserEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentitypwdandrolessavehandler",{"_index":3216,"title":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["useridentity",{"_index":92,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["usermodule",{"_index":569,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule.forroot",{"_index":578,"title":{},"body":{"modules/AuthModule.html":{}}}],["usermoduleoptions",{"_index":3188,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":756,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["userrep",{"_index":689,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userrole",{"_index":3113,"title":{"interfaces/UserRole.html":{}},"body":{"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroledto",{"_index":3186,"title":{"classes/UserRoleDto.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroleentity",{"_index":901,"title":{"entities/UserRoleEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["userroles",{"_index":3118,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":3201,"title":{},"body":{"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["userservice",{"_index":22,"title":{"classes/UserService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userservice:43",{"_index":698,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:56",{"_index":695,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:70",{"_index":704,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:85",{"_index":692,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:97",{"_index":700,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["usersubscriber",{"_index":3250,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{}}}],["userupdaterequest",{"_index":3187,"title":{"interfaces/UserUpdateRequest.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userutils",{"_index":3108,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userutils.hassomerole",{"_index":3115,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uses",{"_index":2960,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["using",{"_index":277,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["utf",{"_index":3937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/env.loader",{"_index":743,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["utils/object.utils",{"_index":936,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["utils/user.utils",{"_index":3109,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uuid",{"_index":2219,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2218,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["v.code",{"_index":3227,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["v.codec_type",{"_index":1756,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["v4",{"_index":2217,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["val",{"_index":2233,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{}}}],["valid",{"_index":73,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validate",{"_index":70,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha",{"_index":828,"title":{},"body":{"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatecaptcha(request",{"_index":821,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validated",{"_index":2168,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatelogin",{"_index":271,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validatelogin(login",{"_index":289,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validates",{"_index":65,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/UserSubscriber.html":{}}}],["validatetoken",{"_index":27,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validatetoken(token",{"_index":62,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validation",{"_index":819,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validator",{"_index":813,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"dependencies.html":{}}}],["validity",{"_index":40,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["value",{"_index":183,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/AuthModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/Language.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2388,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["value.trim",{"_index":1166,"title":{},"body":{"injectables/ConfigService.html":{}}}],["value[0",{"_index":2389,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["values",{"_index":969,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"interfaces/XdbRequest.html":{}}}],["valuesofproperties",{"_index":974,"title":{},"body":{"injectables/ConfigService.html":{}}}],["valuetransformer",{"_index":4007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":1643,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["variablename",{"_index":1148,"title":{},"body":{"injectables/ConfigService.html":{}}}],["variables",{"_index":1000,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variation",{"_index":3864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["various",{"_index":3523,"title":{},"body":{"index.html":{}}}],["vector",{"_index":3531,"title":{},"body":{"index.html":{}}}],["verbal",{"_index":3648,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2428,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":2452,"title":{},"body":{"classes/LogService.html":{}}}],["verification",{"_index":2167,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["versa",{"_index":4014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version\"]?.description",{"_index":1864,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["vice",{"_index":4013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":370,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["videofilemetadata",{"_index":371,"title":{"interfaces/VideoFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadataentity",{"_index":1686,"title":{"entities/VideoFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videomd",{"_index":1768,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.bit_rate",{"_index":1779,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_long_name",{"_index":1773,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_name?.touppercase",{"_index":1771,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_range",{"_index":1787,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_space",{"_index":1789,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.display_aspect_ratio",{"_index":1785,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.height",{"_index":1777,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.r_frame_rate",{"_index":1791,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.sample_aspect_ratio",{"_index":1783,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.tags?.rotate",{"_index":1793,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.width",{"_index":1775,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["virtual",{"_index":1373,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["visit",{"_index":3563,"title":{},"body":{"index.html":{}}}],["void",{"_index":933,"title":{},"body":{"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["vp6",{"_index":2502,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["warlock",{"_index":2906,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warlock(client",{"_index":3288,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.constants",{"_index":3282,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.lock",{"_index":3291,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.types",{"_index":3283,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlockfn",{"_index":2866,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["warlockmodule",{"_index":2956,"title":{"modules/WarlockModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["warn",{"_index":2429,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":2454,"title":{},"body":{"classes/LogService.html":{}}}],["warning",{"_index":2456,"title":{},"body":{"classes/LogService.html":{}}}],["warranties",{"_index":550,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["warranty",{"_index":3769,"title":{},"body":{"license.html":{}}}],["web",{"_index":4030,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["webp",{"_index":3530,"title":{},"body":{"index.html":{}}}],["webpsupport",{"_index":2521,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["website",{"_index":3565,"title":{},"body":{"index.html":{}}}],["well",{"_index":3529,"title":{},"body":{"index.html":{}}}],["where(\"file.code",{"_index":2088,"title":{},"body":{"injectables/FileService.html":{}}}],["wherever",{"_index":3733,"title":{},"body":{"license.html":{}}}],["whether",{"_index":33,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"license.html":{}}}],["whitebalance",{"_index":431,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whole",{"_index":3632,"title":{},"body":{"license.html":{}}}],["whose",{"_index":930,"title":{},"body":{"injectables/CategoryService.html":{}}}],["width",{"_index":373,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["width\"]?.value",{"_index":1832,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["withfiletypes",{"_index":1116,"title":{},"body":{"injectables/ConfigService.html":{}}}],["within",{"_index":3666,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":549,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["work",{"_index":788,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"index.html":{},"license.html":{}}}],["working",{"_index":888,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["works",{"_index":3626,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3672,"title":{},"body":{"license.html":{}}}],["writelog",{"_index":136,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writelog(message",{"_index":173,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writerequest",{"_index":1400,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["writes",{"_index":177,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writing",{"_index":546,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["written",{"_index":3649,"title":{},"body":{"license.html":{}}}],["xdb",{"_index":3315,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.getxmlparser",{"_index":3420,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.parsexmlbody(req.body",{"_index":3427,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdbaction",{"_index":3303,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbdecomposedentity",{"_index":3304,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportdto",{"_index":3305,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportparams",{"_index":3301,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportservice",{"_index":3294,"title":{"classes/XdbExportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbimportservice",{"_index":3312,"title":{"classes/XdbImportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbmoduleoptions",{"_index":3402,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["xdbobject",{"_index":3306,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrequest",{"_index":3385,"title":{"interfaces/XdbRequest.html":{}},"body":{"interfaces/XdbRequest.html":{}}}],["xdbrowdata",{"_index":3307,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrowdatavalue",{"_index":3394,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xml",{"_index":3298,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3309,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{}}}],["xml2js.parser",{"_index":3324,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["xmldata",{"_index":3318,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgeexportservice",{"_index":3434,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeimportservice",{"_index":3433,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemiddleware",{"_index":3408,"title":{"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgemodule",{"_index":3401,"title":{"modules/XmlDataBridgeModule.html":{}},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["yargs",{"_index":3311,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["ycbcrpositioning",{"_index":404,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["year",{"_index":346,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["z0",{"_index":303,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["z][_a",{"_index":1154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["za",{"_index":302,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["zerofill",{"_index":491,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["zip",{"_index":3447,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":732,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbstractAuthGuard.html":{"url":"guards/AbstractAuthGuard.html","title":"guard - AbstractAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbstractAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/abstract-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    An abstract class for creating authentication guards.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                cacheService\n                            \n                            \n                                    Protected\n                                fetchUser\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getAccessTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:49\n                        \n                    \n\n\n            \n                \n                        Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A boolean indicating whether the request is allowed to proceed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAccessTokenFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:85\n                        \n                    \n\n\n            \n                \n                        Extracts the access token from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The access token if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:74\n                        \n                    \n\n\n            \n                \n                        Validates the given access token by checking it against the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The user identity if the token is valid, otherwise null.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ACCESS_TOKEN_ERROR_MSG,\n  AUTH_ACCESS_TOKEN_PREFIX,\n  AUTH_JWT_CACHE_PREFIX,\n} from \"../../common/auth/auth.constants\";\nimport { Request } from \"express\";\nimport { CacheService } from \"../modules/cache/cache.types\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS } from \"../constants\";\n\n/**\n * @abstract\n * @class AbstractAuthGuard\n * An abstract class for creating authentication guards.\n */\nexport abstract class AbstractAuthGuard implements CanActivate {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly cacheService: CacheService;\n  protected abstract readonly userService: UserService;\n  protected fetchUser = true;\n\n  /**\n   * Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n   * @param context - The execution context of the request.\n   * @returns A boolean indicating whether the request is allowed to proceed.\n   */\n  async canActivate(context: ExecutionContext) {\n    const req = context.switchToHttp().getRequest();\n    const token = this.getAccessTokenFromRequest(req);\n    const userIdentity = await this.validateToken(token);\n    if (userIdentity) {\n      req[REQUEST_PROPS.accessToken] = token;\n    } else {\n      this.logger.warn(`Invalid token: ${token}`);\n      throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n    }\n    if (this.fetchUser) {\n      const user = await this.userService.findByLogin(userIdentity);\n      if (!user) {\n        throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n      }\n      req[REQUEST_PROPS.currentUser] = user;\n    }\n    return true;\n  }\n\n  /**\n   * Validates the given access token by checking it against the store.\n   * @param token - The access token to validate.\n   * @returns The user identity if the token is valid, otherwise null.\n   */\n  private async validateToken(token: string) {\n    return this.cacheService.get(\n      `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${token}`,\n    );\n  }\n\n  /**\n   * Extracts the access token from the request.\n   * @param req - The request object.\n   * @returns The access token if found, otherwise null.\n   */\n  private getAccessTokenFromRequest(req: Request) {\n    if (req.cookies?.accessToken) {\n      return req.cookies.accessToken;\n    }\n    if (req.headers?.authorization) {\n      const authorizationHeader = req.headers.authorization;\n      const parts = authorizationHeader.match(/Bearer\\s+(\\S+)\\s*(.+)?/);\n      if (!parts.length) {\n        return null;\n      }\n      return parts[1];\n    }\n    return null;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractProcess.html":{"url":"classes/AbstractProcess.html","title":"class - AbstractProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/abstract-process.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a process unit managing instance.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/abstract-process.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:165\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:157\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:140\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:148\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:173\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:44\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:80\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:94\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { ObjectUtils } from \"../../shared/utils/object.utils\";\nimport registerProcess = Process.registerProcess;\nimport Status = Process.Status;\nimport inspect = ObjectUtils.inspect;\nimport LogLevel = Process.LogLevel;\n\n/**\n * Abstract class representing a process unit managing instance.\n */\nexport abstract class AbstractProcess {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly pmService: ProcessManagerService;\n  private logInstance: ProcessLogEntity;\n\n  protected abstract execute(): Promise;\n\n  protected constructor() {\n    registerProcess(this);\n  }\n\n  /**\n   * Starts the process and handles its execution.\n   */\n  async start() {\n    const status = await this.getStatus();\n    if (status === Status.Execute) {\n      this.logger.warn(\n        `Process with id ${this.constructor.name} now executed, can't start that`,\n      );\n      return;\n    }\n    this.logInstance = await this.pmService.createLogInstance(\n      this.constructor.name,\n    );\n    await this.writeLog(`Start process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Execute);\n    try {\n      await this.execute();\n      await this.setStatus(Status.Ready);\n      await this.onFinish();\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was finished`,\n      );\n      this.logInstance = undefined;\n    } catch (e) {\n      await this.setStatus(Status.Crashed);\n      await this.onCrash(e);\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was crashed`,\n        e,\n        LogLevel.Error,\n      );\n      this.logInstance = undefined;\n    }\n  }\n\n  /**\n   * Stops the process and updates its status.\n   */\n  async stop() {\n    await this.writeLog(`Try to stop process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Ready);\n    await this.onStop();\n    await this.writeLog(`Process with id ${this.constructor.name} was stopped`);\n    this.logInstance = undefined;\n  }\n\n  /**\n   * Writes a log entry with the specified message, data, and log level.\n   * @param message - The log message.\n   * @param data - Optional additional data.\n   * @param level - The log level (default: LogLevel.Log).\n   */\n  protected async writeLog(\n    message: string,\n    data?: unknown,\n    level = LogLevel.Log,\n  ) {\n    switch (level) {\n      case LogLevel.Log:\n        this.logger.log(message, data);\n        break;\n      case LogLevel.Error:\n        this.logger.error(message, data);\n        break;\n      case LogLevel.Warn:\n        this.logger.warn(message, data);\n        break;\n      case LogLevel.Debug:\n        this.logger.debug(message, data);\n        break;\n      case LogLevel.Verbose:\n        this.logger.verbose(message, data);\n        break;\n    }\n    if (!this.logInstance) {\n      return;\n    }\n    const date = new Date();\n    let msg = inspect(message);\n    if (\n      (msg.startsWith(`'`) && msg.endsWith(`'`)) ||\n      (msg.startsWith(`\"`) && msg.endsWith(`\"`))\n    ) {\n      msg = msg.substring(1, msg.length - 1);\n    }\n    if (data) {\n      msg += inspect(data);\n    }\n    msg = msg.replace(/\\[/g, \"{\");\n    msg = msg.replace(/]/g, \"}\");\n    this.logInstance.content += `[${process.pid} | ${date.toLocaleString()} | ${level}] ${msg} >>>\\n`;\n    await this.pmService.updateLogInstance(this.logInstance);\n  }\n\n  /**\n   * Callback method that is called when the process finishes.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onFinish() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process stops.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onStop() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process crashes.\n   * Can be overridden by subclasses if needed.\n   * @param error - The error that caused the crash.\n   */\n  protected async onCrash(error: Error) {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Gets the current status of the process.\n   * @returns The current process status.\n   */\n  private async getStatus() {\n    return await this.pmService.getProcessUnitStatus(this.constructor.name);\n  }\n\n  /**\n   * Sets the status of the process.\n   * @param status - The new status to set.\n   */\n  private async setStatus(status: Status) {\n    await this.pmService.setProcessUnitStatus(this.constructor.name, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUserSubscriber.html":{"url":"classes/AbstractUserSubscriber.html","title":"class - AbstractUserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/abstract-user-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for user entity subscribers to handle specific events.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Protected\n                                    Async\n                                hashPasswordIfNeeded\n                            \n                            \n                                    Protected\n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/abstract-user-subscriber.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:76\n                        \n                    \n\n\n            \n                \n                        Hashes a password using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The hashed password.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPasswordIfNeeded\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPasswordIfNeeded(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:48\n                        \n                    \n\n\n            \n                \n                        Hashes the user password if it has changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InsertEvent | UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe insert or update event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates the login format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login string to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { UpdateEvent } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Abstract class for user entity subscribers to handle specific events.\n */\nexport abstract class AbstractUserSubscriber {\n  protected abstract readonly type: Type;\n\n  /**\n   * Validates the login format.\n   * @param login - The login string to validate.\n   * @throws BadRequestException if the login format is invalid.\n   */\n  protected async validateLogin(login: string) {\n    const loginRegex = /^[A-Za-z0-9_]+$/;\n    if (!loginRegex.test(login)) {\n      throw new BadRequestException(\n        \"Login must contain only Latin letters, numbers, and underscores.\",\n      );\n    }\n  }\n\n  /**\n   * Hashes the user password if it has changed.\n   * @param event - The insert or update event.\n   */\n  protected async hashPasswordIfNeeded(event: InsertEvent | UpdateEvent) {\n    const { entity: user, manager } = event;\n    if (typeof user.password === \"number\") {\n      user.password = user.password.toString();\n    }\n    if (!user.password?.length) {\n      delete user.password;\n      return;\n    }\n    const foundUser: T = await manager.findOne(this.type, {\n      where: { id: user.id },\n    });\n    if (foundUser) {\n      if (await bcrypt.compare(user.password, foundUser.password)) {\n        user.password = foundUser.password;\n      } else {\n        user.password = await this.hashPassword(user.password);\n      }\n    } else {\n      user.password = await this.hashPassword(user.password);\n    }\n  }\n\n  /**\n   * Hashes a password using bcrypt.\n   * @param password - The password to hash.\n   * @returns The hashed password.\n   */\n  protected async hashPassword(password: string) {\n    return await bcrypt.hash(password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioFileMetadata.html":{"url":"interfaces/AudioFileMetadata.html","title":"interface - AudioFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing audio file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            codecProfile\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            numberOfChannels\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tool\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codecProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codecProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AudioFileMetadataEntity.html":{"url":"entities/AudioFileMetadataEntity.html","title":"entity - AudioFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AudioFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/audio-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the audio metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                album\n                            \n                            \n                                    \n                                    \n                                artist\n                            \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                codecProfile\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                numberOfChannels\n                            \n                            \n                                    \n                                    \n                                sampleRate\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                tool\n                            \n                            \n                                    \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codecProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'codec_profile', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'number_of_channels', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'sample_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { AudioFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the audio metadata of the file\n */\n@Entity(\"file_metadata_audio\")\nexport class AudioFileMetadataEntity implements AudioFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"int\", { name: \"sample_rate\", nullable: true })\n  sampleRate: number;\n\n  @Index()\n  @Column(\"int\", { name: \"number_of_channels\", nullable: true })\n  numberOfChannels: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"codec_profile\", nullable: true })\n  codecProfile: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  tool: string;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  title: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  artist: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  album: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  year: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  genre: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/auth.guard.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class AuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n */\n@Injectable()\nexport class AuthGuard extends AbstractAuthGuard {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module providing auth process.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AuthModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: AuthorizationService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { AuthModuleOptions } from \"./auth.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { AuthConfig } from \"../../../gen-src/auth.config\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Module providing auth process.\n */\n@Module({})\nexport class AuthModule {\n  static forRoot(\n    options: AuthModuleOptions = { service: AuthorizationService },\n  ): DynamicModule {\n    return {\n      module: AuthModule,\n      imports: [\n        PassportModule,\n        CacheModule,\n        LogModule,\n        UserModule.forRoot(),\n        JwtModule.registerAsync({\n          imports: [CacheModule],\n          inject: [CacheService],\n          useFactory: async (cs: CacheService) => {\n            return {\n              secret: await cs.get(AuthConfig.JWT_SECRET),\n              signOptions: {\n                expiresIn: await cs.getNumber(\n                  AuthConfig.ACCESS_TOKEN_EXPIRATION,\n                ),\n              },\n            };\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: AuthService,\n          useClass: options.service,\n        },\n      ],\n      exports: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract service class for authentication and authorization.\nDefines the methods that must be implemented by any derived service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                authenticate\n                            \n                            \n                                    Abstract\n                                exchangeToken\n                            \n                            \n                                    Abstract\n                                invalidateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: LoginPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:109\n                        \n                    \n\n\n            \n                \n                        Authenticate the user with the provided login payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLoginPayload object with user login information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a JwtDto containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:123\n                        \n                    \n\n\n            \n                \n                        Exchange the provided refresh token for a new access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe refresh token to exchange.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A Promise that resolves to a Partial containing new access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    invalidateToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:116\n                        \n                    \n\n\n            \n                \n                        Invalidate the specified access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to invalidate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtDto, LoginPayload } from \"./auth.types\";\n\n/**\n * Error message for access token related errors.\n * @constant\n */\nexport const ACCESS_TOKEN_ERROR_MSG = \"ERR_TOKEN_A\";\n\n/**\n * Error message for refresh token related errors.\n * @constant\n */\nexport const REFRESH_TOKEN_ERROR_MSG = \"ERR_TOKEN_R\";\n\n/**\n * Placeholder for unknown IP addresses.\n * @constant\n */\nexport const UNKNOWN_IP = \"unknown\";\n\n/**\n * Prefix for JWT cache keys.\n * @constant\n */\nexport const AUTH_JWT_CACHE_PREFIX = \"jwt\";\n\n/**\n * Prefix for access token cache keys.\n * @constant\n */\nexport const AUTH_ACCESS_TOKEN_PREFIX = \"access_token\";\n\n/**\n * Prefix for refresh token cache keys.\n * @constant\n */\nexport const AUTH_REFRESH_TOKEN_PREFIX = \"refresh_token\";\n\n/**\n * Prefix for brute force protection cache keys.\n * @constant\n */\nexport const BRUTEFORCE_JWT_CACHE_PREFIX = \"bruteforce\";\n\n/**\n * Generates a cache key for an access token.\n * @param accessToken - The access token.\n * @returns The generated cache key.\n */\nexport const jwtAccessTokenKey = (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n};\n\n/**\n * Generates a cache key for a refresh token.\n * @param accessToken - The access token.\n * @param refreshToken - The refresh token.\n * @returns The generated cache key.\n */\nexport const jwtRefreshTokenKey = (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n};\n\n/**\n * Generates a cache key for tracking brute force login attempts by login.\n * @param login - The user's login.\n * @returns The generated cache key.\n */\nexport const bruteForceLoginKey = (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`;\n\n/**\n * Generates a cache key for tracking brute force login attempts by IP address.\n * @param ipAddress - The IP address of the user.\n * @returns The generated cache key.\n */\nexport const bruteForceIPKey = (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`;\n\n/**\n * Abstract service class for authentication and authorization.\n * Defines the methods that must be implemented by any derived service.\n */\nexport abstract class AuthService {\n  /**\n   * Authenticate the user with the provided login payload.\n   * @param data - LoginPayload object with user login information.\n   * @returns A Promise that resolves to a JwtDto containing access and refresh tokens.\n   */\n  abstract authenticate(data: LoginPayload): Promise;\n\n  /**\n   * Invalidate the specified access token.\n   * @param accessToken - The access token to invalidate.\n   * @returns A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n   */\n  abstract invalidateToken(accessToken: string);\n\n  /**\n   * Exchange the provided refresh token for a new access token.\n   * @param refreshToken - The refresh token to exchange.\n   * @returns A Promise that resolves to a Partial containing new access and refresh tokens.\n   */\n  abstract exchangeToken(refreshToken: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestMsException.html":{"url":"classes/BadRequestMsException.html","title":"class - BadRequestMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/bad-request-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for bad requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/bad-request-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for bad requests, extending MsException.\n */\nexport class BadRequestMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.BAD_REQUEST, message || \"Bad request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicUserService.html":{"url":"injectables/BasicUserService.html","title":"injectable - BasicUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user-service-basic.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides methods to interact with the UserEntity repository.\n\n            \n\n            \n                Extends\n            \n            \n                            UserService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/user/user-service-basic.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:85\n\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:56\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:43\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:97\n\n                        \n                    \n\n\n            \n                \n                        Remove a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:70\n\n                        \n                    \n\n\n            \n                \n                        Update a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object with updated properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { User, UserService } from \"./user.types\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { USER_RELATIONS } from \"./user.constants\";\n\n/**\n * @class BasicUserService\n * Provides methods to interact with the UserEntity repository.\n */\n@Injectable()\nexport class BasicUserService extends UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRep: Repository,\n  ) {\n    super();\n  }\n\n  /**\n   * Find a user by their login.\n   * @async\n   * @param {string} login - The user's login.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findByLogin(login: string): Promise {\n    return await this.userRep.findOne({\n      where: { login, active: true },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Find a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findById(id: string): Promise {\n    return await this.userRep.findOne({\n      where: { id },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Update a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @param {User} user - The user object with updated properties.\n   * @returns {Promise} The updated user.\n   */\n  async updateById(id: string, user: User): Promise {\n    user.id = id;\n    if (user.login) {\n      delete user.login;\n    }\n    await this.userRep.save(user);\n    return await this.findById(id);\n  }\n\n  /**\n   * Create a new user.\n   * @async\n   * @param {User} user - The user object to create.\n   * @returns {Promise} The created user.\n   */\n  async create(user: User): Promise {\n    const newUser = this.userRep.create(user);\n    return await this.userRep.save(newUser);\n  }\n\n  /**\n   * Remove a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The removed user.\n   * @throws {NotFoundException} If the user with the specified ID is not found.\n   */\n  async removeById(id: string): Promise {\n    const user = await this.findById(id);\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.userRep.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides caching functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { RedisModule } from \"./redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { CacheService } from \"./cache.types\";\nimport { RedisCacheService } from \"./redis-cache.service\";\n\n/**\n * A module that provides caching functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n    LogModule,\n  ],\n  providers: [\n    {\n      provide: CacheService,\n      useClass: RedisCacheService,\n    },\n  ],\n  exports: [CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.types.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class defining methods for cache operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                del\n                            \n                            \n                                    Abstract\n                                expire\n                            \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                getBoolean\n                            \n                            \n                                    Abstract\n                                getFromPattern\n                            \n                            \n                                    Abstract\n                                getNumber\n                            \n                            \n                                    Abstract\n                                incr\n                            \n                            \n                                    Abstract\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CacheService {\n  abstract get(key: string): Promise;\n\n  abstract getNumber(key: string): Promise;\n\n  abstract getBoolean(key: string): Promise;\n\n  abstract set(\n    key: string,\n    value: string | number,\n    expiration?: number,\n  ): Promise;\n\n  abstract del(...keys: string[]): Promise;\n\n  abstract incr(key: string): Promise;\n\n  abstract expire(key: string, expiresIn: number): Promise;\n\n  abstract getFromPattern(pattern: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/captcha/captcha.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with captcha.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: CaptchaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CaptchaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: GraphicCaptchaService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { GraphicCaptchaService } from \"./graphic-captcha.service\";\nimport { CaptchaModuleOptions, CaptchaService } from \"./captcha.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n/**\n * Module for work with captcha.\n */\n@Module({})\nexport class CaptchaModule {\n  static forRoot(\n    options: CaptchaModuleOptions = { service: GraphicCaptchaService },\n  ): DynamicModule {\n    return {\n      module: CaptchaModule,\n      imports: [CacheModule, LogModule],\n      providers: [\n        {\n          provide: CaptchaService,\n          useClass: options.service,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => Promise | CaptchaService;\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: CaptchaModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: CaptchaService,\n          useFactory,\n          inject,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaRequest.html":{"url":"classes/CaptchaRequest.html","title":"class - CaptchaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for validate the CAPTCHA.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:55\n                        \n                    \n\n            \n                \n                    The data associated with the CAPTCHA request.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:49\n                        \n                    \n\n            \n                \n                    The unique identifier for the CAPTCHA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaService.html":{"url":"classes/CaptchaService.html","title":"class - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a CAPTCHA service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                generateCaptcha\n                            \n                            \n                                    Abstract\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:29\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the CAPTCHA data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:36\n                        \n                    \n\n\n            \n                \n                        Validates a CAPTCHA.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data for validate the CAPTCHA.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the validation result (true if the CAPTCHA is valid).\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores category trees\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n} from \"typeorm\";\nimport { LocalizedStringEntity } from \"../../locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../transformers/simple-json.transformer\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores category trees\n */\n@Entity(\"categories\")\n@Tree(\"nested-set\")\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  url: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @TreeParent()\n  parent: CategoryEntity;\n\n  @TreeChildren()\n  children: CategoryEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_CategoryModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/category/category.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for working with categories.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { CategoryService } from \"./category.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LogModule } from \"../log/log.module\";\n\n/**\n * A module that provides services and configurations for working with categories.\n */\n@Module({\n  imports: [LogModule, TypeOrmModule.forFeature([CategoryEntity])],\n  providers: [CategoryService],\n  exports: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryRestrictionEntity.html":{"url":"entities/CategoryRestrictionEntity.html","title":"entity - CategoryRestrictionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryRestrictionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category-restriction.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the settings for restricting access by user roles for categories\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowFor\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { CategoryEntity } from \"./category.entity\";\nimport { UserRoleEntity } from \"../../../../common/user/entity/user-role.entity\";\n\n/**\n * The entity stores the settings for restricting access by user roles for categories\n */\n@Entity(\"category_restriction\")\nexport class CategoryRestrictionEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  allowFor: UserRoleEntity[];\n\n  @ManyToOne(() => CategoryEntity, (t) => t.id)\n  category: CategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for working with tree-categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDescendantsByCodeOfRoot\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRep: TreeRepository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/category/category.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRep\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescendantsByCodeOfRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescendantsByCodeOfRoot(code: string, depth?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Get descendants of a category by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the root category.\n\n                                            \n                                        \n                                        \n                                                depth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The maximum depth for the search (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the tree of descendants of the category.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(cat: CategoryEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Sorts the children of a category by priority.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoryEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe category entity whose children need to be sorted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TreeRepository } from \"typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { CATEGORY_RELATIONS } from \"./category.constants\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\n\n/**\n * Service for working with tree-categories.\n */\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly catRep: TreeRepository,\n    @Inject(LOGGER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Get descendants of a category by its code.\n   * @param code The code of the root category.\n   * @param depth The maximum depth for the search (optional).\n   * @returns A promise that resolves to the tree of descendants of the category.\n   */\n  async getDescendantsByCodeOfRoot(code: string, depth?: number) {\n    const cat = await this.catRep.findOne({\n      where: { code },\n      relations: CATEGORY_RELATIONS,\n    });\n    const res = await this.catRep.findDescendantsTree(cat, {\n      depth,\n      relations: CATEGORY_RELATIONS,\n    });\n    res.children?.forEach((cat) => this.sort(cat));\n    this.sort(res);\n    return res;\n  }\n\n  /**\n   * Sorts the children of a category by priority.\n   * @param cat - The category entity whose children need to be sorted.\n   */\n  private sort(cat: CategoryEntity) {\n    ObjectUtils.sort(cat.children, \"priority\", false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigItem.html":{"url":"interfaces/ConfigItem.html","title":"interface - ConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration item.\nEach configuration item consists of a key and a value, both of which are strings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the configuration item.\nThis is the identifier for the configuration setting.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value of the configuration item.\nThis is the value associated with the configuration key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigItem {\n  /**\n   * The key of the configuration item.\n   * This is the identifier for the configuration setting.\n   */\n  key: string;\n\n  /**\n   * The value of the configuration item.\n   * This is the value associated with the configuration key.\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_imports\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/config/config.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with system configuration.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module for work with system configuration.\n */\n@Module({\n  imports: [LogModule, CacheModule],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService is a service responsible for managing configurations in application.\nIt reads configuration properties from .properties files and stores the values in a store for fast retrieval.\nThe service provides methods to get, set, and remove configuration properties.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatedTsOutput\n                            \n                            \n                                    Private\n                                    Readonly\n                                propertiesFiles\n                            \n                            \n                                    Private\n                                    Readonly\n                                valuesOfProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteExistingConfigTsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                generateConfigTsFiles\n                            \n                            \n                                    Private\n                                generateNamespaceWithVariables\n                            \n                            \n                                    Async\n                                getPropertiesPage\n                            \n                            \n                                    Async\n                                initWithPropertiesFiles\n                            \n                            \n                                    Private\n                                mergePropertiesContent\n                            \n                            \n                                    Private\n                                parseValue\n                            \n                            \n                                    Private\n                                    Async\n                                processAndValidatePropertiesContent\n                            \n                            \n                                    Async\n                                removeProperty\n                            \n                            \n                                    Private\n                                    Async\n                                scanForPropertiesFiles\n                            \n                            \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/config/config.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteExistingConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteExistingConfigTsFiles(directory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:290\n                        \n                    \n\n\n            \n                \n                        Deletes existing configuration TypeScript files in the specified directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe directory to scan for generated configuration files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateConfigTsFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:322\n                        \n                    \n\n\n            \n                \n                        Generates TypeScript configuration files based on the processed properties files.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateNamespaceWithVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNamespaceWithVariables(namespaceName: string, processedData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Generates a namespace with variables based on the processed data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                namespaceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the namespace.\n\n\n                                            \n                                        \n                                        \n                                                processedData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe processed data to include in the namespace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The generated namespace content as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPropertiesPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPropertiesPage(params: PageableParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Retrieves a page of configuration properties based on the provided pageable parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPageable parameters for sorting, filtering, and pagination.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to an object containing the pageable data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initWithPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    initWithPropertiesFiles(genCnfDir?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genCnfDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergePropertiesContent(mainContent: string, localContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:357\n                        \n                    \n\n\n            \n                \n                        Merges the content of the main properties file with the content of the local properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mainContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the main properties file.\n\n\n                                            \n                                        \n                                        \n                                                localContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the local properties file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The merged content.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Parses the value of a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The parsed value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processAndValidatePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndValidatePropertiesContent(filePath: string, content: string, fileNamePrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:211\n                        \n                    \n\n\n            \n                \n                        Processes and validates the content of a properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the properties file.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the properties file.\n\n\n                                            \n                                        \n                                        \n                                                fileNamePrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe prefix to use for the properties in the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the processed data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Removes a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the configuration property to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        scanForPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    scanForPropertiesFiles(directory: string, globalKpContent: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Scans the specified directory for properties files and processes them.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe directory to scan for properties files.\n\n\n                                            \n                                        \n                                        \n                                                globalKpContent\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe content of the global KP properties file, if any.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(item: ConfigItem)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the key and value of the configuration property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generatedTsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        propertiesFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        valuesOfProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  CONFIG_CACHE_PREFIX,\n  CONFIG_FILE_EXT_PATTERN,\n  FILES_ENCODING,\n  GEN_SRC_DIR,\n  KP_PROPERTIES_FILE_NAME,\n  LOCAL_PROPERTIES_FILE_NAME,\n  PROPERTIES_FILE_EXT_PATTERN,\n} from \"./config.constants\";\nimport { ConfigItem } from \"./config.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * ConfigService is a service responsible for managing configurations in application.\n * It reads configuration properties from .properties files and stores the values in a store for fast retrieval.\n * The service provides methods to get, set, and remove configuration properties.\n */\n@Injectable()\nexport class ConfigService {\n  private readonly propertiesFiles: { [path: string]: { [key: string]: any } } =\n    {};\n  private readonly valuesOfProperties: { [key: string]: any } = {};\n  private generatedTsOutput: string;\n\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {}\n\n  /**\n   * Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n   */\n  async initWithPropertiesFiles(genCnfDir?: string) {\n    this.generatedTsOutput = genCnfDir;\n    this.logger.log(`Scan project`);\n    await this.scanForPropertiesFiles(process.cwd());\n    this.logger.log(`Clean generated source dirs`);\n    await this.deleteExistingConfigTsFiles(process.cwd());\n    this.logger.log(`Clean config storage`);\n    await this.cacheService.del(CONFIG_CACHE_PREFIX + \":*\");\n    this.logger.log(`Generate config files`);\n    await this.generateConfigTsFiles();\n    for (const key in this.valuesOfProperties) {\n      await this.cacheService.set(`${key}`, this.valuesOfProperties[key]);\n    }\n    this.logger.log(`Config files was synchronize`);\n  }\n\n  /**\n   * Retrieves a page of configuration properties based on the provided pageable parameters.\n   * @param params - Pageable parameters for sorting, filtering, and pagination.\n   * @returns A promise that resolves to an object containing the pageable data.\n   */\n  async getPropertiesPage(\n    params: PageableParams,\n  ): Promise> {\n    const { limit, page, sort, order, filter } = params;\n    const propertyKeys = await this.cacheService.getFromPattern(\n      `${CONFIG_CACHE_PREFIX}:${!filter ? \"*\" : filter}`,\n    );\n    const sortedKeys = propertyKeys.sort((a, b) => {\n      if (sort && order) {\n        const aValue = a[sort] || \"\";\n        const bValue = b[sort] || \"\";\n        return order === \"ASC\"\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      return a.localeCompare(b);\n    });\n    const totalCount = sortedKeys.length;\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    const keysToRetrieve = sortedKeys.slice(start, end);\n    const propertiesWithValues: ConfigItem[] = await Promise.all(\n      keysToRetrieve.map(async (key) => {\n        const value = await this.cacheService.get(key);\n        return { key: key.replace(`${CONFIG_CACHE_PREFIX}:`, ``), value };\n      }),\n    );\n    return new PageableData(propertiesWithValues, totalCount, page, limit);\n  }\n\n  /**\n   * Sets a configuration property.\n   * @param item - An object containing the key and value of the configuration property.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async setProperty(item: ConfigItem): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${item.key}`;\n    return await this.cacheService.set(fullKey, item.value);\n  }\n\n  /**\n   * Removes a configuration property.\n   * @param key - The key of the configuration property to remove.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async removeProperty(key: string): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${key}`;\n    return await this.cacheService.del(fullKey);\n  }\n\n  /**\n   * Scans the specified directory for properties files and processes them.\n   * @param directory - The directory to scan for properties files.\n   * @param globalKpContent - The content of the global KP properties file, if any.\n   */\n  private async scanForPropertiesFiles(\n    directory: string,\n    globalKpContent: string | null = null,\n  ) {\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    if (directory === process.cwd()) {\n      for (const file of files) {\n        if (file.isFile() && file.name === KP_PROPERTIES_FILE_NAME) {\n          const kpPath = path.join(directory, file.name);\n          globalKpContent = await fs.promises.readFile(kpPath, FILES_ENCODING);\n          const localPropertiesPath = path.join(\n            directory,\n            LOCAL_PROPERTIES_FILE_NAME,\n          );\n          if (fs.existsSync(localPropertiesPath)) {\n            const localPropertiesContent = await fs.promises.readFile(\n              localPropertiesPath,\n              FILES_ENCODING,\n            );\n            globalKpContent = this.mergePropertiesContent(\n              globalKpContent,\n              localPropertiesContent,\n            );\n          }\n          break;\n        }\n      }\n    }\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        await this.scanForPropertiesFiles(fullPath, globalKpContent);\n      } else if (\n        file.isFile() &&\n        path.extname(file.name) === PROPERTIES_FILE_EXT_PATTERN\n      ) {\n        let fileContent = await fs.promises.readFile(fullPath, FILES_ENCODING);\n        const localPropertiesPath = path.join(\n          directory,\n          LOCAL_PROPERTIES_FILE_NAME,\n        );\n        if (fs.existsSync(localPropertiesPath)) {\n          const localPropertiesContent = await fs.promises.readFile(\n            localPropertiesPath,\n            FILES_ENCODING,\n          );\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            localPropertiesContent,\n          );\n        }\n        if (globalKpContent) {\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            globalKpContent,\n          );\n        }\n        const fileNamePrefix = path.basename(\n          fullPath,\n          PROPERTIES_FILE_EXT_PATTERN,\n        );\n        this.propertiesFiles[fullPath] =\n          await this.processAndValidatePropertiesContent(\n            fullPath,\n            fileContent,\n            fileNamePrefix,\n          );\n      }\n    }\n  }\n\n  /**\n   * Processes and validates the content of a properties file.\n   * @param filePath - The path to the properties file.\n   * @param content - The content of the properties file.\n   * @param fileNamePrefix - The prefix to use for the properties in the file.\n   * @returns An object containing the processed data.\n   */\n  private async processAndValidatePropertiesContent(\n    filePath: string,\n    content: string,\n    fileNamePrefix: string,\n  ) {\n    const lines = content.split(\"\\n\");\n    const processedData: { [key: string]: any } = {};\n    for (const line of lines) {\n      if (line.trim().startsWith(\"#\") || line.trim().length === 0) {\n        continue;\n      }\n      const [key, value] = line.split(\"=\");\n      let keyWithoutPrefix = key;\n      if (key.startsWith(fileNamePrefix + \".\")) {\n        keyWithoutPrefix = key.slice(fileNamePrefix.length + 1);\n      } else {\n        continue;\n      }\n      const variableName = keyWithoutPrefix\n        .split(\".\")\n        .map((part) => part.toUpperCase())\n        .join(\"_\");\n      if (!/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(variableName)) {\n        this.logger.error(`Invalid line found: \"${line}\" in file ${filePath}`);\n        throw new Error(`Invalid content in file: \"${filePath}\"`);\n      }\n      const propertyKey = `${CONFIG_CACHE_PREFIX}:${fileNamePrefix}.${keyWithoutPrefix}`;\n      processedData[variableName] = `\"${propertyKey}\"`;\n      if (!propertyKey.startsWith(\"kp.\") && !propertyKey.startsWith(\"local.\")) {\n        this.valuesOfProperties[propertyKey] = this.parseValue(value.trim());\n      }\n    }\n    return processedData;\n  }\n\n  /**\n   * Parses the value of a configuration property.\n   * @param value - The value to parse.\n   * @returns The parsed value.\n   */\n  private parseValue(value: string) {\n    let processedValue = value.trim();\n    if (processedValue === \"true\" || processedValue === \"false\") {\n      processedValue = JSON.parse(processedValue);\n    } else if (processedValue === \"null\") {\n      processedValue = null;\n    } else if (/^[-+*/\\d\\s()]*$/.test(processedValue)) {\n      try {\n        processedValue = eval(processedValue);\n      } catch (e) {\n        return processedValue;\n      }\n    }\n    return processedValue;\n  }\n\n  /**\n   * Generates a namespace with variables based on the processed data.\n   * @param namespaceName - The name of the namespace.\n   * @param processedData - The processed data to include in the namespace.\n   * @returns The generated namespace content as a string.\n   */\n  private generateNamespaceWithVariables(\n    namespaceName: string,\n    processedData: { [key: string]: string },\n  ) {\n    let generatedContent = `export namespace ${namespaceName} {\\n`;\n    for (const variableName in processedData) {\n      const processedValue = processedData[variableName];\n      generatedContent += `  export const ${variableName} = ${processedValue};\\n`; // initial value: ${this.valuesOfProperties[processedValue.substring(1,processedValue.length-1)]}\n    }\n    generatedContent += \"}\\n\";\n    return generatedContent;\n  }\n\n  /**\n   * Deletes existing configuration TypeScript files in the specified directory.\n   * @param directory - The directory to scan for generated configuration files.\n   */\n  private async deleteExistingConfigTsFiles(directory: string) {\n    if (directory === process.cwd() + \"/node_modules\") {\n      return;\n    }\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        if (file.name === GEN_SRC_DIR) {\n          const genSrcFiles = await fs.promises.readdir(fullPath, {\n            withFileTypes: true,\n          });\n          this.logger.verbose(`Read dir: ${fullPath}`);\n          for (const genSrcFile of genSrcFiles) {\n            if (\n              genSrcFile.isFile() &&\n              genSrcFile.name.endsWith(CONFIG_FILE_EXT_PATTERN)\n            ) {\n              this.logger.verbose(`Delete file: ${genSrcFile.name}`);\n              await fs.promises.unlink(path.join(fullPath, genSrcFile.name));\n            }\n          }\n        } else {\n          await this.deleteExistingConfigTsFiles(fullPath);\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates TypeScript configuration files based on the processed properties files.\n   */\n  private async generateConfigTsFiles() {\n    for (const filePath in this.propertiesFiles) {\n      if (path.basename(filePath) === LOCAL_PROPERTIES_FILE_NAME) {\n        continue;\n      }\n      const fileContent = this.propertiesFiles[filePath];\n      const dirPath = this.generatedTsOutput ?? path.dirname(filePath);\n      const genSrcPath = path.join(dirPath, GEN_SRC_DIR);\n      const configFileName = path\n        .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n        .concat(CONFIG_FILE_EXT_PATTERN);\n      const configFilePath = path.join(genSrcPath, configFileName);\n      const namespaceName =\n        path\n          .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n          .charAt(0)\n          .toUpperCase() +\n        path.basename(filePath, PROPERTIES_FILE_EXT_PATTERN).slice(1) +\n        \"Config\";\n      const generatedFileContent = this.generateNamespaceWithVariables(\n        namespaceName,\n        fileContent,\n      );\n      await fs.promises.mkdir(genSrcPath, { recursive: true });\n      await fs.promises.writeFile(configFilePath, generatedFileContent);\n      this.logger.verbose(`Generated ${configFilePath}`);\n    }\n  }\n\n  /**\n   * Merges the content of the main properties file with the content of the local properties file.\n   * @param mainContent - The content of the main properties file.\n   * @param localContent - The content of the local properties file.\n   * @returns The merged content.\n   */\n  private mergePropertiesContent(\n    mainContent: string,\n    localContent: string,\n  ): string {\n    const mainContentLines = mainContent.split(\"\\n\");\n    const localContentLines = localContent.split(\"\\n\");\n    const mergedContent = [...mainContentLines];\n    for (const localLine of localContentLines) {\n      if (localLine.trim().startsWith(\"#\") || localLine.trim().length === 0) {\n        continue;\n      }\n      const [localKey] = localLine.split(\"=\");\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbExceptionFilter.html":{"url":"classes/DbExceptionFilter.html","title":"class - DbExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/filters/db-exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception filter to handle database errors and transform them into HTTP responses.\nThis filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n\n            \n\n\n            \n                Implements\n            \n            \n                            DbExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/filters/db-exception-filter.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        QueryFailedError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from \"@nestjs/common\";\nimport { QueryFailedError } from \"typeorm\";\nimport { TypeORMError } from \"typeorm/error/TypeORMError\";\n\n/**\n * Exception filter to handle database errors and transform them into HTTP responses.\n * This filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n */\n@Catch(TypeORMError)\nexport class DbExceptionFilter implements DbExceptionFilter {\n  catch(exception: QueryFailedError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.status(502).json({ message: exception.message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryStructure.html":{"url":"interfaces/DirectoryStructure.html","title":"interface - DirectoryStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirectoryStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/utils/files.utils.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a structure of directories and files.\nThe keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        [] | DirectoryStructure\n\n                    \n                \n                        \n                            \n                                Defined in lib/shared/utils/files.utils.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as crypto from \"crypto\";\nimport { OpenMode } from \"node:fs\";\nimport { Abortable } from \"node:events\";\nimport * as path from \"path\";\n\n/**\n * Object to hold the dynamically imported file-type module.\n */\nconst fileTypeModule = {} as { lib: typeof import(\"file-type\") };\n\n/**\n * Immediately Invoked Function Expression (IIFE) to dynamically import the ES module 'file-type'.\n * @param {object} ft - The fileTypeModule object.\n */\n(async (ft) => {\n  // crutch for import ES module\n  ft.lib = await (eval('import(\"file-type\")') as Promise);\n})(fileTypeModule);\n\n/**\n * An interface representing a structure of directories and files.\n * The keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n */\ninterface DirectoryStructure {\n  [key: string]: string[] | DirectoryStructure;\n}\n\nexport namespace FilesUtils {\n  /**\n   * Gets the file type module.\n   * @returns The file type module.\n   */\n  export function fileType() {\n    return fileTypeModule.lib;\n  }\n\n  /**\n   * Generates an SHA-256 hash from a buffer.\n   * @param fileBuffer - The buffer to hash.\n   * @returns The SHA-256 hash as a hex string.\n   */\n  export function getHashFromBuffer(fileBuffer: Buffer) {\n    const hashSum = crypto.createHash(\"sha256\");\n    hashSum.update(fileBuffer);\n    return hashSum.digest(\"hex\");\n  }\n\n  /**\n   * Creates directories if they do not exist.\n   * @param directoryPath - The path of the directory to create.\n   */\n  export async function createDirectoriesIfNotExist(directoryPath: string) {\n    try {\n      await fs.promises.access(directoryPath);\n    } catch (error) {\n      await fs.promises.mkdir(directoryPath, { recursive: true });\n    }\n  }\n\n  /**\n   * Reads a file.\n   * @param path - The path of the file to read.\n   * @param options - Optional read options.\n   * @returns The file contents as a buffer.\n   */\n  export async function readFile(\n    path: string,\n    options?:\n      | ({\n          encoding?: null | undefined;\n          flag?: OpenMode | undefined;\n        } & Abortable)\n      | null,\n  ) {\n    return await fs.promises.readFile(path);\n  }\n\n  /**\n   * Recursively reads a directory and returns its structure.\n   * @param dirPath - The path of the directory to read.\n   * @returns A promise that resolves to the directory structure.\n   */\n  export async function readDirectoryRecursively(\n    dirPath: string,\n  ): Promise {\n    const result: DirectoryStructure = {};\n\n    async function readDir(\n      currentPath: string,\n      relativePath: string,\n    ): Promise {\n      const files = await fs.promises.readdir(currentPath);\n      const filePromises = files.map(async (file) => {\n        const filePath = path.join(currentPath, file);\n        const stats = await fs.promises.stat(filePath);\n        const newRelativePath = path.join(relativePath, file);\n        if (stats.isDirectory()) {\n          result[newRelativePath] = await readDir(filePath, newRelativePath);\n        } else {\n          if (!result[relativePath]) {\n            result[relativePath] = [];\n          }\n          (result[relativePath] as string[]).push(file);\n        }\n      });\n      await Promise.all(filePromises);\n      return result[relativePath] || [];\n    }\n\n    await readDir(dirPath, \"\");\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoInterceptor.html":{"url":"injectables/DtoInterceptor.html","title":"injectable - DtoInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/interceptors/dto.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializer)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/interceptors/dto.interceptor.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/interceptors/dto.interceptor.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map } from \"rxjs\";\nimport { plainToInstance } from \"class-transformer\";\n\n/**\n * @class DtoInterceptor\n * An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n * @template T - The DTO class to use for transformation.\n */\n@Injectable()\nexport class DtoInterceptor implements NestInterceptor {\n  constructor(private readonly serializer: new () => T) {}\n\n  intercept(context: ExecutionContext, next: CallHandler) {\n    return next\n      .handle()\n      .pipe(map((data) => plainToInstance(this.serializer, data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitySaveHandler.html":{"url":"interfaces/EntitySaveHandler.html","title":"interface - EntitySaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitySaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a handler for saving an entity.\nSuch handlers are triggered when entity recording occurs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, data: T, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExchangeTokenPayload.html":{"url":"classes/ExchangeTokenPayload.html","title":"class - ExchangeTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExchangeTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for token exchange payload.\nContains the token to be exchanged for a new token pair JwtDto.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:84\n                        \n                    \n\n            \n                \n                    The refresh token to be exchanged.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerAction.html":{"url":"interfaces/ExplorerAction.html","title":"interface - ExplorerAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an action in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerActionEntity.html":{"url":"entities/ExplorerActionEntity.html","title":"entity - ExplorerActionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerActionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-action.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerAction } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { Explorer } from \"../explorer.constants\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\n\n/**\n * The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n */\n@Entity(\"explorer_actions\")\nexport class ExplorerActionEntity implements ExplorerAction {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumn.html":{"url":"interfaces/ExplorerColumn.html","title":"interface - ExplorerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a column in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            named\n                                        \n                                \n                                \n                                        \n                                            objectEnabled\n                                        \n                                \n                                \n                                        \n                                            objectPriority\n                                        \n                                \n                                \n                                        \n                                            objectRenderer\n                                        \n                                \n                                \n                                        \n                                            objectVisibility\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            referencedEntityName\n                                        \n                                \n                                \n                                        \n                                            referencedTableName\n                                        \n                                \n                                \n                                        \n                                            sectionEnabled\n                                        \n                                \n                                \n                                        \n                                            sectionPriority\n                                        \n                                \n                                \n                                        \n                                            sectionRenderer\n                                        \n                                \n                                \n                                        \n                                            sectionVisibility\n                                        \n                                \n                                \n                                        \n                                            tab\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unique\n                                        \n                                \n                                \n                                        \n                                            virtual\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        named\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        named:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedEntityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedEntityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedTableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedTableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ExplorerTab\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTab\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnDataType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnDataType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnEntity.html":{"url":"entities/ExplorerColumnEntity.html","title":"entity - ExplorerColumnEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the metadata of the field (columns in the database table)\nand stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                multiple\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                named\n                            \n                            \n                                    \n                                    \n                                objectEnabled\n                            \n                            \n                                    \n                                    \n                                objectPriority\n                            \n                            \n                                    \n                                    \n                                objectRenderer\n                            \n                            \n                                    \n                                objectRendererParams\n                            \n                            \n                                    \n                                    \n                                objectVisibility\n                            \n                            \n                                    \n                                    \n                                primary\n                            \n                            \n                                    \n                                    \n                                property\n                            \n                            \n                                    \n                                    \n                                referencedEntityName\n                            \n                            \n                                    \n                                    \n                                referencedTableName\n                            \n                            \n                                    \n                                    \n                                sectionEnabled\n                            \n                            \n                                    \n                                    \n                                sectionPriority\n                            \n                            \n                                    \n                                    \n                                sectionRenderer\n                            \n                            \n                                    \n                                sectionRendererParams\n                            \n                            \n                                    \n                                    \n                                sectionVisibility\n                            \n                            \n                                    \n                                tab\n                            \n                            \n                                    \n                                target\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                unique\n                            \n                            \n                                    \n                                    \n                                virtual\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        named\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'object_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'object_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_entity_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedTableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_table_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'section_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sectionRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'section_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTabEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        virtual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\nimport { ExplorerColumn } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { ExplorerColumnRendererEntity } from \"./explorer-column-renderer.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTabEntity } from \"./explorer-tab.entity\";\n\n/**\n * The entity stores the metadata of the field (columns in the database table)\n * and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_columns\")\nexport class ExplorerColumnEntity implements ExplorerColumn {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  property: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n\n  @Column(\"text\", { nullable: false })\n  type: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  virtual: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  primary: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  unique: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  multiple: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  named: boolean;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_entity_name\", nullable: true })\n  referencedEntityName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_table_name\", nullable: true })\n  referencedTableName: string;\n\n  @Index()\n  @Column(\"int\", { name: \"section_priority\", default: 0, unsigned: true })\n  sectionPriority: number;\n\n  @Index()\n  @Column(\"int\", { name: \"object_priority\", default: 0, unsigned: true })\n  objectPriority: number;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_enabled\", default: true })\n  sectionEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_enabled\", default: true })\n  objectEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_visibility\", default: true })\n  sectionVisibility: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_visibility\", default: true })\n  objectVisibility: boolean;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  sectionRenderer: ExplorerColumnRendererEntity;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  objectRenderer: ExplorerColumnRendererEntity;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"section_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  sectionRendererParams: object;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"object_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  objectRendererParams: object;\n\n  @ManyToOne(() => ExplorerTabEntity, (t) => t.id)\n  tab: ExplorerTabEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumnRenderer.html":{"url":"interfaces/ExplorerColumnRenderer.html","title":"interface - ExplorerColumnRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumnRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a renderer for an explorer column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnRendererEntity.html":{"url":"entities/ExplorerColumnRendererEntity.html","title":"entity - ExplorerColumnRendererEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnRendererEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column-renderer.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnRenderer } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { Explorer } from \"../explorer.constants\";\n\n/**\n * An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n */\n@Entity(\"explorer_column_renderers\")\nexport class ExplorerColumnRendererEntity implements ExplorerColumnRenderer {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerModule.html":{"url":"modules/ExplorerModule.html","title":"module - ExplorerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/explorer/explorer.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for exploring and analyzing the database schema and relationships.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: ExplorerModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExplorerModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicExplorerService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the module and analyzes the database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module, OnModuleInit } from \"@nestjs/common\";\nimport { BasicExplorerService } from \"./basic-explorer.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ExplorerTargetEntity } from \"./entity/explorer-target.entity\";\nimport { ExplorerColumnEntity } from \"./entity/explorer-column.entity\";\nimport { ExplorerModuleOptions, ExplorerService } from \"./explorer.types\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n/**\n * Module for exploring and analyzing the database schema and relationships.\n */\n@Module({})\nexport class ExplorerModule implements OnModuleInit {\n  static forRoot(\n    options: ExplorerModuleOptions = {\n      service: BasicExplorerService,\n    },\n  ): DynamicModule {\n    return {\n      module: ExplorerModule,\n      imports: [\n        TypeOrmModule.forFeature([ExplorerTargetEntity, ExplorerColumnEntity]),\n        LogModule,\n      ],\n      providers: [\n        {\n          provide: ExplorerService,\n          useClass: options.service,\n        },\n      ],\n      exports: [ExplorerService],\n    };\n  }\n\n  constructor(private readonly service: ExplorerService) {}\n\n  /**\n   * Initializes the module and analyzes the database.\n   */\n  async onModuleInit() {\n    await this.service.analyzeDatabase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerService.html":{"url":"classes/ExplorerService.html","title":"class - ExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing an explorer service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                analyzeDatabase\n                            \n                            \n                                    Abstract\n                                changeTarget\n                            \n                            \n                                    Abstract\n                                getEntityData\n                            \n                            \n                                    Abstract\n                                getPageableEntityData\n                            \n                            \n                                    Abstract\n                                getTargetData\n                            \n                            \n                                    Abstract\n                                getTargetList\n                            \n                            \n                                    Abstract\n                                removeEntity\n                            \n                            \n                                    Abstract\n                                saveEntityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        analyzeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:176\n                        \n                    \n\n\n            \n                \n                        Analyzes the database schema and relationships.\nFill data for explorer tables based on that analysis.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        changeTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:254\n                        \n                    \n\n\n            \n                \n                        Changes the target data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the target entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the changed target entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityData(target: string, rowId: string | number, maxDepth?: number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:225\n                        \n                    \n\n\n            \n                \n                        Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                rowId\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the row to fetch.\n\n\n                                            \n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe maximum depth of relations to fetch. Defaults to Infinity.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the entity object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getPageableEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPageableEntityData(target: string, params?: PageableParams, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:185\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated entity data with relations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity or table.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional object containing pageable parameters.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a PageableData object containing the paginated results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetData(target: string, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:238\n                        \n                    \n\n\n            \n                \n                        Retrieves target data for the specified target entity name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the TargetData object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:247\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of all registered targets with their item counts.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of ExplorerTarget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string | number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:211\n                        \n                    \n\n\n            \n                \n                        Removes an entity by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the entity-target.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the entity to be removed.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the removed entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        saveEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntityData(target: string, entity: T, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:198\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Saves or updates an entity, including its nested entities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity object to be saved or updated.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the saved or updated entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTab.html":{"url":"interfaces/ExplorerTab.html","title":"interface - ExplorerTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a tab in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTabEntity.html":{"url":"entities/ExplorerTabEntity.html","title":"entity - ExplorerTabEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTabEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-tab.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the tabbed display parameters in the entity editing interface.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTab } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\n\n/**\n * The entity stores the tabbed display parameters in the entity editing interface.\n */\n@Entity(\"explorer_tabs\")\nexport class ExplorerTabEntity implements ExplorerTab {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  size: object;\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTarget.html":{"url":"interfaces/ExplorerTarget.html","title":"interface - ExplorerTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            canRead\n                                        \n                                \n                                \n                                        \n                                            canWrite\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            defaultActionCreate\n                                        \n                                \n                                \n                                        \n                                            defaultActionDelete\n                                        \n                                \n                                \n                                        \n                                            defaultActionDuplicate\n                                        \n                                \n                                \n                                        \n                                            defaultActionSave\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tableName\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ExplorerAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerAction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRead:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canWrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canWrite:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         ExplorerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionSave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTargetEntity.html":{"url":"entities/ExplorerTargetEntity.html","title":"entity - ExplorerTargetEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTargetEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-target.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores a detailed description of the entity (tables in the database) in the form of an object\nwith metadata and stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actions\n                            \n                            \n                                    \n                                    \n                                alias\n                            \n                            \n                                    \n                                    \n                                canRead\n                            \n                            \n                                    \n                                    \n                                canWrite\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                defaultActionCreate\n                            \n                            \n                                    \n                                    \n                                defaultActionDelete\n                            \n                            \n                                    \n                                    \n                                defaultActionDuplicate\n                            \n                            \n                                    \n                                    \n                                defaultActionSave\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tableName\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerAction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.target, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_create', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_delete', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_duplicate', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_save', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {name: 'table_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnEntity } from \"./explorer-column.entity\";\nimport { ExplorerAction, ExplorerTarget } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { ExplorerActionEntity } from \"./explorer-action.entity\";\nimport { UserRoleEntity } from \"../../user/entity/user-role.entity\";\n\n/**\n * The entity stores a detailed description of the entity (tables in the database) in the form of an object\n * with metadata and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_targets\")\nexport class ExplorerTargetEntity implements ExplorerTarget {\n  @PrimaryColumn(\"varchar\")\n  target: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { name: \"table_name\", nullable: false })\n  tableName: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  alias: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @OneToMany(() => ExplorerColumnEntity, (c) => c.target, { cascade: true })\n  columns: ExplorerColumnEntity[];\n\n  @ManyToMany(() => ExplorerActionEntity)\n  @JoinTable()\n  actions: ExplorerAction[];\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_create\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionCreate: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_save\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionSave: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_delete\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDelete: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_duplicate\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDuplicate: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canRead: UserRoleEntity[];\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canWrite: UserRoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            preview\n                                        \n                                \n                                \n                                        \n                                            public\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preview:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores data about uploaded files\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                preview\n                            \n                            \n                                    \n                                public\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { File } from \"../file.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { FileMetadataEntity } from \"./file-metadata.entity\";\n\n/**\n * The entity stores data about uploaded files\n */\n@Entity(\"files\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class FileEntity implements File {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"varchar\", { nullable: true })\n  path: string;\n\n  @Column(\"boolean\", { default: false })\n  public: boolean;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  preview: MediaEntity;\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileManager.html":{"url":"classes/FileManager.html","title":"class - FileManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateFile\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getFilePath\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic: boolean, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMd.html":{"url":"classes/FileMd.html","title":"class - FileMd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file metadata service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFileMetadataEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            exif\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            gps\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            icc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exif:         ExifFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExifFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gps:         GpsFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GpsFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icc:         IccFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IccFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         ImageFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         VideoFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileMetadataEntity.html":{"url":"entities/FileMetadataEntity.html","title":"entity - FileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the basic metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                audio\n                            \n                            \n                                    \n                                    \n                                exif\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                gps\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                icc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                mime\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExifFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IccFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { FileMetadata } from \"../file.types\";\nimport { ImageFileMetadataEntity } from \"./image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./gps-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./icc-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./exif-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./video-file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./audio-file-metadata.entity\";\n\n/**\n * The entity stores the basic metadata of the file\n */\n@Entity(\"file_metadata\")\nexport class FileMetadataEntity implements FileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"varchar\", { nullable: true })\n  mime: string;\n\n  @Column(\"varchar\", { nullable: true })\n  ext: string;\n\n  @Column(\"varchar\", { nullable: true })\n  hash: string;\n\n  @OneToOne(() => ImageFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  image: ImageFileMetadataEntity;\n\n  @OneToOne(() => GpsFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  gps: GpsFileMetadataEntity;\n\n  @OneToOne(() => IccFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  icc: IccFileMetadataEntity;\n\n  @OneToOne(() => ExifFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  exif: ExifFileMetadataEntity;\n\n  @OneToOne(() => AudioFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  audio: AudioFileMetadataEntity;\n\n  @OneToOne(() => VideoFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  video: VideoFileMetadataEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileMetadataService.html":{"url":"injectables/FileMetadataService.html","title":"injectable - FileMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file-metadata.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing file metadata, including creation and setting metadata properties.\n\n            \n\n            \n                Extends\n            \n            \n                            FileMd\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFileMetadataEntity\n                            \n                            \n                                    Private\n                                    Async\n                                setAudioMd\n                            \n                            \n                                    Private\n                                setImageMd\n                            \n                            \n                                    Private\n                                    Async\n                                setVideoMd\n                            \n                            \n                                    Private\n                                trimProperties\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileMd\n\n                        \n                    \n                    \n                        \n                                Defined in         FileMd:45\n\n                        \n                    \n\n\n            \n                \n                        Creates a FileMetadataEntity for the given buffer and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBuffer containing the file data.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional file path for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileMetadataEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setAudioMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAudioMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets audio metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the audio data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Sets image metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the image data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setVideoMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setVideoMd(md: FileMetadataEntity, filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Sets video metadata for the given FileMetadataEntity and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file path for the video file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        trimProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    trimProperties(obj: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:72\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Trims properties of an object, removing empty or invalid values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to trim.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                The trimmed object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { parseBuffer } from \"music-metadata\";\nimport * as ExifReader from \"exifreader\";\nimport * as ffprobe from \"ffprobe\";\nimport * as ffprobeStatic from \"ffprobe-static\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileMd } from \"./file.constants\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./entity/audio-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./entity/video-file-metadata.entity\";\nimport { ImageFileMetadataEntity } from \"./entity/image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./entity/gps-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./entity/exif-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./entity/icc-file-metadata.entity\";\nimport getHashFromBuffer = FilesUtils.getHashFromBuffer;\nimport fileType = FilesUtils.fileType;\n\n/**\n * Service for managing file metadata, including creation and setting metadata properties.\n */\n@Injectable()\nexport class FileMetadataService extends FileMd {\n  /**\n   * Creates a FileMetadataEntity for the given buffer and file path.\n   * @param buf - Buffer containing the file data.\n   * @param filePath - Optional file path for the file.\n   * @returns A promise that resolves to the created FileMetadataEntity.\n   */\n  async createFileMetadataEntity(buf: Buffer, filePath?: string) {\n    const fileTypeData = await fileType().fileTypeFromBuffer(buf);\n    const md = new FileMetadataEntity();\n    md.hash = getHashFromBuffer(buf);\n    if (fileTypeData) {\n      md.mime = fileTypeData.mime;\n      md.ext = fileTypeData.ext;\n    } else {\n      return md;\n    }\n    try {\n      if (md.mime.startsWith(\"image\")) {\n        this.setImageMd(md, buf);\n      } else if (md.mime.startsWith(\"audio\")) {\n        await this.setAudioMd(md, buf);\n      } else if (md.mime.startsWith(\"video\")) {\n        await this.setVideoMd(md, filePath);\n      }\n    } catch (e) {}\n    return this.trimProperties(md);\n  }\n\n  /**\n   * Trims properties of an object, removing empty or invalid values.\n   * @param obj - The object to trim.\n   * @returns The trimmed object.\n   */\n  private trimProperties(obj: T): T {\n    if (typeof obj === \"string\") {\n      return obj.trim() === \"\" || obj.indexOf(\"\") !== -1\n        ? undefined\n        : (obj.trim() as T);\n    } else if (Array.isArray(obj)) {\n      return obj.map(this.trimProperties) as T;\n    } else if (typeof obj === \"object\") {\n      if (obj instanceof Date) {\n        return obj as T;\n      }\n      const result: Record = {};\n      for (const key in obj) {\n        const value = this.trimProperties(obj[key]);\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      }\n      return result as T;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Sets video metadata for the given FileMetadataEntity and file path.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param filePath - The file path for the video file.\n   */\n  private async setVideoMd(md: FileMetadataEntity, filePath: string) {\n    if (filePath) {\n      const ffProbeMd = await ffprobe(filePath, { path: ffprobeStatic.path });\n      if (ffProbeMd) {\n        const audioMd = ffProbeMd.streams.find((v) => v.codec_type === \"audio\");\n        if (audioMd) {\n          md.audio = new AudioFileMetadataEntity();\n          md.audio.container = audioMd.codec_name?.toUpperCase();\n          md.audio.codec = audioMd.codec_long_name;\n          md.audio.duration = parseFloat(audioMd.duration || 0);\n          md.audio.numberOfChannels = audioMd.channels;\n          md.audio.bitrate = audioMd.bit_rate;\n        }\n        const videoMd = ffProbeMd.streams.find((v) => v.codec_type === \"video\");\n        if (videoMd) {\n          md.video = new VideoFileMetadataEntity();\n          md.video.codec = videoMd.codec_name?.toUpperCase();\n          md.video.container = videoMd.codec_long_name;\n          md.video.width = videoMd.width;\n          md.video.height = videoMd.height;\n          md.video.bitrate = videoMd.bit_rate;\n          md.video.duration = parseFloat(videoMd.duration || 0);\n          md.video.sampleAspectRatio = videoMd.sample_aspect_ratio;\n          md.video.displayAspectRatio = videoMd.display_aspect_ratio;\n          md.video.colorRange = videoMd.color_range;\n          md.video.colorSpace = videoMd.color_space;\n          md.video.frameRate = videoMd.r_frame_rate;\n          md.video.rotate = videoMd.tags?.rotate;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets audio metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the audio data.\n   */\n  private async setAudioMd(md: FileMetadataEntity, buf: Buffer) {\n    const musicMd = await parseBuffer(buf);\n    if (!musicMd) {\n      return;\n    }\n    md.audio = new AudioFileMetadataEntity();\n    md.audio.container = musicMd.format.container;\n    md.audio.codec = musicMd.format.codec;\n    md.audio.sampleRate = musicMd.format.sampleRate;\n    md.audio.numberOfChannels = musicMd.format.numberOfChannels;\n    md.audio.bitrate = musicMd.format.bitrate;\n    md.audio.codecProfile = musicMd.format.codecProfile;\n    md.audio.tool = musicMd.format.tool;\n    md.audio.duration = musicMd.format.duration;\n    md.audio.title = musicMd.common.title;\n    md.audio.album = musicMd.common.album;\n    md.audio.artist = musicMd.common.artists?.join(\", \");\n    md.audio.year = musicMd.common.year;\n    md.audio.genre = musicMd.common.genre?.join(\", \");\n    md.audio.label = musicMd.common.label?.join(\", \");\n  }\n\n  /**\n   * Sets image metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the image data.\n   */\n  private setImageMd(md: FileMetadataEntity, buf: Buffer) {\n    const exifData = ExifReader.load(buf, {\n      expanded: true,\n      includeUnknown: true,\n    });\n    if (!exifData) {\n      return;\n    }\n    md.image = new ImageFileMetadataEntity();\n    md.image.bps = exifData.file[\"Bits Per Sample\"]?.value;\n    md.image.height = exifData.file[\"Image Height\"]?.value;\n    md.image.width = exifData.file[\"Image Width\"]?.value;\n    md.image.colorComponents = exifData.file[\"Color Components\"]?.value;\n    md.image.subsampling = exifData.file[\"Subsampling\"]?.description;\n    if (exifData.png) {\n      md.image.height = exifData.png[\"Image Height\"]?.value;\n      md.image.width = exifData.png[\"Image Width\"]?.value;\n      md.image.bitDepth = exifData.png[\"Bit Depth\"]?.value;\n      md.image.colorType = exifData.png[\"Color Type\"]?.description;\n      md.image.compression = exifData.png[\"Compression\"]?.description;\n      md.image.filter = exifData.png[\"Filter\"]?.description;\n      md.image.interlace = exifData.png[\"Interlace\"]?.description;\n    }\n    if (exifData.gps) {\n      md.gps = new GpsFileMetadataEntity();\n      md.gps.altitude = exifData.gps?.Altitude;\n      md.gps.longitude = exifData.gps?.Longitude;\n      md.gps.latitude = exifData.gps?.Latitude;\n    }\n    if (exifData.icc) {\n      md.icc = new IccFileMetadataEntity();\n      md.icc.profileVersion = exifData.icc[\"Profile Version\"]?.description;\n      md.icc.profileClassName =\n        exifData.icc[\"Profile/Device class\"]?.description;\n      md.icc.profileClassValue = exifData.icc[\"Profile/Device class\"]?.value;\n      md.icc.connectionSpace = exifData.icc[\"Connection Space\"]?.description;\n      md.icc.iccProfileDate = new Date(exifData.icc[\"ICC Profile Date\"]?.value);\n      if (exifData.icc[\"ICC Profile Date\"]?.value) {\n        md.image.dateTime = md.icc.iccProfileDate;\n      }\n      md.icc.iccSignature = exifData.icc[\"ICC Signature\"]?.description;\n      md.icc.primaryPlatform = exifData.icc[\"Primary Platform\"]?.description;\n      md.icc.deviceManufacturer =\n        exifData.icc[\"Device Manufacturer\"]?.description;\n      md.icc.deviceModelNumber =\n        exifData.icc[\"Device Model Number\"]?.description;\n      md.icc.renderingIntentName =\n        exifData.icc[\"Rendering Intent\"]?.description;\n      md.icc.renderingIntentValue = exifData.icc[\"Rendering Intent\"]?.value;\n      md.icc.profileCreator = exifData.icc[\"Profile Creator\"]?.description;\n      md.icc.iccDescription = exifData.icc[\"ICC Description\"]?.description;\n      md.icc.iccCopyright = exifData.icc[\"ICC Copyright\"]?.description;\n    }\n    if (exifData.exif) {\n      md.exif = new ExifFileMetadataEntity();\n      md.exif.make = exifData.exif.Make?.description;\n      md.exif.model = exifData.exif.Model?.description;\n      md.exif.orientation = exifData.exif.Orientation?.description;\n      md.exif.resolutionX = exifData.exif.XResolution?.description;\n      md.exif.resolutionY = exifData.exif.YResolution?.description;\n      md.exif.resolutionUnit = exifData.exif.ResolutionUnit?.description;\n      md.exif.software = exifData.exif.Software?.description;\n      md.exif.ycbCrPositioning = exifData.exif.YCbCrPositioning?.description;\n      md.exif.exifIfdPointer = exifData.exif[\"Exif IFD Pointer\"]?.description;\n      md.exif.gpsInfoIfdPointer =\n        exifData.exif[\"GPS Info IFD Pointer\"]?.description;\n      md.exif.exposureTime = exifData.exif.ExposureTime?.description;\n      md.exif.fNumber = exifData.exif.FNumber?.description;\n      md.exif.exposureProgram = exifData.exif.ExposureProgram?.description;\n      md.exif.isoSpeedRatings = exifData.exif.ISOSpeedRatings?.description;\n      md.exif.exifVersion = exifData.exif.ExifVersion?.description;\n      md.exif.offsetTime = exifData.exif.OffsetTime?.description;\n      md.exif.shutterSpeedValue = exifData.exif.ShutterSpeedValue?.description;\n      md.exif.aperture = exifData.exif.ApertureValue?.description;\n      md.exif.brightness = exifData.exif.BrightnessValue?.description;\n      md.exif.exposureBias = exifData.exif.ExposureBiasValue?.description;\n      md.exif.maxAperture = exifData.exif.MaxApertureValue?.description;\n      md.exif.subjectDistance = exifData.exif.SubjectDistance?.description;\n      md.exif.meteringMode = exifData.exif.MeteringMode?.description;\n      md.exif.flash = exifData.exif.Flash?.description;\n      md.exif.focalLength = exifData.exif.FocalLength?.description;\n      md.exif.flashpixVersion = exifData.exif.FlashpixVersion?.description;\n      md.exif.colorSpace = exifData.exif.ColorSpace?.description;\n      md.exif.pixelXDimension = exifData.exif.PixelXDimension?.description;\n      md.exif.pixelYDimension = exifData.exif.PixelYDimension?.description;\n      md.exif.interoperabilityIfdPointer =\n        exifData.exif[\"Interoperability IFD Pointer\"]?.description;\n      md.exif.sensingMethod = exifData.exif.SensingMethod?.description;\n      md.exif.sceneType = exifData.exif.SceneType?.description;\n      md.exif.customRendered = exifData.exif.CustomRendered?.description;\n      md.exif.exposureMode = exifData.exif.ExposureMode?.description;\n      md.exif.whiteBalance = exifData.exif.WhiteBalance?.description;\n      md.exif.digitalZoomRatio = exifData.exif.DigitalZoomRatio?.description;\n      md.exif.sceneCaptureType = exifData.exif.SceneCaptureType?.description;\n      md.exif.contrast = exifData.exif.Contrast?.description;\n      md.exif.saturation = exifData.exif.Saturation?.description;\n      md.exif.sharpness = exifData.exif.Sharpness?.description;\n      md.exif.subjectDistanceRange =\n        exifData.exif.SubjectDistanceRange?.description;\n      md.exif.lensMake = exifData.exif.LensMake?.description;\n      md.exif.lensModel = exifData.exif.LensModel?.description;\n      md.exif.compositeImage = exifData.exif[\"CompositeImage\"]?.description;\n      md.exif.interoperabilityIndex =\n        exifData.exif.InteroperabilityIndex?.description;\n      md.exif.interoperabilityVersion =\n        exifData.exif[\"InteroperabilityVersion\"]?.description;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/file/file.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing files.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FileModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.module.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FileModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { FileService } from \"./file.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport { FileModuleOptions } from \"./file.types\";\nimport { FileMetadataService } from \"./file-metadata.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Module for managing files.\n */\n@Module({})\nexport class FileModule {\n  static forRoot(\n    options: FileModuleOptions = {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    },\n  ): DynamicModule {\n    return {\n      module: FileModule,\n      imports: [TypeOrmModule.forFeature([FileEntity]), LogModule, CacheModule],\n      providers: [\n        {\n          provide: FileManager,\n          useClass: options.fileManager,\n        },\n        {\n          provide: FileMd,\n          useClass: options.fileMd,\n        },\n      ],\n      exports: [FileManager, FileMd],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing files, including uploading, finding, and removing files.\n\n            \n\n            \n                Extends\n            \n            \n                            FileManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBasicFindQb\n                            \n                            \n                                    Private\n                                    Async\n                                createFileDirectory\n                            \n                            \n                                    Private\n                                    Async\n                                createFileEntity\n                            \n                            \n                                    Async\n                                createOrUpdateFile\n                            \n                            \n                                    Async\n                                findByCode\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                findPrivateById\n                            \n                            \n                                    Async\n                                findPublicById\n                            \n                            \n                                    Async\n                                getFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                getPrivateDir\n                            \n                            \n                                    Private\n                                    Async\n                                getPublicDir\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, fileRep: Repository, cacheService: CacheService, metadataService: FileMd)\n                    \n                \n                        \n                            \n                                Defined in lib/common/file/file.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataService\n                                                  \n                                                        \n                                                                        FileMd\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBasicFindQb\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBasicFindQb()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a query builder for finding files with their related entities.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A query builder instance for finding files.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileDirectory(isPublic: boolean, entityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a file directory for the specified public/private status and entity ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the directory is for public files (true) or private files (false).\n\n\n                                            \n                                        \n                                        \n                                                entityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity ID to use as the directory name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the created directory path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileEntity(isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a new FileEntity with the specified public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:66\n\n                        \n                    \n\n\n            \n                \n                        Uploads a file and saves it to the specified directory (public or private).\nAlso creates a FileEntity and saves the file's metadata in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nBuffer of file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nfile extension (based of file name).\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSpecific identification code for file entity.\n\n\n                                            \n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nID of file entity for patch.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nname for file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:148\n\n                        \n                    \n\n\n            \n                \n                        Finds a file entity by code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number, isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:131\n\n                        \n                    \n\n\n            \n                \n                        Private helper method to find a file by its ID and public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file is public (true) or private (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:168\n\n                        \n                    \n\n\n            \n                \n                        Finds a private file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:159\n\n                        \n                    \n\n\n            \n                \n                        Finds a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:177\n\n                        \n                    \n\n\n            \n                \n                        Constructs the full file path for the given File object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA File object containing the file's metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The full file path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPrivateDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:292\n                        \n                    \n\n\n            \n                \n                        Retrieves the private directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized private directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPublicDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:283\n                        \n                    \n\n\n            \n                \n                        Retrieves the public directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized public directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:187\n\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID and deletes its corresponding directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed FileEntity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { File } from \"./file.types\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileConfig } from \"../../../gen-src/file.config\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport PRIVATE_DIR = FileConfig.PRIVATE_DIR;\nimport PUBLIC_DIR = FileConfig.PUBLIC_DIR;\nimport createDirectoriesIfNotExist = FilesUtils.createDirectoriesIfNotExist;\n\n/**\n * Service for managing files, including uploading, finding, and removing files.\n */\n@Injectable()\nexport class FileService extends FileManager {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectRepository(FileEntity)\n    private readonly fileRep: Repository,\n    private readonly cacheService: CacheService,\n    private readonly metadataService: FileMd,\n  ) {\n    super();\n  }\n\n  /**\n   * Uploads a file and saves it to the specified directory (public or private).\n   * Also creates a FileEntity and saves the file's metadata in the database.\n   * @param file - Buffer of file.\n   * @param extension - file extension (based of file name).\n   * @param isPublic - A boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n   * @param code - Specific identification code for file entity.\n   * @param existedEntityId - ID of file entity for patch.\n   * @param name - name for file entity.\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  async createOrUpdateFile(\n    file: Buffer,\n    extension = \"\",\n    isPublic = true,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise {\n    let entity: FileEntity = undefined;\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (existedEntityId) {\n        entity = await this.findFileById(existedEntityId, isPublic);\n        if (!entity) {\n          throw new BadRequestException(\n            `Cannot patch file with ID ${existedEntityId}, because than not exists`,\n          );\n        }\n        const dir = path.join(\n          !entity.public\n            ? await this.getPrivateDir()\n            : await this.getPublicDir(),\n          entity.id.toString(),\n        );\n        await fs.promises\n          .rm(dir, { recursive: true, force: true })\n          .catch((err) => {\n            throw new InternalServerErrorException(\n              `Failed to delete directory: ${dir}`,\n              err,\n            );\n          });\n      } else {\n        entity = await this.createFileEntity(isPublic);\n      }\n      const outputPath = await this.createFileDirectory(\n        entity.public,\n        entity.id.toString(),\n      );\n      const fileName =\n        entity.id.toString() + (extension ? `.${extension}` : extension);\n      entity.size = file.length;\n      entity.path = fileName;\n      entity.name = name;\n      entity.code = code;\n      await fs.promises.writeFile(`${outputPath}/${fileName}`, file);\n      if (!existedEntityId) {\n        entity.metadata = await this.metadataService.createFileMetadataEntity(\n          file,\n          `${outputPath}/${fileName}`,\n        );\n      }\n      await transactionManager.save(entity);\n    });\n    this.logger.log(\n      `${!existedEntityId ? `Created` : `Updated`} file with ID ${entity.id}`,\n    );\n    return entity;\n  }\n\n  /**\n   * Private helper method to find a file by its ID and public/private status.\n   * @param id - The ID of the file to find.\n   * @param isPublic - A boolean flag indicating if the file is public (true) or private (false).\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findFileById(id: number, isPublic: boolean = undefined) {\n    const qb = this.createBasicFindQb().where(\"file.id = :id\", { id });\n    if (isPublic !== undefined) {\n      qb.andWhere(`file.public = :isPublic`, { isPublic });\n    }\n    const entity = await qb.getOne();\n    if (!entity) {\n      throw new NotFoundException(`File with ID ${id} not found`);\n    }\n    return entity;\n  }\n\n  /**\n   * Finds a file entity by code.\n   * @param code - The code of the file entity.\n   * @returns The found file entity.\n   */\n  async findByCode(code: string): Promise {\n    return await this.createBasicFindQb()\n      .where(\"file.code = :code\", { code })\n      .getOne();\n  }\n\n  /**\n   * Finds a public file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPublicById(id: number): Promise {\n    return this.findFileById(id, true);\n  }\n\n  /**\n   * Finds a private file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPrivateById(id: number): Promise {\n    return this.findFileById(id);\n  }\n\n  /**\n   * Constructs the full file path for the given File object.\n   * @param file - A File object containing the file's metadata.\n   * @returns The full file path as a string.\n   */\n  async getFilePath(file: File): Promise {\n    const filePath = `${!file.public ? await this.getPrivateDir() : await this.getPublicDir()}/${file.id}/`;\n    return filePath + file.path;\n  }\n\n  /**\n   * Removes a file by its ID and deletes its corresponding directory.\n   * @param id - The ID of the file to remove.\n   * @returns A promise that resolves to the removed FileEntity.\n   */\n  async remove(id: number): Promise {\n    const file = await this.findFileById(id);\n    const dir = path.join(\n      !file.public ? await this.getPrivateDir() : await this.getPublicDir(),\n      file.id.toString(),\n    );\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (file.metadata) {\n        if (file.metadata.image) {\n          await transactionManager.remove(file.metadata.image);\n        }\n        if (file.metadata.gps) {\n          await transactionManager.remove(file.metadata.gps);\n        }\n        if (file.metadata.audio) {\n          await transactionManager.remove(file.metadata.audio);\n        }\n        if (file.metadata.video) {\n          await transactionManager.remove(file.metadata.video);\n        }\n      }\n      await transactionManager.remove(file);\n      await fs.promises\n        .rm(dir, { recursive: true, force: true })\n        .catch((err) => {\n          throw new InternalServerErrorException(\n            `Failed to delete directory: ${dir}`,\n            err,\n          );\n        });\n    });\n    this.logger.log(`File with ID ${id} removed`);\n    return file;\n  }\n\n  /**\n   * Private helper method to create a query builder for finding files with their related entities.\n   * @returns A query builder instance for finding files.\n   */\n  private createBasicFindQb() {\n    return this.fileRep\n      .createQueryBuilder(\"file\")\n      .leftJoinAndSelect(\"file.icon\", \"icon\")\n      .leftJoinAndSelect(\"file.metadata\", \"metadata\")\n      .leftJoinAndSelect(\"metadata.gps\", \"metaGps\")\n      .leftJoinAndSelect(\"metadata.image\", \"metaImage\")\n      .leftJoinAndSelect(\"metadata.audio\", \"metaAudio\")\n      .leftJoinAndSelect(\"metadata.video\", \"metaVideo\")\n      .leftJoinAndSelect(\"icon.name\", \"iconName\")\n      .leftJoinAndSelect(\"iconName.lang\", \"iconLang\")\n      .leftJoinAndSelect(\"icon.files\", \"iconFiles\")\n      .leftJoinAndSelect(\"iconFiles.format\", \"iconFilesFormat\")\n      .leftJoinAndSelect(\"icon.type\", \"iconType\")\n      .leftJoinAndSelect(\"iconType.ext\", \"iconTypeExt\")\n      .leftJoinAndSelect(\"file.preview\", \"preview\")\n      .leftJoinAndSelect(\"preview.name\", \"previewName\")\n      .leftJoinAndSelect(\"previewName.lang\", \"previewLang\")\n      .leftJoinAndSelect(\"preview.files\", \"previewFiles\")\n      .leftJoinAndSelect(\"previewFiles.format\", \"previewFilesFormat\")\n      .leftJoinAndSelect(\"preview.type\", \"previewType\")\n      .leftJoinAndSelect(\"previewType.ext\", \"previewTypeExt\");\n  }\n\n  /**\n   * Private helper method to create a file directory for the specified public/private status and entity ID.\n   * @param isPublic - A boolean flag indicating if the directory is for public files (true) or private files (false).\n   * @param entityId - The entity ID to use as the directory name.\n   * @returns A promise that resolves to the created directory path as a string.\n   */\n  private async createFileDirectory(\n    isPublic: boolean,\n    entityId: string,\n  ): Promise {\n    const dir = path.join(\n      !isPublic ? await this.getPrivateDir() : await this.getPublicDir(),\n      entityId,\n    );\n    await createDirectoriesIfNotExist(dir);\n    return dir;\n  }\n\n  /**\n   * Private helper method to create a new FileEntity with the specified public/private status.\n   * @param isPublic - A boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  private async createFileEntity(isPublic: boolean) {\n    const entity = new FileEntity();\n    entity.public = isPublic;\n    return this.fileRep.save(entity);\n  }\n\n  /**\n   * Retrieves the public directory path stored in configuration.\n   * @returns A promise that resolves to the normalized public directory path.\n   */\n  private async getPublicDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PUBLIC_DIR));\n    return path.normalize(dir);\n  }\n\n  /**\n   * Retrieves the private directory path stored in configuration.\n   * @returns A promise that resolves to the normalized private directory path.\n   */\n  private async getPrivateDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PRIVATE_DIR));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenMsException.html":{"url":"classes/ForbiddenMsException.html","title":"class - ForbiddenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/forbidden-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for forbidden requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/forbidden-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for forbidden requests, extending MsException.\n */\nexport class ForbiddenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.FORBIDDEN, message || \"Forbidden\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCaptchaService.html":{"url":"classes/GoogleCaptchaService.html","title":"class - GoogleCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/google-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\nIt manages the generation and validation of Google reCAPTCHAs.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/google-captcha.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:46\n\n                        \n                    \n\n\n            \n                \n                        Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a CaptchaResponse object containing the captcha id and type.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:62\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against Google's reCAPTCHA verification service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { lastValueFrom } from \"rxjs\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\n\n/**\n * The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\n * It manages the generation and validation of Google reCAPTCHAs.\n */\nexport class GoogleCaptchaService extends CaptchaService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n    private readonly http: HttpService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n   * @returns {Promise} - A promise resolving to a CaptchaResponse object containing the captcha id and type.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = await this.cacheService.get(CaptchaConfig.GOOGLE_PUBLIC_KEY);\n    return { id, type: \"google\" };\n  }\n\n  /**\n   * Validates the provided captcha request against Google's reCAPTCHA verification service.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const secretKey = await this.cacheService.get(\n      CaptchaConfig.GOOGLE_SECRET_KEY,\n    );\n    const response$ = await this.http.post(\n      `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${request.data}`,\n    );\n    const response = await lastValueFrom(response$);\n    return response?.data?.success;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GpsFileMetadata.html":{"url":"interfaces/GpsFileMetadata.html","title":"interface - GpsFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GpsFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing GPS file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitude\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GpsFileMetadataEntity.html":{"url":"entities/GpsFileMetadataEntity.html","title":"entity - GpsFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GpsFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/gps-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the GPS metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                altitude\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        altitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { GpsFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the GPS metadata of the file\n */\n@Entity(\"file_metadata_gps\")\nexport class GpsFileMetadataEntity implements GpsFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  altitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  latitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphicCaptchaService.html":{"url":"classes/GraphicCaptchaService.html","title":"class - GraphicCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphicCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/graphic-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\nIt manages the generation and validation of graphic captchas.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Private\n                                generateColor\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaExp\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontFamily\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontPath\n                            \n                            \n                                    Private\n                                    Async\n                                makeImageFromText\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/graphic-captcha.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of Logger.\n\n\n                                                        \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of CacheService.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:55\n\n                        \n                    \n\n\n            \n                \n                        Generates a new graphical captcha and stores it in the cache.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Generates a random RGB color.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nAn RGB color string.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaExp()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha expiration time defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontFamily\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontFamily()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font family defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha font family.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontPath()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font path defined in configuration and normalizes it.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the normalized captcha font path.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeImageFromText\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeImageFromText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Generates an image from the provided text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text to be drawn on the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to a base64 encoded image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:76\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against the cached value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { createCanvas, registerFont } from \"canvas\";\nimport { CAPTCHA_CACHE_PREFIX } from \"./captcha.constants\";\nimport * as path from \"path\";\nimport { StringUtils } from \"../../shared/utils/string.utils\";\nimport { NumberUtils } from \"../../shared/utils/number.utils\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport generateRandomString = StringUtils.generateRandomString;\nimport generateRandomInt = NumberUtils.generateRandomInt;\n\n/**\n * The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\n * It manages the generation and validation of graphic captchas.\n */\nexport class GraphicCaptchaService extends CaptchaService {\n  /**\n   * @param {Logger} logger - An instance of Logger.\n   * @param {CacheService} cacheService - An instance of CacheService.\n   */\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new graphical captcha and stores it in the cache.\n   * @returns {Promise} - A promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = uuidv4();\n    const val = generateRandomString(5, 7);\n    const image = await this.makeImageFromText(val);\n    const capEx = await this.getCaptchaExp();\n    await this.cacheService.set(`${CAPTCHA_CACHE_PREFIX}:${id}`, val, capEx);\n    this.logger.debug(`Generated captcha with id: ${id} and value: ${val}`);\n    return { id, image: `data:image/png;base64,${image}`, type: \"default\" };\n  }\n\n  /**\n   * Validates the provided captcha request against the cached value.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const key = `${CAPTCHA_CACHE_PREFIX}:${request.id}`;\n    const val = await this.cacheService.get(key);\n    this.cacheService.del(key);\n    if (!val) {\n      this.logger.warn(`Invalid captcha id: ${request.id}`);\n      return false;\n    }\n    if (val !== request.data) {\n      this.logger.warn(`Incorrect captcha value for id: ${request.id}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Generates an image from the provided text.\n   * @param {string} text - The text to be drawn on the image.\n   * @returns {Promise} - A promise resolving to a base64 encoded image.\n   */\n  private async makeImageFromText(text: string) {\n    const canvas = createCanvas(200, 50);\n    const ctx = canvas.getContext(\"2d\");\n    const capFontFamily = await this.getCaptchaFontFamily();\n    const capFontPath = await this.getCaptchaFontPath();\n    registerFont(capFontPath, { family: capFontFamily });\n    ctx.fillStyle = this.generateColor();\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = `30px ${capFontFamily}`;\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i } - A promise resolving to the captcha expiration time.\n   */\n  private async getCaptchaExp() {\n    return await this.cacheService.getNumber(CaptchaConfig.EXPIRATION);\n  }\n\n  /**\n   * Retrieves the captcha font family defined in configuration.\n   * @returns {Promise} - A promise resolving to the captcha font family.\n   */\n  private async getCaptchaFontFamily() {\n    return await this.cacheService.get(CaptchaConfig.FONT_FAMILY);\n  }\n\n  /**\n   * Retrieves the captcha font path defined in configuration and normalizes it.\n   * @returns {Promise} - A promise resolving to the normalized captcha font path.\n   */\n  private async getCaptchaFontPath() {\n    const dir =\n      process.cwd() + (await this.cacheService.get(CaptchaConfig.FONT_PATH));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IccFileMetadata.html":{"url":"interfaces/IccFileMetadata.html","title":"interface - IccFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IccFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing ICC file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectionSpace\n                                        \n                                \n                                \n                                        \n                                            deviceManufacturer\n                                        \n                                \n                                \n                                        \n                                            deviceModelNumber\n                                        \n                                \n                                \n                                        \n                                            iccCopyright\n                                        \n                                \n                                \n                                        \n                                            iccDescription\n                                        \n                                \n                                \n                                        \n                                            iccProfileDate\n                                        \n                                \n                                \n                                        \n                                            iccSignature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            primaryPlatform\n                                        \n                                \n                                \n                                        \n                                            profileClassName\n                                        \n                                \n                                \n                                        \n                                            profileClassValue\n                                        \n                                \n                                \n                                        \n                                            profileCreator\n                                        \n                                \n                                \n                                        \n                                            profileVersion\n                                        \n                                \n                                \n                                        \n                                            renderingIntentName\n                                        \n                                \n                                \n                                        \n                                            renderingIntentValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceManufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceManufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceModelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceModelNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccCopyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccCopyright:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccProfileDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccProfileDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPlatform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPlatform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/IccFileMetadataEntity.html":{"url":"entities/IccFileMetadataEntity.html","title":"entity - IccFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  IccFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/icc-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the ICC metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectionSpace\n                            \n                            \n                                    \n                                    \n                                deviceManufacturer\n                            \n                            \n                                    \n                                    \n                                deviceModelNumber\n                            \n                            \n                                    \n                                    \n                                iccCopyright\n                            \n                            \n                                    \n                                    \n                                iccDescription\n                            \n                            \n                                    \n                                    \n                                iccProfileDate\n                            \n                            \n                                    \n                                    \n                                iccSignature\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                primaryPlatform\n                            \n                            \n                                    \n                                    \n                                profileClassName\n                            \n                            \n                                    \n                                    \n                                profileClassValue\n                            \n                            \n                                    \n                                    \n                                profileCreator\n                            \n                            \n                                    \n                                    \n                                profileVersion\n                            \n                            \n                                    \n                                    \n                                renderingIntentName\n                            \n                            \n                                    \n                                    \n                                renderingIntentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectionSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'connection_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceManufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_manufacturer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceModelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_model_number', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccCopyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_copyright', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccProfileDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'icc_profile_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccSignature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_signature', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'primary_platform', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_creator', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_version', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'rendering_intent_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'rendering_intent_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IccFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the ICC metadata of the file\n */\n@Entity(\"file_metadata_icc\")\nexport class IccFileMetadataEntity implements IccFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_version\", nullable: true })\n  profileVersion: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_value\", nullable: true })\n  profileClassValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_name\", nullable: true })\n  profileClassName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"connection_space\", nullable: true })\n  connectionSpace: string;\n\n  @Index()\n  @Column(\"date\", { name: \"icc_profile_date\", nullable: true })\n  iccProfileDate: Date;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_signature\", nullable: true })\n  iccSignature: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"primary_platform\", nullable: true })\n  primaryPlatform: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_manufacturer\", nullable: true })\n  deviceManufacturer: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_model_number\", nullable: true })\n  deviceModelNumber: string;\n\n  @Index()\n  @Column(\"int\", { name: \"rendering_intent_value\", nullable: true })\n  renderingIntentValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"rendering_intent_name\", nullable: true })\n  renderingIntentName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_creator\", nullable: true })\n  profileCreator: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_description\", nullable: true })\n  iccDescription: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_copyright\", nullable: true })\n  iccCopyright: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFileMetadata.html":{"url":"interfaces/ImageFileMetadata.html","title":"interface - ImageFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing image file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitDepth\n                                        \n                                \n                                \n                                        \n                                            bps\n                                        \n                                \n                                \n                                        \n                                            colorComponents\n                                        \n                                \n                                \n                                        \n                                            colorType\n                                        \n                                \n                                \n                                        \n                                            compression\n                                        \n                                \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interlace\n                                        \n                                \n                                \n                                        \n                                            subsampling\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitDepth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitDepth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bps:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorComponents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interlace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subsampling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subsampling:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImageFileMetadataEntity.html":{"url":"entities/ImageFileMetadataEntity.html","title":"entity - ImageFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImageFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/image-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the image metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitDepth\n                            \n                            \n                                    \n                                    \n                                bps\n                            \n                            \n                                    \n                                    \n                                colorComponents\n                            \n                            \n                                    \n                                    \n                                colorType\n                            \n                            \n                                    \n                                    \n                                compression\n                            \n                            \n                                    \n                                    \n                                dateTime\n                            \n                            \n                                    \n                                    \n                                filter\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interlace\n                            \n                            \n                                    \n                                    \n                                subsampling\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'color_components', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        compression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'date_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interlace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subsampling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ImageFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the image metadata of the file\n */\n@Entity(\"file_metadata_image\")\nexport class ImageFileMetadataEntity implements ImageFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  bps: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { name: \"color_components\", nullable: true, default: null })\n  colorComponents: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  subsampling: string;\n\n  @Index()\n  @Column(\"date\", { name: \"date_time\", nullable: true })\n  dateTime: Date;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  bitDepth: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  colorType: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  compression: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  filter: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  interlace: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenMsException.html":{"url":"classes/InvalidTokenMsException.html","title":"class - InvalidTokenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/invalid-token-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for invalid token, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/invalid-token-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for invalid token, extending MsException.\n */\nexport class InvalidTokenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Invalid token\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtDto.html":{"url":"classes/JwtDto.html","title":"class - JwtDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for JWT tokens.\nContains access and refresh tokens along with their expiration dates and user information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                atExp\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                rtExp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:103\n                        \n                    \n\n            \n                \n                    The access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:115\n                        \n                    \n\n            \n                \n                    The expiration date of the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:109\n                        \n                    \n\n            \n                \n                    The refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rtExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:121\n                        \n                    \n\n            \n                \n                    The expiration date of the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:97\n                        \n                    \n\n            \n                \n                    The user-data object.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a language entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LanguageEntity.html":{"url":"entities/LanguageEntity.html","title":"entity - LanguageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LanguageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/language.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the system languages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Column, Entity, Index, ManyToOne, PrimaryColumn } from \"typeorm\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\nimport { Language } from \"../locale.types\";\n\n/**\n * The entity stores the system languages\n */\n@Entity(\"languages\")\nexport class LanguageEntity implements Language {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiteAuthGuard.html":{"url":"injectables/LiteAuthGuard.html","title":"injectable - LiteAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiteAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/lite-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                fetchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fetchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class LiteAuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n */\n@Injectable()\nexport class LiteAuthGuard extends AbstractAuthGuard {\n  protected fetchUser = false;\n\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocaleModule.html":{"url":"modules/LocaleModule.html","title":"module - LocaleModule","body":"\n                   \n\n\n\n\n    Modules\n    LocaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for handling localization.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\nimport { LocaleService } from \"./locale.service\";\n\n/**\n * A module that provides services and configurations for handling localization.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      LanguageEntity,\n      LocalizedStringEntity,\n      LocalizedMediaEntity,\n    ]),\n  ],\n  providers: [LocaleService],\n  exports: [LocaleService],\n})\nexport class LocaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling localization operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLocalizedStrings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRep: Repository, localizedStringRep: Repository, localizedMediaRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/locale.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedStringRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMediaRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLocalizedStrings\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocalizedStrings(value: string, code?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/locale.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Creates localized strings for all available languages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be localized.\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional code to be used for the localized strings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of LocalizedStringEntity objects.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\n\n/**\n * Service for handling localization operations.\n */\n@Injectable()\nexport class LocaleService {\n  constructor(\n    @InjectRepository(LanguageEntity)\n    private readonly languageRep: Repository,\n    @InjectRepository(LocalizedStringEntity)\n    private readonly localizedStringRep: Repository,\n    @InjectRepository(LocalizedMediaEntity)\n    private readonly localizedMediaRep: Repository,\n  ) {}\n\n  /**\n   * Creates localized strings for all available languages.\n   * @param value - The value to be localized.\n   * @param code - An optional code to be used for the localized strings.\n   * @returns A promise that resolves to an array of LocalizedStringEntity objects.\n   */\n  async createLocalizedStrings(\n    value: string,\n    code?: string,\n  ): Promise {\n    const languages = await this.languageRep.find();\n    const res: LocalizedStringEntity[] = [];\n    for (const language of languages) {\n      const ls = new LocalizedStringEntity();\n      ls.lang = language;\n      ls.value = value;\n      if (code) {\n        ls.code = `${code}_${language.id}`;\n        const existed = await this.localizedStringRep.findOne({\n          where: { code: ls.code },\n        });\n        ls.id = existed?.id;\n      }\n      await this.localizedStringRep.save(ls);\n      res.push(ls);\n    }\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleSubscriber.html":{"url":"injectables/LocaleSubscriber.html","title":"injectable - LocaleSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/locale-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                LocaleSubscriber is an EntitySubscriber that listens to removal events\nfor entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\nWhen such an entity is removed, LocaleSubscriber will also remove\nthe associated LocalizedStringEntity or LocalizedMediaEntity instances.\nExample :class MyEntity {\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  firstName: LocalizedStringEntity[];\n}const myEntity = new MyEntity();\nentityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs a new LocaleSubscriber instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Logger instance used for logging messages.\n\n\n                                                        \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe DataSource instance used to access the connection and its subscribers.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterRemove\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterRemove(event: RemoveEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:69\n                        \n                    \n\n\n            \n                \n                        The afterRemove event is triggered when an entity is removed.\nIf the removed entity has relationships with LocalizedStringEntity instances,\nthe related LocalizedStringEntity instances will also be removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        RemoveEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe RemoveEvent instance containing information about the removed entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  DataSource,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  RemoveEvent,\n} from \"typeorm\";\nimport { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectDataSource } from \"@nestjs/typeorm\";\nimport { LOGGER } from \"../../log/log.constants\";\nimport { LocalizedStringEntity } from \"./localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./localized-media.entity\";\n\n/**\n * LocaleSubscriber is an EntitySubscriber that listens to removal events\n * for entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\n * When such an entity is removed, LocaleSubscriber will also remove\n * the associated LocalizedStringEntity or LocalizedMediaEntity instances.\n *\n * @example\n * class MyEntity {\n *   @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n *   @JoinTable()\n *   firstName: LocalizedStringEntity[];\n * }\n *\n * const myEntity = new MyEntity();\n * entityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n */\n@Injectable()\n@EventSubscriber()\nexport class LocaleSubscriber implements EntitySubscriberInterface {\n  /**\n   * Constructs a new LocaleSubscriber instance.\n   *\n   * @param logger - The Logger instance used for logging messages.\n   * @param dataSource - The DataSource instance used to access the connection and its subscribers.\n   */\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    dataSource.manager.connection.subscribers.push(this);\n  }\n\n  /**\n   * The afterRemove event is triggered when an entity is removed.\n   * If the removed entity has relationships with LocalizedStringEntity instances,\n   * the related LocalizedStringEntity instances will also be removed.\n   *\n   * @param event - The RemoveEvent instance containing information about the removed entity.\n   * @returns A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n   */\n  async afterRemove(event: RemoveEvent): Promise {\n    const entity = event.entity;\n    if (!entity) {\n      return;\n    }\n    const localizedStringProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedStringEntity\n      );\n    });\n    if (localizedStringProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedStringEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedStringProperties as LocalizedStringEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedStringEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedStringEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n\n    const localizedMediaProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedMediaEntity\n      );\n    });\n    if (localizedMediaProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedMediaEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedMediaProperties as LocalizedMediaEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedMediaEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedMediaEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedMedia.html":{"url":"interfaces/LocalizedMedia.html","title":"interface - LocalizedMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized media entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedMediaEntity.html":{"url":"entities/LocalizedMediaEntity.html","title":"entity - LocalizedMediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedMediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores internationalized media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedMedia } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores internationalized media objects\n */\n@Entity(\"localized_medias\")\nexport class LocalizedMediaEntity implements LocalizedMedia {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: false })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  value: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedString.html":{"url":"interfaces/LocalizedString.html","title":"interface - LocalizedString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized string entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedStringEntity.html":{"url":"entities/LocalizedStringEntity.html","title":"entity - LocalizedStringEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedStringEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-string.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the translations in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedString } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\n\n/**\n * The entity stores the translations in itself\n */\n@Entity(\"localized_strings\")\nexport class LocalizedStringEntity implements LocalizedString {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @Column(\"text\", { nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/log/log.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides logging functionality using the LogService.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogService } from \"./log.service\";\nimport { LOGGER } from \"./log.constants\";\n\n/**\n * A module that provides logging functionality using the LogService.\n */\n@Module({\n  providers: [\n    {\n      provide: LOGGER,\n      useClass: LogService,\n    },\n  ],\n  exports: [LOGGER],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogService.html":{"url":"classes/LogService.html","title":"class - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log service that extends the built-in Nest Logger, providing additional functionality and context.\n\n            \n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                getCallingContext\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                patchFromCtx\n                            \n                            \n                                    Private\n                                prepareMessage\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a debug message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe debug message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Logs an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error message.\n\n\n                                            \n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional stack trace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCallingContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCallingContext()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Retrieves the calling context (file path, method name, line number) from the stack trace.\n\n\n                        \n                            Returns :     { filePath: any; methodName: any; lineNumber: any; }\n\n                        \n                            \n                                An object containing the file path, method name, and line number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a message at the log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to log.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchFromCtx\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchFromCtx(ctx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Patches the calling context for display in log messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe calling context object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string representing the calling context.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareMessage(message: string, data?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Prepares the log message by combining the main message with additional data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe main log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The prepared log message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a verbose message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe verbose message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a warning message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe warning message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Log service that extends the built-in Nest Logger, providing additional functionality and context.\n */\nexport class LogService extends Logger {\n  /**\n   * Logs a message at the log level.\n   * @param message - The message to log.\n   * @param data - Additional data to log.\n   */\n  log(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.log(this.prepareMessage(message, data), ctx.methodName);\n  }\n\n  /**\n   * Logs an error message.\n   * @param message - The error message.\n   * @param trace - Optional stack trace.\n   */\n  error(message: string, trace?: string) {\n    const ctx = this.getCallingContext();\n    super.error(this.prepareMessage(message), trace, this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a warning message.\n   * @param message - The warning message.\n   * @param data - Additional data to log.\n   */\n  warn(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.warn(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a verbose message.\n   * @param message - The verbose message.\n   * @param data - Additional data to log.\n   */\n  verbose(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.verbose(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a debug message.\n   * @param message - The debug message.\n   * @param data - Additional data to log.\n   */\n  debug(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.debug(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Patches the calling context for display in log messages.\n   * @param ctx - The calling context object.\n   * @returns A formatted string representing the calling context.\n   */\n  private patchFromCtx(ctx: {\n    filePath: string;\n    methodName: string;\n    lineNumber: string;\n  }) {\n    let p = `${ctx?.filePath}:${ctx?.lineNumber} > ${ctx?.methodName}`;\n    if (p === \"undefined:undefined > undefined\") {\n      p = \"unknown\";\n    }\n    return p;\n  }\n\n  /**\n   * Prepares the log message by combining the main message with additional data.\n   * @param message - The main log message.\n   * @param data - Additional data to log.\n   * @returns The prepared log message.\n   */\n  private prepareMessage(message: string, data?: T) {\n    let m = inspect(message);\n    if (\n      (m.startsWith(`'`) && m.endsWith(`'`)) ||\n      (m.startsWith(`\"`) && m.endsWith(`\"`))\n    ) {\n      m = m.substring(1, m.length - 1);\n    }\n    if (data) {\n      m += inspect(data);\n    }\n    return m;\n  }\n\n  /**\n   * Retrieves the calling context (file path, method name, line number) from the stack trace.\n   * @returns An object containing the file path, method name, and line number.\n   */\n  private getCallingContext() {\n    const stackTrace = new Error().stack;\n    if (stackTrace) {\n      const lines = stackTrace.split(\"\\n\");\n      // The calling context is located in the fourth line of the stack trace\n      if (lines.length >= 4) {\n        const matches = lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d+\\)/);\n        if (matches && matches.length > 3) {\n          const filePath = matches[2].split(\"/\").slice(-2).join(\"/\");\n          const methodName = matches[1];\n          const lineNumber = matches[3];\n          return { filePath, methodName, lineNumber };\n        }\n      }\n    }\n    return {\n      filePath: \"Unknown path\",\n      methodName: \"Anonymous context\",\n      lineNumber: \"Unknown line\",\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for login payload.\nContains user login information required for authentication.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                captchaId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                captchaPayload\n                            \n                            \n                                    \n                                    \n                                ipAddress\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:63\n                        \n                    \n\n            \n                \n                    The ID of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaPayload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:71\n                        \n                    \n\n            \n                \n                    The payload of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIP()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:55\n                        \n                    \n\n            \n                \n                    The IP address of the user.\nOptional.\nExample :\"192.168.0.1\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:36\n                        \n                    \n\n            \n                \n                    The login of the user.\nExample :\"admin\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:45\n                        \n                    \n\n            \n                \n                    The password of the user.\nExample :\"P@ssw0rd!\"\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     MediaFile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaDto.html":{"url":"classes/MediaDto.html","title":"class - MediaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Media\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:151\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media objects in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, f => f.media, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { MediaTypeEntity } from \"./media-type.entity\";\nimport { MediaFileEntity } from \"./media-file.entity\";\nimport { Media } from \"../media.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { FileMetadataEntity } from \"../../file/entity/file-metadata.entity\";\n\n/**\n * The entity stores media objects in itself\n */\n@Entity(\"medias\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class MediaEntity implements Media {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaTypeEntity, (type) => type.code)\n  type: MediaTypeEntity;\n\n  @OneToMany(() => MediaFileEntity, (f) => f.media, { cascade: true })\n  files: MediaFileEntity[];\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaExt.html":{"url":"interfaces/MediaExt.html","title":"interface - MediaExt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaExt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media extension.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaExtEntity.html":{"url":"entities/MediaExtEntity.html","title":"entity - MediaExtEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaExtEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-ext.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores extensions of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaExt } from \"../media.types\";\n\n/**\n * The entity stores extensions of media objects\n */\n@Entity(\"medias_ext\")\nexport class MediaExtEntity implements MediaExt {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFileDto.html":{"url":"classes/MediaFileDto.html","title":"class - MediaFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:176\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:191\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFileEntity.html":{"url":"entities/MediaFileEntity.html","title":"entity - MediaFileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media object files (links)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { MediaEntity } from \"./media.entity\";\nimport { MediaFile } from \"../media.types\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\n\n/**\n * The entity stores media object files (links)\n */\n@Entity(\"medias_files\")\nexport class MediaFileEntity implements MediaFile {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: number;\n\n  @Column(\"smallint\", { nullable: true })\n  height: number;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaFormatEntity, (type) => type.code)\n  format: MediaFormatEntity;\n\n  @ManyToOne(() => MediaEntity)\n  media: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media format.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFormatDto.html":{"url":"classes/MediaFormatDto.html","title":"class - MediaFormatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFormatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media format.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFormat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:133\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFormatEntity.html":{"url":"entities/MediaFormatEntity.html","title":"entity - MediaFormatEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFormatEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-format.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the formats of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaFormat } from \"../media.types\";\n\n/**\n * The entity stores the formats of media objects\n */\n@Entity(\"medias_format\")\nexport class MediaFormatEntity implements MediaFormat {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: string;\n\n  @Column(\"smallint\", { nullable: true })\n  height: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaManager.html":{"url":"classes/MediaManager.html","title":"class - MediaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the media management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateMedia\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findMediaById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getMediaPath\n                            \n                            \n                                    Abstract\n                                recreate\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateMedia(file: Buffer, type: string, code?: string, existedEntityId?: number, name?: LocalizedString[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            LocalizedString[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findMediaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMediaById(id: number, privateMedia?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                privateMedia\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getMediaPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPath(media: Media, format?: string, webpSupport?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                media\n                                            \n                                                            Media\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                webpSupport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        recreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/media/media.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for management media system.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: MediaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MediaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: MediaService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { MediaService } from \"./media.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { MediaEntity } from \"./entity/media.entity\";\nimport { MediaTypeEntity } from \"./entity/media-type.entity\";\nimport { MediaFileEntity } from \"./entity/media-file.entity\";\nimport { MediaFormatEntity } from \"./entity/media-format.entity\";\nimport { MediaManager, MediaModuleOptions } from \"./media.types\";\nimport { FileModule } from \"../file/file.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module for management media system.\n */\n@Module({})\nexport class MediaModule {\n  static forRoot(\n    options: MediaModuleOptions = {\n      service: MediaService,\n    },\n  ): DynamicModule {\n    return {\n      module: MediaModule,\n      imports: [\n        TypeOrmModule.forFeature([\n          MediaEntity,\n          MediaTypeEntity,\n          MediaFileEntity,\n          MediaFormatEntity,\n        ]),\n        FileModule.forRoot(),\n        LogModule,\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: MediaManager,\n          useClass: options.service,\n        },\n      ],\n      exports: [MediaManager],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaType.html":{"url":"interfaces/MediaType.html","title":"interface - MediaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            vp6\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         MediaExt\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaExt\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:     MediaFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vp6\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vp6:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaTypeDto.html":{"url":"classes/MediaTypeDto.html","title":"class - MediaTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaType\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaTypeEntity.html":{"url":"entities/MediaTypeEntity.html","title":"entity - MediaTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-type.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the types of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExtEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, e => e.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\nimport { MediaType } from \"../media.types\";\nimport { MediaExtEntity } from \"./media-ext.entity\";\n\n/**\n * The entity stores the types of media objects\n */\n@Entity(\"medias_types\")\nexport class MediaTypeEntity implements MediaType {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"boolean\", { default: false })\n  vp6: boolean;\n\n  @Column(\"boolean\", { default: false })\n  private: boolean;\n\n  @Column(\"int\", { nullable: true })\n  quality: number;\n\n  @ManyToOne(() => MediaExtEntity, (e) => e.code)\n  ext: MediaExtEntity;\n\n  @ManyToMany(() => MediaFormatEntity)\n  @JoinTable()\n  formats: MediaFormatEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageBus.html":{"url":"interfaces/MessageBus.html","title":"interface - MessageBus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageBus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for the message bus.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dispatch\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n/**\n * Type definition for microservices client options.\n */\nexport type MsClientOptions = {\n  timeout: number;\n};\n\n/**\n * Interface defining the contract for the message bus.\n */\nexport interface MessageBus {\n  dispatch(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Promise;\n\n  send(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n\n  emit(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesBroker.html":{"url":"interfaces/MessagesBroker.html","title":"interface - MessagesBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessagesBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for message brokering.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:39\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MessagesBroker {\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  emit(chanel: string, data: T): Promise;\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void);\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesBrokerModule.html":{"url":"modules/MessagesBrokerModule.html","title":"module - MessagesBrokerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesBrokerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MessagesBrokerModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides message brokering functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { MESSAGES_BROKER } from \"./messages-broker.constants\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MessagesBrokerService } from \"./messages-broker.service\";\n\n/**\n * A module that provides message brokering functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: MESSAGES_BROKER,\n      useClass: MessagesBrokerService,\n    },\n  ],\n  exports: [MESSAGES_BROKER],\n})\nexport class MessagesBrokerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesBrokerService.html":{"url":"injectables/MessagesBrokerService.html","title":"injectable - MessagesBrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesBrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service that implements the MessagesBroker interface for message brokering using Redis.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Private\n                                safeDeSerialize\n                            \n                            \n                                    Private\n                                safeSerialize\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pubClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pubClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDeSerialize(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Safely deserializes a JSON string to an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deserialized object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeSerialize(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:75\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Safely serializes data to a JSON string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to serialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The serialized JSON string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { MessagesBroker } from \"./messages-broker.types\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\n\n/**\n * A service that implements the MessagesBroker interface for message brokering using Redis.\n */\n@Injectable()\nexport class MessagesBrokerService implements MessagesBroker {\n  private readonly subClient: Redis;\n  private readonly subscribers: Map void> =\n    new Map();\n\n  constructor(@Inject(REDIS_CLIENT) private readonly pubClient: Redis) {\n    this.subClient = this.pubClient.duplicate();\n    this.subClient.on(\"message\", (chanel, data) => {\n      if (!this.subscribers.has(chanel)) {\n        return;\n      }\n      const fun = this.subscribers.get(chanel);\n      fun(this.safeDeSerialize(data));\n    });\n  }\n\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  async emit(chanel: string, data: T) {\n    await this.pubClient.publish(chanel, this.safeSerialize(data));\n  }\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void) {\n    this.subClient.subscribe(chanel);\n    this.subscribers.set(chanel, handler);\n  }\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string) {\n    this.subClient.unsubscribe(chanel);\n    this.subscribers.delete(chanel);\n  }\n\n  /**\n   * Safely serializes data to a JSON string.\n   * @param data - The data to serialize.\n   * @returns The serialized JSON string.\n   */\n  private safeSerialize(data: T) {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      return data.toString();\n    }\n  }\n\n  /**\n   * Safely deserializes a JSON string to an object.\n   * @param data - The JSON string to deserialize.\n   * @returns The deserialized object.\n   */\n  private safeDeSerialize(data: string) {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsClient.html":{"url":"classes/MsClient.html","title":"class - MsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                Microservices client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                    Private\n                                handleRequest\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, proxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/ms-client.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Object()\n                                            \n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:80\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRequest(source: Observable, pattern: any, data: any, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:97\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handles the request by logging and managing errors and timeouts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe observable source.\n\n\n                                            \n                                        \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, throwError, timeout } from \"rxjs\";\nimport { HttpException, HttpStatus, Inject, Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport { MessageBus, MsClientOptions } from \"./ms-client.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_EXCEPTION_ID } from \"../../constants\";\nimport { MsException } from \"../../exceptions/ms.exception\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Microservices client for dispatching messages between microservices.\n */\nexport class MsClient implements MessageBus {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly proxy: ClientProxy,\n  ) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput = Object(),\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const source = this.proxy.send(pattern, data);\n      this.handleRequest(source, pattern, data, opts).subscribe({\n        next: (result) => resolve(result),\n        error: (error) => reject(error),\n      });\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.send(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.emit(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Handles the request by logging and managing errors and timeouts.\n   * @param source - The observable source.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result.\n   */\n  private handleRequest(\n    source: Observable,\n    pattern: any,\n    data: any,\n    opts?: MsClientOptions,\n  ): Observable {\n    this.logger.debug(`Sending request with pattern: ${inspect(pattern)}`);\n    return source.pipe(\n      timeout(opts?.timeout || parseInt(process.env.TRANSPORT_TIMEOUT)),\n      catchError((error) => {\n        if (error?.type === MS_EXCEPTION_ID) {\n          const err = error as MsException;\n          this.logger.error(\n            `Microservice exception: ${err.message}`,\n            err.stack,\n          );\n          throw new HttpException(err.message, err.code);\n        }\n        if (error.name === \"TimeoutError\") {\n          this.logger.warn(`Request timeout for pattern: ${inspect(pattern)}`);\n          throw new HttpException(\n            \"Request Timeout\",\n            HttpStatus.REQUEST_TIMEOUT,\n          );\n        }\n        this.logger.error(\n          `Unknown error for pattern: ${inspect(pattern)}`,\n          error,\n        );\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MsClientModule.html":{"url":"modules/MsClientModule.html","title":"module - MsClientModule","body":"\n                   \n\n\n\n\n    Modules\n    MsClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MsClientModule\n\n\n\ncluster_MsClientModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides microservices client functionality for dispatching messages between microservices.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { ClientProxy, ClientsModule } from \"@nestjs/microservices\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_CLIENT, MSG_BUS } from \"./ms-client.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MsClient } from \"./ms-client\";\n\n/**\n * A module that provides microservices client functionality for dispatching messages between microservices.\n */\n@Module({\n  imports: [\n    LogModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [LogModule],\n        inject: [LOGGER],\n        name: MS_CLIENT,\n        useFactory: (logger: Logger) => {\n          EnvLoader.loadEnvironment(logger);\n          return {\n            transport: parseInt(process.env.TRANSPORT_TYPE),\n            options: {\n              host: process.env.TRANSPORT_HOST,\n              port: parseInt(process.env.TRANSPORT_PORT),\n              timeout: parseInt(process.env.TRANSPORT_TIMEOUT),\n            },\n          };\n        },\n      },\n    ]),\n  ],\n  providers: [\n    {\n      provide: MSG_BUS,\n      useFactory: (logger: Logger, client: ClientProxy) =>\n        new MsClient(logger, client),\n      inject: [LOGGER, MS_CLIENT],\n    },\n  ],\n  exports: [MSG_BUS],\n})\nexport class MsClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsException.html":{"url":"classes/MsException.html","title":"class - MsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for custom microservice exceptions, extending RpcException.\n\n            \n\n            \n                Extends\n            \n            \n                        RpcException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, message: string, stack?: any)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RpcException } from \"@nestjs/microservices\";\nimport { MS_EXCEPTION_ID } from \"../constants\";\n\n/**\n * Base class for custom microservice exceptions, extending RpcException.\n */\nexport class MsException extends RpcException {\n  constructor(\n    readonly code: number,\n    readonly message: string = undefined,\n    readonly stack?: any,\n  ) {\n    super({ type: MS_EXCEPTION_ID, message, code, stack });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotEmptyPipe.html":{"url":"injectables/NotEmptyPipe.html","title":"injectable - NotEmptyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotEmptyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/pipes/not-empty.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to ensure a value is not empty.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fieldName: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/pipes/not-empty.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/pipes/not-empty.pipe.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\n\n/**\n * Pipe to ensure a value is not empty.\n */\n@Injectable()\nexport class NotEmptyPipe implements PipeTransform {\n  constructor(private readonly fieldName: string) {}\n\n  transform(value: any) {\n    if (!value || Object.keys(value).length === 0) {\n      throw new BadRequestException(`${this.fieldName} cannot be empty`);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundMsException.html":{"url":"classes/NotFoundMsException.html","title":"class - NotFoundMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/not-found-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for not found requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/not-found-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for not found requests, extending MsException.\n */\nexport class NotFoundMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.NOT_FOUND, message || \"Not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableData.html":{"url":"classes/PageableData.html","title":"class - PageableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that represents paginated data.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], totalCount: number, currentPage: number, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of PageableData.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe items for the current page.\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items available.\n\n\n                                                        \n                                                \n                                                \n                                                        currentPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number.\n\n\n                                                        \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe number of items per page.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableParams.html":{"url":"classes/PageableParams.html","title":"class - PageableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that defines the parameters for pagination.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Max(1000)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessLog.html":{"url":"interfaces/ProcessLog.html","title":"interface - ProcessLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            process\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            tsUpdated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        process\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        process:         ProcessUnit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessUnit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsUpdated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsUpdated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessLogEntity.html":{"url":"entities/ProcessLogEntity.html","title":"entity - ProcessLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.log.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores logs of system processes\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                process\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnitEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@UpdateDateColumn({name: 'ts_updated', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ProcessUnitEntity } from \"./process.unit.entity\";\nimport { ProcessLog } from \"../process.types\";\n\n/**\n * The entity stores logs of system processes\n */\n@Entity(\"process_logs\")\nexport class ProcessLogEntity implements ProcessLog {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"text\", { nullable: true })\n  content: string;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n\n  @Index()\n  @UpdateDateColumn({ name: \"ts_updated\", type: \"timestamp\" })\n  tsUpdated: Date;\n\n  @ManyToOne(() => ProcessUnitEntity, (t) => t.code)\n  process: ProcessUnitEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessManagerService.html":{"url":"injectables/ProcessManagerService.html","title":"injectable - ProcessManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-manager.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pmInitStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogInstance\n                            \n                            \n                                getLastLogsByProcess\n                            \n                            \n                                getProcessData\n                            \n                            \n                                getProcessLogById\n                            \n                            \n                                    Async\n                                getProcessUnitStatus\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                resetAllProcessStatuses\n                            \n                            \n                                    Async\n                                setProcessUnitStatus\n                            \n                            \n                                    Async\n                                startProcess\n                            \n                            \n                                    Async\n                                stopProcess\n                            \n                            \n                                    Async\n                                toggleProcess\n                            \n                            \n                                updateLogInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lockExec: WarlockFn, logger: Logger, broker: MessagesBroker, processUnitRep: Repository, processLogRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-manager.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBroker\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processUnitRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processLogRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogInstance(processCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Creates a log instance for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastLogsByProcess\n                        \n                    \n                \n            \n            \n                \ngetLastLogsByProcess(processCode: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Gets the last logs of a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of logs to retrieve (default is 3).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of ProcessLogEntity instances.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessData\n                        \n                    \n                \n            \n            \n                \ngetProcessData(code: string, force)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Gets process data by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                force\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nWhether to force getting the process data regardless of its enabled status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessUnitEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessLogById\n                        \n                    \n                \n            \n            \n                \ngetProcessLogById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Gets a process log by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the process log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProcessUnitStatus(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current status of the process unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the process manager service, resets process statuses, and registers processes.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        resetAllProcessStatuses\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetAllProcessStatuses()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Resets the statuses of all enabled processes to \"Ready\".\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProcessUnitStatus(code: string, status: Process.Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Sets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            Process.Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Starts a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Stops a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Toggles the enabled status of a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to toggle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLogInstance\n                        \n                    \n                \n            \n            \n                \nupdateLogInstance(logInstance: ProcessLogEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Updates a log instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logInstance\n                                            \n                                                            ProcessLogEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ProcessLogEntity instance to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pmInitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process-manager.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { Process } from \"./process.constants\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBroker } from \"../../shared/modules/messages-broker/messages-broker.types\";\nimport Status = Process.Status;\nimport Command = Process.Command;\nimport hasProcessInstance = Process.hasProcessInstance;\n\n/**\n * Service for managing processes.\n */\n@Injectable()\nexport class ProcessManagerService {\n  private static pmInitStatus: boolean;\n\n  constructor(\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBroker,\n    @InjectRepository(ProcessUnitEntity)\n    private readonly processUnitRep: Repository,\n    @InjectRepository(ProcessLogEntity)\n    private readonly processLogRep: Repository,\n  ) {}\n\n  /**\n   * Initializes the process manager service, resets process statuses, and registers processes.\n   */\n  async init() {\n    if (ProcessManagerService.pmInitStatus) {\n      this.logger.warn(\"Autostart processes has been executed\");\n      return;\n    }\n    await this.resetAllProcessStatuses();\n    this.logger.log(\"Init process manager\");\n    ProcessManagerService.pmInitStatus = true;\n    const processList = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of processList) {\n      if (!processData.cronTab?.length) {\n        this.logger.warn(\n          `Process ${processData.code} hasn't cron-tab, skip job registration`,\n        );\n        continue;\n      }\n      this.broker.emit(Command.Register, processData);\n    }\n  }\n\n  /**\n   * Starts a process by its code.\n   * @param code - The code of the process to start.\n   */\n  async startProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Start, processData);\n  }\n\n  /**\n   * Stops a process by its code.\n   * @param code - The code of the process to stop.\n   */\n  async stopProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Stop, processData);\n  }\n\n  /**\n   * Toggles the enabled status of a process.\n   * @param code - The code of the process to toggle.\n   */\n  async toggleProcess(code: string) {\n    if (!hasProcessInstance(code)) {\n      throw new InternalServerErrorException(`Process ${code} not exists`);\n    }\n    const processData = await this.processUnitRep.findOne({ where: { code } });\n    processData.enabled = !processData.enabled;\n    await this.processUnitRep.save(processData);\n    if (processData.enabled) {\n      this.broker.emit(Command.Register, processData);\n    } else {\n      this.broker.emit(Command.Unregister, processData);\n    }\n  }\n\n  /**\n   * Sets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @param status - The new status to set.\n   */\n  async setProcessUnitStatus(code: string, status: Process.Status) {\n    const processData = await this.getProcessData(code, true);\n    processData.status = status;\n    return this.processUnitRep.save(processData);\n  }\n\n  /**\n   * Gets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @returns The current status of the process unit.\n   */\n  async getProcessUnitStatus(code: string) {\n    const processData = await this.getProcessData(code, true);\n    return processData.status;\n  }\n\n  /**\n   * Creates a log instance for a process.\n   * @param processCode - The code of the process.\n   * @returns The created ProcessLogEntity instance.\n   */\n  async createLogInstance(processCode: string) {\n    const process = await this.getProcessData(processCode);\n    return this.processLogRep.save({\n      process,\n      content: \"\",\n    } as ProcessLogEntity);\n  }\n\n  /**\n   * Updates a log instance.\n   * @param logInstance - The ProcessLogEntity instance to update.\n   * @returns The updated ProcessLogEntity instance.\n   */\n  updateLogInstance(logInstance: ProcessLogEntity) {\n    return this.processLogRep.save(logInstance);\n  }\n\n  /**\n   * Gets process data by its code.\n   * @param code - The code of the process.\n   * @param force - Whether to force getting the process data regardless of its enabled status.\n   * @returns The ProcessUnitEntity instance.\n   */\n  getProcessData(code: string, force = false) {\n    const params = { code, enabled: true };\n    return this.processUnitRep.findOne({ where: force ? { code } : params });\n  }\n\n  /**\n   * Gets a process log by its ID.\n   * @param id - The ID of the process log.\n   * @returns The ProcessLogEntity instance.\n   */\n  getProcessLogById(id: number) {\n    return this.processLogRep.findOne({\n      where: { id },\n      relations: [\"process\"],\n    });\n  }\n\n  /**\n   * Gets the last logs of a process by its code.\n   * @param processCode - The code of the process.\n   * @param limit - The maximum number of logs to retrieve (default is 3).\n   * @returns An array of ProcessLogEntity instances.\n   */\n  getLastLogsByProcess(processCode: string, limit = 3) {\n    return this.processLogRep.find({\n      where: { process: { code: processCode } },\n      take: limit,\n      order: { tsUpdated: \"DESC\" },\n    });\n  }\n\n  /**\n   * Resets the statuses of all enabled processes to \"Ready\".\n   */\n  private async resetAllProcessStatuses() {\n    const entities = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of entities) {\n      await this.setProcessUnitStatus(processData.code, Status.Ready);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessModule.html":{"url":"modules/ProcessModule.html","title":"module - ProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_providers\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/process/process.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for initializing and managing processes in the application.\nIt uses the NestJS lifecycle hook onApplicationBootstrap to initialize processes on startup.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessManagerService\n                        \n                        \n                            ProcessRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            MessagesBrokerModule\n                        \n                        \n                            WarlockModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProcessManagerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process.module.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Global, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ScheduleModule } from \"@nestjs/schedule\";\nimport { ProcessRegisterService } from \"./process-register.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { MessagesBrokerModule } from \"../../shared/modules/messages-broker/messages-broker.module\";\nimport { WarlockModule } from \"../../shared/modules/warlock/warlock.module\";\n\n/**\n * Module is responsible for initializing and managing processes in the application.\n * It uses the NestJS lifecycle hook `onApplicationBootstrap` to initialize processes on startup.\n */\n@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProcessUnitEntity, ProcessLogEntity]),\n    ScheduleModule.forRoot(),\n    LogModule,\n    MessagesBrokerModule,\n    WarlockModule,\n  ],\n  providers: [ProcessManagerService, ProcessRegisterService],\n  exports: [ProcessManagerService],\n})\nexport class ProcessModule implements OnApplicationBootstrap {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  async onApplicationBootstrap() {\n    await this.pmService.init();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessRegisterService.html":{"url":"injectables/ProcessRegisterService.html","title":"injectable - ProcessRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-register.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for registering and managing cron jobs for processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerCronJob\n                            \n                            \n                                    Private\n                                startProcess\n                            \n                            \n                                    Private\n                                stopProcess\n                            \n                            \n                                    Private\n                                    Async\n                                unregisterCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, lockExec: WarlockFn, broker: MessagesBrokerService, pmService: ProcessManagerService, schedulerRegistry: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-register.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBrokerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        registerCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Registers a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was registered, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Starts a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Stops a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        unregisterCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Unregisters a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to unregister.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was unregistered, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { SchedulerRegistry } from \"@nestjs/schedule\";\nimport { CronJob } from \"cron/dist/job\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { Process } from \"./process.constants\";\nimport { ProcessUnit } from \"./process.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBrokerService } from \"../../shared/modules/messages-broker/messages-broker.service\";\nimport getProcessInstance = Process.getProcessInstance;\nimport Command = Process.Command;\nimport Status = Process.Status;\n\n/**\n * Service for registering and managing cron jobs for processes.\n */\n@Injectable()\nexport class ProcessRegisterService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBrokerService,\n    private readonly pmService: ProcessManagerService,\n    private readonly schedulerRegistry: SchedulerRegistry,\n  ) {\n    broker.subscribe(Command.Register, (data) =>\n      this.registerCronJob(data),\n    );\n    broker.subscribe(Command.Unregister, (data) =>\n      this.unregisterCronJob(data),\n    );\n    broker.subscribe(Command.Start, (data) =>\n      this.startProcess(data),\n    );\n    broker.subscribe(Command.Stop, (data) =>\n      this.stopProcess(data),\n    );\n  }\n\n  /**\n   * Starts a registered process.\n   * @param processData - The data of the process to start.\n   */\n  private startProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    this.lockExec(`${processData.code}_start`, async () =>\n      processInstance.start(),\n    );\n  }\n\n  /**\n   * Stops a registered process.\n   * @param processData - The data of the process to stop.\n   */\n  private stopProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    processInstance.stop();\n  }\n\n  /**\n   * Registers a cron job for a process.\n   * @param processData - The data of the process to register.\n   * @returns True if the cron job was registered, otherwise false.\n   */\n  private async registerCronJob(processData: ProcessUnit) {\n    if (this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't register cron job with code ${processData.code}, that already exists`,\n      );\n      return false;\n    }\n    await this.pmService.setProcessUnitStatus(processData.code, Status.Ready);\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    if (!processData.cronTab?.length) {\n      this.logger.warn(\n        `Process ${processData.code} hasn't cron-tab, skip job registration`,\n      );\n      return false;\n    }\n    const job = new CronJob(processData.cronTab, () => {\n      this.lockExec(\n        processData.code,\n        async () => await processInstance.start(),\n      );\n    });\n    job.start();\n    this.schedulerRegistry.addCronJob(processData.code, job);\n    return true;\n  }\n\n  /**\n   * Unregisters a cron job for a process.\n   * @param processData - The data of the process to unregister.\n   * @returns True if the cron job was unregistered, otherwise false.\n   */\n  private async unregisterCronJob(processData: ProcessUnit) {\n    if (!this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't unregister cron job with code ${processData.code}`,\n      );\n      return false;\n    }\n    const job = this.schedulerRegistry.getCronJob(processData.code);\n    job.stop();\n    this.schedulerRegistry.deleteCronJob(processData.code);\n    this.pmService.stopProcess(processData.code);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessUnit.html":{"url":"interfaces/ProcessUnit.html","title":"interface - ProcessUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process unit.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            cronTab\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cronTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cronTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         ProcessLog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessLog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Process.Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Process.Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessUnitEntity.html":{"url":"entities/ProcessUnitEntity.html","title":"entity - ProcessUnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessUnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.unit.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores system processes, their configuration and state\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                cronTab\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cronTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'cron_tab', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.process, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Process.Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { Process } from \"../process.constants\";\nimport { ProcessUnit } from \"../process.types\";\nimport { ProcessLogEntity } from \"./process.log.entity\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores system processes, their configuration and state\n */\n@Entity(\"process_units\")\nexport class ProcessUnitEntity implements ProcessUnit {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\n      Process.Status.Ready,\n      Process.Status.Execute,\n      Process.Status.Crashed,\n    ],\n    default: null,\n    nullable: true,\n  })\n  status: Process.Status;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  enabled: boolean;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"varchar\", { name: \"cron_tab\", nullable: true })\n  cronTab: string;\n\n  @OneToMany(() => ProcessLogEntity, (c) => c.process, { cascade: true })\n  logs: ProcessLogEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisCacheService.html":{"url":"injectables/RedisCacheService.html","title":"injectable - RedisCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/redis-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service class that provides cache storage functionality implementing the CacheService interface.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, client: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/redis-cache.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True if the operation succeeded, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Retrieves keys that match a given pattern from the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pattern to match keys against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of matching keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the numeric value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the numeric value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the cache storage with an optional expiration time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { CacheService } from \"./cache.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\n\n/**\n * A service class that provides cache storage functionality implementing the CacheService interface.\n */\n@Injectable()\nexport class RedisCacheService implements CacheService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(REDIS_CLIENT) private readonly client: Redis,\n  ) {}\n\n  /**\n   * Retrieves the value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the value of the key or null if an error occurs.\n   */\n  async get(key: string): Promise {\n    try {\n      return await this.client.get(key);\n    } catch (error) {\n      this.logger.error(`Error while getting key \"${key}\" from Redis:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return val === \"true\";\n  }\n\n  /**\n   * Retrieves the numeric value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the numeric value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the cache storage with an optional expiration time.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    try {\n      if (expiresIn) {\n        await this.client.set(key, value, \"EX\", expiresIn);\n      } else {\n        await this.client.set(key, value);\n      }\n      return true;\n    } catch (error) {\n      this.logger.error(`Error while setting key \"${key}\" in Redis:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Deletes the specified keys from the cache storage.\n   *\n   * @param keys - The keys to delete from the cache.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async del(...keys: string[]): Promise {\n    try {\n      await this.client.del(...keys);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while deleting keys \"${keys.join(\", \")}\" from Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Increments the value of the specified key in the cache storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    try {\n      return await this.client.incr(key);\n    } catch (error) {\n      this.logger.error(\n        `Error while incrementing key \"${key}\" in Redis:`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Sets the expiration time for the given key in the Redis cache.\n   * @param key - The key to set the expiration time for.\n   * @param expiresIn - The expiration time in seconds.\n   * @returns True if the operation succeeded, false otherwise.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    try {\n      await this.client.expire(key, expiresIn);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while setting expiration for key \"${key}\" in Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves keys that match a given pattern from the Redis cache.\n   * @param pattern - The pattern to match keys against.\n   * @returns An array of matching keys.\n   */\n  getFromPattern(pattern: string): Promise {\n    return new Promise((resolve, reject) => {\n      const keys: string[] = [];\n      const stream = this.client.scanStream({ match: pattern });\n      stream.on(\"data\", (chunk: string[]) => {\n        keys.push(...chunk);\n      });\n      stream.on(\"end\", () => {\n        resolve(keys);\n      });\n      stream.on(\"error\", (err: Error) => {\n        this.logger.error(err);\n        reject(err);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/redis.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides Redis client configuration and setup.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Logger, Module } from \"@nestjs/common\";\nimport { Redis } from \"ioredis\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\n\n/**\n * A module that provides Redis client configuration and setup.\n */\n@Module({})\nexport class RedisModule {\n  private static redisInstance: Redis | null = null;\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => {\n      config: {\n        host: string;\n        port: number;\n        db: number;\n        username: string;\n        password: string;\n      };\n    };\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: RedisModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: REDIS_CLIENT,\n          useFactory: async (...args: any[]) => {\n            if (!RedisModule.redisInstance) {\n              const logger = args.find((arg) => arg instanceof Logger);\n              EnvLoader.loadEnvironment(logger);\n              const redisOptions = useFactory(...args).config;\n              RedisModule.redisInstance = new Redis(redisOptions);\n            }\n            return RedisModule.redisInstance;\n          },\n          inject,\n        },\n      ],\n      exports: [REDIS_CLIENT],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Roles.html":{"url":"classes/Roles.html","title":"class - Roles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Roles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/constants.ts\n        \n\n\n            \n                Description\n            \n            \n                A class containing static constants representing different user roles.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MANAGER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROOT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"admin\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:30\n                        \n                    \n\n            \n                \n                    Represents the admin role with administrative access.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"manager\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:35\n                        \n                    \n\n            \n                \n                    Represents the manager role.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"root\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:25\n                        \n                    \n\n            \n                \n                    Represents the root role with the highest level of access.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Roles {\n  /**\n   * @constant ROOT\n   * Represents the root role with the highest level of access.\n   */\n  static readonly ROOT = \"root\";\n  /**\n   * @constant ADMIN\n   * Represents the admin role with administrative access.\n   */\n  static readonly ADMIN = \"admin\";\n  /**\n   * @constant MANAGER\n   * Represents the manager role.\n   */\n  static readonly MANAGER = \"manager\";\n}\n\n/**\n * An object containing properties used for request handling.\n */\nexport const REQUEST_PROPS = {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n};\n\n/**\n * A constant representing the exception identifier for microservices.\n */\nexport const MS_EXCEPTION_ID = \"MsException\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    A guard for role-based access control.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/roles.guard.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserUtils } from \"../utils/user.utils\";\nimport { AllowedForMetadataKey } from \"../decorators/for-roles.decorator\";\nimport { UserRole } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS, Roles } from \"../constants\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n/**\n * @class RolesGuard\n * A guard for role-based access control.\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      AllowedForMetadataKey,\n      context.getHandler(),\n    );\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const userRoles: UserRole[] = req[REQUEST_PROPS.currentUser]?.roles || [];\n    if (hasSomeRole(userRoles, Roles.ROOT)) {\n      return true;\n    }\n    for (const role of userRoles) {\n      if (roles.indexOf(role.code) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetData.html":{"url":"interfaces/TargetData.html","title":"interface - TargetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TargetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the data of an explorer target.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            namedColumn\n                                        \n                                \n                                \n                                        \n                                            primaryColumn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namedColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namedColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmpDirCleanerProcess.html":{"url":"classes/TmpDirCleanerProcess.html","title":"class - TmpDirCleanerProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmpDirCleanerProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/default/tmp-dir-cleaner.process.ts\n        \n\n\n            \n                Description\n            \n            \n                Process class for cleaning the temporary directory.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractProcess\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                getDeleteStats\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pmService: ProcessManagerService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:32\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:42\n\n                        \n                    \n\n\n            \n                \n                        Executes the process to clean the temporary directory.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDeleteStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeleteStats(dirStruct: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets statistics on the number of files and folders to be deleted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dirStruct\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe structure of the directory.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filesCount: number; foldersCount: number; }\n\n                        \n                            \n                                An object containing the file and folder counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:165\n\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:157\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:140\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:148\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:173\n\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:44\n\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:80\n\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:94\n\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractProcess } from \"../abstract-process\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"../process-manager.service\";\nimport * as fs from \"fs\";\nimport { KpConfig } from \"../../../../gen-src/kp.config\";\nimport { FilesUtils } from \"../../../shared/utils/files.utils\";\nimport { LOGGER } from \"../../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../../shared/modules/cache/cache.types\";\nimport readDirectoryRecursively = FilesUtils.readDirectoryRecursively;\n\n/**\n * Process class for cleaning the temporary directory.\n */\nexport class TmpDirCleanerProcess extends AbstractProcess {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly pmService: ProcessManagerService,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Executes the process to clean the temporary directory.\n   */\n  protected async execute() {\n    const tmpDir =\n      process.cwd() + (await this.cacheService.get(KpConfig.TMP_DIR));\n    if (!fs.existsSync(tmpDir)) {\n      await this.writeLog(`Nothing to delete`);\n      return;\n    }\n    const dirStruct = await readDirectoryRecursively(tmpDir);\n    const stats = this.getDeleteStats(dirStruct as { [k: string]: string[] });\n    await this.writeLog(\n      `Try to delete ${stats.filesCount} files and ${stats.foldersCount} folders...`,\n    );\n    await fs.promises.rm(tmpDir, { recursive: true, force: true });\n    await this.writeLog(`Tmp dir was cleaned`);\n  }\n\n  /**\n   * Gets statistics on the number of files and folders to be deleted.\n   * @param dirStruct - The structure of the directory.\n   * @returns An object containing the file and folder counts.\n   */\n  private getDeleteStats(dirStruct: { [k: string]: string[] }) {\n    let filesCount = 0;\n    let foldersCount = 0;\n    for (const key in dirStruct) {\n      filesCount += dirStruct[key].length;\n      if (!key.length) {\n        continue;\n      }\n      foldersCount++;\n    }\n    return { filesCount, foldersCount };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyRequestsMsException.html":{"url":"classes/TooManyRequestsMsException.html","title":"class - TooManyRequestsMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyRequestsMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/too-many-requests-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for too many requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/too-many-requests-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for too many requests, extending MsException.\n */\nexport class TooManyRequestsMsException extends MsException {\n  constructor(message?: string) {\n    super(\n      HttpStatus.TOO_MANY_REQUESTS,\n      message || \"You have made too many requests. Please try again later.\",\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedMsException.html":{"url":"classes/UnauthorizedMsException.html","title":"class - UnauthorizedMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/unauthorized-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for unauthorized requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/unauthorized-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for unauthorized requests, extending MsException.\n */\nexport class UnauthorizedMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Unauthorized request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpsertMediaRequest.html":{"url":"interfaces/UpsertMediaRequest.html","title":"interface - UpsertMediaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpsertMediaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the request to upsert a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityIdForPatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityName\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityIdForPatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityIdForPatch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityName:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the users of the system\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'first_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'last_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { UserRoleEntity } from \"./user-role.entity\";\nimport { User } from \"../user.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\n\n/**\n * The entity stores the users of the system\n */\n@Entity(\"users\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class UserEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  avatar: MediaEntity;\n\n  @Column(\"varchar\", { nullable: false })\n  password: string;\n\n  @Column(\"varchar\", { nullable: false, unique: true })\n  login: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  email: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  phone: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"first_name\", nullable: true })\n  firstName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"last_name\", nullable: true })\n  lastName: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  active: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  roles: UserRoleEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityPwdAndRolesSaveHandler.html":{"url":"injectables/UserEntityPwdAndRolesSaveHandler.html","title":"injectable - UserEntityPwdAndRolesSaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityPwdAndRolesSaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, payload: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { EntitySaveHandler } from \"../explorer.types\";\nimport { User } from \"../../user/user.types\";\nimport { Roles } from \"../../../shared/constants\";\n\n/**\n * Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n */\n@Injectable()\nexport class UserEntityPwdAndRolesSaveHandler\n  implements EntitySaveHandler\n{\n  handle(target: string, payload: User, currentUser: User) {\n    if (!currentUser.roles.find((v) => v.code === Roles.ROOT)) {\n      if (payload.id) {\n        delete payload.password;\n        delete payload.login;\n      }\n      delete payload.roles;\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for managing system users\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: UserModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.module.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UserModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicUserService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { BasicUserService } from \"./user-service-basic.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { UserModuleOptions, UserService } from \"./user.types\";\n\n/**\n * Module is responsible for managing system users\n */\n@Module({})\nexport class UserModule {\n  static forRoot(\n    options: UserModuleOptions = {\n      service: BasicUserService,\n    },\n  ): DynamicModule {\n    return {\n      module: UserModule,\n      imports: [TypeOrmModule.forFeature([UserEntity])],\n      providers: [\n        {\n          provide: UserService,\n          useClass: options.service,\n        },\n      ],\n      exports: [UserService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRole.html":{"url":"interfaces/UserRole.html","title":"interface - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user role.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user role.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoleEntity.html":{"url":"entities/UserRoleEntity.html","title":"entity - UserRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the roles of the system users\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { UserRole } from \"../user.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores the roles of the system users\n */\n@Entity(\"users_roles\")\nexport class UserRoleEntity implements UserRole {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the user service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByLogin\n                            \n                            \n                                    Abstract\n                                removeById\n                            \n                            \n                                    Abstract\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                A subscriber for UserEntity that handles entity events such as insert and update.\nIt validates the login and hashes the password before these events.\n\n            \n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserEntity\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.subscriber.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            InsertEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  EventSubscriber,\n  UpdateEvent,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { AbstractUserSubscriber } from \"../abstract-user-subscriber\";\n\n/**\n * A subscriber for UserEntity that handles entity events such as insert and update.\n * It validates the login and hashes the password before these events.\n */\n@EventSubscriber()\nexport class UserSubscriber\n  extends AbstractUserSubscriber\n  implements EntitySubscriberInterface\n{\n  protected readonly type = UserEntity;\n\n  listenTo() {\n    return UserEntity;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this.validateLogin(event.entity.login);\n    await this.hashPasswordIfNeeded(event);\n  }\n\n  async beforeUpdate(event: UpdateEvent) {\n    if (event.entity.login) {\n      await this.validateLogin(event.entity.login);\n    }\n    await this.hashPasswordIfNeeded(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateRequest.html":{"url":"interfaces/UserUpdateRequest.html","title":"interface - UserUpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a request to update a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoFileMetadata.html":{"url":"interfaces/VideoFileMetadata.html","title":"interface - VideoFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing video file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            colorRange\n                                        \n                                \n                                \n                                        \n                                            colorSpace\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            displayAspectRatio\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            frameRate\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rotate\n                                        \n                                \n                                \n                                        \n                                            sampleAspectRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frameRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frameRate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VideoFileMetadataEntity.html":{"url":"entities/VideoFileMetadataEntity.html","title":"entity - VideoFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VideoFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/video-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the video metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                colorRange\n                            \n                            \n                                    \n                                    \n                                colorSpace\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                displayAspectRatio\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                frameRate\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                rotate\n                            \n                            \n                                    \n                                    \n                                sampleAspectRatio\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_range', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'display_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        frameRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'frame_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rotate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'sample_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { VideoFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the video metadata of the file\n */\n@Entity(\"file_metadata_video\")\nexport class VideoFileMetadataEntity implements VideoFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"sample_aspect_ratio\", nullable: true })\n  sampleAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"display_aspect_ratio\", nullable: true })\n  displayAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_range\", nullable: true })\n  colorRange: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_space\", nullable: true })\n  colorSpace: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"frame_rate\", nullable: true })\n  frameRate: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  rotate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WarlockModule.html":{"url":"modules/WarlockModule.html","title":"module - WarlockModule","body":"\n                   \n\n\n\n\n    Modules\n    WarlockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WarlockModule\n\n\n\ncluster_WarlockModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/warlock/warlock.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides functionality for locking mechanisms using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport * as Warlock from \"node-redis-warlock\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { WARLOCK } from \"./warlock.constants\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\nimport { WarlockFn } from \"./warlock.types\";\n\n/**\n * A module that provides functionality for locking mechanisms using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: WARLOCK,\n      inject: [REDIS_CLIENT],\n      useFactory: (\n        client: Redis,\n        lockLifeTime = 10000,\n        lockKey = \"lock\",\n      ): WarlockFn => {\n        const warlock = Warlock(client);\n        return function (lockCode: string, caller: () => Promise) {\n          warlock.lock(\n            `${lockKey}:${lockCode}`,\n            lockLifeTime,\n            async (err, unlock) => {\n              if (err) {\n                return;\n              }\n              if (typeof unlock === \"function\") {\n                await caller();\n                unlock();\n              }\n            },\n          );\n        };\n      },\n    },\n  ],\n  exports: [WARLOCK],\n})\nexport class WarlockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbExportService.html":{"url":"classes/XdbExportService.html","title":"class - XdbExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data export services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exportXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exportXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportXml(params: XdbExportParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbImportService.html":{"url":"classes/XdbImportService.html","title":"class - XdbImportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data import services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                importFromFile\n                            \n                            \n                                    Abstract\n                                importXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFromFile(fileData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    importXml(xml: XdbObject)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XdbRequest.html":{"url":"interfaces/XdbRequest.html","title":"interface - XdbRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XdbRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an XML data bridge request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type, Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { DynamicModule } from \"@nestjs/common/interfaces/modules/dynamic-module.interface\";\nimport { ForwardReference } from \"@nestjs/common/interfaces/modules/forward-reference.interface\";\nimport { ObjectLiteral } from \"typeorm\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { User } from \"../user/user.types\";\n\n/**\n * Interface representing an XML data bridge request.\n */\nexport interface XdbRequest {\n  target: string;\n  id: string;\n}\n\n/**\n * Type representing a row data value in the XML data bridge.\n */\nexport type XdbRowDataValue = {\n  attrs?: {\n    key?: string;\n    uri?: string;\n    mode?: \"push\";\n  };\n  value?: string;\n  values?: string[];\n};\n\n/**\n * Type representing a row of data in the XML data bridge.\n */\nexport type XdbRowData = {\n  [key: string]: XdbRowDataValue;\n};\n\n/**\n * Type representing a media row in the XML data bridge.\n */\nexport type MediaRow = {\n  name: XdbRowDataValue;\n  code: string;\n  type: string;\n  file: string;\n};\n\n/**\n * Type representing a file row in the XML data bridge.\n */\nexport type FileRow = {\n  name: string;\n  code: string;\n  public: boolean;\n  file: string;\n};\n\n/**\n * Type representing an action in the XML data bridge.\n */\nexport type XdbAction = {\n  action: \"InsertUpdate\" | \"Media\" | \"File\" | \"Remove\" | \"Include\" | \"Query\";\n  attrs: {\n    target?: string;\n    read?: string;\n    content?: string;\n  };\n  rows: Array;\n};\n\n/**\n * Type representing an XML data bridge object.\n */\nexport type XdbObject = {\n  schema: XdbAction[];\n};\n\n/**\n * Options for configuring the XmlDataBridgeModule.\n */\nexport type XdbModuleOptions = {\n  importService: Class;\n  exportService: Class;\n  imports: Array | DynamicModule | Promise | ForwardReference\n  >;\n};\n\n/**\n * Type representing export parameters for the XML data bridge.\n */\nexport type XdbExportParams = {\n  target: string;\n  id: string;\n  depth: number;\n  useFiles: boolean;\n  excludeProperties: string[];\n  user: User;\n};\n\n/**\n * Type representing the export DTO for the XML data bridge.\n */\nexport type XdbExportDto = {\n  file: string;\n};\n\n/**\n * Type representing a decomposed entity in the XML data bridge.\n */\nexport type XdbDecomposedEntity = {\n  metadata: { type: string; fieldName: string; path: string };\n  data: ObjectLiteral | Array;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlDataBridgeMiddleware.html":{"url":"injectables/XmlDataBridgeMiddleware.html","title":"injectable - XmlDataBridgeMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlDataBridgeMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                Middleware for parsing XML data from requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseXMLFromRequest\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseXMLFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseXMLFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:47\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the parsed XML data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:34\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request and modifies the request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe response object.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next function to call.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Xdb.getXmlParser()\n                    \n                \n                    \n                        \n                                Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { Xdb } from \"./xml-data-bridge.constants\";\n\n/**\n * Middleware for parsing XML data from requests.\n */\n@Injectable()\nexport class XmlDataBridgeMiddleware implements NestMiddleware {\n  private readonly parser = Xdb.getXmlParser();\n\n  /**\n   * Parses XML data from the request and modifies the request body.\n   * @param req - The request object.\n   * @param res - The response object.\n   * @param next - The next function to call.\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[\"content-type\"] === \"application/xml\") {\n      req.body = await this.parseXMLFromRequest(req);\n      req.body = Xdb.parseXmlBody(req.body);\n    }\n    next();\n  }\n\n  /**\n   * Parses XML data from the request.\n   * @param req - The request object.\n   * @returns A promise that resolves to the parsed XML data.\n   */\n  private parseXMLFromRequest(req: Request): Promise {\n    return new Promise((resolve, reject) => {\n      let xmlData = \"\";\n      req.on(\"data\", (chunk) => {\n        xmlData += chunk;\n      });\n      req.on(\"end\", () => {\n        this.parser.parseString(xmlData, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result as object);\n          }\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XmlDataBridgeModule.html":{"url":"modules/XmlDataBridgeModule.html","title":"module - XmlDataBridgeModule","body":"\n                   \n\n\n\n\n    Modules\n    XmlDataBridgeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for import and export XML-configuration.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: XdbModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            XdbModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { XdbModuleOptions } from \"./xml-data-bridge.types\";\nimport { XmlDataBridgeImportService } from \"./xml-data-bridge-import.service\";\nimport { XmlDataBridgeExportService } from \"./xml-data-bridge-export.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { ExplorerModule } from \"../explorer/explorer.module\";\nimport { FileModule } from \"../file/file.module\";\nimport { MediaModule } from \"../media/media.module\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\n\n/**\n * Module responsible for import and export XML-configuration.\n */\n@Module({})\nexport class XmlDataBridgeModule {\n  static forRoot(\n    options: XdbModuleOptions = {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    },\n  ): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: options.imports,\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: options.importService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: options.exportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/axios : 3.*\n        \n            @nestjs/common : 10.*\n        \n            @nestjs/core : 10.*\n        \n            @nestjs/jwt : 10.*\n        \n            @nestjs/microservices : 10.*\n        \n            @nestjs/passport : 10.*\n        \n            @nestjs/schedule : 4.*\n        \n            adm-zip : 0.5.*\n        \n            axios : 1.*\n        \n            bcrypt : 5.*\n        \n            canvas : 2.11.*\n        \n            class-transformer : 0.5.*\n        \n            class-validator : 0.14.*\n        \n            dotenv : 16.*\n        \n            exifreader : 4.*\n        \n            ffprobe : 1.*\n        \n            ffprobe-static : 3.*\n        \n            file-type : 19.*\n        \n            heic-convert : 2.*\n        \n            imagemin : 7.*\n        \n            imagemin-mozjpeg : 9.*\n        \n            imagemin-pngquant : 9.*\n        \n            ioredis : 5.*\n        \n            music-metadata : 7.*\n        \n            node-redis-warlock : 1.*\n        \n            object-hash : 3.*\n        \n            reflect-metadata : 0.2.*\n        \n            rxjs : 7.*\n        \n            sharp : 0.33.*\n        \n            typeorm : 0.3.*\n        \n            uuid : 9.*\n        \n            xml2js : 0.6.*\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (lib/.../process.constants.ts)\n                        \n                        \n                            LogLevel   (lib/.../process.constants.ts)\n                        \n                        \n                            SortOrder   (lib/.../pageable.types.ts)\n                        \n                        \n                            Status   (lib/.../process.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/process/process.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            Enum of possible process commands.\n\n                        \n                    \n                        \n                            \n                                 Register\n                            \n                        \n                        \n                            \n                                Value : process:register\n                            \n                        \n                        \n                            \n                                 Unregister\n                            \n                        \n                        \n                            \n                                Value : process:unregister\n                            \n                        \n                        \n                            \n                                 Start\n                            \n                        \n                        \n                            \n                                Value : process:start\n                            \n                        \n                        \n                            \n                                 Stop\n                            \n                        \n                        \n                            \n                                Value : process:stop\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Enum of log levels.\n\n                        \n                    \n                        \n                            \n                                 Log\n                            \n                        \n                        \n                            \n                                Value : LOG\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 Verbose\n                            \n                        \n                        \n                            \n                                Value : VERBOSE\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Enum of possible process statuses.\n\n                        \n                    \n                        \n                            \n                                 Execute\n                            \n                        \n                        \n                            \n                                Value : execute\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : ready\n                            \n                        \n                        \n                            \n                                 Crashed\n                            \n                        \n                        \n                            \n                                Value : crashed\n                            \n                        \n            \n        \n\n    lib/shared/modules/pageable/pageable.types.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n     K-Platform is a framework for the rapid development of modern applications\n\n\nEmbedded platform's modules\n\nExplorer: analyzes the database schema and dynamically updates the admin-panel UI for CRUD operations, paginated displaying of entity data with their relationships etc., providing flexibility and extensibility with TypeORM integration.\nXML data-bridge: automates the data management process, simplifying the tasks of importing and exporting data. Uses specific XML-markup to transfer the state of the database or pinpoint transfer of certain records in tables between different servers.\nBackground processes: module for management of background tasks, providing features like automatic startup, dynamic control, and comprehensive logging. Enabling efficient and reliable handling of recurring tasks through advanced cron-job scheduling and inter-module communication.\nMedia: provides powerful capabilities for working with various types of media files. It supports uploading, thumbnail slicing, automatic creation of optimized copies, as well as storing copies in modern formats such as WEBP. It is able to work with vector images. Stores metadata of files, including extend metadata such as GPS, ICC, EXIF etc.\nFiles: provides easy integration and powerful file management, including uploading, storing in public and private directories. Support storing extended metadata for images, audio and video files.\nUsers: provide scalable functionality for managing system users. Supports password encrypting, user profile management with role-based access control.\nAuthorization: provides a OAuth 2.0 mechanism for authentication and authorization of users in the system, as well as protection against brute-force attacks.\nCaptcha: represents two built-in CAPTCHA-types: Google reCAPTCHA and standard graphical CAPTCHA. You can also extend the module with your own CAPTCHA implementation.\nConfiguration: allows you to effectively manage the application settings using .properties files, supports real-time dynamic configuration change and type safety through automatic generation of TypeScript files. Also supports local and global overrides, which allow you to flexibly adapt the configuration for different environments.\n\n\nAdmin-panel of application is based on Angular,\nplease read more details about here.\n\nDocumentation\nPlease navigate to guides folder for read detailed documentations of application and also visit codebase documentations website\nFast start\ntodo \n\nNote: all modules has been tested only with Postgres and MySQL database systems.\n\nBased on\n\n    \n\n       \n\n    \n\n       \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2023 Alexander Kiriliuk\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesBrokerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MsClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WarlockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XmlDataBridgeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MsClientModule\n\n\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : todo description\n        \n            License : Apache-2.0\n        \n            Author : Alexander Kiriliuk\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthModuleOptions   (lib/.../auth.types.ts)\n                        \n                        \n                            CaptchaModuleOptions   (lib/.../captcha.types.ts)\n                        \n                        \n                            CaptchaResponse   (lib/.../captcha.types.ts)\n                        \n                        \n                            ColumnDataType   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerModuleOptions   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerSelectParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerTargetParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            FileModuleOptions   (lib/.../file.types.ts)\n                        \n                        \n                            FileRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MediaModuleOptions   (lib/.../media.types.ts)\n                        \n                        \n                            MediaRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MsClientOptions   (lib/.../ms-client.types.ts)\n                        \n                        \n                            UserModuleOptions   (lib/.../user.types.ts)\n                        \n                        \n                            Variation   (lib/.../explorer.constants.ts)\n                        \n                        \n                            WarlockFn   (lib/.../warlock.types.ts)\n                        \n                        \n                            XdbAction   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbDecomposedEntity   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportDto   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportParams   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbModuleOptions   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbObject   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowData   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowDataValue   (lib/.../xml-data-bridge.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.types.ts\n    \n    \n        \n            \n                \n                    \n                    AuthModuleOptions\n                \n            \n            \n                \n                    Options for configuring the authentication module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/captcha/captcha.types.ts\n    \n    \n        \n            \n                \n                    \n                    CaptchaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the CAPTCHA module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaptchaResponse\n                \n            \n            \n                \n                    Type representing a CAPTCHA response for client side.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.types.ts\n    \n    \n        \n            \n                \n                    \n                    ColumnDataType\n                \n            \n            \n                \n                    Type representing embedded data types for a column.\n\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"date\" | \"reference\" | \"unknown\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerModuleOptions\n                \n            \n            \n                \n                    Options for configuring the Explorer module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerSelectParams\n                \n            \n            \n                \n                    Type representing selection parameters for an explorer entity.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerTargetParams\n                \n            \n            \n                \n                    Type representing parameters for find explorer targets\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/file/file.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileModuleOptions\n                \n            \n            \n                \n                    Options for configuring the FileModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/xml-data-bridge/xml-data-bridge.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileRow\n                \n            \n            \n                \n                    Type representing a file row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaRow\n                \n            \n            \n                \n                    Type representing a media row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbAction\n                \n            \n            \n                \n                    Type representing an action in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbDecomposedEntity\n                \n            \n            \n                \n                    Type representing a decomposed entity in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportDto\n                \n            \n            \n                \n                    Type representing the export DTO for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportParams\n                \n            \n            \n                \n                    Type representing export parameters for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbModuleOptions\n                \n            \n            \n                \n                    Options for configuring the XmlDataBridgeModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbObject\n                \n            \n            \n                \n                    Type representing an XML data bridge object.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowData\n                \n            \n            \n                \n                    Type representing a row of data in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowDataValue\n                \n            \n            \n                \n                    Type representing a row data value in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/media/media.types.ts\n    \n    \n        \n            \n                \n                    \n                    MediaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the MediaModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/shared/modules/ms-client/ms-client.types.ts\n    \n    \n        \n            \n                \n                    \n                    MsClientOptions\n                \n            \n            \n                \n                    Type definition for microservices client options.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/user/user.types.ts\n    \n    \n        \n            \n                \n                    \n                    UserModuleOptions\n                \n            \n            \n                \n                    Options for configuring the UserModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Variation\n                \n            \n            \n                \n                    Type representing a fetch-mode for explorer entity.\n\n                \n            \n            \n                \n                        \"section\" | \"object\"\n\n                \n            \n        \n    \n    lib/shared/modules/warlock/warlock.types.ts\n    \n    \n        \n            \n                \n                    \n                    WarlockFn\n                \n            \n            \n                \n                    Type definition for the warlock function used for locking mechanisms.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            AccessToken   (lib/.../access-token.decorator.ts)\n                        \n                        \n                            AllowedForMetadataKey   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            AUTH_ACCESS_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_REFRESH_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            BODY_TOKEN   (lib/.../xml-data-bridge-file-schema.ts)\n                        \n                        \n                            BRUTEFORCE_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceIPKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceLoginKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            CAPTCHA_CACHE_PREFIX   (lib/.../captcha.constants.ts)\n                        \n                        \n                            CATEGORY_RELATIONS   (lib/.../category.constants.ts)\n                        \n                        \n                            CONFIG_CACHE_PREFIX   (lib/.../config.constants.ts)\n                        \n                        \n                            CONFIG_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            CurrentUser   (lib/.../current-user.decorator.ts)\n                        \n                        \n                            DEFAULT_MEDIA_QUALITY   (lib/.../media.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_TYPE   (lib/.../media.constants.ts)\n                        \n                        \n                            ENTITY_SAVE_HANDLER   (lib/.../explorer.constants.ts)\n                        \n                        \n                            FILES_ENCODING   (lib/.../config.constants.ts)\n                        \n                        \n                            fileTypeModule   (lib/.../files.utils.ts)\n                        \n                        \n                            ForRoles   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            GEN_SRC_DIR   (lib/.../config.constants.ts)\n                        \n                        \n                            InitConfig   (lib/.../config.init-fn.ts)\n                        \n                        \n                            jwtAccessTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            jwtRefreshTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            KP_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOCAL_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOGGER   (lib/.../log.constants.ts)\n                        \n                        \n                            MEDIA_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MEDIA_TYPE_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MESSAGES_BROKER   (lib/.../messages-broker.constants.ts)\n                        \n                        \n                            MS_CLIENT   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            MS_EXCEPTION_ID   (lib/.../constants.ts)\n                        \n                        \n                            MSG_BUS   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            ORIGINAL   (lib/.../media.constants.ts)\n                        \n                        \n                            parser   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            PROPERTIES_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            ReadOperatorRe   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            REDIS_CLIENT   (lib/.../cache.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            REGISTERED_PROCESSES   (lib/.../process.constants.ts)\n                        \n                        \n                            REQUEST_PROPS   (lib/.../constants.ts)\n                        \n                        \n                            rootToken   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            SimpleJsonTransformer   (lib/.../simple-json.transformer.ts)\n                        \n                        \n                            SVG   (lib/.../media.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_BASIC   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_FULL   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_OBJECT   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_SECTION   (lib/.../explorer.constants.ts)\n                        \n                        \n                            THUMB   (lib/.../media.constants.ts)\n                        \n                        \n                            UNKNOWN_IP   (lib/.../auth.constants.ts)\n                        \n                        \n                            USER_RELATIONS   (lib/.../user.constants.ts)\n                        \n                        \n                            WARLOCK   (lib/.../warlock.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_A\"\n                    \n                \n\n            \n                \n                    Error message for access token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"access_token\"\n                    \n                \n\n            \n                \n                    Prefix for access token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt\"\n                    \n                \n\n            \n                \n                    Prefix for JWT cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refresh_token\"\n                    \n                \n\n            \n                \n                    Prefix for refresh token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BRUTEFORCE_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bruteforce\"\n                    \n                \n\n            \n                \n                    Prefix for brute force protection cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceIPKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by IP address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtAccessTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for an access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtRefreshTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for a refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_R\"\n                    \n                \n\n            \n                \n                    Error message for refresh token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNKNOWN_IP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"unknown\"\n                    \n                \n\n            \n                \n                    Placeholder for unknown IP addresses.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/access-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.accessToken];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting access token from a request.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/for-roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedForMetadataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"for_roles\"\n                    \n                \n\n            \n                \n                    A constant string key used for role-based access control metadata.\nThis key is used to annotate routes or controllers with the roles allowed to access them.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) =>\n  SetMetadata(AllowedForMetadataKey, roles)\n                    \n                \n\n            \n                \n                    ForRoles custom decorator for defining roles allowed to access a route.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge-file-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BODY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `%%%body%%%`\n                    \n                \n\n            \n                \n                    A placeholder string used for tokenizing the body content within templates.\nThis token is used to dynamically replace or insert content in XML or other templated strings.\n\n                \n            \n\n        \n    \n\n    lib/common/captcha/captcha.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CAPTCHA_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"captcha\"\n                    \n                \n\n            \n                \n                    The prefix used for storing CAPTCHA data.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/category/category.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"icon\",\n  \"icon.name\",\n  \"icon.name.lang\",\n  \"icon.files\",\n  \"icon.files.format\",\n  \"icon.type\",\n  \"icon.type.ext\",\n  \"name\",\n  \"name.lang\",\n]\n                    \n                \n\n            \n                \n                    An array defining the relations to be loaded with the Category entity.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"config\"\n                    \n                \n\n            \n                \n                    The prefix used for storing configuration items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".config.ts\"\n                    \n                \n\n            \n                \n                    The pattern for configuration file extensions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_ENCODING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"utf-8\"\n                    \n                \n\n            \n                \n                    The encoding used for reading and writing configuration files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GEN_SRC_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"gen-src\"\n                    \n                \n\n            \n                \n                    The directory where generated source files are stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KP_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"kp.properties\"\n                    \n                \n\n            \n                \n                    The name of the kp properties file.\nIt is assumed that this is the main configuration file, located in the root of the project\nand can override the properties of any .properties in the entire project\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"local.properties\"\n                    \n                \n\n            \n                \n                    The name of the local properties file\nIt is assumed that such files override neighboring ones .properties files and are out of version control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROPERTIES_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".properties\"\n                    \n                \n\n            \n                \n                    The pattern for properties file extensions.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.currentUser];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting the current user from a request.\n\n                \n            \n\n        \n    \n\n    lib/common/media/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_QUALITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 78\n                    \n                \n\n            \n                \n                    Default media quality value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n\n            \n                \n                    Default media type code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"name\",\n  \"name.lang\",\n  \"type\",\n  \"type.formats\",\n  \"type.ext\",\n  \"files\",\n  \"files.format\",\n]\n                    \n                \n\n            \n                \n                    Array containing relations for media.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_TYPE_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"ext\", \"formats\"]\n                    \n                \n\n            \n                \n                    Array containing relations for media type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORIGINAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"original\"\n                    \n                \n\n            \n                \n                    Represents the original media format.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"svg\"\n                    \n                \n\n            \n                \n                    Represents the SVG media extension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THUMB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"thumb\"\n                    \n                \n\n            \n                \n                    Represents the thumbnail media format.\n\n                \n            \n\n        \n    \n\n    lib/common/explorer/explorer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTITY_SAVE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"ENTITY_SAVE_HANDLER\")\n                    \n                \n\n            \n                \n                    Token for injecting entity save handler.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_BASIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n  ]\n                    \n                \n\n            \n                \n                    Basic target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_FULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.description\",\n    \"columns.description.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n    \"canRead\",\n    \"canRead.name\",\n    \"canRead.name.lang\",\n    \"canWrite\",\n    \"canWrite.name\",\n    \"canWrite.name.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Full target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for object-entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_SECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for section-entities.\n\n                \n            \n\n        \n    \n\n    lib/shared/utils/files.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileTypeModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as { lib: typeof import(\"file-type\") }\n                    \n                \n\n            \n                \n                    Object to hold the dynamically imported file-type module.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.init-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InitConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(ConfigModule);\n  await app.init();\n  const logger: Logger = app.select(LogModule).get(LOGGER);\n  EnvLoader.loadEnvironment(logger);\n  const configService = app.select(ConfigModule).get(ConfigService);\n  const genCnfDir = `${process.cwd()}/${process.env.CONFIG_SRC_DIR}`;\n  await configService.initWithPropertiesFiles(genCnfDir);\n  await app.close();\n  process.exit(0);\n}\n                    \n                \n\n            \n                \n                    Asynchronously initializes the application context with the ConfigModule,\nloads environment variables, and initializes the configuration service with .properties files.\nThis function used for initialize config store\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/log/log.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOGGER_SERVICE\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for the LogService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/messages-broker/messages-broker.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES_BROKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BROKER\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the MessagesBrokerService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/ms-client/ms-client.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MS_CLIENT\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the microservices' client.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MSG_BUS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BUS\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the message bus.\n\n                \n            \n\n        \n    \n\n    lib/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_EXCEPTION_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"MsException\"\n                    \n                \n\n            \n                \n                    A constant representing the exception identifier for microservices.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n}\n                    \n                \n\n            \n                \n                    An object containing properties used for request handling.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n\n            \n                \n                    Stored xml-parser instance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReadOperatorRe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\$\\{@read:([^}]*)}/\n                    \n                \n\n            \n                \n                    Regex for detect read-operator in xml-schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"@root\"\n                    \n                \n\n            \n                \n                    Representing root-node identifier\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/cache/cache.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"REDIS_CLIENT\")\n                    \n                \n\n            \n                \n                    A symbol used for injecting the Redis client.\n\n                \n            \n\n        \n    \n\n    lib/common/process/process.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTERED_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n            \n                \n                    Sore for registered processes\n\n                \n            \n\n        \n    \n\n    lib/shared/transformers/simple-json.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SimpleJsonTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValueTransformer\n\n                    \n                \n                \n                    \n                        Default value : {\n  from(value: string | object) {\n    if (typeof value === \"string\") {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return undefined;\n      }\n    }\n    return value;\n  },\n  to(value: object) {\n    return value;\n  },\n}\n                    \n                \n\n            \n                \n                    A ValueTransformer for transforming JSON data in a database column.\nThis transformer is used to automatically parse JSON strings from the database into JavaScript objects and vice versa.\n\n                \n            \n\n        \n    \n\n    lib/common/user/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"avatar\",\n  \"avatar.name\",\n  \"avatar.name.lang\",\n  \"avatar.files\",\n  \"avatar.files.format\",\n  \"avatar.type\",\n  \"avatar.type.ext\",\n  \"roles\",\n  \"roles.name\",\n  \"roles.name.lang\",\n]\n                    \n                \n\n            \n                \n                    Array of user entity relations.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/warlock/warlock.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WARLOCK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"WARLOCK\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the warlock mechanism.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties.html":{"url":"additional-documentation/properties.html","title":"additional-page - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/kp.properties.html":{"url":"additional-documentation/properties/kp.properties.html","title":"additional-page - kp.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/auth.properties.html":{"url":"additional-documentation/properties/auth.properties.html","title":"additional-page - auth.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization configuration\nThe auth.properties configuration file contains settings for authentication and authorization using JSON Web Tokens (JWT).\n\nauth.jwt.secret\n\nDescription: The secret key used to sign the JWT.\nType: string\nExample: jwt_secret_key\n\n\nauth.access.token.expiration\n\nDescription: The lifetime of the access token.\nType: number\nExample: 600\n\n\nNote: The access token will be valid for 10 minutes (600 seconds).\n\nauth.refresh.token.expiration\n\nDescription: The lifetime of the update token.\nType: number\nExample: 3600\n\n\nNote: The upgrade token will be valid for 1 hour (600 seconds * 6).\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/bruteforce.properties.html":{"url":"additional-documentation/properties/bruteforce.properties.html","title":"additional-page - bruteforce.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrute force protection configuration\nThe bruteforce.properties configuration file contains settings for protecting against brute force attacks.\n\nbruteforce.enabled\n\nDescription: Enables or disables brute force protection.\nType: boolean\nExample: true\n\n\nbruteforce.max.attempts\n\nDescription: Maximum number of login attempts before blocking.\nType: number\nExample: 3\n\n\nbruteforce.block.duration\n\nDescription: Duration for which a user is blocked after exceeding the maximum number of attempts.\nType: number\nExample: 300\nNote: The user will be blocked for 5 minutes (300 seconds).\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/captcha.properties.html":{"url":"additional-documentation/properties/captcha.properties.html","title":"additional-page - captcha.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCAPTCHA Configuration\nThe captcha.properties configuration file contains settings for CAPTCHA generation and validation.\n\ncaptcha.enabled\n\nDescription: Boolean flag indicating if CAPTCHA is enabled.\nType: boolean\nExample: true\n\n\ncaptcha.expiration\n\nDescription: Expiration time for CAPTCHA entries.\nType: number\nExample: 300\nNote: The CAPTCHA will be valid for 5 minutes (300 seconds).\n\n\ncaptcha.font.path\n\nDescription: Path to the font file used for graphical CAPTCHA.\nType: string\nExample: /lib/common/captcha/montserrat.ttf\n\n\ncaptcha.font.family\n\nDescription: Font family used for graphical CAPTCHA.\nType: string\nExample: Montserrat\n\n\ncaptcha.type\n\nDescription: Type of CAPTCHA to be used.\nType: string\nExample: default\n\n\ncaptcha.google.public.key\n\nDescription: Public key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\ncaptcha.google.secret.key\n\nDescription: Secret key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/file.properties.html":{"url":"additional-documentation/properties/file.properties.html","title":"additional-page - file.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiles configuration\nThe file.properties configuration file contains settings for files store\n\nfile.public.dir\n\nDescription: Path stored public files\nType: string\nExample: /static/file\n\n\nfile.private.dir\n\nDescription: Path stored private files\nType: number\nExample: /static/private/file\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/media.properties.html":{"url":"additional-documentation/properties/media.properties.html","title":"additional-page - media.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMedia Configuration\nThe media.properties configuration file contains settings for managing the directories where public and private media files are stored.\n\nmedia.public.dir\n\nDescription: The directory where public media files are stored.\nType: string\nExample: /static/media\nNote: This directory is accessible to all users and serves public media content.\n\n\nmedia.private.dir\n\nDescription: The directory where private media files are stored.\nType: string\nExample: /static/private/media\nNote: This directory is restricted and serves private media content only accessible to authorized users.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbstractAuthGuard.html",[0,3.372,1,3.576]],["body/guards/AbstractAuthGuard.html",[1,5.632,2,6.034,3,0.104,4,0.096,5,0.038,6,7.93,7,4.252,8,1.183,9,2.615,10,0.223,11,6.503,12,3.904,13,1.369,14,7.377,15,0.293,16,0.608,17,5.348,18,2.858,19,3.92,20,5.783,21,3.206,22,4.289,23,1.524,24,3.037,25,2.802,26,6.503,27,6.503,28,5.783,29,6.044,30,0.599,31,4.781,32,1.474,33,0.007,34,0.426,35,0.172,36,1.323,37,3.644,38,1.701,39,2.308,40,6.503,41,4.589,42,4.781,43,5.31,44,6.503,45,0.453,46,4.781,47,5.179,48,0.227,49,4.781,50,1.043,51,3.904,52,3.904,53,3.904,54,4.781,55,1.566,56,3.904,57,3.644,58,3.644,59,3.644,60,0.104,61,1.638,62,2.802,63,4.252,64,4.781,65,6.503,66,2.459,67,4.781,68,4.781,69,4.252,70,4.06,71,2.172,72,6.503,73,4.781,74,2.57,75,4.781,76,4.781,77,2.235,78,4.252,79,4.781,80,4.781,81,4.781,82,4.781,83,4.781,84,4.781,85,4.781,86,4.781,87,4.781,88,2.891,89,4.781,90,0.005,91,0.005]],["title/classes/AbstractProcess.html",[10,0.132,92,3.831]],["body/classes/AbstractProcess.html",[3,0.076,4,0.07,5,0.028,9,2.443,10,0.193,15,0.214,16,0.66,17,5.631,18,2.573,21,3.114,23,1.217,24,3.341,25,2.744,30,0.719,32,1.238,33,0.007,34,0.357,35,0.179,36,1.111,38,1.929,39,1.844,45,0.381,48,0.222,50,0.761,60,0.076,62,1.701,66,3.474,71,1.165,77,1.62,90,0.004,91,0.004,92,4.241,93,0.911,94,8.939,95,3.489,96,5.067,97,4.729,98,5.613,99,6.114,100,4.619,101,6.114,102,6.114,103,4.619,104,5.601,105,6.001,106,5.519,107,2.073,108,5.194,109,3.489,110,4.043,111,3.489,112,4.043,113,3.489,114,1.174,115,3.489,116,4.619,117,3.604,118,3.489,119,3.489,120,3.489,121,4.619,122,4.923,123,3.489,124,3.489,125,3.489,126,3.103,127,2.639,128,6.536,129,3.489,130,1.078,131,1.057,132,2.567,133,1.319,134,5.519,135,4.791,136,2.381,137,2.659,138,2.849,139,2.659,140,3.489,141,3.489,142,3.489,143,2.381,144,2.849,145,2.849,146,3.103,147,3.489,148,3.489,149,3.489,150,3.489,151,2.849,152,1.282,153,7.98,154,3.489,155,2.849,156,3.103,157,7.349,158,3.489,159,3.489,160,3.489,161,2.019,162,3.489,163,5.194,164,3.489,165,4.619,166,3.489,167,2.628,168,2.094,169,3.545,170,3.489,171,3.489,172,3.103,173,5.194,174,3.489,175,3.489,176,3.489,177,3.489,178,3.489,179,7.349,180,3.489,181,6.536,182,3.489,183,3.489,184,3.489,185,3.489,186,3.489,187,3.489,188,3.489,189,1.262,190,7.705,191,3.103,192,5.194,193,5.194,194,3.489,195,3.489,196,2.019,197,3.103,198,3.489,199,3.489,200,3.489,201,3.489,202,3.489,203,3.103,204,3.489,205,6.205,206,5.067,207,6.205,208,6.205,209,3.489,210,3.489]],["title/classes/AbstractUserSubscriber.html",[10,0.132,211,3.831]],["body/classes/AbstractUserSubscriber.html",[3,0.107,4,0.099,5,0.039,9,2.299,10,0.139,15,0.302,16,0.844,17,5.604,18,2.506,23,1.555,24,3.226,30,0.651,32,1.497,33,0.007,34,0.432,35,0.214,36,1.343,38,1.727,39,1.749,45,0.53,48,0.229,50,1.075,60,0.107,62,2.457,66,3.169,70,3.076,71,1.646,74,3.002,77,1.733,90,0.005,91,0.005,93,1.287,152,0.82,211,5.418,212,8.38,213,4.382,214,6.636,215,6.636,216,6.636,217,4.927,218,6.636,219,4.927,220,2.435,221,6.636,222,7.14,223,7.14,224,4.927,225,5.057,226,6.636,227,4.927,228,3.28,229,5.418,230,4.382,231,1.241,232,5.902,233,1.522,234,2.665,235,2.958,236,4.927,237,4.382,238,4.382,239,4.927,240,4.927,241,4.927,242,4.927,243,4.927,244,4.927,245,4.927,246,0.898,247,4.023,248,3.21,249,8.632,250,0.805,251,4.927,252,4.927,253,3.21,254,6.636,255,1.646,256,4.927,257,4.382,258,4.927,259,6.636,260,6.636,261,4.927,262,3.362]],["title/interfaces/AudioFileMetadata.html",[263,0.724,264,2.817]],["body/interfaces/AudioFileMetadata.html",[3,0.082,4,0.076,5,0.044,10,0.183,15,0.233,16,0.703,33,0.007,34,0.219,35,0.215,45,0.613,48,0.173,60,0.186,90,0.004,91,0.004,152,1.467,189,1.583,233,1.172,250,1.589,263,1.297,264,3.912,265,1.268,266,2.37,267,4.47,268,4.47,269,4.568,270,4.568,271,4.47,272,4.568,273,4.403,274,4.47,275,4.47,276,4.47,277,4.47,278,4.298,279,4.47,280,4.47,281,1.765,282,1.607,283,2.989,284,2.897,285,2.196,286,0.73,287,1.731,288,2.053,289,0.785,290,1.347,291,1.5,292,2.278,293,1.5,294,2.397,295,1.268,296,2.37,297,1.607,298,2.196,299,2.37,300,3.318,301,2.37,302,3.318,303,2.121,304,3.318,305,2.37,306,3.6,307,2.278,308,2.278,309,3.318,310,2.37,311,2.286,312,2.286,313,2.37,314,2.37,315,2.37,316,2.37,317,2.37,318,2.37,319,2.053,320,2.37,321,2.37,322,2.37,323,2.37,324,2.37,325,2.37,326,2.37,327,2.37,328,2.37,329,2.37,330,2.37,331,2.37,332,2.37,333,2.37,334,2.37,335,2.37,336,2.37,337,2.473,338,2.473,339,2.473,340,2.473,341,1.128,342,2.473,343,2.473,344,2.473,345,2.473,346,2.473,347,2.473,348,2.473,349,2.473,350,2.473,351,2.473,352,2.473,353,2.473,354,2.473,355,2.473,356,2.473,357,2.473,358,2.473,359,2.473,360,2.473,361,3.451,362,2.473,363,2.473,364,2.473,365,2.473,366,2.473,367,2.473,368,2.473,369,2.473,370,2.473,371,2.473,372,2.473,373,2.473,374,2.473,375,2.473,376,2.473,377,2.473,378,2.473,379,2.473,380,2.473,381,2.37,382,2.37,383,2.37,384,2.37,385,2.37,386,2.37,387,2.37,388,2.37,389,2.278]],["title/entities/AudioFileMetadataEntity.html",[246,0.855,390,3.576]],["body/entities/AudioFileMetadataEntity.html",[3,0.088,4,0.081,5,0.074,10,0.113,13,0.849,15,0.569,16,0.734,30,0.748,33,0.007,34,0.467,35,0.215,45,0.575,48,0.153,60,0.088,61,2.436,88,1.792,90,0.004,91,0.004,130,1.783,152,1.122,167,1.707,231,1.015,246,0.735,250,1.473,262,3.94,264,3.465,267,4.211,268,4.211,269,4.048,270,4.048,271,4.211,272,4.048,273,3.902,274,4.211,275,4.211,276,4.211,277,4.211,278,4.048,279,4.211,280,4.211,390,4.399,391,1.374,392,9.279,393,2.751,394,2.796,395,4.702,396,3.725,397,3.292,398,3.585,399,4.597,400,3.072,401,3.072,402,5.772,403,3.292,404,3.072,405,3.292,406,4.713,407,4.713,408,4.713,409,3.585,410,4.031,411,2.051,412,2.897,413,4.031,414,5.772,415,3.072,416,5.772,417,2.897,418,3.585,419,3.072,420,3.585,421,1.558,422,2.854,423,2.253,424,4.031,425,2.051,426,3.771,427,4.115,428,3.292]],["title/injectables/AuthGuard.html",[429,1.422,430,4.173]],["body/injectables/AuthGuard.html",[0,5.489,1,6.84,3,0.133,4,0.123,5,0.049,8,1.513,9,1.752,10,0.215,12,5.235,17,4.999,18,2.781,19,4.589,21,3.753,22,5.022,30,0.496,32,1.22,33,0.007,34,0.352,35,0.142,36,1.095,48,0.238,50,1.335,56,4.996,57,4.663,60,0.133,74,2.656,90,0.005,91,0.005,107,2.551,429,2.314,430,7.406,431,2.72,432,6.118,433,4.081,434,4.976,435,6.793,436,6.236,437,6.793,438,3.42,439,6.118,440,2.591,441,5.441,442,5.441,443,3.207,444,3.673]],["title/modules/AuthModule.html",[445,1.295,446,3.831]],["body/modules/AuthModule.html",[3,0.11,4,0.102,5,0.054,10,0.143,19,3.764,23,1.189,24,1.801,30,0.412,32,1.012,33,0.007,34,0.292,35,0.118,36,0.908,38,1.168,48,0.247,50,1.107,55,1.661,60,0.11,66,2.56,77,1.767,90,0.005,91,0.005,130,1.567,131,1.537,341,1.508,440,2.148,445,2.101,446,6.218,447,2.201,448,5.073,449,3.443,450,4.409,451,3.305,452,5.838,453,5.073,454,3.009,455,1.736,456,7.615,457,4.572,458,1.729,459,1.729,460,1.695,461,1.695,462,1.729,463,2.595,464,1.695,465,2.91,466,1.695,467,2.26,468,1.629,469,1.729,470,1.729,471,1.729,472,1.729,473,1.729,474,1.729,475,1.629,476,1.729,477,1.729,478,1.729,479,1.729,480,2.306,481,1.729,482,1.695,483,1.729,484,1.729,485,1.729,486,1.729,487,1.729,488,1.695,489,1.567,490,1.729,491,1.729,492,1.729,493,5.073,494,4.512,495,6.768,496,4.512,497,5.073,498,4.512,499,4.407,500,3.463,501,3.168,502,3.168,503,3.867,504,5.073,505,3.463,506,5.073,507,3.463,508,5.073,509,5.197,510,3.867,511,3.168,512,5.073,513,5.073,514,3.305,515,5.073,516,4.143,517,5.073,518,5.073,519,3.867,520,5.073,521,5.073,522,2.314,523,2.581,524,2.936,525,3.646,526,2.314]],["title/classes/AuthService.html",[10,0.132,509,3.202]],["body/classes/AuthService.html",[3,0.079,4,0.073,5,0.029,8,1.733,9,2.53,10,0.179,12,3.211,15,0.223,23,1.642,30,0.515,32,1.267,33,0.007,34,0.366,35,0.148,36,1.137,38,1.982,39,1.899,45,0.536,47,5.844,48,0.096,51,2.963,52,2.963,53,2.963,60,0.192,61,1.347,62,2.859,71,2.341,74,2.598,77,1.397,90,0.004,91,0.004,93,0.948,114,1.947,117,3.674,127,1.684,132,2.644,228,4.257,455,1.797,498,3.228,509,3.65,527,3.228,528,4.757,529,5.348,530,5.348,531,4.757,532,7.008,533,5.348,534,5.348,535,5.348,536,5.617,537,3.629,538,5.036,539,3.844,540,1.717,541,3.65,542,4.692,543,4.564,544,4.783,545,5.665,546,6.35,547,5.036,548,5.348,549,3.629,550,5.341,551,5.036,552,5.348,553,5.348,554,3.629,555,7.008,556,3.65,557,5.335,558,5.348,559,5.348,560,4.757,561,4.076,562,4.757,563,8.083,564,3.228,565,3.228,566,3.228,567,3.228,568,4.564,569,3.228,570,3.228,571,4.055,572,3.65,573,5.756,574,5.036,575,3.228,576,3.228,577,3.228,578,5.186,579,4.334,580,2.963,581,3.228,582,3.228,583,4.783,584,3.783,585,4.22,586,5.036,587,3.228,588,3.228,589,3.228,590,3.228,591,4.367,592,4.367,593,3.228,594,3.228,595,3.228,596,3.844,597,3.844,598,3.228,599,3.228]],["title/classes/BadRequestMsException.html",[10,0.132,600,4.173]],["body/classes/BadRequestMsException.html",[3,0.149,4,0.138,5,0.055,10,0.193,30,0.557,32,1.37,33,0.007,34,0.396,35,0.16,36,1.23,41,5.07,45,0.537,48,0.217,50,1.499,60,0.149,90,0.006,91,0.006,93,1.794,107,2.295,132,4.052,133,2.599,433,3.837,600,7.291,601,8.198,602,4.689,603,4.898,604,5.595,605,4.689,606,4.476,607,4.689,608,6.871,609,6.871]],["title/injectables/BasicUserService.html",[429,1.422,610,3.831]],["body/injectables/BasicUserService.html",[3,0.081,4,0.075,5,0.03,8,1.949,10,0.153,15,0.228,16,0.691,18,1.24,22,4.516,23,1.66,24,3.319,25,1.216,30,0.639,32,1.572,33,0.007,34,0.454,35,0.184,36,1.41,38,1.993,45,0.562,48,0.209,50,0.81,60,0.081,61,0.935,62,1.781,66,3.079,70,2.318,71,2.149,74,3.396,77,1.969,90,0.004,91,0.004,107,1.816,114,2.059,152,1.572,167,3,228,4.024,231,0.935,234,3.481,235,2.229,253,2.419,257,3.302,429,1.648,431,1.651,433,2.545,444,2.229,455,1.395,540,2.275,556,2.534,560,3.302,585,4.009,593,7.425,610,5.254,611,5.438,612,3.713,613,3.908,614,5.438,615,6.005,616,6.434,617,4.837,618,4.837,619,4.837,620,4.837,621,3.713,622,3.713,623,5.438,624,3.543,625,5.147,626,3.713,627,4.837,628,3.543,629,3.713,630,5.785,631,6.598,632,3.543,633,3.713,634,3.543,635,3.713,636,3.396,637,4.44,638,3.543,639,3.713,640,4.837,641,6.301,642,4.837,643,2.829,644,2.668,645,1.946,646,5.723,647,3.713,648,3.713,649,5.438,650,2.318,651,4.44,652,5.438,653,3.713,654,5.438,655,3.713,656,3.713,657,3.713,658,3.713,659,3.713]],["title/modules/CacheModule.html",[445,1.295,499,2.715]],["body/modules/CacheModule.html",[3,0.114,4,0.106,5,0.055,10,0.148,19,4.499,21,3.463,33,0.007,48,0.238,50,1.148,55,1.723,60,0.114,77,1.374,90,0.005,91,0.005,220,2.602,341,1.565,440,2.229,445,2.14,447,2.283,458,1.794,459,1.794,460,1.758,461,1.758,462,1.794,463,2.643,464,1.758,465,2.937,466,1.758,467,2.316,468,1.69,469,1.794,470,1.794,471,1.794,472,1.794,473,1.794,474,1.794,475,1.69,476,1.794,477,1.794,478,1.794,479,1.794,480,2.363,481,1.794,482,1.758,483,1.794,484,1.794,485,1.794,486,1.794,487,1.794,488,1.758,489,1.626,490,1.794,491,1.794,492,1.794,499,5.329,501,4.198,511,3.63,514,3.429,522,3.162,523,2.678,524,3.045,526,3.536,660,2.942,661,3.16,662,3.16,663,3.16,664,4.681,665,4.681,666,4.681,667,5.581,668,4.163,669,3.16,670,3.045,671,5.263,672,5.263,673,3.782,674,3.286,675,3.782,676,3.782,677,4.297,678,5.662,679,3.592,680,5.263,681,4.297,682,3.592,683,3.592,684,3.592,685,4.297,686,3.782,687,4.297,688,4.011,689,4.297,690,4.011,691,4.297,692,4.297]],["title/classes/CacheService.html",[10,0.132,19,2.319]],["body/classes/CacheService.html",[3,0.11,4,0.102,5,0.041,9,2.798,10,0.143,15,0.312,19,3.352,23,1.589,30,0.733,32,1.802,33,0.007,34,0.52,35,0.21,36,1.617,38,2.08,45,0.601,60,0.11,90,0.005,91,0.005,93,1.329,114,2.163,131,2.311,133,1.925,250,1.494,519,5.813,574,3.658,584,4.056,693,5.089,694,5.538,695,5.538,696,5.538,697,5.538,698,5.538,699,5.538,700,5.206,701,5.538,702,5.089,703,5.538,704,5.089,705,5.538,706,5.089,707,5.538,708,5.089,709,6.032,710,5.089,711,3.473,712,5.538,713,5.089,714,5.538,715,5.089,716,3.879,717,4.763,718,5.089]],["title/modules/CaptchaModule.html",[445,1.295,719,3.831]],["body/modules/CaptchaModule.html",[3,0.11,4,0.102,5,0.054,10,0.143,23,1.187,30,0.548,32,1.349,33,0.007,34,0.389,35,0.189,36,1.21,38,1.556,48,0.224,50,1.105,55,1.659,60,0.11,62,1.659,77,1.766,90,0.005,91,0.005,114,1.145,130,1.565,131,1.535,341,1.506,440,3.222,445,2.24,447,2.197,449,4.131,450,4.405,451,3.3,454,3.61,455,1.734,457,5.078,458,1.726,459,1.726,460,1.692,461,1.692,462,1.726,463,2.593,464,1.692,465,2.909,466,1.692,467,2.258,468,1.626,469,1.726,470,1.726,471,1.726,472,1.726,473,1.726,474,1.726,475,1.626,476,1.726,477,1.726,478,1.726,479,1.726,480,2.304,481,1.726,482,1.692,483,1.726,484,1.726,485,1.726,486,1.726,487,1.726,488,1.692,489,1.565,490,1.726,491,1.726,492,1.726,499,3.912,500,3.457,501,3.164,502,3.163,511,3.959,514,4.958,522,3.083,523,3.44,524,2.931,525,3.64,526,3.083,719,6.629,720,5.065,721,6.188,722,5.065,723,6.213,724,4.505,725,6.013,726,4.614,727,5.065,728,4.505,729,5.065,730,5.939,731,4.136,732,4.505]],["title/classes/CaptchaRequest.html",[10,0.132,733,3.372]],["body/classes/CaptchaRequest.html",[3,0.109,4,0.101,5,0.04,8,1.239,9,2.315,10,0.249,15,0.307,16,0.853,30,0.544,33,0.007,35,0.215,38,1.545,41,4.379,45,0.517,48,0.178,60,0.175,61,1.262,90,0.005,91,0.005,93,1.309,114,1.961,127,2.947,152,1.345,233,1.548,255,2.528,289,1.036,303,3.751,394,2.034,445,1.383,454,2.228,455,1.941,540,2.155,542,4.029,583,3.42,585,2.549,721,3.819,730,3.42,733,5.809,734,4.091,735,4.581,736,6.731,737,5.605,738,5.809,739,5.011,740,5.115,741,4.456,742,5.011,743,2.862,744,6.731,745,4.823,746,3.129,747,5.48,748,5.48,749,4.456,750,4.456,751,4.091,752,3.819,753,3.819,754,3.601,755,2.801,756,3.42,757,3.819,758,3.42,759,3.129,760,4.091,761,3.601,762,3.42,763,4.373,764,2.627,765,3.42,766,4.456]],["title/classes/CaptchaService.html",[10,0.132,730,3.202]],["body/classes/CaptchaService.html",[3,0.106,4,0.098,5,0.039,8,1.626,9,2.595,10,0.252,15,0.298,23,1.541,30,0.533,32,0.969,33,0.007,34,0.28,35,0.211,36,0.87,38,1.838,41,4.312,45,0.49,48,0.174,60,0.173,61,1.656,90,0.005,91,0.005,93,1.269,114,2.071,127,2.885,152,1.094,233,1.501,255,2.196,289,1.005,303,3.675,445,1.341,454,2.161,455,2.048,540,1.561,542,4.793,583,4.488,585,2.473,721,3.704,730,4.488,733,5.995,734,3.969,735,3.317,736,6.627,737,5.624,738,5.355,740,3.704,743,2.487,744,5.848,745,4.725,746,3.035,747,6.085,748,5.369,749,4.323,750,4.323,751,3.969,752,6.085,753,5.011,754,4.725,755,3.675,756,4.488,757,5.011,758,3.317,759,3.035,760,3.969,761,3.493,762,3.317,763,4.284,764,2.548,765,3.317,766,4.323,767,5.369,768,4.86,769,4.86]],["title/entities/CategoryEntity.html",[246,0.855,770,3.372]],["body/entities/CategoryEntity.html",[3,0.099,4,0.091,5,0.05,10,0.128,15,0.476,16,0.798,30,0.725,33,0.007,34,0.414,35,0.208,45,0.476,48,0.205,55,1.487,60,0.099,61,2.32,88,2.019,90,0.004,91,0.004,130,2.397,152,1.196,167,1.923,231,1.143,246,0.828,250,1.267,255,2.096,286,1.384,291,2.842,341,1.35,391,1.547,394,2.707,396,3.256,399,2.835,411,2.31,421,1.755,422,3.102,425,2.31,426,2.722,427,2.538,458,1.547,459,1.547,460,1.516,461,1.516,462,1.547,463,2.451,464,1.516,465,2.827,466,1.516,467,2.096,468,1.458,469,1.547,470,1.547,471,1.547,472,1.547,473,1.547,474,1.547,475,1.458,476,1.547,477,1.547,478,1.547,479,1.547,480,2.139,481,1.547,482,1.516,483,1.547,484,1.547,485,1.547,486,1.547,487,1.547,488,1.516,489,1.402,490,1.547,491,1.547,492,1.547,540,2.015,700,3.099,743,1.717,770,6.053,771,4.54,772,7.192,773,3.555,774,7.192,775,3.89,776,7.192,777,7.192,778,4.54,779,2.183,780,2.627,781,4.54,782,3.286,783,2.31,784,3.919,785,4.54,786,4.54,787,3.948,788,2.725,789,3.395,790,2.725,791,4.54,792,3.263,793,4.283,794,2.228,795,4.909,796,4.54,797,7.192,798,4.54,799,3.632,800,4.783,801,4.54,802,3.46,803,4.54,804,3.29,805,3.29,806,3.193,807,4.038,808,4.54,809,2.456,810,4.54,811,3.263,812,3.707,813,4.54,814,4.54,815,3.263]],["title/modules/CategoryModule.html",[445,1.295,816,3.576]],["body/modules/CategoryModule.html",[3,0.124,4,0.115,5,0.058,10,0.16,33,0.007,48,0.233,50,1.243,55,1.866,60,0.124,90,0.005,91,0.005,341,1.694,445,2.223,447,2.472,458,1.942,459,1.942,460,1.903,461,1.903,462,1.942,463,2.746,464,1.903,465,2.992,466,1.903,467,2.439,468,1.83,469,1.942,470,1.942,471,1.942,472,1.942,473,1.942,474,1.942,475,1.83,476,1.942,477,1.942,478,1.942,479,1.942,480,2.488,481,1.942,482,1.903,483,1.942,484,1.942,485,1.942,486,1.942,487,1.942,488,1.903,489,1.76,490,1.942,491,1.942,492,1.942,501,4.207,511,3.418,522,3.674,526,3.674,645,2.987,660,3.185,661,3.421,662,3.421,663,3.421,668,4.383,669,3.421,670,3.297,673,4.095,770,4.095,816,7.124,817,5.068,818,5.698,819,5.068,820,5.068,821,7.269,822,5.698,823,5.698,824,3.712,825,5.068,826,5.698]],["title/entities/CategoryRestrictionEntity.html",[246,0.855,827,4.173]],["body/entities/CategoryRestrictionEntity.html",[3,0.117,4,0.108,5,0.056,10,0.151,15,0.48,16,0.893,30,0.674,33,0.007,35,0.193,45,0.431,48,0.207,55,1.758,60,0.117,61,2.171,90,0.005,91,0.005,152,1.303,231,1.352,246,0.978,250,1.147,255,2.346,286,1.507,341,1.596,391,1.829,394,2.517,396,2.715,411,2.731,421,2.075,422,3.472,425,2.731,426,2.328,458,1.829,459,1.829,460,1.793,461,1.793,462,1.829,463,2.668,464,1.793,465,2.951,466,1.793,467,2.346,468,1.723,469,1.829,470,1.829,471,1.829,472,1.829,473,1.829,474,1.829,475,1.723,476,1.829,477,1.829,478,1.829,479,1.829,480,2.394,481,1.829,482,1.793,483,1.829,484,1.829,485,1.829,486,1.829,487,1.829,488,1.793,489,1.658,490,1.829,491,1.829,492,1.829,743,2.03,770,5.97,779,2.581,780,3.106,783,2.731,804,3.683,805,3.683,806,3.574,827,6.247,828,8.621,829,5.368,830,7.83,831,6.964,832,4.355,833,4.091,834,5.368,835,4.577,836,5.368,837,5.368,838,5.368,839,5.368,840,5.368,841,3,842,5.368]],["title/injectables/CategoryService.html",[429,1.422,821,3.576]],["body/injectables/CategoryService.html",[3,0.11,4,0.102,5,0.04,8,1.674,10,0.143,15,0.311,18,2.26,21,3.65,23,1.586,24,2.703,25,2.771,30,0.618,32,1.519,33,0.007,34,0.439,35,0.177,36,1.515,38,1.753,39,1.801,45,0.467,48,0.235,50,1.107,60,0.11,62,2.216,66,2.56,77,1.325,90,0.005,91,0.005,107,2.26,114,1.53,133,1.919,139,3.867,231,1.278,250,1.244,286,1.71,429,2.051,431,2.256,440,2.148,443,2.66,455,1.736,542,4.063,585,3.443,644,3.646,645,2.66,651,5.526,674,3.168,770,5.838,775,2.744,807,7.225,821,5.158,825,4.512,831,7.743,843,5.073,844,6.768,845,6.768,846,6.768,847,5.158,848,5.073,849,8.124,850,5.073,851,6.768,852,6.768,853,7.904,854,5.073,855,8.124,856,4.864,857,6.019,858,6.768,859,6.768,860,5.073,861,6.768,862,2.936,863,6.773,864,5.073,865,4.143,866,5.073,867,5.073,868,4.864,869,5.073,870,5.073,871,5.073,872,5.073,873,5.073,874,2.099]],["title/interfaces/ConfigItem.html",[263,0.724,875,3.831]],["body/interfaces/ConfigItem.html",[3,0.155,4,0.144,5,0.057,15,0.439,16,1.068,33,0.007,35,0.196,45,0.583,60,0.155,90,0.006,91,0.006,131,2.787,263,1.105,265,2.391,584,4.194,875,6.859,876,7.159]],["title/modules/ConfigModule.html",[445,1.295,877,3.576]],["body/modules/ConfigModule.html",[3,0.123,4,0.114,5,0.058,10,0.16,33,0.007,48,0.225,50,1.239,55,1.859,60,0.123,90,0.005,91,0.005,341,1.688,445,2.22,447,2.463,458,1.935,459,1.935,460,1.897,461,1.897,462,1.935,463,2.741,464,1.897,465,2.99,466,1.897,467,2.433,468,1.823,469,1.935,470,1.935,471,1.935,472,1.935,473,1.935,474,1.935,475,1.823,476,1.935,477,1.935,478,1.935,479,1.935,480,2.483,481,1.935,482,1.897,483,1.935,484,1.935,485,1.935,486,1.935,487,1.935,488,1.897,489,1.754,490,1.935,491,1.935,492,1.935,499,5.196,500,3.875,501,4.203,502,3.546,511,3.41,522,3.668,526,3.668,660,3.174,661,3.409,662,3.409,663,3.409,668,4.373,669,3.409,670,3.286,877,7.225,878,5.05,879,5.678,880,5.05,881,5.05,882,6.851,883,5.678,884,5.678]],["title/injectables/ConfigService.html",[429,1.422,882,3.372]],["body/injectables/ConfigService.html",[3,0.041,4,0.064,5,0.05,8,1.197,10,0.053,15,0.115,16,0.945,18,2.189,19,3.084,21,2.522,23,1.134,24,3.048,25,2.925,30,0.637,32,1.567,33,0.007,34,0.418,35,0.19,36,1.299,38,1.779,39,0.668,45,0.57,48,0.174,50,0.41,60,0.089,61,1.361,62,3.063,66,3.226,70,1.175,71,1.061,77,1.895,88,2.774,90,0.002,91,0.002,104,2.42,107,1.061,114,1.681,127,1,130,1.272,131,2.138,133,0.712,161,1.089,168,1.13,169,1.284,181,1.673,196,2.383,203,2.824,237,2.824,238,1.673,287,2.465,289,1,319,1.717,429,0.962,431,0.837,438,1.052,440,0.797,443,0.986,455,1.503,505,1.284,538,2.282,540,1.553,542,3.519,544,3.302,573,3.152,584,3.583,585,2.096,586,1.352,613,2.282,631,1.434,636,3.021,683,3.688,700,2.167,726,3.302,751,2.593,762,3.302,764,4.053,773,2.392,799,2.383,847,2.42,874,0.778,875,4.413,882,3.477,885,1.881,886,2.824,887,2.824,888,3.175,889,3.175,890,3.175,891,3.293,892,2.824,893,2.824,894,3.175,895,3.175,896,4.119,897,4.119,898,4.119,899,3.175,900,4.838,901,4.119,902,4.119,903,3.175,904,4.119,905,3.175,906,4.119,907,3.175,908,4.119,909,3.175,910,3.175,911,3.175,912,1.881,913,5.549,914,1.881,915,1.881,916,5.862,917,1.881,918,5.404,919,1.881,920,2.617,921,1.881,922,2.282,923,3.244,924,2.42,925,5.862,926,3.175,927,3.175,928,3.175,929,3.175,930,1.881,931,3.175,932,3.175,933,3.175,934,2.824,935,1.881,936,4.119,937,1.881,938,3.175,939,3.175,940,1.881,941,1.881,942,2.905,943,5.404,944,1.881,945,3.521,946,3.175,947,1.881,948,2.824,949,3.436,950,3.477,951,4.303,952,4.303,953,1.881,954,6.824,955,1.881,956,3.175,957,1.881,958,2.593,959,2.42,960,1.881,961,1.881,962,2.42,963,1.673,964,1.673,965,4.807,966,3.663,967,2.824,968,4.303,969,4.807,970,1.881,971,1.881,972,1.226,973,1.018,974,1.13,975,3.175,976,1.881,977,1.536,978,1.881,979,3.175,980,1.881,981,1.881,982,1.352,983,1.881,984,1.881,985,1.881,986,1.881,987,1.881,988,1.881,989,1.881,990,1.881,991,3.687,992,3.139,993,1.881,994,1.881,995,1.881,996,1.881,997,1.881,998,1.673,999,1.881,1000,1.881,1001,1.881,1002,1.881,1003,1.434,1004,1.881,1005,1.881,1006,1.881,1007,2.593,1008,1.881,1009,2.824,1010,1.881,1011,1.881,1012,1.881,1013,1.881,1014,1.881,1015,1.673,1016,1.881,1017,1.881,1018,3.175,1019,1.881,1020,1.881,1021,1.881,1022,1.881,1023,1.881,1024,3.175,1025,4.119,1026,2.42,1027,3.175,1028,5.404,1029,1.881,1030,4.119,1031,1.881,1032,4.838,1033,2.824,1034,3.175,1035,4.838,1036,3.175,1037,4.119,1038,5.404,1039,3.175,1040,1.881,1041,1.881,1042,6.555,1043,1.881,1044,1.881,1045,1.881,1046,1.881,1047,2.824,1048,1.881,1049,3.663,1050,1.881,1051,1.881,1052,3.687,1053,1.881,1054,4.119,1055,1.881,1056,1.881,1057,4.119,1058,1.881,1059,1.881,1060,1.881,1061,1.881,1062,1.881,1063,1.881,1064,1.881,1065,1.881,1066,1.881,1067,3.175,1068,1.881,1069,3.175,1070,1.881,1071,1.881,1072,1.881,1073,1.881,1074,7.056,1075,1.881,1076,1.881,1077,1.881,1078,1.881,1079,4.838,1080,1.434,1081,1.881,1082,1.881,1083,1.881,1084,1.881,1085,3.175,1086,1.881,1087,1.881,1088,1.434,1089,1.881,1090,1.881,1091,1.881,1092,1.881,1093,3.175,1094,1.881,1095,1.881,1096,1.881,1097,3.175,1098,1.881,1099,1.673,1100,1.881,1101,1.881,1102,1.881,1103,3.175,1104,3.175,1105,1.881,1106,3.175,1107,1.881,1108,1.881,1109,1.881,1110,1.881,1111,3.175,1112,1.881,1113,1.881,1114,1.434,1115,1.881,1116,1.881,1117,3.175,1118,1.881,1119,3.175,1120,1.881,1121,1.881,1122,1.881,1123,1.881,1124,1.881,1125,1.881,1126,1.881]],["title/classes/DbExceptionFilter.html",[10,0.132,1127,4.173]],["body/classes/DbExceptionFilter.html",[3,0.142,4,0.132,5,0.052,10,0.185,13,1.679,15,0.403,23,1.869,30,0.533,32,1.309,33,0.007,34,0.378,35,0.153,36,1.175,38,1.511,48,0.228,50,1.432,60,0.142,62,2.15,90,0.006,91,0.006,93,1.714,132,3.245,168,5.158,231,1.653,684,5.864,758,4.48,862,3.799,1127,7.948,1128,7.976,1129,7.641,1130,6.564,1131,7.976,1132,8.937,1133,8.937,1134,6.564,1135,6.564,1136,6.564,1137,6.564,1138,6.564,1139,6.564,1140,6.564]],["title/interfaces/DirectoryStructure.html",[263,0.724,1141,4.173]],["body/interfaces/DirectoryStructure.html",[3,0.108,4,0.1,5,0.064,24,2.987,30,0.405,33,0.007,35,0.156,45,0.552,48,0.229,60,0.188,61,1.256,62,2.945,66,3.446,77,2.198,88,2.975,90,0.005,91,0.005,114,1.707,117,2.615,161,2.886,167,2.833,168,2.994,248,3.249,263,0.77,265,1.666,287,3.443,445,1.376,454,2.218,584,3.051,755,3.74,891,2.164,945,3.249,962,5.099,1080,3.801,1099,4.436,1114,3.801,1141,7.484,1142,4.436,1143,4.987,1144,4.987,1145,6.691,1146,6.691,1147,4.987,1148,6.691,1149,4.987,1150,5.951,1151,4.436,1152,4.436,1153,4.987,1154,4.987,1155,4.987,1156,4.987,1157,4.987,1158,3.801,1159,5.644,1160,4.436,1161,4.987,1162,4.987,1163,2.274,1164,4.987,1165,4.987,1166,4.987,1167,4.987,1168,4.987,1169,4.987,1170,4.987,1171,4.987,1172,4.987,1173,4.072,1174,4.987,1175,4.436,1176,4.987,1177,4.987,1178,4.987,1179,4.987,1180,4.987,1181,4.987,1182,4.987,1183,4.436,1184,4.987,1185,6.691,1186,4.987,1187,4.987,1188,4.987,1189,4.987,1190,8.068,1191,4.987,1192,4.987,1193,4.987]],["title/injectables/DtoInterceptor.html",[429,1.422,1194,4.173]],["body/injectables/DtoInterceptor.html",[3,0.131,4,0.121,5,0.048,8,1.491,10,0.257,13,1.269,15,0.37,18,2.013,23,1.773,29,6.61,30,0.614,32,1.509,33,0.007,34,0.436,35,0.14,36,1.354,37,4.593,38,1.387,48,0.219,50,1.315,60,0.131,71,2.013,77,1.574,90,0.005,91,0.005,107,2.013,127,1.898,255,2.527,429,2.293,431,2.68,468,1.935,556,5.164,748,4.921,794,2.139,1194,7.355,1195,6.027,1196,7.566,1197,5.437,1198,7.566,1199,7.566,1200,7.566,1201,6.729,1202,8.27,1203,7.566,1204,6.027,1205,6.027,1206,7.566,1207,7.566,1208,7.082,1209,8.673,1210,6.027,1211,7.566,1212,4.921,1213,4.113,1214,6.027,1215,5.36,1216,3.927,1217,4.921,1218,6.027,1219,6.027]],["title/interfaces/EntitySaveHandler.html",[263,0.724,1220,2.715]],["body/interfaces/EntitySaveHandler.html",[3,0.091,4,0.084,5,0.033,8,1.851,9,2.511,10,0.222,15,0.257,23,1.389,30,0.339,32,0.834,33,0.007,34,0.473,35,0.204,36,0.749,38,0.963,39,1.485,45,0.585,48,0.228,60,0.197,74,2.748,90,0.004,91,0.004,114,1.949,127,2.167,152,1.145,189,1.016,231,1.053,233,1.292,246,1.08,250,1.432,255,2.741,263,1.22,265,1.397,281,1.605,282,1.771,286,1.14,289,1.967,290,2.104,291,1.653,455,1.073,540,2.537,571,2.42,743,1.582,773,3.402,775,3.205,832,3.608,841,2.338,920,3.205,949,2.193,973,2.262,974,2.511,1217,4.838,1220,3.429,1221,2.511,1222,3.557,1223,3.847,1224,4.182,1225,4.334,1226,2.338,1227,2.969,1228,1.548,1229,2.511,1230,2.193,1231,2.42,1232,2.193,1233,3.557,1234,2.511,1235,4.572,1236,2.511,1237,2.42,1238,4.332,1239,2.262,1240,3.312,1241,2.511,1242,2.511,1243,2.511,1244,2.511,1245,2.42,1246,2.42,1247,2.511,1248,2.511,1249,2.511,1250,2.511,1251,2.511,1252,2.511,1253,2.511,1254,2.511,1255,2.511,1256,2.511,1257,2.511,1258,2.511,1259,2.511,1260,3.982,1261,2.511,1262,2.338,1263,3.429,1264,3.429,1265,2.511,1266,1.86,1267,2.612,1268,4.926,1269,3.205,1270,2.612,1271,2.612,1272,2.612,1273,2.612,1274,2.511,1275,2.42,1276,2.42,1277,2.612,1278,2.612,1279,4.934,1280,2.612,1281,2.612,1282,2.612,1283,2.612,1284,2.612,1285,2.612,1286,2.612,1287,2.612]],["title/classes/ExchangeTokenPayload.html",[10,0.132,1288,3.576]],["body/classes/ExchangeTokenPayload.html",[3,0.1,4,0.092,5,0.037,8,1.136,10,0.248,12,4.344,15,0.282,16,0.804,30,0.373,33,0.007,35,0.19,36,1.295,45,0.549,47,5.87,48,0.224,50,1.002,60,0.169,71,2.113,74,3.012,90,0.005,91,0.005,93,1.199,127,2.575,152,0.764,189,1.894,220,3.127,228,3.854,394,1.391,445,1.267,452,3.3,454,2.041,455,1.856,475,1.474,509,3.134,510,3.499,536,3.3,539,5.603,540,2.626,541,4.317,543,5.2,545,4.518,546,5.877,547,4.545,550,4.82,551,3.3,557,3.134,568,3.3,572,3.134,596,3.3,597,3.3,717,4.518,735,5.321,737,3.66,738,5.2,745,6.074,746,2.867,765,3.134,794,1.63,949,2.407,1197,3.3,1232,2.407,1288,4.82,1289,3.499,1290,5.321,1291,6.366,1292,5.164,1293,4.084,1294,4.591,1295,5.164,1296,6.677,1297,3.382,1298,4.187,1299,3.749,1300,3.749,1301,4.187,1302,5.908,1303,3.499,1304,3.749,1305,3.749,1306,3.749,1307,3.749,1308,3.499,1309,3.749,1310,5.164,1311,3.749,1312,3.749]],["title/classes/ExplorerAction.html",[10,0.132,1240,2.623]],["body/classes/ExplorerAction.html",[3,0.089,4,0.082,5,0.033,8,2.014,9,2.497,10,0.22,15,0.251,16,0.741,30,0.661,33,0.007,34,0.483,35,0.217,39,1.451,45,0.582,48,0.227,60,0.196,74,2.363,90,0.004,91,0.004,93,1.067,114,1.937,127,1.287,152,1.13,189,0.993,231,1.029,233,1.263,246,1.063,250,1.445,255,2.27,263,1.209,281,1.579,282,1.731,286,1.426,289,1.962,290,2.069,291,1.615,455,1.048,540,2.615,571,2.365,743,1.546,773,3.872,775,4.007,832,3.562,841,2.285,920,3.153,949,2.143,973,2.211,974,2.454,1220,2.365,1221,2.454,1222,2.454,1223,2.285,1225,4.236,1226,2.285,1227,3.02,1228,1.513,1229,2.454,1230,2.143,1231,2.365,1232,2.143,1233,3.5,1234,2.454,1235,4.533,1236,2.454,1237,2.365,1238,4.287,1239,2.211,1240,3.798,1241,2.454,1242,2.454,1243,2.454,1244,2.454,1245,2.365,1246,2.365,1247,2.454,1248,2.454,1249,2.454,1250,2.454,1251,2.454,1252,2.454,1253,2.454,1254,2.454,1255,2.454,1256,2.454,1257,2.454,1258,2.454,1259,2.454,1260,3.932,1261,2.454,1262,2.285,1263,3.373,1264,3.932,1265,2.454,1266,1.817,1267,2.552,1268,4.889,1269,3.153,1270,2.552,1271,2.552,1272,2.552,1273,2.552,1274,2.454,1275,2.365,1276,2.365,1277,2.552,1278,2.552,1279,4.891,1280,2.552,1281,2.552,1282,2.552,1283,2.552,1284,2.552,1285,2.552,1286,2.552,1287,2.552,1313,4.087,1314,4.087,1315,4.087,1316,4.087,1317,4.087,1318,4.087]],["title/entities/ExplorerActionEntity.html",[246,0.855,1319,3.831]],["body/entities/ExplorerActionEntity.html",[3,0.103,4,0.096,5,0.052,8,1.824,10,0.134,13,1.002,15,0.486,16,0.824,30,0.693,33,0.007,34,0.425,35,0.213,45,0.398,48,0.219,55,1.559,60,0.103,61,2.241,88,2.883,90,0.005,91,0.005,130,2.639,167,3.122,231,1.199,246,0.868,250,1.059,286,1.419,341,1.415,391,1.622,394,2.589,396,3.06,399,2.972,421,2.506,427,2.661,458,1.622,459,1.622,460,1.59,461,1.59,462,1.622,463,2.512,464,1.59,465,2.863,466,1.59,467,2.165,468,1.528,469,1.622,470,1.622,471,1.622,472,1.622,473,1.622,474,1.622,475,1.528,476,1.622,477,1.622,478,1.622,479,1.622,480,2.209,481,1.622,482,1.59,483,1.622,484,1.622,485,1.622,486,1.622,487,1.622,488,1.59,489,1.47,490,1.622,491,1.622,492,1.622,540,2.367,773,3.644,775,3.988,787,4.448,788,3.892,789,4.282,790,3.892,792,3.421,793,4.425,794,2.301,795,5.032,799,3.751,800,4.941,804,3.865,805,3.865,809,2.575,811,3.421,815,3.421,1230,2.495,1231,2.755,1240,3.624,1264,3.751,1266,2.116,1269,2.575,1319,5.294,1320,6.284,1321,4.76,1322,3.628,1323,4.76,1324,4.76,1325,4.76,1326,4.76,1327,4.76,1328,3.887,1329,5.689,1330,4.76,1331,3.101,1332,2.972,1333,3.628,1334,4.76,1335,2.661]],["title/interfaces/ExplorerColumn.html",[263,0.724,1238,2.715]],["body/interfaces/ExplorerColumn.html",[3,0.077,4,0.072,5,0.028,8,1.988,9,2.414,10,0.209,15,0.219,16,0.671,33,0.007,34,0.475,35,0.224,39,1.266,45,0.587,48,0.219,60,0.191,74,2.186,90,0.004,91,0.004,114,1.866,127,1.123,152,1.292,189,0.866,231,0.898,233,1.101,246,0.962,250,1.453,255,2.099,263,1.145,265,1.191,281,1.43,282,1.51,286,1.016,289,2.006,290,1.874,291,1.409,455,0.914,540,2.381,571,2.063,743,2.628,773,3.107,775,2.855,832,3.295,841,1.993,920,2.855,949,3.642,973,1.929,974,2.14,1220,2.063,1221,2.14,1222,2.14,1223,1.993,1225,4.3,1226,1.993,1227,2.998,1228,1.32,1229,2.14,1230,1.869,1231,2.063,1232,1.869,1233,4.171,1234,2.14,1235,4.651,1236,2.14,1237,2.063,1238,4.292,1239,1.929,1240,2.95,1241,2.14,1242,2.14,1243,2.14,1244,2.14,1245,2.063,1246,2.063,1247,4.171,1248,4.171,1249,4.171,1250,4.171,1251,4.171,1252,4.171,1253,4.171,1254,4.171,1255,4.171,1256,4.171,1257,4.171,1258,4.171,1259,4.171,1260,4.651,1261,4.171,1262,3.883,1263,4.02,1264,3.054,1265,2.14,1266,1.585,1267,2.226,1268,4.662,1269,2.855,1270,2.226,1271,2.226,1272,2.226,1273,2.226,1274,2.14,1275,2.063,1276,2.063,1277,2.226,1278,2.226,1279,4.631,1280,2.226,1281,2.226,1282,2.226,1283,2.226,1284,2.226,1285,2.226,1286,2.226,1287,2.226]],["title/entities/ExplorerColumnEntity.html",[246,0.855,1336,3.576]],["body/entities/ExplorerColumnEntity.html",[3,0.062,4,0.058,5,0.036,8,1.363,10,0.081,13,0.606,15,0.55,16,0.57,30,0.746,33,0.007,34,0.527,35,0.216,45,0.497,48,0.198,55,0.942,60,0.062,61,2.305,88,1.994,90,0.003,91,0.003,130,2.86,152,0.917,167,1.899,231,0.725,246,0.525,250,1.016,255,2.578,289,1.842,341,0.856,391,0.981,394,2.785,395,2.981,396,3.243,399,2.801,421,1.734,426,2.391,427,2.507,458,0.981,459,0.981,460,0.961,461,0.961,462,0.981,463,1.878,464,0.961,465,2.444,466,0.961,467,1.498,468,0.924,469,0.981,470,0.981,471,0.981,472,0.981,473,0.981,474,0.981,475,0.924,476,0.981,477,0.981,478,0.981,479,0.981,480,1.529,481,0.981,482,0.961,483,0.981,484,0.981,485,0.981,486,0.981,487,0.981,488,0.961,489,0.889,490,0.981,491,0.981,492,0.981,540,1.998,743,2.354,779,1.384,783,2.282,784,3.886,787,3.797,788,2.693,789,3.366,790,2.693,792,3.223,793,4.247,794,2.209,795,4.604,799,3.601,800,4.743,804,2.889,805,2.889,806,3.432,809,1.557,811,2.068,815,3.223,835,2.922,874,3.559,949,2.889,1225,2.725,1230,2.889,1238,2.595,1247,3.309,1248,3.309,1249,3.309,1250,3.309,1251,3.309,1252,3.309,1253,3.309,1254,3.309,1255,3.309,1256,3.309,1257,3.309,1258,3.309,1259,3.309,1261,3.309,1262,3.081,1266,1.28,1320,6.631,1331,1.875,1332,1.797,1333,2.193,1335,1.609,1336,3.418,1337,2.878,1338,5.511,1339,5.511,1340,2.878,1341,1.875,1342,2.878,1343,6.044,1344,2.878,1345,2.878,1346,2.878,1347,4.485,1348,2.878,1349,4.485,1350,2.878,1351,6.094,1352,4.485,1353,2.878,1354,4.485,1355,2.878,1356,4.485,1357,2.878,1358,2.878,1359,2.878,1360,4.485,1361,2.878,1362,4.485,1363,2.878,1364,4.485,1365,2.878,1366,4.485,1367,2.878,1368,2.878,1369,4.485,1370,2.878,1371,4.485,1372,2.878,1373,5.082,1374,2.878,1375,4.473,1376,3.989,1377,2.878,1378,2.35,1379,2.878,1380,2.878,1381,2.878,1382,2.35,1383,2.878,1384,2.878,1385,2.878,1386,2.35,1387,5.413]],["title/classes/ExplorerColumnRenderer.html",[10,0.132,1260,2.715]],["body/classes/ExplorerColumnRenderer.html",[3,0.09,4,0.083,5,0.033,8,2.02,9,2.503,10,0.221,15,0.253,16,0.746,30,0.638,33,0.007,34,0.484,35,0.216,39,1.464,45,0.583,48,0.227,60,0.197,74,2.375,90,0.004,91,0.004,93,1.077,114,1.942,127,1.299,152,1.136,189,1.002,231,1.039,233,1.274,246,1.069,250,1.427,255,2.281,263,1.213,281,1.589,282,1.746,286,1.431,289,1.964,290,2.083,291,1.63,455,1.058,540,2.623,571,2.386,743,1.56,773,3.885,775,3.173,832,3.58,841,2.305,920,3.173,949,2.162,973,2.231,974,2.476,1220,2.386,1221,2.476,1222,2.476,1223,2.305,1225,4.246,1226,2.305,1227,3.025,1228,1.527,1229,2.476,1230,2.162,1231,2.386,1232,2.162,1233,3.522,1234,2.476,1235,4.548,1236,2.476,1237,2.386,1238,4.304,1239,2.231,1240,3.279,1241,2.476,1242,2.476,1243,2.476,1244,2.476,1245,2.386,1246,2.386,1247,2.476,1248,2.476,1249,2.476,1250,2.476,1251,2.476,1252,2.476,1253,2.476,1254,2.476,1255,2.476,1256,2.476,1257,2.476,1258,2.476,1259,2.476,1260,4.304,1261,2.476,1262,2.305,1263,3.395,1264,3.951,1265,2.476,1266,1.834,1267,2.575,1268,4.903,1269,3.173,1270,2.575,1271,2.575,1272,2.575,1273,2.575,1274,2.476,1275,2.386,1276,2.386,1277,2.575,1278,2.575,1279,4.908,1280,2.575,1281,2.575,1282,2.575,1283,2.575,1284,2.575,1285,2.575,1286,2.575,1287,2.575,1388,4.124,1389,4.124,1390,4.124,1391,4.124,1392,4.124]],["title/entities/ExplorerColumnRendererEntity.html",[246,0.855,1351,3.831]],["body/entities/ExplorerColumnRendererEntity.html",[3,0.106,4,0.099,5,0.053,8,1.85,10,0.138,13,1.031,15,0.459,16,0.84,30,0.678,33,0.007,34,0.431,35,0.211,45,0.405,48,0.221,55,1.604,60,0.106,61,2.17,88,2.938,90,0.005,91,0.005,130,2.474,167,3.168,231,1.233,246,0.893,286,1.439,341,1.456,391,1.669,394,2.534,396,3.096,421,3.462,458,1.669,459,1.669,460,1.636,461,1.636,462,1.669,463,2.549,464,1.636,465,2.884,466,1.636,467,2.207,468,1.572,469,1.669,470,1.669,471,1.669,472,1.669,473,1.669,474,1.669,475,1.572,476,1.669,477,1.669,478,1.669,479,1.669,480,2.252,481,1.669,482,1.636,483,1.669,484,1.669,485,1.669,486,1.669,487,1.669,488,1.636,489,1.513,490,1.669,491,1.669,492,1.669,540,2.402,773,3.698,787,4.481,788,3.967,789,4.332,790,3.967,792,3.519,793,4.51,794,2.346,795,5.105,804,3.922,805,3.922,809,2.649,811,3.519,815,3.519,1230,2.567,1231,2.834,1260,3.824,1264,3.824,1266,2.177,1269,2.649,1320,6.193,1322,3.732,1328,3.999,1329,5.755,1331,3.19,1332,3.058,1333,3.732,1335,2.737,1351,5.396,1393,4.897,1394,4.897,1395,4.897,1396,4.897,1397,4.897,1398,4.897,1399,4.897]],["title/modules/ExplorerModule.html",[445,1.295,1400,3.576]],["body/modules/ExplorerModule.html",[3,0.114,4,0.106,5,0.055,10,0.148,13,1.11,18,1.761,23,1.235,24,2.464,30,0.563,32,1.052,33,0.007,34,0.304,35,0.123,36,0.944,38,1.598,48,0.238,50,1.15,55,1.726,60,0.114,66,1.994,77,1.377,90,0.005,91,0.005,130,1.628,131,1.597,341,1.567,445,2.142,447,2.287,449,3.532,450,4.523,451,3.434,454,3.086,455,1.99,457,4.659,458,1.796,459,1.796,460,1.761,461,1.761,462,1.796,463,2.645,464,1.761,465,2.938,466,1.761,467,2.319,468,1.693,469,1.796,470,1.796,471,1.796,472,1.796,473,1.796,474,1.796,475,1.693,476,1.796,477,1.796,478,1.796,479,1.796,480,2.366,481,1.796,482,1.761,483,1.796,484,1.796,485,1.796,486,1.796,487,1.796,488,1.761,489,1.628,490,1.796,491,1.796,492,1.796,501,3.249,502,3.292,511,2.467,522,2.404,523,2.682,524,3.05,525,3.788,526,2.404,645,2.764,824,3.434,1216,3.434,1275,4.773,1276,4.773,1331,3.434,1336,5.29,1375,3.788,1382,4.304,1400,5.915,1401,5.272,1402,5.272,1403,7.761,1404,8.571,1405,5.272,1406,5.272,1407,5.272,1408,6.942,1409,4.688,1410,5.272,1411,5.272]],["title/classes/ExplorerService.html",[10,0.132,1276,2.715]],["body/classes/ExplorerService.html",[3,0.075,4,0.07,5,0.028,8,1.692,9,2.7,10,0.206,15,0.212,23,1.208,30,0.663,32,1.587,33,0.007,34,0.497,35,0.21,36,1.374,38,1.882,39,1.227,45,0.59,48,0.217,60,0.19,74,2.146,90,0.004,91,0.004,93,0.902,114,2.049,127,1.088,133,3.009,152,1.218,189,0.839,231,0.87,233,1.067,246,1.247,250,1.469,255,2.564,263,1.13,281,1.397,282,1.463,286,0.992,289,1.923,290,1.831,291,1.365,455,0.886,540,2.35,571,1.999,743,1.307,773,3.618,775,2.789,832,3.234,841,1.931,920,3.7,949,1.811,973,1.869,974,2.074,1220,1.999,1221,2.074,1222,2.074,1223,1.931,1225,4.411,1226,1.931,1227,2.842,1228,1.279,1229,2.074,1230,1.811,1231,1.999,1232,1.811,1233,3.096,1234,2.074,1235,4.603,1236,2.074,1237,1.999,1238,3.959,1239,1.869,1240,2.882,1241,2.074,1242,2.074,1243,2.074,1244,2.074,1245,1.999,1246,1.999,1247,2.074,1248,2.074,1249,2.074,1250,2.074,1251,2.074,1252,2.074,1253,2.074,1254,2.074,1255,2.074,1256,2.074,1257,2.074,1258,2.074,1259,2.074,1260,3.57,1261,2.074,1262,1.931,1263,2.984,1264,2.984,1265,2.074,1266,1.536,1267,2.157,1268,5.44,1269,2.789,1270,2.157,1271,2.157,1272,2.157,1273,2.157,1274,2.074,1275,1.999,1276,2.984,1277,4.272,1278,3.852,1279,5.618,1280,3.852,1281,3.852,1282,3.852,1283,3.852,1284,3.852,1285,3.852,1286,4.272,1287,3.22,1412,5.157,1413,3.455,1414,3.455,1415,3.455,1416,3.455,1417,3.455,1418,3.455,1419,3.455,1420,3.455,1421,3.455,1422,3.455,1423,3.455,1424,3.455,1425,3.455]],["title/interfaces/ExplorerTab.html",[263,0.724,1263,2.715]],["body/interfaces/ExplorerTab.html",[3,0.09,4,0.083,5,0.033,8,1.84,9,2.503,10,0.221,15,0.253,16,0.746,33,0.007,34,0.495,35,0.213,39,1.464,45,0.584,48,0.227,60,0.197,74,2.375,90,0.004,91,0.004,114,1.942,127,1.299,152,1.359,189,1.002,231,1.039,233,1.274,246,1.069,250,1.464,255,2.281,263,1.213,265,1.377,281,1.589,282,1.746,286,1.129,289,1.964,290,2.79,291,1.63,455,1.058,540,2.698,571,2.386,743,1.56,773,3.376,775,4.251,832,3.58,841,2.305,920,3.173,949,2.162,973,2.231,974,2.476,1220,2.386,1221,2.476,1222,2.476,1223,2.305,1225,4.433,1226,2.305,1227,3.025,1228,1.527,1229,2.476,1230,2.162,1231,2.386,1232,2.162,1233,3.522,1234,2.476,1235,4.863,1236,2.476,1237,2.386,1238,4.304,1239,2.231,1240,3.279,1241,2.476,1242,2.476,1243,2.476,1244,2.476,1245,2.386,1246,2.386,1247,2.476,1248,2.476,1249,2.476,1250,2.476,1251,2.476,1252,2.476,1253,2.476,1254,2.476,1255,2.476,1256,2.476,1257,2.476,1258,2.476,1259,2.476,1260,3.951,1261,2.476,1262,2.305,1263,3.951,1264,3.395,1265,2.476,1266,1.834,1267,2.575,1268,4.903,1269,3.173,1270,2.575,1271,2.575,1272,2.575,1273,2.575,1274,2.476,1275,2.386,1276,2.386,1277,2.575,1278,2.575,1279,4.908,1280,2.575,1281,2.575,1282,2.575,1283,2.575,1284,2.575,1285,2.575,1286,2.575,1287,2.575]],["title/entities/ExplorerTabEntity.html",[246,0.855,1373,3.831]],["body/entities/ExplorerTabEntity.html",[3,0.107,4,0.1,5,0.053,10,0.139,13,1.042,15,0.493,16,0.846,30,0.681,33,0.007,34,0.433,35,0.195,45,0.408,48,0.222,55,1.621,60,0.107,61,2.177,88,2.201,90,0.005,91,0.005,130,2.484,152,1.251,167,2.096,231,1.246,246,0.902,250,1.087,255,2.223,290,2.67,341,1.472,391,1.687,394,2.543,396,2.573,399,3.09,421,1.913,427,2.766,458,1.687,459,1.687,460,1.653,461,1.653,462,1.687,463,2.563,464,1.653,465,2.892,466,1.653,467,2.223,468,1.589,469,1.687,470,1.687,471,1.687,472,1.687,473,1.687,474,1.687,475,1.589,476,1.687,477,1.687,478,1.687,479,1.687,480,2.268,481,1.687,482,1.653,483,1.687,484,1.687,485,1.687,486,1.687,487,1.687,488,1.653,489,1.529,490,1.687,491,1.687,492,1.687,540,2.137,743,1.872,775,4.068,779,2.38,783,2.518,787,4.092,788,2.971,789,3.6,790,2.971,792,3.557,793,4.543,794,2.363,795,5.133,799,3.852,800,5.073,804,3.49,805,3.49,806,3.387,809,2.677,811,3.557,815,3.557,1225,3.718,1230,2.595,1263,3.852,1266,2.201,1320,6.212,1331,3.225,1332,3.09,1333,3.772,1335,2.766,1341,3.225,1373,5.435,1375,5.78,1376,5.92,1382,4.041,1426,4.949,1427,4.949,1428,4.949,1429,4.949,1430,4.949,1431,4.949,1432,4.949]],["title/interfaces/ExplorerTarget.html",[263,0.724,1235,2.715]],["body/interfaces/ExplorerTarget.html",[3,0.083,4,0.077,5,0.03,8,2.03,9,2.455,10,0.214,15,0.234,16,0.704,33,0.007,34,0.484,35,0.22,36,0.992,39,1.352,45,0.583,48,0.223,60,0.194,74,2.271,90,0.004,91,0.004,114,1.901,127,1.199,152,1.086,189,0.925,231,0.959,233,1.176,246,1.01,250,1.441,255,2.181,263,1.176,265,1.272,281,1.943,282,1.613,286,1.066,289,1.986,290,2.705,291,2.834,455,0.977,540,2.446,571,2.204,743,1.44,773,3.228,775,2.997,832,4.302,841,2.129,920,2.997,949,1.997,973,2.06,974,2.286,1220,2.204,1221,2.286,1222,2.286,1223,2.129,1225,4.361,1226,2.129,1227,3.033,1228,1.41,1229,2.286,1230,1.997,1231,2.204,1232,1.997,1233,3.326,1234,2.286,1235,4.601,1236,4.305,1237,4.149,1238,4.601,1239,3.879,1240,4.008,1241,4.305,1242,4.305,1243,4.305,1244,4.305,1245,4.149,1246,4.149,1247,2.286,1248,2.286,1249,2.286,1250,2.286,1251,2.286,1252,2.286,1253,2.286,1254,2.286,1255,2.286,1256,2.286,1257,2.286,1258,2.286,1259,2.286,1260,3.779,1261,2.286,1262,2.129,1263,3.206,1264,3.206,1265,2.286,1266,1.693,1267,2.378,1268,4.773,1269,2.997,1270,2.378,1271,2.378,1272,2.378,1273,2.378,1274,2.286,1275,2.204,1276,2.204,1277,2.378,1278,2.378,1279,4.757,1280,2.378,1281,2.378,1282,2.378,1283,2.378,1284,2.378,1285,2.378,1286,2.378,1287,2.378]],["title/entities/ExplorerTargetEntity.html",[246,0.855,1375,3.372]],["body/entities/ExplorerTargetEntity.html",[3,0.08,4,0.074,5,0.043,8,1.584,10,0.104,13,0.775,15,0.511,16,0.687,30,0.732,33,0.007,34,0.515,35,0.21,45,0.482,48,0.215,55,1.206,60,0.08,61,2.384,90,0.004,91,0.004,130,2.573,231,0.928,246,0.671,255,1.806,289,1.722,291,2.531,341,1.095,391,1.255,394,2.735,396,3.425,421,1.424,426,2.345,458,1.255,459,1.255,460,1.23,461,1.23,462,1.255,463,2.183,464,1.23,465,2.659,466,1.23,467,1.806,468,1.183,469,1.255,470,1.255,471,1.255,472,1.255,473,1.255,474,1.255,475,1.183,476,1.255,477,1.255,478,1.255,479,1.255,480,1.842,481,1.255,482,1.23,483,1.255,484,1.255,485,1.255,486,1.255,487,1.255,488,1.23,489,1.138,490,1.255,491,1.255,492,1.255,743,2.045,779,2.599,780,3.128,782,2.989,783,1.874,784,3.376,787,4.131,788,3.246,789,4.25,790,3.246,804,4.119,805,4.119,806,2.751,809,1.992,832,4.257,833,4.882,841,2.059,874,2.236,1225,3.166,1229,2.211,1230,2.834,1235,3.128,1236,3.845,1237,3.707,1239,3.465,1240,3.58,1241,3.845,1242,3.845,1243,3.845,1244,3.845,1245,3.707,1246,3.707,1266,1.638,1319,4.414,1320,6.536,1322,2.807,1331,2.4,1332,2.3,1335,2.059,1336,5.379,1343,5.379,1375,3.885,1387,4.817,1409,3.276,1433,3.683,1434,6.405,1435,3.683,1436,3.683,1437,3.683,1438,3.683,1439,3.007,1440,4.414,1441,5.406,1442,3.683,1443,5.406,1444,3.683,1445,5.406,1446,3.683,1447,5.406,1448,3.683,1449,5.406,1450,3.683,1451,3.683,1452,3.683,1453,3.683,1454,5.406,1455,3.683,1456,3.683,1457,4.414,1458,3.007,1459,3.683,1460,3.683]],["title/interfaces/File.html",[5,0.037,263,0.724]],["body/interfaces/File.html",[3,0.086,4,0.08,5,0.053,10,0.188,15,0.243,16,0.724,33,0.007,34,0.42,35,0.209,45,0.613,48,0.177,60,0.188,90,0.004,91,0.004,152,1.479,189,1.879,233,1.222,250,1.577,263,1.312,264,3.42,265,1.322,266,2.471,267,2.471,268,2.471,269,3.42,270,3.42,271,2.471,272,3.42,273,3.296,274,2.471,275,2.471,276,2.471,277,2.471,278,2.376,279,2.471,280,2.471,281,2.249,282,1.676,283,3.081,284,2.986,285,2.29,286,1.405,287,3.329,288,3.949,289,1.38,290,2.591,291,2.885,292,4.382,293,2.885,294,3.167,295,2.438,296,2.471,297,1.676,298,2.29,299,2.471,300,3.42,301,2.471,302,3.42,303,2.212,304,3.42,305,2.471,306,3.711,307,2.376,308,2.376,309,3.42,310,2.471,311,2.356,312,2.356,313,2.471,314,2.471,315,2.471,316,2.471,317,2.471,318,2.471,319,2.141,320,2.471,321,2.471,322,2.471,323,2.471,324,2.471,325,2.471,326,2.471,327,2.471,328,2.471,329,2.471,330,2.471,331,2.471,332,2.471,333,2.471,334,2.471,335,2.471,336,2.471,337,2.578,338,2.578,339,2.578,340,2.578,341,1.177,342,2.578,343,2.578,344,2.578,345,2.578,346,2.578,347,2.578,348,2.578,349,2.578,350,2.578,351,2.578,352,2.578,353,2.578,354,2.578,355,2.578,356,2.578,357,2.578,358,2.578,359,2.578,360,2.578,361,3.557,362,2.578,363,2.578,364,2.578,365,2.578,366,2.578,367,2.578,368,2.578,369,2.578,370,2.578,371,2.578,372,2.578,373,2.578,374,2.578,375,2.578,376,2.578,377,2.578,378,2.578,379,2.578,380,2.578,381,2.471,382,2.471,383,2.471,384,2.471,385,2.471,386,2.471,387,2.471,388,2.471,389,2.376]],["title/entities/FileEntity.html",[246,0.855,1461,3.202]],["body/entities/FileEntity.html",[3,0.102,4,0.094,5,0.063,10,0.181,13,0.987,15,0.483,16,0.816,30,0.738,33,0.007,34,0.475,35,0.217,45,0.522,48,0.208,60,0.102,61,2.362,90,0.005,91,0.005,130,1.983,152,1.217,189,1.559,231,1.181,246,0.855,250,1.285,255,2.842,286,1.408,287,3.337,288,3.958,289,1.327,290,2.597,291,2.892,292,4.393,293,2.892,295,2.444,391,1.599,394,2.757,396,3.477,411,2.387,421,2.481,422,3.173,423,2.622,425,2.387,426,3.174,427,2.622,743,1.774,779,2.256,780,2.715,782,3.688,783,3.266,784,4.913,789,3.958,802,4.892,806,3.723,835,4.182,874,2.655,1387,3.202,1458,3.831,1461,4.381,1462,4.691,1463,4.691,1464,4.691,1465,4.691,1466,5.126,1467,3.831,1468,5.241,1469,3.831,1470,4.691,1471,4.691,1472,4.691,1473,4.691,1474,4.172,1475,4.691,1476,3.831,1477,4.691,1478,3.202,1479,4.381,1480,4.381,1481,4.691,1482,4.381,1483,5.241,1484,5.241,1485,5.241,1486,3.202,1487,4.691,1488,3.831]],["title/classes/FileManager.html",[10,0.132,283,2.538]],["body/classes/FileManager.html",[3,0.107,4,0.1,5,0.072,9,2.787,10,0.187,15,0.304,23,1.56,30,0.717,32,1.762,33,0.007,34,0.529,35,0.206,36,1.581,38,2.033,45,0.577,48,0.199,60,0.144,90,0.005,91,0.005,93,1.293,114,2.147,133,2.844,152,1.338,250,1.55,283,3.6,284,2.595,286,1.548,289,1.555,423,2.766,636,4.156,945,3.225,1163,3.668,1461,3.378,1466,3.225,1486,3.378,1489,4.402,1490,6.141,1491,5.435,1492,5.92,1493,5.435,1494,5.435,1495,5.92,1496,4.402,1497,6.141,1498,6.141,1499,3.826,1500,4.949,1501,3.387,1502,4.949,1503,5.435,1504,4.949,1505,3.387,1506,4.949,1507,3.387,1508,4.949,1509,5.435,1510,4.949,1511,3.387,1512,4.949,1513,3.772,1514,4.041,1515,4.041,1516,4.041]],["title/classes/FileMd.html",[10,0.132,284,2.46]],["body/classes/FileMd.html",[3,0.133,4,0.123,5,0.07,9,2.758,10,0.215,15,0.376,23,1.792,30,0.497,32,1.223,33,0.007,34,0.44,35,0.143,36,1.097,38,1.411,45,0.57,48,0.221,60,0.166,90,0.005,91,0.005,93,1.601,114,2.141,133,2.318,250,1.466,283,3.316,284,4.009,286,1.179,289,1.267,423,3.426,945,5.43,1163,3.979,1461,4.183,1466,3.993,1486,4.183,1489,5.452,1490,5.005,1497,5.005,1498,5.005,1499,3.119,1501,3.119,1503,5.005,1505,3.119,1507,3.119,1509,5.005,1511,3.119,1513,4.671,1514,5.005,1515,6.805,1516,6.243,1517,5.452,1518,6.13]],["title/interfaces/FileMetadata.html",[263,0.724,294,2.035]],["body/interfaces/FileMetadata.html",[3,0.086,4,0.08,5,0.045,10,0.188,15,0.243,16,0.724,33,0.007,34,0.228,35,0.209,45,0.613,48,0.177,60,0.188,90,0.004,91,0.004,152,1.479,189,1.621,233,1.222,250,1.571,263,1.312,264,4.382,265,1.322,266,2.471,267,2.471,268,2.471,269,3.42,270,3.42,271,2.471,272,3.42,273,3.296,274,2.471,275,2.471,276,2.471,277,2.471,278,2.376,279,2.471,280,2.471,281,1.808,282,1.676,283,3.081,284,2.986,285,2.29,286,0.762,287,1.805,288,2.141,289,0.818,290,1.405,291,1.564,292,2.376,293,1.564,294,2.895,295,1.322,296,4.558,297,3.091,298,4.224,299,4.558,300,4.382,301,4.558,302,4.382,303,4.08,304,4.382,305,4.558,306,4.756,307,4.382,308,4.382,309,4.382,310,2.471,311,2.356,312,2.356,313,2.471,314,2.471,315,2.471,316,2.471,317,2.471,318,2.471,319,2.141,320,2.471,321,2.471,322,2.471,323,2.471,324,2.471,325,2.471,326,2.471,327,2.471,328,2.471,329,2.471,330,2.471,331,2.471,332,2.471,333,2.471,334,2.471,335,2.471,336,2.471,337,2.578,338,2.578,339,2.578,340,2.578,341,1.177,342,2.578,343,2.578,344,2.578,345,2.578,346,2.578,347,2.578,348,2.578,349,2.578,350,2.578,351,2.578,352,2.578,353,2.578,354,2.578,355,2.578,356,2.578,357,2.578,358,2.578,359,2.578,360,2.578,361,3.557,362,2.578,363,2.578,364,2.578,365,2.578,366,2.578,367,2.578,368,2.578,369,2.578,370,2.578,371,2.578,372,2.578,373,2.578,374,2.578,375,2.578,376,2.578,377,2.578,378,2.578,379,2.578,380,2.578,381,2.471,382,2.471,383,2.471,384,2.471,385,2.471,386,2.471,387,2.471,388,2.471,389,2.376]],["title/entities/FileMetadataEntity.html",[246,0.855,1466,3.057]],["body/entities/FileMetadataEntity.html",[3,0.091,4,0.085,5,0.067,10,0.118,13,0.885,15,0.258,16,0.756,30,0.722,33,0.007,35,0.207,45,0.504,48,0.229,60,0.091,61,2.39,90,0.004,91,0.004,152,1.148,231,1.059,246,0.766,250,0.971,255,3.035,294,2.58,296,4.309,297,2.923,298,3.993,299,4.685,301,4.685,303,4.194,305,4.685,307,4.504,308,4.504,390,5.718,391,1.433,393,2.869,394,2.697,396,3.177,397,3.433,411,2.139,417,3.021,419,3.204,421,1.625,422,2.94,423,2.35,425,2.139,426,2.994,789,5.095,802,5.26,835,5.921,1466,3.875,1467,6.712,1468,7.42,1469,6.712,1483,6.9,1484,6.9,1486,5.61,1519,9.001,1520,3.739,1521,6.673,1522,3.739,1523,5.718,1524,4.204,1525,4.204,1526,5.718,1527,4.204,1528,5.718,1529,4.204,1530,5.718,1531,4.204,1532,4.204]],["title/injectables/FileMetadataService.html",[429,1.422,1533,3.831]],["body/injectables/FileMetadataService.html",[3,0.088,4,0.051,5,0.057,10,0.072,15,0.156,23,0.955,24,2.708,25,2.664,30,0.516,32,1.353,33,0.007,34,0.366,35,0.158,36,1.139,38,1.464,39,0.905,45,0.437,48,0.227,50,0.556,60,0.055,61,1.027,62,2.562,66,2.406,71,2.548,77,1.993,90,0.003,91,0.003,131,1.543,133,0.964,161,1.475,167,1.726,168,1.53,169,1.74,189,0.619,196,1.475,248,2.656,255,2.614,284,3.05,285,1.475,287,1.163,293,1.008,307,1.53,308,1.53,336,1.592,390,3.881,429,1.235,431,1.134,433,1.908,449,1.297,540,0.819,584,1.163,625,1.74,755,2.278,799,2.359,862,1.475,945,4.821,1158,1.943,1160,2.267,1163,3.479,1466,5.207,1486,4.861,1514,2.082,1515,3.328,1516,6.23,1517,3.625,1521,3.625,1523,3.106,1526,3.106,1528,3.106,1530,3.106,1533,3.328,1534,6.362,1535,2.549,1536,4.076,1537,4.076,1538,4.076,1539,4.076,1540,2.549,1541,4.076,1542,2.549,1543,6.362,1544,4.076,1545,2.549,1546,4.076,1547,2.549,1548,4.076,1549,2.549,1550,5.816,1551,2.549,1552,2.267,1553,3.625,1554,4.529,1555,2.549,1556,2.082,1557,2.549,1558,2.549,1559,2.549,1560,2.549,1561,2.549,1562,2.549,1563,2.549,1564,2.549,1565,2.549,1566,4.076,1567,2.549,1568,2.549,1569,2.549,1570,2.549,1571,2.549,1572,2.549,1573,2.549,1574,2.549,1575,2.549,1576,2.549,1577,2.549,1578,2.549,1579,2.549,1580,2.549,1581,4.076,1582,2.549,1583,2.549,1584,2.549,1585,2.082,1586,2.549,1587,2.549,1588,2.549,1589,4.076,1590,2.549,1591,2.549,1592,4.076,1593,4.076,1594,4.076,1595,4.076,1596,4.076,1597,2.549,1598,4.076,1599,2.549,1600,4.076,1601,2.549,1602,4.076,1603,2.549,1604,4.076,1605,2.549,1606,4.076,1607,2.549,1608,2.549,1609,2.549,1610,2.549,1611,2.549,1612,2.549,1613,2.549,1614,2.549,1615,2.549,1616,2.549,1617,2.549,1618,2.549,1619,2.549,1620,2.549,1621,2.549,1622,2.549,1623,2.549,1624,2.549,1625,2.549,1626,2.549,1627,2.549,1628,2.549,1629,2.549,1630,2.549,1631,2.549,1632,4.076,1633,2.549,1634,2.549,1635,2.549,1636,2.549,1637,2.549,1638,2.549,1639,2.549,1640,2.549,1641,2.549,1642,2.549,1643,2.549,1644,2.549,1645,2.549,1646,2.549,1647,2.549,1648,2.549,1649,2.549,1650,2.549,1651,2.549,1652,2.549,1653,2.549,1654,2.549,1655,2.549,1656,2.549,1657,4.076,1658,2.549,1659,2.549,1660,2.549,1661,2.549,1662,2.549,1663,2.549,1664,2.549,1665,2.549,1666,4.076,1667,4.076,1668,4.076,1669,4.076,1670,4.076,1671,2.549,1672,2.549,1673,2.549,1674,2.549,1675,2.549,1676,2.549,1677,4.076,1678,2.549,1679,2.549,1680,2.549,1681,2.549,1682,2.549,1683,2.549,1684,2.549,1685,2.549,1686,2.549,1687,2.549,1688,2.549,1689,2.549,1690,2.549,1691,2.549,1692,2.549,1693,2.549,1694,2.549,1695,2.549,1696,2.549,1697,2.549,1698,2.549,1699,2.549,1700,2.549,1701,4.076,1702,2.549,1703,2.549,1704,4.076,1705,2.549,1706,2.549,1707,2.549,1708,2.549,1709,2.549,1710,2.549,1711,4.076,1712,2.549,1713,4.076,1714,4.076,1715,5.818,1716,2.549,1717,2.549,1718,2.549,1719,2.549,1720,2.549,1721,2.549,1722,2.549,1723,4.076,1724,2.549,1725,2.549,1726,2.549,1727,2.549,1728,4.076,1729,2.549,1730,2.549,1731,2.549,1732,2.549,1733,2.549,1734,2.549,1735,2.549,1736,2.549,1737,2.549,1738,2.549,1739,2.549,1740,2.549,1741,2.549,1742,2.549,1743,2.549,1744,2.549,1745,2.549,1746,2.549,1747,2.549,1748,2.549,1749,2.549,1750,2.549,1751,2.549,1752,2.549,1753,2.549,1754,2.549,1755,2.549,1756,2.549,1757,2.549,1758,5.093,1759,5.093,1760,2.549,1761,2.549,1762,2.549,1763,2.549,1764,2.549,1765,2.549,1766,2.549,1767,2.549,1768,2.549,1769,2.549,1770,2.549,1771,2.549,1772,2.549,1773,2.549,1774,2.549,1775,2.549,1776,2.549,1777,2.549,1778,2.549,1779,2.549,1780,2.549,1781,2.549,1782,2.549,1783,2.549,1784,2.549,1785,2.549,1786,2.549,1787,2.549,1788,2.549,1789,2.549,1790,2.549,1791,2.549,1792,2.549,1793,2.549,1794,2.549,1795,2.549,1796,2.549,1797,2.549,1798,2.549,1799,2.549,1800,2.549,1801,2.549,1802,2.549,1803,2.549,1804,2.549,1805,2.549,1806,2.549,1807,2.549,1808,2.549,1809,2.549,1810,2.549,1811,2.549,1812,2.549,1813,2.549,1814,2.549,1815,2.549,1816,2.549,1817,2.549,1818,2.549,1819,2.549,1820,2.549,1821,2.549,1822,2.549,1823,2.549,1824,2.549,1825,2.549,1826,2.549,1827,2.549,1828,2.549,1829,2.549,1830,2.549,1831,2.549,1832,2.549,1833,2.549]],["title/modules/FileModule.html",[445,1.295,1834,3.372]],["body/modules/FileModule.html",[3,0.115,4,0.107,5,0.062,10,0.149,23,1.243,30,0.43,32,1.058,33,0.007,34,0.306,35,0.124,36,0.95,38,1.221,48,0.244,50,1.158,55,1.738,60,0.115,77,1.386,90,0.005,91,0.005,130,1.639,131,1.608,283,4.646,284,4.503,285,3.07,341,1.578,389,4.964,423,2.966,445,2.148,447,2.302,449,3.547,450,4.542,451,3.457,454,3.1,457,4.674,458,1.808,459,1.808,460,1.772,461,1.772,462,1.808,463,2.653,464,1.772,465,2.943,466,1.772,467,2.329,468,1.704,469,1.808,470,1.808,471,1.808,472,1.808,473,1.808,474,1.808,475,1.704,476,1.808,477,1.808,478,1.808,479,1.808,480,2.376,481,1.808,482,1.772,483,1.808,484,1.808,485,1.808,486,1.808,487,1.808,488,1.772,489,1.639,490,1.808,491,1.808,492,1.808,499,4.034,500,3.621,501,3.263,502,3.313,511,2.484,522,2.42,523,3.547,524,4.034,526,2.42,645,2.782,824,3.457,1461,3.621,1513,4.044,1533,6.358,1834,5.596,1835,5.306,1836,5.306,1837,6.358,1838,5.306,1839,5.306,1840,5.306,1841,5.306,1842,5.306]],["title/injectables/FileService.html",[429,1.422,1837,3.831]],["body/injectables/FileService.html",[3,0.039,4,0.036,5,0.076,8,1.719,10,0.051,15,0.111,17,1.086,18,1.575,19,3.027,21,2.475,23,0.72,24,3.164,25,2.967,30,0.608,32,1.387,33,0.007,34,0.48,35,0.162,36,1.244,38,1.933,39,1.674,45,0.496,48,0.206,50,0.395,60,0.039,61,1.957,62,2.403,66,3.315,70,2.945,71,2.045,77,1.916,90,0.002,91,0.002,107,1.026,114,1.972,122,3.447,130,0.949,131,0.931,133,1.514,152,1.507,167,1.997,229,2.508,231,0.456,246,1.563,250,1.269,253,2.001,283,3.76,284,2.473,285,1.047,286,1.495,287,2.938,288,3.969,289,1.652,291,0.715,292,1.086,293,2.088,391,1.047,423,1.011,429,1.429,431,0.804,433,1.437,435,4.195,436,2.508,438,1.011,440,0.766,443,0.948,444,1.086,455,0.788,468,0.986,488,1.026,505,1.235,507,1.235,540,1.514,542,4.587,544,2.096,556,3.919,561,2.341,579,2.096,585,4.012,615,3.595,616,4.689,625,4.179,627,5.445,630,5.261,631,5.118,636,2.945,637,3.268,641,1.609,642,1.609,644,1.3,645,0.948,874,2.665,887,2.731,891,3.183,913,7.192,924,2.341,945,2.001,948,2.731,950,4.63,962,2.341,972,1.179,1026,2.341,1033,3.559,1088,4.91,1114,2.341,1158,1.379,1163,2.409,1173,5.261,1461,5.685,1490,3.268,1491,2.508,1492,2.731,1493,2.508,1494,2.508,1495,2.731,1496,1.609,1497,5.484,1498,6.675,1499,3.278,1501,1.563,1503,2.508,1505,1.563,1507,1.563,1509,2.508,1511,1.563,1513,1.379,1556,1.477,1837,2.508,1843,1.809,1844,3.071,1845,5.742,1846,2.731,1847,4.717,1848,4.002,1849,3.071,1850,4.717,1851,4.717,1852,4.002,1853,4.002,1854,1.809,1855,1.809,1856,6.443,1857,5.73,1858,4.195,1859,4.717,1860,2.508,1861,1.809,1862,5.283,1863,1.809,1864,5.742,1865,3.071,1866,1.809,1867,1.809,1868,3.071,1869,4.717,1870,3.071,1871,4.717,1872,3.071,1873,3.071,1874,2.731,1875,4.002,1876,1.809,1877,5.742,1878,1.809,1879,1.809,1880,1.809,1881,1.809,1882,2.731,1883,2.207,1884,1.809,1885,1.809,1886,1.809,1887,2.508,1888,3.071,1889,3.559,1890,1.809,1891,1.809,1892,1.809,1893,1.809,1894,1.809,1895,1.809,1896,1.809,1897,1.809,1898,1.809,1899,3.071,1900,3.071,1901,1.809,1902,1.477,1903,4.002,1904,4.717,1905,4.002,1906,4.002,1907,3.071,1908,3.071,1909,3.071,1910,3.071,1911,2.001,1912,1.809,1913,1.809,1914,1.809,1915,3.071,1916,1.809,1917,1.809,1918,1.809,1919,1.809,1920,1.809,1921,1.809,1922,1.809,1923,1.809,1924,1.809,1925,1.809,1926,1.809,1927,1.809,1928,1.809,1929,1.809,1930,1.809,1931,1.809,1932,1.809,1933,1.809,1934,1.809,1935,1.809,1936,4.002,1937,3.071,1938,1.809,1939,1.809,1940,1.809,1941,1.809,1942,1.809,1943,1.809,1944,1.809,1945,1.809,1946,1.809,1947,1.809,1948,1.809,1949,1.809,1950,1.809,1951,1.809,1952,1.809,1953,1.809,1954,1.809,1955,1.809,1956,1.809,1957,1.809,1958,1.809,1959,1.809,1960,1.809,1961,1.809,1962,1.809,1963,1.809,1964,1.809,1965,1.809,1966,1.809,1967,1.809,1968,1.809,1969,1.809,1970,1.809,1971,1.809,1972,1.809,1973,1.809,1974,1.809,1975,1.809,1976,1.809,1977,1.809,1978,1.809,1979,1.809,1980,1.809,1981,1.809,1982,1.809,1983,1.809,1984,1.809,1985,1.809,1986,1.809,1987,1.809,1988,1.809,1989,1.809,1990,1.809,1991,1.809,1992,2.731,1993,1.809]],["title/classes/ForbiddenMsException.html",[10,0.132,1994,4.173]],["body/classes/ForbiddenMsException.html",[3,0.15,4,0.139,5,0.055,10,0.195,30,0.561,32,1.379,33,0.007,34,0.398,35,0.161,36,1.238,45,0.539,48,0.218,50,1.508,60,0.15,90,0.006,91,0.006,93,1.806,107,2.31,132,4.068,133,2.615,433,3.852,602,4.719,603,4.911,604,5.616,605,4.719,606,4.505,607,4.719,1994,7.319,1995,8.229,1996,6.915,1997,6.915]],["title/classes/GoogleCaptchaService.html",[10,0.132,1998,4.173]],["body/classes/GoogleCaptchaService.html",[3,0.097,4,0.09,5,0.036,8,1.536,10,0.228,15,0.274,18,2.383,19,4.25,21,3.475,23,1.455,24,2.976,25,2.336,30,0.657,32,1.239,33,0.007,34,0.358,35,0.189,36,1.111,38,1.774,41,4.851,48,0.228,50,0.975,60,0.097,62,2.652,66,3.063,71,2.074,77,1.863,78,3.976,90,0.004,91,0.004,93,1.168,107,2.074,114,2.038,152,1.282,167,1.893,288,3.359,289,1.284,433,3.608,438,2.499,440,1.893,443,2.344,444,2.684,455,1.592,505,3.051,507,3.051,538,4.463,540,1.994,544,4.238,583,4.238,584,2.832,585,2.275,625,4.238,730,5.868,731,3.651,733,5.821,737,5.073,752,5.875,753,4.732,754,4.463,756,4.238,757,4.732,758,4.238,761,5.127,762,4.238,764,3.255,767,5.07,922,4.463,950,4.463,972,2.913,1213,3.051,1998,6.856,1999,6.21,2000,3.976,2001,5.523,2002,7.647,2003,7.455,2004,5.523,2005,5.07,2006,6.21,2007,7.134,2008,7.708,2009,4.471,2010,4.471,2011,5.875,2012,4.471,2013,4.463,2014,6.21,2015,6.21,2016,5.523,2017,3.976,2018,4.471,2019,3.976,2020,3.976,2021,5.523,2022,3.976,2023,3.976,2024,4.471,2025,4.471,2026,4.471,2027,4.471,2028,4.471,2029,4.471,2030,4.471]],["title/interfaces/GpsFileMetadata.html",[263,0.724,302,2.817]],["body/interfaces/GpsFileMetadata.html",[3,0.091,4,0.084,5,0.047,10,0.193,15,0.256,16,0.752,33,0.007,34,0.24,35,0.191,45,0.613,48,0.182,60,0.19,90,0.004,91,0.004,152,1.495,189,1.669,233,1.289,250,1.592,263,1.33,264,3.551,265,1.393,266,2.605,267,2.605,268,2.605,269,3.551,270,3.551,271,2.605,272,3.551,273,3.423,274,2.605,275,2.605,276,2.605,277,2.605,278,2.504,279,2.605,280,2.605,281,1.862,282,1.767,283,3.199,284,3.101,285,2.414,286,0.803,287,1.902,288,2.256,289,0.862,290,1.481,291,1.649,292,2.504,293,1.649,294,2.566,295,1.393,296,2.605,297,1.767,298,2.414,299,2.605,300,3.551,301,2.605,302,4.125,303,2.332,304,3.551,305,2.605,306,3.854,307,2.504,308,2.504,309,3.551,310,2.605,311,2.447,312,2.447,313,2.605,314,2.605,315,2.605,316,2.605,317,2.605,318,2.605,319,2.256,320,2.605,321,2.605,322,2.605,323,2.605,324,2.605,325,2.605,326,2.605,327,2.605,328,2.605,329,2.605,330,2.605,331,2.605,332,2.605,333,2.605,334,2.605,335,2.605,336,2.605,337,2.718,338,2.718,339,2.718,340,2.718,341,1.24,342,2.718,343,2.718,344,2.718,345,2.718,346,2.718,347,2.718,348,2.718,349,2.718,350,2.718,351,2.718,352,2.718,353,2.718,354,2.718,355,2.718,356,2.718,357,2.718,358,2.718,359,2.718,360,2.718,361,3.693,362,2.718,363,2.718,364,2.718,365,2.718,366,2.718,367,2.718,368,2.718,369,2.718,370,2.718,371,2.718,372,2.718,373,2.718,374,2.718,375,2.718,376,2.718,377,2.718,378,2.718,379,2.718,380,2.718,381,4.669,382,4.669,383,4.669,384,2.605,385,2.605,386,2.605,387,2.605,388,2.605,389,2.504]],["title/entities/GpsFileMetadataEntity.html",[246,0.855,1523,3.576]],["body/entities/GpsFileMetadataEntity.html",[3,0.123,4,0.114,5,0.072,10,0.159,13,1.189,15,0.537,16,0.923,30,0.687,33,0.007,35,0.197,48,0.192,60,0.123,61,2.327,88,3.568,90,0.005,91,0.005,130,2.77,152,1.335,167,3.398,231,1.423,246,1.03,250,1.509,262,6.12,302,4.359,381,5.01,382,5.01,383,5.01,391,1.925,393,3.855,394,2.566,396,3.466,405,6.552,406,7.322,407,7.322,408,7.322,411,2.874,412,4.059,421,2.183,422,3.589,423,3.157,425,2.874,428,6.552,1522,5.024,1523,5.533,2031,8.761,2032,5.648,2033,5.648,2034,5.648]],["title/classes/GraphicCaptchaService.html",[10,0.132,723,3.831]],["body/classes/GraphicCaptchaService.html",[3,0.066,4,0.062,5,0.024,8,1.59,10,0.195,15,0.188,18,1.571,19,4.148,21,3.392,23,1.102,24,3.195,25,2.906,30,0.699,32,1.143,33,0.007,34,0.33,35,0.15,36,1.026,38,1.96,39,2.283,41,4.24,45,0.449,48,0.228,50,0.668,60,0.066,61,0.771,62,2.788,66,3.119,69,2.722,71,1.571,77,2.057,90,0.003,91,0.003,93,0.799,107,1.571,114,2.069,130,0.945,131,1.949,152,1.31,167,1.296,287,3.341,289,0.972,303,4.61,433,3.01,438,1.71,440,1.296,443,1.604,444,1.837,505,2.089,507,2.089,538,4.621,540,1.51,544,3.21,573,3.064,583,4.737,584,1.395,585,3.272,625,3.21,717,3.577,723,5.251,728,4.183,730,5.208,731,2.499,733,4.988,737,5.361,752,4.901,753,3.585,754,3.38,756,3.21,757,3.585,761,2.199,762,3.21,764,3.638,767,3.841,799,2.722,874,1.946,892,4.183,922,4.988,950,3.38,972,1.994,1015,2.722,1026,2.332,1088,2.332,1860,5.251,1992,2.722,2000,2.722,2001,4.183,2004,4.183,2005,3.841,2011,6.489,2013,3.38,2016,4.183,2019,2.722,2020,2.722,2021,4.183,2022,2.722,2023,2.722,2035,7.631,2036,5.719,2037,6.43,2038,5.729,2039,6.43,2040,6.43,2041,6.43,2042,4.704,2043,3.06,2044,3.06,2045,4.704,2046,3.06,2047,3.06,2048,4.704,2049,4.704,2050,3.06,2051,4.366,2052,3.06,2053,7.005,2054,6.172,2055,3.06,2056,4.704,2057,4.704,2058,4.704,2059,3.06,2060,6.517,2061,4.704,2062,4.704,2063,4.704,2064,3.06,2065,4.704,2066,3.06,2067,4.704,2068,2.722,2069,3.06,2070,3.06,2071,4.183,2072,2.722,2073,3.06,2074,3.06,2075,3.06,2076,3.06,2077,3.06,2078,3.06,2079,3.06,2080,3.06,2081,3.06,2082,5.983,2083,3.06,2084,2.722,2085,3.06,2086,4.704,2087,3.06,2088,3.06,2089,3.06,2090,3.06,2091,3.06,2092,3.06,2093,4.704,2094,3.06,2095,3.06,2096,3.06,2097,2.722,2098,2.499,2099,3.06,2100,5.729,2101,3.06,2102,3.06,2103,3.06,2104,3.06,2105,3.06,2106,3.06,2107,3.06,2108,3.06,2109,3.06,2110,3.06,2111,3.06,2112,3.06,2113,3.06,2114,3.06,2115,3.06,2116,3.06]],["title/interfaces/IccFileMetadata.html",[263,0.724,300,2.817]],["body/interfaces/IccFileMetadata.html",[3,0.082,4,0.076,5,0.044,10,0.183,15,0.233,16,0.703,33,0.007,34,0.219,35,0.215,45,0.614,48,0.173,60,0.186,90,0.004,91,0.004,152,1.467,189,1.848,233,1.172,250,1.565,263,1.297,264,3.318,265,1.268,266,2.37,267,2.37,268,2.37,269,3.318,270,3.318,271,2.37,272,3.318,273,3.198,274,2.37,275,2.37,276,2.37,277,2.37,278,2.278,279,2.37,280,2.37,281,1.765,282,1.607,283,2.989,284,2.897,285,2.196,286,0.73,287,1.731,288,2.053,289,0.785,290,1.347,291,1.5,292,2.278,293,1.5,294,2.397,295,1.268,296,2.37,297,1.607,298,2.196,299,2.37,300,3.912,301,2.37,302,3.318,303,2.121,304,3.318,305,2.37,306,3.6,307,2.278,308,2.278,309,3.318,310,2.37,311,2.286,312,2.286,313,2.37,314,2.37,315,2.37,316,2.37,317,2.37,318,2.37,319,2.053,320,2.37,321,4.47,322,4.47,323,4.47,324,4.47,325,4.47,326,4.47,327,4.47,328,4.47,329,4.47,330,4.47,331,4.47,332,4.47,333,4.47,334,4.47,335,2.37,336,2.37,337,2.473,338,2.473,339,2.473,340,2.473,341,1.128,342,2.473,343,2.473,344,2.473,345,2.473,346,2.473,347,2.473,348,2.473,349,2.473,350,2.473,351,2.473,352,2.473,353,2.473,354,2.473,355,2.473,356,2.473,357,2.473,358,2.473,359,2.473,360,2.473,361,3.451,362,2.473,363,2.473,364,2.473,365,2.473,366,2.473,367,2.473,368,2.473,369,2.473,370,2.473,371,2.473,372,2.473,373,2.473,374,2.473,375,2.473,376,2.473,377,2.473,378,2.473,379,2.473,380,2.473,381,2.37,382,2.37,383,2.37,384,2.37,385,2.37,386,2.37,387,2.37,388,2.37,389,2.278]],["title/entities/IccFileMetadataEntity.html",[246,0.855,1526,3.576]],["body/entities/IccFileMetadataEntity.html",[3,0.084,4,0.078,5,0.074,10,0.109,13,0.816,15,0.566,16,0.713,30,0.744,33,0.007,34,0.553,35,0.214,45,0.587,48,0.149,60,0.084,61,2.428,90,0.004,91,0.004,152,1.097,189,1.363,231,0.976,246,0.707,250,0.916,300,3.369,321,4.119,322,4.119,323,4.119,324,4.119,325,4.119,326,4.119,327,4.119,328,4.119,329,4.119,330,4.119,331,4.119,332,4.119,333,4.119,334,4.119,391,1.321,393,2.646,394,2.779,395,4.842,396,3.713,399,2.421,400,2.955,401,2.955,403,3.166,404,2.955,411,1.972,412,2.786,415,2.955,417,2.786,419,2.955,421,1.499,422,2.774,423,2.167,425,1.972,426,3.883,427,2.167,1520,3.448,1526,4.277,2117,9.226,2118,5.612,2119,5.612,2120,3.448,2121,5.612,2122,3.448,2123,5.612,2124,5.612,2125,3.877,2126,3.448,2127,5.612,2128,5.612,2129,5.612,2130,5.612,2131,5.612,2132,5.612,2133,3.877,2134,5.612,2135,5.612,2136,3.448,2137,5.612,2138,3.448,2139,3.877,2140,3.448]],["title/interfaces/ImageFileMetadata.html",[263,0.724,304,2.817]],["body/interfaces/ImageFileMetadata.html",[3,0.084,4,0.078,5,0.045,10,0.186,15,0.239,16,0.715,33,0.007,34,0.224,35,0.212,45,0.613,48,0.175,60,0.187,90,0.004,91,0.004,152,1.474,189,1.867,233,1.202,250,1.592,263,1.306,264,3.378,265,1.3,266,2.43,267,2.43,268,2.43,269,3.378,270,3.378,271,2.43,272,3.378,273,3.256,274,2.43,275,2.43,276,2.43,277,2.43,278,2.336,279,2.43,280,2.43,281,1.791,282,1.648,283,3.044,284,2.95,285,2.252,286,0.749,287,1.774,288,2.105,289,0.804,290,1.381,291,1.538,292,2.336,293,1.538,294,2.441,295,1.3,296,2.43,297,1.648,298,2.252,299,2.43,300,3.378,301,2.43,302,3.378,303,2.175,304,3.968,305,2.43,306,3.666,307,2.336,308,2.336,309,3.378,310,4.523,311,3.178,312,3.178,313,4.523,314,4.523,315,4.523,316,4.523,317,4.523,318,4.523,319,3.918,320,4.523,321,2.43,322,2.43,323,2.43,324,2.43,325,2.43,326,2.43,327,2.43,328,2.43,329,2.43,330,2.43,331,2.43,332,2.43,333,2.43,334,2.43,335,2.43,336,2.43,337,2.535,338,2.535,339,2.535,340,2.535,341,1.157,342,2.535,343,2.535,344,2.535,345,2.535,346,2.535,347,2.535,348,2.535,349,2.535,350,2.535,351,2.535,352,2.535,353,2.535,354,2.535,355,2.535,356,2.535,357,2.535,358,2.535,359,2.535,360,2.535,361,3.514,362,2.535,363,2.535,364,2.535,365,2.535,366,2.535,367,2.535,368,2.535,369,2.535,370,2.535,371,2.535,372,2.535,373,2.535,374,2.535,375,2.535,376,2.535,377,2.535,378,2.535,379,2.535,380,2.535,381,2.43,382,2.43,383,2.43,384,2.43,385,2.43,386,2.43,387,2.43,388,2.43,389,2.336]],["title/entities/ImageFileMetadataEntity.html",[246,0.855,1528,3.576]],["body/entities/ImageFileMetadataEntity.html",[3,0.095,4,0.088,5,0.074,10,0.124,13,0.924,15,0.566,16,0.78,30,0.743,33,0.007,34,0.441,35,0.213,45,0.551,48,0.162,60,0.095,61,2.426,88,3.401,90,0.004,91,0.004,130,2.696,152,1.176,167,3.239,189,1.49,231,1.106,246,0.801,250,1.496,304,3.682,310,4.413,311,2.923,312,2.923,313,4.413,314,4.413,315,4.413,316,4.413,317,4.413,318,4.413,319,3.823,320,4.413,391,1.497,393,2.998,394,2.775,395,4.509,396,3.706,399,4.776,400,3.347,401,3.347,403,3.586,404,3.347,411,2.235,412,3.157,415,3.347,417,3.157,419,3.347,421,1.698,422,3.032,423,2.455,425,2.235,426,3.616,427,4.276,1528,4.674,2120,3.906,2122,3.906,2126,3.906,2136,3.906,2138,3.906,2140,3.906,2141,9.228,2142,6.133,2143,6.133,2144,4.392]],["title/classes/InvalidTokenMsException.html",[10,0.132,2145,4.173]],["body/classes/InvalidTokenMsException.html",[3,0.149,4,0.138,5,0.055,10,0.193,30,0.557,32,1.37,33,0.007,34,0.396,35,0.16,36,1.23,45,0.537,47,5.471,48,0.217,50,1.499,60,0.149,90,0.006,91,0.006,93,1.794,107,2.295,132,4.052,133,2.599,433,3.837,602,4.689,603,4.898,604,5.595,605,4.689,606,4.476,607,4.689,2145,7.291,2146,8.198,2147,6.111,2148,6.871]],["title/classes/JwtDto.html",[10,0.132,543,3.372]],["body/classes/JwtDto.html",[3,0.093,4,0.086,5,0.034,8,1.056,10,0.244,12,4.179,15,0.262,16,0.764,30,0.646,33,0.007,35,0.205,36,1.246,45,0.548,47,5.736,48,0.219,50,0.932,60,0.164,71,1.426,74,3.14,90,0.004,91,0.004,93,1.115,127,2.602,152,0.71,189,2.105,220,2.973,228,3.735,394,2.413,445,1.178,452,3.069,454,1.899,455,1.785,475,1.371,509,2.915,510,3.255,536,3.069,539,5.002,540,2.653,541,4.751,543,5.002,545,5.159,546,6.1,547,5.43,550,3.255,551,5.002,557,4.751,568,3.069,572,4.104,596,3.069,597,3.069,717,5.159,735,5.157,737,3.48,738,5.002,745,5.937,746,2.667,765,2.915,794,1.516,949,2.239,1197,3.069,1232,2.239,1288,3.255,1289,3.255,1290,5.157,1291,4.91,1292,3.487,1295,4.91,1296,6.503,1297,3.584,1298,4.372,1299,3.487,1300,3.487,1301,4.028,1302,5.684,1303,3.255,1304,3.487,1305,3.487,1306,3.487,1307,3.487,1308,4.583,1309,4.91,1310,6.169,1311,5.684,1312,5.684,2149,4.271,2150,4.271,2151,4.271,2152,4.271,2153,3.069,2154,4.271]],["title/interfaces/Language.html",[263,0.724,489,1.449]],["body/interfaces/Language.html",[3,0.143,4,0.132,5,0.052,15,0.403,16,1.015,33,0.007,34,0.515,35,0.2,45,0.588,48,0.174,60,0.187,90,0.006,91,0.006,131,2.42,152,1.55,250,1.304,263,1.328,265,2.197,281,2.482,286,1.537,291,3.534,489,2.762,1227,2.197,2155,5.371,2156,5.371,2157,5.739,2158,4.727]],["title/entities/LanguageEntity.html",[246,0.855,2159,3.202]],["body/entities/LanguageEntity.html",[3,0.117,4,0.108,5,0.056,10,0.151,13,1.132,15,0.529,16,0.894,30,0.674,33,0.007,34,0.451,35,0.194,45,0.543,48,0.208,55,1.761,60,0.117,61,2.093,90,0.005,91,0.005,152,1.304,231,1.354,246,0.98,255,2.349,286,1.508,291,3.097,341,1.599,391,1.832,394,2.519,395,2.908,396,3.213,421,2.078,426,3.05,458,1.832,459,1.832,460,1.796,461,1.796,462,1.832,463,2.671,464,1.796,465,2.952,466,1.796,467,2.349,468,1.726,469,1.832,470,1.832,471,1.832,472,1.832,473,1.832,474,1.832,475,1.726,476,1.832,477,1.832,478,1.832,479,1.832,480,2.396,481,1.832,482,1.796,483,1.832,484,1.832,485,1.832,486,1.832,487,1.832,488,1.796,489,2.421,490,1.832,491,1.832,492,1.832,743,2.66,779,3.381,780,3.111,782,3.52,783,2.735,784,4.391,806,3.578,812,4.39,874,2.909,1266,2.391,1335,3.005,1341,3.503,2159,4.799,2160,5.377,2161,5.377,2162,5.377,2163,5.377,2164,5.377,2165,4.39,2166,5.377]],["title/injectables/LiteAuthGuard.html",[429,1.422,2167,4.173]],["body/injectables/LiteAuthGuard.html",[0,5.362,1,6.765,3,0.128,4,0.119,5,0.047,7,5.243,8,1.458,9,1.688,10,0.21,12,5.165,15,0.362,16,0.949,17,5.443,18,2.734,19,4.552,20,7.281,21,3.722,22,4.981,30,0.605,32,1.176,33,0.007,34,0.34,35,0.137,36,1.055,48,0.235,50,1.286,56,4.814,57,4.493,60,0.128,74,2.595,90,0.005,91,0.005,107,2.492,130,1.821,131,1.786,429,2.261,431,2.621,433,4.027,434,4.861,437,6.636,438,3.295,440,2.497,441,5.243,442,5.243,443,3.091,444,3.539,482,2.492,874,3.086,2167,7.281,2168,8.186,2169,7.461,2170,7.461]],["title/modules/LocaleModule.html",[445,1.295,2171,3.576]],["body/modules/LocaleModule.html",[3,0.123,4,0.114,5,0.058,10,0.16,33,0.007,48,0.238,50,1.237,55,1.856,60,0.123,90,0.005,91,0.005,341,1.685,445,2.218,447,2.459,458,1.932,459,1.932,460,1.893,461,1.893,462,1.932,463,2.739,464,1.893,465,2.989,466,1.893,467,2.431,468,1.82,469,1.932,470,1.932,471,1.932,472,1.932,473,1.932,474,1.932,475,1.82,476,1.932,477,1.932,478,1.932,479,1.932,480,2.48,481,1.932,482,1.893,483,1.932,484,1.932,485,1.932,486,1.932,487,1.932,488,1.893,489,1.751,490,1.932,491,1.932,492,1.932,511,2.653,522,3.665,526,3.665,645,2.972,660,3.168,661,3.403,662,3.403,663,3.403,668,4.369,669,3.403,670,3.28,787,3.702,809,3.066,824,3.693,2159,4.966,2171,6.956,2172,5.041,2173,5.041,2174,5.041,2175,7.264,2176,5.668,2177,5.041,2178,6.472,2179,5.23,2180,4.32,2181,5.668,2182,5.041]],["title/injectables/LocaleService.html",[429,1.422,2175,3.576]],["body/injectables/LocaleService.html",[3,0.119,4,0.111,5,0.044,10,0.155,15,0.338,18,2.647,23,1.673,24,2.814,25,2.595,30,0.579,32,1.424,33,0.007,34,0.411,35,0.166,36,1.278,38,1.267,45,0.546,48,0.236,50,1.201,60,0.119,62,2.846,66,2.998,71,1.839,77,1.438,90,0.005,91,0.005,107,2.385,114,1.614,131,2.402,133,2.082,231,1.386,286,1.672,429,2.164,431,2.447,489,2.206,615,7.14,644,3.956,645,2.886,787,4.032,809,2.977,868,5.132,2159,3.757,2175,5.442,2177,4.896,2178,6.351,2179,3.956,2180,4.195,2183,5.504,2184,7.926,2185,5.504,2186,7.926,2187,7.926,2188,5.504,2189,7.141,2190,5.504,2191,5.504,2192,5.504,2193,5.504,2194,5.504,2195,7.141,2196,5.504,2197,5.504,2198,5.504,2199,5.504,2200,7.141,2201,5.504,2202,5.504,2203,5.504,2204,5.504,2205,5.504,2206,5.504,2207,5.504]],["title/injectables/LocaleSubscriber.html",[429,1.422,2208,4.173]],["body/injectables/LocaleSubscriber.html",[3,0.081,4,0.075,5,0.03,8,1.592,10,0.181,13,0.781,15,0.228,17,2.229,18,1.816,21,3.499,23,1.274,24,2.284,25,1.216,30,0.441,32,1.085,33,0.007,34,0.313,35,0.127,36,0.973,38,1.252,48,0.209,50,0.81,60,0.081,61,1.37,62,2.789,66,2.057,71,2.366,77,1.681,90,0.004,91,0.004,107,1.816,114,1.602,152,1.311,213,3.302,225,5.399,231,0.935,246,1.578,391,2.414,429,1.648,431,1.651,434,4.616,438,2.075,440,1.572,443,1.946,541,3.711,542,3.265,544,3.711,545,3.396,561,6.362,585,3.274,636,4.424,637,7.247,645,1.946,674,2.318,740,4.144,787,4.791,789,2.941,799,4.099,804,2.851,805,2.851,809,2.008,1201,7.699,1301,3.147,1585,4.44,1846,6.301,1860,6.817,1882,4.837,2179,6.222,2180,2.829,2208,7.699,2209,6.435,2210,5.438,2211,5.438,2212,7.084,2213,5.438,2214,7.084,2215,4.837,2216,7.88,2217,3.396,2218,5.438,2219,5.438,2220,7.084,2221,8.657,2222,3.713,2223,5.438,2224,3.908,2225,5.438,2226,4.837,2227,5.438,2228,7.88,2229,3.713,2230,5.438,2231,5.438,2232,4.837,2233,4.837,2234,5.438,2235,5.438,2236,3.713,2237,3.713,2238,5.438,2239,5.438,2240,5.438,2241,5.438,2242,5.438,2243,3.713,2244,7.88,2245,5.438,2246,5.438,2247,7.084,2248,5.438,2249,7.084,2250,5.438,2251,5.438,2252,3.713]],["title/interfaces/LocalizedMedia.html",[263,0.724,2158,3.372]],["body/interfaces/LocalizedMedia.html",[3,0.141,4,0.131,5,0.052,15,0.398,16,1.007,33,0.007,34,0.374,35,0.207,45,0.577,48,0.172,60,0.186,90,0.006,91,0.006,131,2.766,152,1.544,250,1.453,263,1.32,265,2.166,281,2.472,286,1.756,291,2.563,489,2.819,1227,2.166,2155,5.296,2156,5.296,2157,6.559,2158,5.69]],["title/entities/LocalizedMediaEntity.html",[246,0.855,2179,3.372]],["body/entities/LocalizedMediaEntity.html",[3,0.115,4,0.107,5,0.056,10,0.149,13,1.113,15,0.477,16,0.884,30,0.67,33,0.007,35,0.192,45,0.427,48,0.219,55,1.732,60,0.115,61,1.958,90,0.005,91,0.005,131,2.356,152,1.293,231,1.332,246,0.964,250,1.136,255,2.759,286,1.496,341,1.573,391,1.802,394,2.503,396,2.689,411,2.691,421,2.044,422,3.439,425,2.691,426,2.294,458,1.802,459,1.802,460,1.767,461,1.767,462,1.802,463,2.649,464,1.767,465,2.94,466,1.767,467,2.324,468,1.698,469,1.802,470,1.802,471,1.802,472,1.802,473,1.802,474,1.802,475,1.698,476,1.802,477,1.802,478,1.802,479,1.802,480,2.371,481,1.802,482,1.767,483,1.802,484,1.802,485,1.802,486,1.802,487,1.802,488,1.767,489,1.634,490,1.802,491,1.802,492,1.802,743,2,779,2.543,780,3.06,782,3.497,783,3.539,784,4.344,806,3.955,812,4.318,835,4.532,874,2.877,2157,5.587,2158,4.999,2159,5.637,2165,4.318,2179,4.999,2253,7.631,2254,5.289,2255,5.289,2256,5.289,2257,5.289,2258,5.289,2259,4.704,2260,5.289]],["title/interfaces/LocalizedString.html",[263,0.724,1227,1.567]],["body/interfaces/LocalizedString.html",[3,0.141,4,0.131,5,0.052,15,0.398,16,1.007,33,0.007,34,0.374,35,0.207,45,0.586,48,0.172,60,0.186,90,0.006,91,0.006,131,2.766,152,1.544,250,1.453,263,1.32,265,2.166,281,2.315,286,1.756,291,2.563,489,2.819,1227,2.645,2155,5.296,2156,5.296,2157,6.559,2158,4.661]],["title/entities/LocalizedStringEntity.html",[246,0.855,787,2.387]],["body/entities/LocalizedStringEntity.html",[3,0.116,4,0.108,5,0.056,10,0.151,13,1.126,15,0.48,16,0.891,30,0.673,33,0.007,35,0.193,45,0.509,48,0.207,55,1.752,60,0.116,61,2.169,90,0.005,91,0.005,131,2.369,152,1.3,231,1.347,246,0.975,250,1.145,255,2.341,286,1.504,341,1.591,391,1.823,394,2.514,396,3.207,411,2.722,421,2.068,422,3.465,425,2.722,426,2.321,458,1.823,459,1.823,460,1.787,461,1.787,462,1.823,463,2.664,464,1.787,465,2.948,466,1.787,467,2.341,468,1.718,469,1.823,470,1.823,471,1.823,472,1.823,473,1.823,474,1.823,475,1.718,476,1.823,477,1.823,478,1.823,479,1.823,480,2.389,481,1.823,482,1.787,483,1.823,484,1.823,485,1.823,486,1.823,487,1.823,488,1.787,489,1.653,490,1.823,491,1.823,492,1.823,743,2.023,779,2.572,780,3.096,783,2.722,787,3.566,806,3.566,835,4.567,874,2.899,1227,2.341,1378,4.368,1386,4.368,2157,5.618,2159,5.662,2165,4.368,2253,7.659,2259,4.758,2261,5.35,2262,5.35,2263,5.35,2264,5.35,2265,5.35,2266,5.35]],["title/modules/LogModule.html",[445,1.295,501,2.196]],["body/modules/LogModule.html",[3,0.153,4,0.142,5,0.056,10,0.199,21,3.584,33,0.007,48,0.235,50,1.541,60,0.153,90,0.006,91,0.006,445,2.3,447,3.065,501,3.901,522,3.222,523,3.595,524,4.089,526,3.222,2267,7.066,2268,6.806,2269,7.066,2270,7.066]],["title/classes/LogService.html",[10,0.132,2268,3.831]],["body/classes/LogService.html",[3,0.083,4,0.077,5,0.031,8,0.949,10,0.108,15,0.235,21,3.089,23,1.305,25,2.812,30,0.683,32,1.782,33,0.007,34,0.474,35,0.212,36,1.472,37,4.244,38,1.939,39,2.328,45,0.585,48,0.174,50,0.837,60,0.083,62,2.893,71,1.281,77,1.879,90,0.004,91,0.004,93,1.002,117,2.92,127,2.956,132,3.94,133,2.106,139,2.923,144,3.132,145,3.132,167,1.624,191,3.411,196,2.22,197,3.411,255,3.135,287,1.749,433,3.367,455,1.428,726,3.801,862,4.421,865,3.132,945,4.978,1047,3.411,1049,4.953,2098,6.508,2268,4.547,2271,3.836,2272,6.399,2273,5.569,2274,5.569,2275,4.953,2276,7.195,2277,5.569,2278,5.569,2279,4.953,2280,4.953,2281,5.569,2282,3.836,2283,5.569,2284,7.641,2285,3.836,2286,3.836,2287,7.641,2288,7.641,2289,5.569,2290,3.836,2291,5.569,2292,3.836,2293,5.569,2294,3.836,2295,5.569,2296,3.836,2297,5.569,2298,3.836,2299,7.641,2300,3.836,2301,3.836,2302,3.836,2303,7.195,2304,3.836,2305,3.836,2306,3.836,2307,7.195,2308,3.836,2309,3.836,2310,3.836,2311,7.195,2312,5.569,2313,5.569,2314,3.836,2315,3.836,2316,5.569,2317,3.836,2318,3.836,2319,3.836,2320,3.836,2321,3.836,2322,3.411,2323,3.836,2324,3.411,2325,5.569,2326,3.836,2327,3.836,2328,2.923,2329,3.836,2330,3.836,2331,3.836,2332,3.836,2333,3.836]],["title/classes/LoginPayload.html",[10,0.132,536,3.372]],["body/classes/LoginPayload.html",[3,0.092,4,0.085,5,0.034,8,1.048,10,0.243,12,4.52,15,0.26,16,0.76,30,0.644,33,0.007,35,0.205,36,1.596,45,0.563,47,5.491,48,0.218,50,0.924,60,0.163,71,1.415,74,3.135,90,0.004,91,0.004,93,1.107,127,2.5,152,0.995,189,1.829,220,3.925,228,4.347,394,2.406,445,1.169,452,3.045,454,1.884,455,1.777,475,1.92,509,2.892,510,3.229,536,4.298,539,5.707,540,2.55,541,4.73,543,4.298,545,4.328,546,5.411,547,4.298,550,3.229,551,3.045,557,2.892,568,4.298,572,2.892,596,4.298,597,4.981,717,4.328,735,5.139,737,4.357,738,4.981,741,5.319,745,5.922,746,2.646,765,2.892,794,1.504,949,2.221,1197,3.045,1232,2.221,1288,3.229,1289,3.229,1290,5.139,1291,4.883,1292,3.46,1293,5.319,1295,4.883,1296,6.484,1297,3.266,1298,4.011,1299,3.46,1300,3.46,1301,4.768,1302,5.659,1303,4.558,1304,4.883,1305,4.883,1306,5.659,1307,5.659,1308,3.229,1309,3.46,1310,4.883,1311,3.46,1312,3.46,2334,4.237,2335,4.237,2336,4.237,2337,4.237,2338,4.237,2339,4.237]],["title/interfaces/Media.html",[263,0.724,281,1.271]],["body/interfaces/Media.html",[3,0.089,4,0.083,5,0.054,9,2.501,10,0.242,13,1.564,15,0.252,16,0.744,25,1.918,33,0.007,34,0.526,35,0.221,45,0.592,48,0.208,60,0.196,90,0.004,91,0.004,114,1.941,152,1.428,189,1.805,233,1.271,250,1.551,263,1.26,265,1.374,281,2.366,286,1.769,289,1.687,290,2.079,293,3.103,294,3.406,295,2.623,297,2.48,311,3.073,312,3.073,455,1.055,782,1.742,794,1.46,891,3.406,1163,2.67,1227,2.805,1228,1.523,1297,4.172,1499,2.093,1501,2.093,1505,2.093,1507,2.093,1511,2.093,2340,2.225,2341,4.278,2342,4.278,2343,2.741,2344,2.299,2345,2.225,2346,3.168,2347,3.168,2348,3.575,2349,3.07,2350,3.895,2351,3.575,2352,2.225,2353,2.299,2354,2.299,2355,3.168,2356,4.247,2357,2.225,2358,3.168,2359,2.156,2360,2.299,2361,2.299,2362,2.299,2363,2.299,2364,2.299,2365,2.299,2366,2.156]],["title/classes/MediaDto.html",[10,0.132,2357,2.538]],["body/classes/MediaDto.html",[3,0.087,4,0.08,5,0.054,9,2.484,10,0.24,13,1.634,15,0.245,16,0.729,25,1.879,30,0.675,33,0.007,34,0.519,35,0.22,45,0.59,48,0.206,60,0.195,90,0.004,91,0.004,93,1.044,114,1.926,152,1.385,189,1.63,233,1.234,250,1.54,263,1.248,281,2.35,286,1.748,289,1.671,290,2.036,293,2.898,294,3.181,295,2.449,297,2.429,311,3.033,312,3.033,394,2.523,455,1.025,782,1.692,794,1.419,891,3.181,1163,2.616,1227,2.7,1228,1.479,1297,4.199,1499,2.033,1501,2.033,1505,2.033,1507,2.033,1511,2.033,2153,4.123,2340,2.162,2341,4.071,2342,4.071,2343,2.685,2344,2.234,2345,2.162,2346,3.103,2347,3.103,2348,3.518,2349,3.007,2350,3.844,2351,3.518,2352,2.162,2353,2.234,2354,2.234,2355,3.103,2356,4.2,2357,3.103,2358,3.103,2359,2.095,2360,2.234,2361,2.234,2362,2.234,2363,2.234,2364,2.234,2365,2.234,2366,2.095,2367,3.997,2368,3.997,2369,3.997,2370,3.997,2371,3.997,2372,3.997,2373,3.997]],["title/entities/MediaEntity.html",[246,0.855,782,1.987]],["body/entities/MediaEntity.html",[3,0.107,4,0.099,5,0.039,10,0.187,13,1.035,15,0.492,16,0.843,30,0.715,33,0.007,34,0.482,35,0.221,45,0.407,48,0.229,60,0.107,61,2.333,90,0.005,91,0.005,152,1.247,189,1.61,231,1.239,246,0.897,250,1.083,255,2.214,281,2.174,286,1.443,293,2.963,295,2.504,391,1.676,394,2.672,396,2.898,411,2.503,421,2.562,422,3.277,425,2.503,426,2.134,743,1.861,779,2.365,780,2.847,782,2.807,783,2.503,787,4.082,788,2.953,789,4.77,790,2.953,804,3.475,805,3.475,806,3.373,809,2.661,835,4.319,891,3.252,1332,3.072,1439,4.017,1457,5.413,1466,5.227,1467,4.017,1468,5.413,1469,4.017,1478,3.357,1479,4.524,1480,4.524,1482,4.524,1483,5.413,1484,5.413,1485,5.413,1486,3.357,1488,4.017,2374,4.919,2375,4.919,2376,6.115,2377,6.629,2378,6.629,2379,4.919,2380,4.919,2381,4.919,2382,4.919,2383,4.919,2384,6.115,2385,5.896,2386,4.919,2387,4.375,2388,4.375,2389,3.357,2390,4.919,2391,4.919]],["title/interfaces/MediaExt.html",[263,0.724,2348,2.46]],["body/interfaces/MediaExt.html",[3,0.093,4,0.087,5,0.056,9,2.528,10,0.244,13,1.596,15,0.264,16,0.769,25,1.98,33,0.007,34,0.53,35,0.214,45,0.596,48,0.212,60,0.198,90,0.004,91,0.004,114,1.963,152,1.329,189,1.469,233,1.33,250,1.548,263,1.279,265,1.438,281,2.352,286,1.782,289,1.712,290,2.147,293,2.39,294,3.032,295,2.02,297,2.561,311,3.136,312,3.136,455,1.104,782,1.823,794,1.528,891,2.623,1163,2.758,1227,2.668,1228,1.594,1297,4.188,1499,2.19,1501,2.19,1505,2.19,1507,2.19,1511,2.19,2340,2.328,2341,3.975,2342,3.975,2343,2.83,2344,2.406,2345,2.328,2346,3.271,2347,3.271,2348,3.975,2349,3.17,2350,3.975,2351,3.665,2352,2.328,2353,2.406,2354,2.406,2355,3.271,2356,4.32,2357,2.328,2358,3.271,2359,2.257,2360,2.406,2361,2.406,2362,2.406,2363,2.406,2364,2.406,2365,2.406,2366,2.257]],["title/entities/MediaExtEntity.html",[246,0.855,2392,3.831]],["body/entities/MediaExtEntity.html",[3,0.143,4,0.133,5,0.053,10,0.186,13,1.387,15,0.549,16,1.016,30,0.649,33,0.007,34,0.496,35,0.186,45,0.549,48,0.212,60,0.143,61,1.66,90,0.006,91,0.006,231,1.66,246,1.201,286,1.656,391,2.246,394,2.423,395,3.565,396,3.091,421,2.548,426,2.859,743,2.493,779,3.169,874,3.307,1266,2.931,1335,3.684,1341,4.294,2348,4.192,2389,4.498,2392,6.529,2393,6.559,2394,6.591,2395,6.591,2396,6.591,2397,6.591]],["title/interfaces/MediaFile.html",[263,0.724,2341,2.46]],["body/interfaces/MediaFile.html",[3,0.089,4,0.082,5,0.054,9,2.496,10,0.241,13,1.558,15,0.25,16,0.74,25,1.906,33,0.007,34,0.525,35,0.219,45,0.594,48,0.207,60,0.196,90,0.004,91,0.004,114,1.936,152,1.424,189,1.414,233,1.259,250,1.572,263,1.256,265,1.362,281,2.469,286,1.767,289,1.682,290,2.778,293,2.3,294,2.944,295,1.944,297,2.464,311,3.464,312,3.464,455,1.046,782,1.727,794,1.447,891,2.524,1163,2.654,1227,2.614,1228,1.509,1297,4.168,1499,2.074,1501,2.074,1505,2.074,1507,2.074,1511,2.074,2340,2.205,2341,4.102,2342,3.879,2343,2.724,2344,2.279,2345,2.205,2346,3.148,2347,3.148,2348,3.557,2349,3.051,2350,4.266,2351,4.266,2352,2.205,2353,2.279,2354,2.279,2355,3.148,2356,4.233,2357,2.205,2358,3.148,2359,2.137,2360,2.279,2361,2.279,2362,2.279,2363,2.279,2364,2.279,2365,2.279,2366,2.137]],["title/classes/MediaFileDto.html",[10,0.132,2358,2.538]],["body/classes/MediaFileDto.html",[3,0.086,4,0.08,5,0.053,9,2.477,10,0.239,13,1.627,15,0.242,16,0.723,25,1.862,30,0.689,33,0.007,34,0.517,35,0.219,45,0.59,48,0.205,60,0.195,90,0.004,91,0.004,93,1.031,114,1.92,152,1.38,189,1.381,233,1.219,250,1.553,263,1.243,281,2.408,286,1.744,289,1.664,290,2.588,293,2.247,294,2.891,295,1.899,297,2.408,311,3.33,312,3.33,394,2.573,455,1.012,782,1.672,794,1.401,891,2.467,1163,2.593,1227,2.581,1228,1.461,1297,4.201,1499,2.009,1501,2.009,1505,2.009,1507,2.009,1511,2.009,2153,2.837,2340,2.135,2341,4.051,2342,3.823,2343,3.119,2344,2.207,2345,2.135,2346,3.076,2347,3.076,2348,3.494,2349,2.981,2350,3.823,2351,4.051,2352,2.135,2353,2.207,2354,2.207,2355,3.076,2356,4.354,2357,2.135,2358,3.605,2359,2.07,2360,2.207,2361,2.207,2362,2.207,2363,2.207,2364,2.207,2365,2.207,2366,2.07,2398,3.948,2399,3.948,2400,3.948,2401,3.948,2402,3.948,2403,3.948,2404,3.948,2405,3.948]],["title/entities/MediaFileEntity.html",[246,0.855,2376,3.576]],["body/entities/MediaFileEntity.html",[3,0.112,4,0.104,5,0.041,10,0.146,13,1.09,15,0.502,16,0.872,30,0.736,33,0.007,34,0.443,35,0.216,45,0.502,48,0.217,60,0.112,61,2.383,90,0.005,91,0.005,152,1.28,231,1.304,246,0.944,250,1.481,281,2.219,286,1.48,290,2.731,311,3.182,312,3.182,391,1.765,394,2.748,395,2.801,396,3.583,411,2.635,421,2.002,422,3.391,425,2.635,426,2.976,427,2.895,743,1.959,779,2.49,780,2.997,782,3.469,783,3.491,806,3.914,1476,4.229,2180,3.947,2341,3.597,2351,4.033,2376,5.229,2385,6.102,2389,3.535,2393,6.996,2406,5.179,2407,5.179,2408,5.886,2409,5.179,2410,6.102,2411,5.179,2412,5.179,2413,5.179,2414,5.179,2415,5.179,2416,5.179,2417,4.229,2418,5.179,2419,6.102]],["title/interfaces/MediaFormat.html",[263,0.724,2350,2.46]],["body/interfaces/MediaFormat.html",[3,0.092,4,0.085,5,0.055,9,2.517,10,0.243,13,1.583,15,0.259,16,0.759,25,1.955,33,0.007,34,0.528,35,0.216,45,0.599,48,0.21,60,0.197,90,0.004,91,0.004,114,1.954,152,1.32,189,1.45,233,1.305,250,1.545,263,1.271,265,1.412,281,2.341,286,1.777,289,1.702,290,2.119,293,2.359,294,3.002,295,1.994,297,2.528,311,3.501,312,3.501,455,1.084,782,1.79,794,1.5,891,2.589,1163,2.722,1227,2.65,1228,1.564,1297,4.182,1499,2.15,1501,2.15,1505,2.15,1507,2.15,1511,2.15,2340,2.286,2341,3.943,2342,3.943,2343,2.794,2344,2.362,2345,2.286,2346,3.229,2347,3.229,2348,3.628,2349,3.129,2350,4.159,2351,3.628,2352,2.286,2353,2.362,2354,2.362,2355,3.229,2356,4.291,2357,2.286,2358,3.229,2359,2.215,2360,2.362,2361,2.362,2362,2.362,2363,2.362,2364,2.362,2365,2.362,2366,2.215]],["title/classes/MediaFormatDto.html",[10,0.132,2356,2.538]],["body/classes/MediaFormatDto.html",[3,0.09,4,0.084,5,0.055,9,2.506,10,0.242,13,1.658,15,0.255,16,0.749,25,1.93,30,0.605,33,0.007,34,0.522,35,0.216,45,0.595,48,0.209,60,0.197,90,0.004,91,0.004,93,1.084,114,1.945,152,1.311,189,1.432,233,1.282,250,1.542,263,1.264,281,2.331,286,1.759,289,1.692,290,2.092,293,2.329,294,2.973,295,1.968,297,2.496,311,3.386,312,3.386,394,2.261,455,1.064,782,1.758,794,1.473,891,2.556,1163,2.687,1227,2.632,1228,1.536,1297,4.205,1499,2.112,1501,2.112,1505,2.112,1507,2.112,1511,2.112,2340,2.245,2341,3.911,2342,3.911,2343,2.758,2344,2.32,2345,2.245,2346,3.188,2347,3.188,2348,3.592,2349,3.089,2350,4.13,2351,3.592,2352,2.245,2353,2.32,2354,2.32,2355,3.188,2356,4.427,2357,2.245,2358,3.188,2359,2.176,2360,2.32,2361,2.32,2362,2.32,2363,2.32,2364,2.32,2365,2.32,2366,2.176,2420,4.15,2421,4.15,2422,4.15,2423,4.15]],["title/entities/MediaFormatEntity.html",[246,0.855,2408,3.372]],["body/entities/MediaFormatEntity.html",[3,0.132,4,0.123,5,0.049,10,0.172,13,1.283,15,0.534,16,0.969,30,0.707,33,0.007,34,0.479,35,0.203,45,0.575,48,0.202,60,0.132,61,2.258,90,0.005,91,0.005,231,1.535,246,1.111,286,1.6,311,3.438,312,3.438,391,2.077,394,2.639,395,3.297,396,3.534,421,2.356,426,2.644,743,2.305,779,2.93,874,3.152,1266,2.71,1335,3.407,1341,3.971,2350,3.994,2389,4.16,2393,6.832,2408,5.476,2410,6.777,2419,6.777,2424,6.095,2425,6.095,2426,6.095,2427,6.095,2428,6.095,2429,6.095]],["title/classes/MediaManager.html",[10,0.132,2359,2.46]],["body/classes/MediaManager.html",[3,0.077,4,0.071,5,0.055,9,2.707,10,0.232,13,1.456,15,0.217,23,1.229,25,1.717,30,0.668,32,1.642,33,0.007,34,0.535,35,0.217,36,1.473,38,1.895,45,0.591,48,0.196,60,0.191,90,0.004,91,0.004,93,0.923,114,2.056,133,2.928,152,1.423,189,1.274,233,1.092,250,1.565,263,1.195,281,2.352,286,1.724,289,1.769,290,1.862,293,2.073,294,2.712,295,1.752,297,2.221,311,2.862,312,2.862,455,0.906,636,3.275,782,1.497,794,1.255,891,2.275,1163,3.155,1227,2.677,1228,1.308,1297,4.111,1491,4.282,1493,4.282,1494,4.282,1499,3.181,1501,2.668,1505,2.668,1507,2.668,1511,2.668,2340,1.912,2341,3.627,2342,3.627,2343,2.455,2344,1.976,2345,1.912,2346,2.837,2347,2.837,2348,3.278,2349,2.749,2350,3.627,2351,3.874,2352,1.912,2353,1.976,2354,1.976,2355,2.837,2356,3.997,2357,1.912,2358,2.837,2359,2.749,2360,3.495,2361,3.495,2362,2.931,2363,3.495,2364,3.495,2365,3.495,2366,1.853,2430,5.244,2431,3.534,2432,3.534,2433,3.534,2434,3.534,2435,3.534,2436,3.534,2437,3.534,2438,3.534,2439,3.534,2440,3.534,2441,3.534]],["title/modules/MediaModule.html",[445,1.295,2442,3.576]],["body/modules/MediaModule.html",[3,0.114,4,0.105,5,0.055,10,0.147,23,1.225,30,0.424,32,1.043,33,0.007,34,0.301,35,0.122,36,0.936,38,1.204,48,0.248,50,1.141,55,1.712,60,0.114,77,1.366,90,0.005,91,0.005,130,1.615,131,1.585,341,1.555,445,2.133,447,2.268,449,3.513,450,4.498,451,3.407,454,3.07,455,1.771,457,4.641,458,1.782,459,1.782,460,1.747,461,1.747,462,1.782,463,2.634,464,1.747,465,2.932,466,1.747,467,2.306,468,1.679,469,1.782,470,1.782,471,1.782,472,1.782,473,1.782,474,1.782,475,1.679,476,1.782,477,1.782,478,1.782,479,1.782,480,2.353,481,1.782,482,1.747,483,1.782,484,1.782,485,1.782,486,1.782,487,1.782,488,1.747,489,1.615,490,1.782,491,1.782,492,1.782,499,3.995,500,3.569,501,3.232,502,3.265,511,2.447,522,2.385,523,2.66,524,3.026,525,3.758,526,2.385,645,2.741,782,2.924,824,3.407,1834,3.758,2182,4.651,2345,2.828,2359,4.053,2366,4.31,2376,5.262,2384,5.262,2387,4.651,2388,4.651,2389,3.569,2408,4.962,2417,4.27,2442,5.891,2443,5.229,2444,5.229,2445,7.73,2446,5.229,2447,7.73,2448,4.651,2449,4.651]],["title/interfaces/MediaType.html",[263,0.724,2342,2.46]],["body/interfaces/MediaType.html",[3,0.089,4,0.083,5,0.054,9,2.501,10,0.242,13,1.564,15,0.252,16,0.744,25,2.571,33,0.007,34,0.526,35,0.219,45,0.594,48,0.208,60,0.196,90,0.004,91,0.004,114,1.941,152,1.306,189,1.423,233,1.271,250,1.551,263,1.26,265,1.374,281,2.325,286,1.769,289,1.831,290,2.079,293,2.314,294,2.958,295,1.956,297,3.325,311,3.073,312,3.073,455,1.055,782,1.742,794,1.46,891,2.54,1163,2.67,1227,2.623,1228,1.523,1297,4.172,1499,2.093,1501,2.093,1505,2.093,1507,2.093,1511,2.093,2340,2.225,2341,3.895,2342,4.116,2343,2.741,2344,2.299,2345,2.225,2346,4.247,2347,4.247,2348,4.116,2349,4.116,2350,4.278,2351,3.575,2352,2.225,2353,2.299,2354,2.299,2355,3.168,2356,4.247,2357,2.225,2358,3.168,2359,2.156,2360,2.299,2361,2.299,2362,2.299,2363,2.299,2364,2.299,2365,2.299,2366,2.156]],["title/classes/MediaTypeDto.html",[10,0.132,2355,2.538]],["body/classes/MediaTypeDto.html",[3,0.087,4,0.08,5,0.054,9,2.484,10,0.24,13,1.634,15,0.245,16,0.729,25,2.401,30,0.675,33,0.007,34,0.519,35,0.218,45,0.591,48,0.206,60,0.195,90,0.004,91,0.004,93,1.044,114,1.926,152,1.292,189,1.394,233,1.234,250,1.54,263,1.248,281,2.308,286,1.748,289,1.761,290,2.036,293,2.267,294,2.911,295,1.916,297,3.105,311,3.033,312,3.033,394,2.523,455,1.025,782,1.692,794,1.419,891,2.489,1163,2.616,1227,2.594,1228,1.479,1297,4.205,1499,2.033,1501,2.033,1505,2.033,1507,2.033,1511,2.033,2153,2.872,2340,2.162,2341,3.844,2342,4.071,2343,2.685,2344,2.234,2345,2.162,2346,3.967,2347,3.967,2348,3.844,2349,3.844,2350,3.844,2351,3.518,2352,2.162,2353,2.234,2354,2.234,2355,3.63,2356,4.372,2357,2.162,2358,3.103,2359,2.095,2360,2.234,2361,2.234,2362,2.234,2363,2.234,2364,2.234,2365,2.234,2366,2.095,2450,3.997,2451,3.997,2452,3.997,2453,3.997,2454,3.997,2455,3.997,2456,3.997]],["title/entities/MediaTypeEntity.html",[246,0.855,2384,3.576]],["body/entities/MediaTypeEntity.html",[3,0.116,4,0.108,5,0.043,10,0.151,13,1.126,15,0.509,16,0.891,25,2.56,30,0.73,33,0.007,34,0.45,35,0.21,45,0.509,48,0.22,60,0.116,61,1.969,90,0.005,91,0.005,130,2.562,169,4.784,231,1.347,246,0.975,250,1.145,281,1.899,286,1.504,289,1.715,297,3.311,391,1.823,394,2.728,395,2.894,396,3.207,421,2.068,426,2.321,427,2.99,743,2.023,779,2.572,783,2.722,804,3.675,805,3.675,806,3.566,833,4.077,874,3.655,1266,2.379,1335,2.99,1341,3.486,1387,4.784,1474,6.234,1476,4.368,2342,3.675,2346,4.229,2347,4.229,2349,4.098,2384,5.342,2389,3.651,2392,6.774,2393,6.961,2408,5.962,2417,4.368,2457,5.35,2458,5.35,2459,7.009,2460,5.35,2461,5.35,2462,5.35,2463,5.35,2464,5.35,2465,5.35,2466,5.35,2467,5.35]],["title/interfaces/MessageBus.html",[263,0.724,2468,3.576]],["body/interfaces/MessageBus.html",[3,0.124,4,0.115,5,0.046,15,0.351,23,1.715,30,0.655,32,1.794,33,0.007,34,0.465,35,0.213,36,1.445,38,1.858,48,0.151,60,0.159,90,0.005,91,0.005,114,1.655,127,2.945,133,3.402,250,0.934,263,0.883,265,1.91,711,6.14,1213,3.903,2468,5.577,2469,5.807,2470,6.115,2471,5.086,2472,6.59,2473,5.8,2474,6.59,2475,4.669,2476,7.792,2477,7.637,2478,7.185,2479,5.718,2480,6.59,2481,4.669,2482,5.718,2483,7.181,2484,4.669,2485,5.718,2486,4.669]],["title/interfaces/MessagesBroker.html",[263,0.724,2487,3.576]],["body/interfaces/MessagesBroker.html",[3,0.135,4,0.125,5,0.05,15,0.381,23,1.807,30,0.68,32,1.798,33,0.007,34,0.483,35,0.21,36,1.501,38,1.93,45,0.582,60,0.135,90,0.006,91,0.006,114,1.743,127,2.839,255,3.111,263,0.959,265,2.075,862,4.461,1159,4.047,2473,5.541,2487,5.876,2488,6.682,2489,5.712,2490,6.212,2491,6.857,2492,6.857,2493,6.857,2494,6.212,2495,7.457,2496,6.857,2497,7.457,2498,6.212,2499,6.857,2500,6.212]],["title/modules/MessagesBrokerModule.html",[445,1.295,2501,3.372]],["body/modules/MessagesBrokerModule.html",[3,0.117,4,0.108,5,0.056,10,0.152,21,3.489,33,0.007,48,0.239,50,1.175,55,1.764,60,0.117,77,1.406,90,0.005,91,0.005,220,2.662,341,1.601,440,2.281,445,2.164,447,2.336,458,1.835,459,1.835,460,1.799,461,1.799,462,1.835,463,2.673,464,1.799,465,2.953,466,1.799,467,2.351,468,1.729,469,1.835,470,1.835,471,1.835,472,1.835,473,1.835,474,1.835,475,1.729,476,1.835,477,1.835,478,1.835,479,1.835,480,2.399,481,1.835,482,1.799,483,1.835,484,1.835,485,1.835,486,1.835,487,1.835,488,1.799,489,1.663,490,1.835,491,1.835,492,1.835,501,3.295,511,3.671,514,3.509,522,3.21,523,2.74,524,3.116,526,3.21,660,3.01,661,3.233,662,3.233,663,3.233,667,5.623,668,4.226,669,3.233,670,3.116,673,3.87,674,3.363,675,3.87,676,3.87,681,4.397,682,3.676,683,3.676,684,3.676,685,4.397,686,3.87,687,4.397,688,4.104,689,4.397,690,4.104,691,4.397,692,4.397,2224,5.059,2488,4.104,2489,3.509,2501,6.362,2502,4.79,2503,5.385,2504,5.385,2505,5.977,2506,4.397,2507,4.79,2508,5.365,2509,4.79]],["title/injectables/MessagesBrokerService.html",[429,1.422,2508,3.576]],["body/injectables/MessagesBrokerService.html",[3,0.098,4,0.091,5,0.036,10,0.127,13,0.948,15,0.276,16,0.793,18,2.877,23,1.462,24,2.542,25,3.034,30,0.712,32,1.778,33,0.007,34,0.484,35,0.212,36,1.504,38,1.869,45,0.564,48,0.205,50,0.982,60,0.098,62,1.474,66,1.703,71,2.084,77,2.121,90,0.004,91,0.004,107,1.504,117,3.271,127,2.807,130,1.391,131,1.364,161,3.611,168,3.746,255,3.046,429,1.891,431,2.002,440,1.907,679,5.734,862,4.698,1159,2.933,1212,6.313,2224,3.236,2226,6.369,2473,4.484,2487,4.755,2488,6.795,2489,5.809,2491,5.549,2492,5.549,2493,5.549,2495,6.876,2496,5.549,2497,6.876,2499,5.549,2508,4.755,2510,4.502,2511,7.161,2512,6.239,2513,6.239,2514,4.502,2515,4.502,2516,6.239,2517,4.502,2518,6.239,2519,4.502,2520,6.239,2521,4.502,2522,4.502,2523,4.502,2524,4.502,2525,4.502,2526,3.236,2527,4.004,2528,3.236,2529,4.004,2530,4.502,2531,4.502,2532,4.502,2533,4.502,2534,4.502,2535,4.502,2536,4.502,2537,4.502,2538,4.502,2539,4.502,2540,4.502,2541,4.502,2542,4.502,2543,4.502,2544,4.502,2545,4.502,2546,4.502]],["title/injectables/MockCacheService.html",[429,1.422,2547,4.173]],["body/injectables/MockCacheService.html",[3,0.06,4,0.055,5,0.022,8,1.935,10,0.151,13,0.579,15,0.169,18,0.92,19,3.003,23,1.015,24,3.197,30,0.635,32,1.56,33,0.007,34,0.45,35,0.182,36,1.461,38,2.002,39,1.538,45,0.569,48,0.142,50,0.601,60,0.06,61,1.767,62,2.163,66,2.297,71,2.54,77,2.043,88,2.701,90,0.003,91,0.003,107,0.92,114,2.025,117,2.271,127,1.913,131,2.847,133,1.041,161,1.593,167,1.166,168,1.653,169,1.879,250,1.375,253,2.823,263,0.669,289,1.256,429,1.313,431,1.224,455,1.111,519,5.795,542,4.565,556,5.817,573,3.958,574,5.041,584,4.41,585,4.153,613,3.114,677,2.248,694,3.538,695,3.538,696,3.538,697,3.538,698,3.538,699,3.538,700,5.339,701,3.538,703,3.538,705,3.538,707,3.538,711,4.146,712,3.538,714,3.538,716,2.098,717,4.748,755,2.422,868,3.114,922,5.464,958,4.96,982,6.701,1216,1.794,1857,3.853,1883,3.114,1887,3.538,2051,5.795,2082,4.374,2547,3.853,2548,8.006,2549,2.449,2550,7.569,2551,3.853,2552,3.853,2553,2.449,2554,4.63,2555,2.753,2556,2.753,2557,7.015,2558,2.753,2559,4.332,2560,6.239,2561,6.239,2562,4.366,2563,2.753,2564,6.762,2565,2.753,2566,4.332,2567,2.753,2568,4.332,2569,4.146,2570,4.332,2571,4.332,2572,2.753,2573,2.753,2574,3.853,2575,3.853,2576,3.853,2577,2.753,2578,2.449,2579,4.304,2580,2.753,2581,2.449,2582,3.853,2583,2.753,2584,2.753,2585,5.357,2586,2.753,2587,2.753,2588,2.753,2589,2.753,2590,5.357,2591,2.753,2592,2.753,2593,2.753,2594,2.753,2595,2.753,2596,2.753,2597,2.753,2598,2.753]],["title/classes/MockMsClient.html",[10,0.132,2599,4.173]],["body/classes/MockMsClient.html",[3,0.086,4,0.08,5,0.032,8,1.809,10,0.112,13,1.202,15,0.244,18,1.327,23,1.338,30,0.593,32,1.658,33,0.007,34,0.421,35,0.194,36,1.657,38,1.857,48,0.177,60,0.086,62,2.19,71,1.327,77,1.747,90,0.004,91,0.004,93,1.037,107,1.327,114,1.653,127,3.025,132,4.717,133,2.529,454,3.586,455,1.465,585,4.407,711,6.456,755,4.509,759,5.31,764,4.229,868,4.806,982,4.105,1213,2.711,1216,2.588,1883,5.797,2011,4.353,2224,4.105,2468,5.097,2469,5.287,2472,5.461,2473,4.806,2474,6.325,2475,3.243,2476,7.343,2477,7.343,2478,6.7,2480,6.586,2481,3.243,2483,7.072,2484,3.243,2550,4.664,2553,3.533,2554,5.573,2560,7.174,2561,7.174,2578,3.533,2579,2.588,2581,3.533,2599,5.08,2600,7.747,2601,6.586,2602,3.533,2603,5.08,2604,5.08,2605,5.08,2606,3.972,2607,3.972,2608,5.08,2609,5.08,2610,3.972,2611,5.08,2612,5.08,2613,3.972,2614,5.08,2615,3.533,2616,6.687,2617,5.711]],["title/classes/MockStorage.html",[10,0.132,2554,3.576]],["body/classes/MockStorage.html",[3,0.111,4,0.103,5,0.041,8,1.263,10,0.144,15,0.313,23,1.593,25,1.672,30,0.688,32,1.692,33,0.007,34,0.488,35,0.198,36,1.518,38,1.875,39,1.812,45,0.585,48,0.135,60,0.111,62,2.667,71,1.705,77,2.127,88,2.27,90,0.005,91,0.005,93,1.333,107,2.27,127,2.746,133,1.931,250,1.247,298,3.933,319,3.676,434,4.428,540,2.453,584,4.174,630,5.549,636,4.243,700,4.638,716,5.179,773,4.026,862,3.933,959,5.179,982,4.884,1052,3.891,2550,6.65,2554,5.179,2569,5.214,2618,5.105,2619,6.796,2620,5.105,2621,5.105,2622,6.796,2623,5.105,2624,6.796,2625,5.105,2626,6.796,2627,5.105,2628,5.105,2629,5.105,2630,7.639,2631,6.796,2632,5.105,2633,7.639,2634,5.105,2635,5.105,2636,5.105,2637,5.105,2638,5.105,2639,5.105,2640,5.105,2641,7.639,2642,5.105,2643,5.105]],["title/classes/MsClient.html",[10,0.132,2644,3.831]],["body/classes/MsClient.html",[3,0.073,4,0.153,5,0.027,8,1.673,10,0.095,13,1.067,15,0.207,18,1.693,21,3.191,23,1.188,25,2.373,30,0.588,32,1.657,33,0.007,34,0.417,35,0.193,36,1.538,38,1.817,39,1.198,41,2.933,48,0.22,50,0.736,59,2.573,60,0.073,62,2.214,70,3.164,71,2.032,77,1.893,90,0.004,91,0.004,93,0.882,107,1.693,114,1.529,117,3.799,127,3.016,130,1.043,131,1.023,132,4.635,133,2.558,139,2.573,144,2.757,145,2.757,255,1.128,438,1.887,440,1.43,443,1.77,454,3.384,540,1.627,585,4.226,603,2.833,606,2.199,674,2.108,711,6.499,755,4.413,759,5.071,764,3.99,865,2.757,1129,3.002,1208,2.757,1213,2.304,1883,5.47,1911,2.199,2011,3.862,2224,3.642,2468,4.637,2469,5.195,2470,5.47,2472,4.968,2473,4.373,2474,5.918,2475,2.757,2476,7.106,2477,7.419,2478,6.707,2480,4.968,2481,2.757,2483,7.106,2484,2.757,2486,4.968,2579,2.199,2601,2.757,2602,3.002,2603,4.507,2604,4.507,2605,6.015,2608,4.507,2609,4.507,2611,4.507,2612,4.507,2614,4.507,2615,3.002,2644,4.138,2645,6.084,2646,6.084,2647,6.015,2648,3.376,2649,3.376,2650,3.376,2651,3.376,2652,3.376,2653,3.376,2654,2.573,2655,3.376,2656,3.376,2657,5.068,2658,3.862,2659,3.376,2660,2.426,2661,5.068,2662,6.084,2663,3.376,2664,3.002,2665,3.376,2666,3.376,2667,3.376,2668,6.084,2669,3.376,2670,3.376,2671,3.002,2672,3.376,2673,3.376,2674,4.507,2675,3.376,2676,3.376,2677,3.376,2678,3.376,2679,3.376,2680,3.376,2681,3.376,2682,3.376,2683,3.376,2684,3.376]],["title/modules/MsClientModule.html",[445,1.295,2685,3.576]],["body/modules/MsClientModule.html",[3,0.114,4,0.106,5,0.055,10,0.148,21,3.678,33,0.007,34,0.303,48,0.237,50,1.146,55,1.721,60,0.114,71,1.755,77,1.372,90,0.005,91,0.005,341,1.562,440,2.933,445,2.138,447,2.279,454,2.336,458,1.791,459,1.791,460,1.755,461,1.755,462,1.791,463,2.641,464,1.755,465,2.936,466,1.755,467,2.314,468,1.687,469,1.791,470,1.791,471,1.791,472,1.791,473,1.791,474,1.791,475,1.687,476,1.791,477,1.791,478,1.791,479,1.791,480,2.361,481,1.791,482,1.755,483,1.791,484,1.791,485,1.791,486,1.791,487,1.791,488,1.755,489,1.623,490,1.791,491,1.791,492,1.791,501,4.196,511,3.627,514,4.513,522,3.159,523,2.673,526,3.159,660,2.937,661,3.154,662,3.154,663,3.154,668,4.158,669,3.154,670,3.041,673,3.776,674,3.281,675,3.776,676,3.776,682,3.586,684,3.586,686,3.776,759,4.838,2469,3.586,2470,3.776,2486,4.29,2601,5.656,2644,4.29,2647,6.161,2654,4.005,2671,4.673,2685,6.701,2686,4.673,2687,5.254,2688,5.254,2689,5.254,2690,6.892,2691,6.892,2692,5.254,2693,5.254,2694,5.254,2695,5.254,2696,5.254,2697,5.254,2698,5.254]],["title/classes/MsException.html",[10,0.132,603,2.623]],["body/classes/MsException.html",[3,0.145,4,0.134,5,0.053,10,0.188,18,2.89,30,0.541,32,1.331,33,0.007,34,0.384,35,0.188,36,1.194,45,0.531,48,0.213,59,5.085,60,0.145,90,0.006,91,0.006,93,1.743,107,2.691,132,4.442,133,2.524,167,2.826,250,1.413,286,1.665,433,3.77,444,4.006,603,4.503,2322,7.992,2654,5.085,2658,6.139,2699,6.673,2700,8.653,2701,6.673,2702,6.673]],["title/injectables/NotEmptyPipe.html",[429,1.422,2703,4.173]],["body/injectables/NotEmptyPipe.html",[3,0.139,4,0.129,5,0.051,8,1.585,10,0.18,13,1.349,15,0.393,18,2.141,23,1.842,30,0.638,32,1.568,33,0.007,34,0.453,35,0.183,36,1.407,38,1.475,45,0.521,48,0.17,50,1.398,60,0.139,70,4.002,71,2.141,77,1.674,90,0.006,91,0.006,107,2.141,131,2.756,229,5.233,429,2.382,431,2.849,799,3.708,1197,5.649,1216,4.175,2703,6.99,2704,8.501,2705,6.408,2706,7.86,2707,7.86,2708,8.501,2709,6.408,2710,6.408,2711,6.99,2712,7.86,2713,6.408,2714,7.86,2715,6.408,2716,6.408]],["title/classes/NotFoundMsException.html",[10,0.132,2717,4.173]],["body/classes/NotFoundMsException.html",[3,0.149,4,0.139,5,0.055,10,0.194,30,0.559,32,1.373,33,0.007,34,0.397,35,0.16,36,1.232,45,0.538,48,0.217,50,1.502,60,0.149,90,0.006,91,0.006,93,1.798,107,2.3,132,4.058,133,2.604,433,3.842,602,4.699,603,4.902,604,5.602,605,4.699,606,4.486,607,4.699,631,6.684,2717,7.3,2718,8.208,2719,6.885]],["title/classes/PageableData.html",[10,0.132,973,2.538]],["body/classes/PageableData.html",[3,0.133,4,0.123,5,0.049,10,0.245,18,2.913,30,0.496,32,1.22,33,0.007,34,0.352,35,0.216,36,1.095,45,0.551,48,0.202,60,0.181,90,0.005,91,0.005,93,1.598,107,2.551,196,3.54,250,1.565,255,2.781,319,3.309,746,3.82,794,2.172,847,4.663,920,3.309,923,3.673,973,4.131,991,4.663,992,4.663,1003,5.821,1007,6.799,1329,4.397,2720,4.996,2721,6.118,2722,7.406,2723,7.406,2724,6.118,2725,6.793,2726,5.441,2727,5.441,2728,6.793,2729,5.441,2730,5.441,2731,6.236,2732,5.821]],["title/classes/PageableParams.html",[10,0.132,920,2.538]],["body/classes/PageableParams.html",[3,0.123,4,0.114,5,0.045,10,0.239,15,0.347,16,0.924,18,2.831,30,0.711,33,0.007,35,0.221,36,1.606,45,0.56,48,0.193,60,0.174,90,0.005,91,0.005,93,1.478,107,1.89,130,2.245,131,2.203,196,4.206,250,1.49,255,1.89,319,4.344,394,2.656,746,3.533,794,2.009,847,6.12,920,3.932,923,4.821,973,3.061,991,6.12,992,6.12,1003,5.54,1007,4.62,1329,4.066,2720,4.62,2722,5.032,2723,5.032,2725,5.032,2726,5.032,2727,5.032,2728,6.465,2729,5.032,2730,6.465,2731,6.557,2732,5.54,2733,8.031,2734,5.658,2735,5.658,2736,5.658,2737,5.658,2738,5.658,2739,5.658,2740,5.658]],["title/classes/ProcessLog.html",[10,0.132,2741,3.576]],["body/classes/ProcessLog.html",[3,0.138,4,0.128,5,0.051,8,1.576,10,0.179,15,0.391,16,0.996,30,0.737,33,0.007,35,0.211,45,0.543,48,0.207,60,0.17,90,0.006,91,0.006,93,1.664,122,3.825,135,5.31,136,4.348,143,4.348,152,1.41,189,2.206,250,1.279,263,0.984,286,1.226,289,1.317,295,2.954,763,4.151,942,5.09,1227,2.616,1228,2.358,2741,6.462,2742,5.666,2743,6.462,2744,6.371,2745,6.371,2746,6.094,2747,6.371,2748,6.371,2749,6.371,2750,5.202,2751,5.202]],["title/entities/ProcessLogEntity.html",[110,3.057,246,0.855]],["body/entities/ProcessLogEntity.html",[3,0.113,4,0.105,5,0.055,10,0.146,13,1.095,15,0.503,16,0.875,30,0.692,33,0.007,34,0.396,35,0.214,45,0.422,48,0.204,55,1.704,60,0.113,61,2.067,90,0.005,91,0.005,110,4.484,135,4.63,152,1.283,189,1.993,231,1.311,246,0.949,250,1.124,255,2.299,295,2.576,341,1.547,391,1.773,394,2.586,396,2.66,411,2.648,421,2.011,422,3.402,425,2.648,458,1.773,459,1.773,460,1.738,461,1.738,462,1.773,463,2.628,464,1.738,465,2.929,466,1.738,467,2.299,468,1.671,469,1.773,470,1.773,471,1.773,472,1.773,473,1.773,474,1.773,475,1.671,476,1.773,477,1.773,478,1.773,479,1.773,480,2.345,481,1.773,482,1.738,483,1.773,484,1.773,485,1.773,486,1.773,487,1.773,488,1.738,489,1.607,490,1.773,491,1.773,492,1.773,783,2.648,784,4.298,806,3.502,942,4.63,1378,4.249,1386,4.249,1478,3.552,1479,4.697,1480,5.601,1482,4.697,2741,5.245,2743,5.877,2752,5.204,2753,5.204,2754,5.204,2755,5.898,2756,5.204,2757,5.204,2758,5.204,2759,6.883,2760,5.204,2761,6.883,2762,5.204,2763,4.249,2764,5.204]],["title/injectables/ProcessManagerService.html",[112,3.057,429,1.422]],["body/injectables/ProcessManagerService.html",[3,0.066,4,0.061,5,0.024,10,0.085,15,0.185,16,0.592,18,2.304,21,3.17,23,1.091,24,3.283,25,2.739,30,0.705,32,1.668,33,0.007,34,0.482,35,0.198,36,1.497,38,1.954,39,2.017,45,0.567,48,0.23,50,0.659,60,0.066,61,1.975,62,2.739,66,3.163,70,3.548,71,1.898,77,2.048,90,0.003,91,0.003,96,2.466,107,1.555,110,4.495,112,3.034,122,4.141,127,1.466,130,1.438,131,1.411,135,4.831,136,2.061,138,2.466,143,4.358,151,2.466,152,0.775,155,2.466,231,0.761,247,2.466,250,1.127,286,1.654,289,0.963,391,1.587,429,1.411,431,1.343,440,1.279,443,1.583,449,2.891,454,2.07,579,4.358,615,5.788,644,2.17,645,1.583,651,2.466,763,3.702,773,2.302,874,1.926,942,1.813,972,1.968,991,4.867,992,2.302,1052,2.302,1262,1.688,1889,5.054,1902,2.466,2328,3.549,2487,4.867,2489,3.034,2505,2.302,2506,2.466,2527,2.686,2732,2.302,2743,2.302,2755,2.17,2765,7.806,2766,3.02,2767,5.682,2768,4.656,2769,4.656,2770,4.656,2771,4.656,2772,4.656,2773,6.386,2774,6.386,2775,4.656,2776,4.141,2777,4.141,2778,4.656,2779,4.656,2780,3.02,2781,4.867,2782,5.054,2783,5.682,2784,5.682,2785,4.656,2786,4.141,2787,4.656,2788,3.02,2789,5.682,2790,4.656,2791,3.02,2792,4.656,2793,3.02,2794,4.656,2795,3.02,2796,4.656,2797,3.02,2798,3.02,2799,3.02,2800,4.656,2801,3.02,2802,4.656,2803,3.02,2804,4.656,2805,3.02,2806,4.656,2807,3.02,2808,4.656,2809,3.02,2810,2.686,2811,2.17,2812,2.686,2813,2.686,2814,3.802,2815,2.466,2816,2.686,2817,3.02,2818,3.02,2819,2.686,2820,2.686,2821,3.02,2822,3.02,2823,4.656,2824,3.02,2825,3.02,2826,3.02,2827,3.02,2828,4.656,2829,4.656,2830,7.731,2831,2.686,2832,2.686,2833,5.054,2834,2.686,2835,2.686,2836,2.686,2837,2.686,2838,4.656,2839,6.386,2840,3.02,2841,3.02,2842,3.02,2843,3.02,2844,4.656,2845,5.682,2846,4.656,2847,3.02,2848,4.656,2849,3.02,2850,3.02,2851,3.02,2852,3.02,2853,3.02,2854,3.02,2855,3.02,2856,2.686]],["title/modules/ProcessModule.html",[445,1.295,2857,3.576]],["body/modules/ProcessModule.html",[3,0.108,4,0.1,5,0.053,10,0.14,13,1.048,18,1.663,23,1.167,24,2.373,30,0.404,33,0.007,38,1.146,48,0.244,50,1.086,55,1.631,60,0.108,66,1.883,90,0.005,91,0.005,97,3.795,110,4.355,112,6.129,135,4.012,137,3.795,138,4.066,341,1.481,445,2.082,447,2.16,458,1.697,459,1.697,460,1.663,461,1.663,462,1.697,463,2.571,464,1.663,465,2.897,466,1.663,467,2.232,468,1.599,469,1.697,470,1.697,471,1.697,472,1.697,473,1.697,474,1.697,475,1.599,476,1.697,477,1.697,478,1.697,479,1.697,480,2.278,481,1.697,482,1.663,483,1.697,484,1.697,485,1.697,486,1.697,487,1.697,488,1.663,489,1.538,490,1.697,491,1.697,492,1.697,501,4.053,502,3.109,511,3.128,522,3.44,526,3.44,645,2.611,660,2.783,661,2.989,662,2.989,663,2.989,668,4.012,669,2.989,670,2.882,824,3.244,1216,3.244,2489,3.244,2501,6.223,2755,3.579,2810,4.429,2814,4.066,2857,7.241,2858,4.429,2859,4.429,2860,4.429,2861,4.429,2862,6.223,2863,6.599,2864,4.98,2865,8.41,2866,4.98,2867,6.684,2868,4.98,2869,4.066,2870,4.98,2871,4.98,2872,4.98,2873,4.98,2874,4.98,2875,4.98]],["title/injectables/ProcessRegisterService.html",[429,1.422,2863,3.576]],["body/injectables/ProcessRegisterService.html",[3,0.087,4,0.081,5,0.032,10,0.113,15,0.246,18,2.597,21,3.369,23,1.348,24,3.027,25,3.052,30,0.631,32,1.551,33,0.007,34,0.448,35,0.181,36,1.392,38,1.691,39,2.042,48,0.243,50,0.875,60,0.087,61,1.449,62,2.546,66,2.175,71,1.34,77,2.227,90,0.004,91,0.004,97,5.125,107,1.921,112,4.786,122,2.408,127,2.313,135,4.037,136,2.738,137,3.057,143,2.738,151,5.491,156,5.116,286,1.107,429,1.743,431,1.784,438,2.242,440,1.699,443,2.103,862,3.328,874,2.782,972,2.613,1262,2.242,1902,3.275,2489,3.747,2505,3.057,2506,3.275,2508,5.598,2509,3.568,2746,6.532,2763,3.275,2765,7.198,2776,5.116,2777,5.116,2781,5.598,2782,5.981,2786,5.981,2811,2.883,2812,3.568,2813,3.568,2814,4.697,2815,3.275,2816,3.568,2819,3.568,2820,3.568,2830,6.533,2831,3.568,2832,7.722,2833,3.568,2834,5.981,2835,3.568,2836,7.198,2837,3.568,2856,3.568,2863,4.384,2869,3.275,2876,4.011,2877,5.752,2878,5.752,2879,8.335,2880,4.011,2881,5.752,2882,4.011,2883,5.752,2884,4.011,2885,5.752,2886,4.011,2887,5.752,2888,4.011,2889,4.011,2890,4.011,2891,4.011,2892,4.011,2893,4.011,2894,4.011,2895,4.011,2896,4.011,2897,4.011,2898,4.011,2899,4.011,2900,4.011,2901,8.093,2902,6.724,2903,6.724,2904,6.724,2905,4.011,2906,5.752,2907,4.011,2908,5.752,2909,3.568,2910,4.011,2911,4.011,2912,4.011,2913,4.011,2914,4.011,2915,4.011,2916,3.568,2917,4.011,2918,4.011,2919,4.011,2920,4.011]],["title/interfaces/ProcessUnit.html",[263,0.724,2746,3.372]],["body/interfaces/ProcessUnit.html",[3,0.135,4,0.125,5,0.049,8,2.167,10,0.174,15,0.38,16,0.979,33,0.007,35,0.217,45,0.571,48,0.204,60,0.167,90,0.005,91,0.005,122,5.26,135,4.623,136,4.231,143,5.717,152,1.031,189,2.189,250,1.012,263,0.957,265,2.071,286,1.686,289,1.732,295,3.009,763,5.708,942,3.722,1227,2.926,1228,2.295,2741,6.677,2742,5.514,2743,4.725,2746,6.02,2750,7.154,2751,7.154]],["title/entities/ProcessUnitEntity.html",[246,0.855,2755,3.372]],["body/entities/ProcessUnitEntity.html",[3,0.101,4,0.094,5,0.051,8,1.803,10,0.131,13,0.98,15,0.521,16,0.812,30,0.705,33,0.007,34,0.42,35,0.212,45,0.481,48,0.218,55,1.525,60,0.101,61,2.189,88,2.071,90,0.005,91,0.005,110,5.11,122,4.376,130,2.423,135,2.796,136,3.179,143,4.359,167,2.705,189,1.552,231,1.173,246,0.849,286,1.403,289,1.321,295,2.435,341,1.385,391,1.587,394,2.634,395,2.519,396,3.032,421,2.469,426,2.02,458,1.587,459,1.587,460,1.556,461,1.556,462,1.587,463,2.484,464,1.556,465,2.847,466,1.556,467,2.133,468,1.495,469,1.587,470,1.587,471,1.587,472,1.587,473,1.587,474,1.587,475,1.495,476,1.587,477,1.587,478,1.587,479,1.587,480,2.177,481,1.587,482,1.556,483,1.587,484,1.587,485,1.587,486,1.587,487,1.587,488,1.556,489,1.439,490,1.587,491,1.587,492,1.587,763,4.749,787,3.991,788,2.796,789,4.243,790,2.796,804,3.348,805,3.348,809,2.519,874,2.642,1266,2.071,1322,3.55,1328,3.803,1329,5.637,1332,2.908,1335,2.603,1343,3.55,1387,3.179,1439,3.803,1440,5.215,1457,5.215,1478,3.179,1479,4.359,1480,4.359,1482,4.359,2746,4.59,2750,5.952,2751,5.952,2755,4.59,2763,3.803,2921,4.657,2922,4.657,2923,6.387,2924,4.657,2925,4.657,2926,4.657,2927,6.387,2928,4.657,2929,4.657,2930,4.657,2931,4.657,2932,4.657,2933,4.657,2934,4.657,2935,4.657]],["title/injectables/RedisCacheService.html",[429,1.422,678,3.831]],["body/injectables/RedisCacheService.html",[3,0.056,4,0.052,5,0.02,8,1.891,10,0.144,13,0.54,15,0.157,18,1.368,19,2.885,21,2.886,23,0.959,24,3.161,25,1.341,30,0.62,32,1.525,33,0.007,34,0.44,35,0.178,36,1.481,38,1.973,39,1.453,45,0.565,48,0.169,50,0.559,60,0.056,61,1.974,62,1.911,66,2.804,71,1.707,77,2.161,88,3.024,90,0.003,91,0.004,107,1.368,114,2.045,117,4.574,131,2.764,133,0.97,161,3.692,168,3.83,250,1.248,253,2.667,263,0.632,289,1.207,429,1.241,431,1.14,438,1.433,440,1.086,443,1.344,455,1.05,519,6.1,542,4.892,556,5.561,573,5.986,574,6.026,584,4.397,585,4.072,613,2.942,674,1.601,677,2.093,678,3.343,679,5.647,694,3.343,695,3.343,696,3.343,697,3.343,698,3.343,699,3.343,700,5.217,701,3.343,703,3.343,705,3.343,707,3.343,709,3.641,711,4.872,712,3.343,714,3.343,716,1.954,717,4.998,759,3.192,874,3.162,922,5.328,951,6.049,952,5.191,958,4.766,982,6.026,1883,4.195,1887,3.343,1911,1.67,2013,2.942,2051,5.973,2082,4.766,2526,1.842,2528,1.842,2549,2.28,2551,3.641,2552,3.641,2562,4.195,2564,6.049,2569,2.794,2574,3.641,2575,3.641,2576,5.191,2579,1.67,2582,3.641,2660,1.842,2674,4.546,2936,7.838,2937,2.564,2938,2.564,2939,6.049,2940,2.564,2941,4.094,2942,2.564,2943,2.564,2944,2.564,2945,6.379,2946,2.564,2947,5.836,2948,2.564,2949,2.564,2950,2.28,2951,2.564,2952,2.564,2953,4.094,2954,2.093,2955,4.094,2956,2.564,2957,4.094,2958,2.564,2959,2.564,2960,2.564,2961,2.564,2962,2.564,2963,2.564,2964,2.564,2965,2.564,2966,2.564,2967,2.28,2968,2.564,2969,2.564,2970,2.564,2971,2.564,2972,2.564,2973,1.954]],["title/modules/RedisModule.html",[445,1.295,667,3.057]],["body/modules/RedisModule.html",[3,0.112,4,0.104,5,0.055,10,0.146,21,3.107,23,1.212,24,1.835,25,1.693,30,0.419,32,1.031,33,0.007,34,0.298,35,0.179,36,0.926,38,1.19,45,0.472,48,0.217,50,1.128,55,1.693,60,0.112,62,2.517,71,1.727,77,1.79,88,3.047,90,0.005,91,0.005,220,2.556,250,1.119,341,1.537,440,3.256,445,2.121,447,2.243,449,3.911,454,3.047,457,4.615,458,1.762,459,1.762,460,1.727,461,1.727,462,1.762,463,2.62,464,1.727,465,2.924,466,1.727,467,2.289,468,1.66,469,1.762,470,1.762,471,1.762,472,1.762,473,1.762,474,1.762,475,1.66,476,1.762,477,1.762,478,1.762,479,1.762,480,2.336,481,1.762,482,1.727,483,1.762,484,1.762,485,1.762,486,1.762,487,1.762,488,1.727,489,1.597,490,1.762,491,1.762,492,1.762,511,3.831,514,5.009,522,2.358,523,2.631,526,2.358,667,5.009,675,3.716,676,3.716,679,4.677,682,3.529,683,3.529,684,3.529,686,3.716,688,3.941,690,3.941,724,4.599,725,6.095,726,4.677,732,6.095,1585,4.222,2526,3.716,2528,5.525,2950,4.599,2974,5.171,2975,5.171,2976,5.171,2977,7.687,2978,5.171,2979,5.171,2980,5.171,2981,5.171,2982,5.171]],["title/classes/Roles.html",[10,0.132,2983,2.538]],["body/classes/Roles.html",[3,0.138,4,0.128,5,0.051,10,0.179,15,0.39,16,0.994,18,3.182,30,0.687,33,0.007,35,0.197,45,0.52,58,4.846,60,0.184,62,2.561,90,0.006,91,0.006,93,1.661,130,2.617,131,2.567,247,7.41,449,4.847,557,5.338,603,3.554,856,6.522,1223,4.372,1303,6.916,2658,4.846,2983,4.231,2984,5.655,2985,6.358,2986,6.358,2987,6.358]],["title/guards/RolesGuard.html",[0,3.372,2988,4.173]],["body/guards/RolesGuard.html",[0,5.218,2,4.612,3,0.123,4,0.114,5,0.045,8,1.397,10,0.204,13,1.189,14,7.532,15,0.346,18,1.887,23,1.701,28,6.458,29,6.455,30,0.589,32,1.448,33,0.007,34,0.418,35,0.169,36,1.3,37,4.305,38,1.3,43,4.612,48,0.242,50,1.232,57,4.305,58,4.305,59,4.305,60,0.123,61,2.021,62,2.773,63,5.024,77,2.212,90,0.005,91,0.005,107,1.887,196,3.269,289,1.501,429,2.2,545,4.534,874,2.336,924,5.533,1216,3.68,2983,4.34,2988,7.136,2989,5.648,2990,8.024,2991,6.458,2992,5.648,2993,8.967,2994,5.648,2995,5.648,2996,5.024,2997,5.648,2998,5.648,2999,6.458,3000,5.648,3001,5.648,3002,4.359,3003,5.648,3004,5.648,3005,5.648,3006,5.648,3007,7.261,3008,5.648,3009,5.648,3010,5.024,3011,5.648]],["title/interfaces/TargetData.html",[263,0.724,1265,2.817]],["body/interfaces/TargetData.html",[3,0.091,4,0.085,5,0.034,8,1.855,9,2.513,10,0.223,15,0.258,16,0.755,33,0.007,34,0.456,35,0.21,39,1.49,45,0.582,48,0.229,60,0.197,74,2.398,90,0.004,91,0.004,114,1.951,127,1.322,152,1.147,189,1.02,231,1.057,233,1.297,246,1.442,250,1.433,255,2.304,263,1.222,265,1.402,281,1.61,282,1.778,286,1.143,289,1.968,290,2.109,291,1.659,455,1.077,540,2.541,571,2.43,743,1.588,773,3.409,775,3.214,832,3.615,841,2.347,920,3.214,949,2.201,973,2.271,974,2.521,1220,2.43,1221,2.521,1222,2.521,1223,2.347,1225,4.266,1226,2.347,1227,2.972,1228,1.554,1229,2.521,1230,2.201,1231,2.43,1232,2.201,1233,3.567,1234,2.521,1235,4.888,1236,2.521,1237,2.43,1238,4.993,1239,2.271,1240,3.321,1241,2.521,1242,2.521,1243,2.521,1244,2.521,1245,2.43,1246,2.43,1247,2.521,1248,2.521,1249,2.521,1250,2.521,1251,2.521,1252,2.521,1253,2.521,1254,2.521,1255,2.521,1256,2.521,1257,2.521,1258,2.521,1259,2.521,1260,3.991,1261,2.521,1262,2.347,1263,3.438,1264,3.438,1265,3.567,1266,3.334,1267,4.682,1268,4.932,1269,3.214,1270,2.622,1271,2.622,1272,2.622,1273,2.622,1274,2.521,1275,2.43,1276,2.43,1277,2.622,1278,2.622,1279,4.941,1280,2.622,1281,2.622,1282,2.622,1283,2.622,1284,2.622,1285,2.622,1286,2.622,1287,2.622]],["title/classes/TmpDirCleanerProcess.html",[10,0.132,3012,4.173]],["body/classes/TmpDirCleanerProcess.html",[3,0.085,4,0.079,5,0.031,9,2.203,10,0.11,15,0.239,16,0.717,17,5.573,18,2.761,19,4.086,21,3.539,23,1.321,24,3.326,25,2.867,30,0.74,32,1.534,33,0.007,34,0.443,35,0.204,36,1.377,38,2.015,39,1.385,45,0.492,48,0.228,50,0.851,60,0.085,61,1.42,62,2.374,66,3.032,77,1.472,90,0.004,91,0.004,92,7.495,93,1.019,96,4.603,97,5.862,98,5.921,99,5.887,100,5.013,101,5.887,102,5.887,103,5.013,104,5.045,105,5.405,106,5.013,107,1.883,110,2.541,112,5.011,116,3.469,117,3.47,121,3.469,122,3.974,126,3.469,127,1.775,128,5.013,130,1.205,131,1.182,132,1.928,133,1.475,134,3.469,135,3.384,137,2.972,161,2.257,165,3.469,250,0.92,253,3.672,433,2.638,438,2.18,440,1.652,443,2.045,444,2.341,505,2.662,507,2.662,579,2.662,584,1.779,625,6.116,726,3.847,799,3.262,891,1.692,962,4.296,972,2.541,1026,2.972,1052,2.972,1088,5.526,1114,2.972,1158,2.972,1175,3.469,1183,3.469,1556,3.185,3012,5.013,3013,6.619,3014,3.9,3015,5.637,3016,3.9,3017,3.9,3018,3.9,3019,3.9,3020,3.9,3021,5.637,3022,3.9,3023,6.619,3024,7.251,3025,7.251,3026,3.9,3027,3.9,3028,3.9,3029,3.9,3030,3.9,3031,3.9,3032,3.9,3033,3.9,3034,3.9,3035,3.9,3036,3.9,3037,3.9,3038,3.9,3039,3.9,3040,3.9,3041,3.9,3042,3.9,3043,5.637,3044,3.9,3045,3.9,3046,3.9,3047,3.9,3048,3.9,3049,3.9,3050,3.9,3051,3.9]],["title/classes/TooManyRequestsMsException.html",[10,0.132,3052,4.173]],["body/classes/TooManyRequestsMsException.html",[3,0.146,4,0.136,5,0.054,10,0.19,30,0.547,32,1.345,33,0.007,34,0.388,35,0.157,36,1.207,45,0.533,48,0.215,50,1.471,60,0.146,90,0.006,91,0.006,93,1.761,107,2.252,132,4.007,133,2.55,161,3.901,433,3.794,444,4.047,602,4.601,603,4.858,604,5.532,605,4.601,606,4.393,607,4.601,3052,7.209,3053,8.106,3054,8.691,3055,8.691,3056,6.742,3057,5.996,3058,6.742,3059,6.742,3060,6.742]],["title/classes/UnauthorizedMsException.html",[10,0.132,3061,4.173]],["body/classes/UnauthorizedMsException.html",[3,0.15,4,0.139,5,0.055,10,0.194,30,0.56,32,1.376,33,0.007,34,0.397,35,0.161,36,1.235,41,3.993,45,0.538,48,0.218,50,1.505,60,0.15,90,0.006,91,0.006,93,1.802,107,2.305,132,4.063,133,2.61,433,3.847,602,4.709,603,4.907,604,5.609,605,4.709,606,4.495,607,4.709,2147,6.137,3061,7.31,3062,8.219,3063,6.9]],["title/interfaces/UpsertMediaRequest.html",[263,0.724,2352,2.538]],["body/interfaces/UpsertMediaRequest.html",[3,0.09,4,0.084,5,0.065,9,2.507,10,0.242,13,1.571,15,0.255,16,0.75,25,1.932,33,0.007,34,0.511,35,0.22,36,1.466,45,0.595,48,0.209,60,0.197,90,0.004,91,0.004,114,1.946,152,1.311,189,1.433,233,1.284,250,1.552,263,1.264,265,1.388,281,2.331,286,1.772,289,1.693,290,2.094,293,2.331,294,2.975,295,1.97,297,2.498,311,3.087,312,3.087,455,1.066,782,1.76,794,1.475,891,2.559,1163,3.404,1227,2.813,1228,1.538,1297,4.176,1499,2.114,1501,2.114,1505,2.114,1507,2.114,1511,2.114,2340,2.248,2341,3.913,2342,3.913,2343,2.761,2344,2.323,2345,2.248,2346,3.191,2347,3.191,2348,3.595,2349,3.092,2350,3.913,2351,3.595,2352,3.191,2353,4.172,2354,4.172,2355,3.191,2356,4.264,2357,2.248,2358,3.191,2359,2.179,2360,2.323,2361,2.323,2362,2.323,2363,2.323,2364,2.323,2365,2.323,2366,2.179]],["title/interfaces/User.html",[74,1.632,263,0.724]],["body/interfaces/User.html",[3,0.104,4,0.096,5,0.038,9,2.45,10,0.241,13,1.369,15,0.293,16,0.827,22,2.586,33,0.007,34,0.375,35,0.22,45,0.604,48,0.22,60,0.19,74,3.098,90,0.005,91,0.005,114,1.875,152,1.423,189,2.078,220,4.1,228,4.1,233,1.477,234,2.586,235,2.87,263,1.141,265,1.597,281,2.247,282,2.025,286,1.251,289,1.64,295,2.924,455,1.226,624,3.115,628,3.115,632,3.115,634,3.115,638,3.115,650,5.179,794,1.697,1227,2.468,1228,1.77,1297,4.03,1298,2.767,2217,5.179,2343,3.712,2983,4.486,3002,4.979,3064,3.115,3065,5.179,3066,5.404,3067,5.404,3068,5.404,3069,4.814,3070,3.115,3071,2.985]],["title/classes/UserDto.html",[10,0.132,1298,2.715]],["body/classes/UserDto.html",[3,0.099,4,0.092,5,0.036,9,2.413,10,0.237,13,1.515,15,0.279,16,0.799,22,2.459,30,0.741,33,0.007,34,0.362,35,0.219,45,0.597,48,0.216,60,0.187,74,3.061,90,0.004,91,0.004,93,1.187,114,1.842,152,1.355,189,1.979,220,3.838,228,3.838,233,1.404,234,2.459,235,2.729,263,1.111,281,2.103,282,1.925,286,1.209,289,1.488,295,2.815,394,2.768,455,1.166,624,2.962,628,2.962,632,2.962,634,2.962,638,2.962,650,4.848,794,1.614,1227,2.404,1228,1.683,1297,4.151,1298,3.635,2153,3.267,2217,4.848,2343,3.944,2983,4.199,3002,4.321,3064,2.962,3065,4.848,3066,5.058,3067,5.058,3068,5.058,3069,5.058,3070,2.962,3071,2.839,3072,4.546,3073,4.546,3074,4.546,3075,4.546,3076,4.546,3077,4.546,3078,4.546,3079,4.546,3080,4.546,3081,4.546,3082,4.546]],["title/entities/UserEntity.html",[234,2.538,246,0.855]],["body/entities/UserEntity.html",[3,0.092,4,0.085,5,0.048,10,0.168,13,0.889,15,0.53,16,0.759,30,0.731,33,0.007,34,0.474,35,0.215,45,0.566,48,0.199,55,1.384,60,0.092,61,2.291,74,2.407,90,0.004,91,0.004,130,1.844,152,1.151,189,1.45,220,3.421,228,3.421,231,1.064,234,3.229,246,0.77,255,1.994,289,1.234,295,2.312,341,1.257,391,1.44,394,2.73,395,3.744,396,3.545,421,2.307,422,3.421,426,3.572,458,1.44,459,1.44,460,1.412,461,1.412,462,1.44,463,2.359,464,1.412,465,2.771,466,1.412,467,1.994,468,1.357,469,1.44,470,1.44,471,1.44,472,1.44,473,1.44,474,1.44,475,1.357,476,1.44,477,1.44,478,1.44,479,1.44,480,2.034,481,1.44,482,1.412,483,1.44,484,1.44,485,1.44,486,1.44,487,1.44,488,1.412,489,1.305,490,1.44,491,1.44,492,1.44,643,3.221,650,4.322,743,2.618,779,2.032,780,2.445,782,3.185,783,2.15,784,3.727,802,4.549,804,3.129,805,3.129,806,3.037,832,3.943,833,3.221,841,2.362,874,3.406,1343,3.221,1387,2.884,1458,3.451,1478,2.884,1479,4.074,1480,4.074,1482,4.074,1485,4.874,1488,3.451,2217,4.322,2983,3.744,3065,4.322,3066,4.509,3067,4.509,3068,4.509,3083,4.226,3084,4.226,3085,4.226,3086,4.226,3087,5.969,3088,4.226,3089,4.226,3090,5.969,3091,4.226,3092,4.226,3093,4.226,3094,4.226,3095,4.226,3096,4.226,3097,4.226]],["title/injectables/UserEntityPwdAndRolesSaveHandler.html",[429,1.422,3098,4.173]],["body/injectables/UserEntityPwdAndRolesSaveHandler.html",[3,0.136,4,0.127,5,0.05,10,0.177,13,1.323,15,0.385,23,1.82,30,0.51,32,1.253,33,0.007,34,0.362,35,0.146,36,1.125,38,1.446,45,0.517,48,0.233,50,1.371,60,0.136,74,3.281,77,1.641,90,0.006,91,0.006,246,1.415,253,5.491,429,2.353,431,2.794,539,6.326,1217,6.341,1220,4.494,1222,4.662,1223,4.711,1225,3.106,1232,3.294,1331,4.094,2983,3.399,3010,5.589,3098,6.907,3099,7.765,3100,7.765,3101,7.765,3102,6.284,3103,6.284,3104,6.284,3105,6.284,3106,6.284,3107,6.284,3108,6.284,3109,6.284,3110,6.284]],["title/modules/UserModule.html",[445,1.295,503,3.576]],["body/modules/UserModule.html",[3,0.122,4,0.113,5,0.058,10,0.158,22,4.322,23,1.312,30,0.454,32,1.117,33,0.007,34,0.323,35,0.13,36,1.002,38,1.289,48,0.231,50,1.222,55,1.834,60,0.122,74,1.947,77,1.462,90,0.005,91,0.005,130,1.73,131,1.697,234,3.029,235,3.362,341,1.665,445,2.205,447,2.429,449,3.673,450,4.704,451,3.648,454,3.21,455,2.049,457,4.797,458,1.908,459,1.908,460,1.87,461,1.87,462,1.908,463,2.723,464,1.87,465,2.98,466,1.87,467,2.412,468,1.798,469,1.908,470,1.908,471,1.908,472,1.908,473,1.908,474,1.908,475,1.798,476,1.908,477,1.908,478,1.908,479,1.908,480,2.461,481,1.908,482,1.87,483,1.908,484,1.908,485,1.908,486,1.908,487,1.908,488,1.87,489,1.73,490,1.908,491,1.908,492,1.908,503,6.09,511,2.621,522,2.554,523,2.849,524,3.24,525,4.024,526,2.554,610,6.525,643,4.268,645,2.936,824,3.648,3071,5.271,3111,5.6,3112,5.6,3113,5.6,3114,5.6]],["title/interfaces/UserRole.html",[263,0.724,3002,2.817]],["body/interfaces/UserRole.html",[3,0.113,4,0.105,5,0.042,9,2.512,10,0.247,13,1.45,15,0.32,16,0.876,22,2.819,33,0.007,34,0.492,35,0.208,45,0.599,48,0.226,60,0.194,74,3.112,90,0.005,91,0.005,114,1.931,152,1.284,189,2.131,220,3.406,228,3.406,233,1.61,234,2.819,235,3.129,263,1.192,265,1.741,281,2.091,282,2.207,286,1.643,289,1.424,295,2.988,455,1.337,624,3.396,628,3.396,632,3.396,634,3.396,638,3.396,650,4.302,794,1.85,1227,2.852,1228,1.929,1297,4.084,1298,3.016,2217,4.302,2343,3.843,2983,3.727,3002,4.93,3064,3.396,3065,4.302,3066,4.489,3067,4.489,3068,4.489,3069,5.028,3070,3.396,3071,3.255]],["title/classes/UserRoleDto.html",[10,0.132,3069,3.057]],["body/classes/UserRoleDto.html",[3,0.111,4,0.103,5,0.041,9,2.5,10,0.246,13,1.61,15,0.314,16,0.866,22,2.77,30,0.621,33,0.007,34,0.47,35,0.207,45,0.597,48,0.225,60,0.193,74,3.098,90,0.005,91,0.005,93,1.338,114,1.92,152,1.273,189,2.062,220,3.367,228,3.367,233,1.582,234,2.77,235,3.075,263,1.181,281,2.073,282,2.169,286,1.569,289,1.408,295,2.916,394,2.319,455,1.313,624,3.337,628,3.337,632,3.337,634,3.337,638,3.337,650,4.252,794,1.818,1227,2.724,1228,1.896,1297,4.118,1298,2.964,2217,4.252,2343,3.974,2983,3.684,3002,4.896,3064,3.337,3065,4.252,3066,4.437,3067,4.437,3068,4.437,3069,5.313,3070,3.337,3071,3.198,3115,5.121,3116,5.121,3117,5.121]],["title/entities/UserRoleEntity.html",[246,0.855,832,2.46]],["body/entities/UserRoleEntity.html",[3,0.12,4,0.111,5,0.057,10,0.155,13,1.161,15,0.515,16,0.909,30,0.644,33,0.007,34,0.483,35,0.202,45,0.439,48,0.21,55,1.806,60,0.12,61,1.8,90,0.005,91,0.005,189,1.736,231,1.389,246,1.005,286,1.526,295,2.65,341,1.639,391,1.879,394,2.404,458,1.879,459,1.879,460,1.842,461,1.842,462,1.879,463,2.703,464,1.842,465,2.97,466,1.842,467,2.388,468,1.77,469,1.879,470,1.879,471,1.879,472,1.879,473,1.879,474,1.879,475,1.77,476,1.879,477,1.879,478,1.879,479,1.879,480,2.436,481,1.879,482,1.842,483,1.879,484,1.879,485,1.879,486,1.879,487,1.879,488,1.842,489,1.703,490,1.879,491,1.879,492,1.879,643,4.202,743,2.085,779,2.651,787,4.27,788,3.31,789,3.867,790,3.31,804,3.748,805,3.748,809,2.982,832,3.748,1266,2.452,1332,3.443,1335,3.082,1341,3.592,1478,3.763,1479,4.879,1480,4.879,1482,4.879,3002,4.291,3118,8.392,3119,5.514,3120,5.514,3121,5.514,3122,5.514,3123,5.514]],["title/classes/UserService.html",[10,0.132,22,2.538]],["body/classes/UserService.html",[3,0.101,4,0.094,5,0.037,9,2.71,10,0.239,13,1.346,15,0.286,22,3.458,23,1.498,30,0.667,32,1.64,33,0.007,34,0.501,35,0.209,36,1.472,38,1.893,45,0.599,48,0.218,60,0.189,74,3.259,90,0.005,91,0.005,93,1.218,114,2.055,152,1.413,189,1.907,220,3.161,228,3.606,233,1.441,234,2.523,235,2.8,263,1.126,281,1.976,282,1.975,286,1.23,289,1.322,295,2.622,455,1.196,616,5.221,617,5.686,618,5.686,619,5.686,620,5.686,624,4.165,628,4.165,632,4.165,634,4.165,638,4.165,650,3.992,794,1.656,1227,2.437,1228,1.727,1297,4.013,1298,2.699,2217,3.992,2343,3.673,2983,3.458,3002,4.379,3064,3.039,3065,3.992,3066,4.165,3067,4.165,3068,4.165,3069,4.753,3070,3.039,3071,2.912,3124,4.664,3125,4.664,3126,4.664,3127,4.664,3128,4.664]],["title/classes/UserSubscriber.html",[10,0.132,3129,4.173]],["body/classes/UserSubscriber.html",[3,0.128,4,0.118,5,0.047,9,1.682,10,0.165,13,1.567,15,0.36,16,0.946,17,4.906,18,2.73,23,1.744,24,3.216,30,0.697,32,1.485,33,0.007,34,0.429,35,0.206,36,1.332,38,1.881,48,0.228,60,0.128,66,3.25,74,2.043,77,1.534,90,0.005,91,0.005,93,1.534,130,1.814,131,1.78,211,6.078,222,7.642,223,7.642,225,5.673,230,5.224,231,1.479,234,4.648,433,2.749,2232,7.269,2233,6.621,3129,6.621,3130,5.874,3131,7.444,3132,7.444,3133,8.593,3134,5.874,3135,7.444,3136,5.874,3137,7.444,3138,5.874,3139,5.874,3140,5.874,3141,5.874,3142,7.444,3143,7.444,3144,5.874]],["title/interfaces/UserUpdateRequest.html",[263,0.724,3070,3.057]],["body/interfaces/UserUpdateRequest.html",[3,0.114,4,0.106,5,0.042,9,2.52,10,0.248,13,1.461,15,0.323,16,0.882,22,2.851,33,0.007,34,0.4,35,0.205,45,0.599,48,0.227,60,0.195,74,3.28,90,0.005,91,0.005,114,1.938,152,1.464,189,2.004,220,3.431,228,3.431,233,1.628,234,2.851,235,3.165,263,1.198,265,1.761,281,2.102,282,2.232,286,1.336,289,1.435,295,2.755,455,1.352,624,3.434,628,3.434,632,3.434,634,3.434,638,3.434,650,4.334,794,1.871,1227,2.592,1228,1.951,1297,4.091,1298,3.05,2217,4.334,2343,3.861,2983,3.755,3002,4.659,3064,3.434,3065,4.334,3066,4.523,3067,4.523,3068,4.523,3069,5.057,3070,4.523,3071,3.292]],["title/interfaces/VideoFileMetadata.html",[263,0.724,309,2.817]],["body/interfaces/VideoFileMetadata.html",[3,0.084,4,0.078,5,0.045,10,0.185,15,0.237,16,0.711,33,0.007,34,0.222,35,0.213,45,0.614,48,0.174,60,0.187,90,0.004,91,0.004,152,1.472,189,1.598,233,1.192,250,1.587,263,1.303,264,3.358,265,1.289,266,2.409,267,2.409,268,2.409,269,4.598,270,4.598,271,2.409,272,4.598,273,4.432,274,2.409,275,2.409,276,2.409,277,2.409,278,2.316,279,2.409,280,2.409,281,1.782,282,1.634,283,3.025,284,2.932,285,2.233,286,0.742,287,1.76,288,2.087,289,0.798,290,1.37,291,1.525,292,2.316,293,1.525,294,2.426,295,1.289,296,2.409,297,1.634,298,2.233,299,2.409,300,3.358,301,2.409,302,3.358,303,2.157,304,3.358,305,2.409,306,3.644,307,2.316,308,2.316,309,3.949,310,2.409,311,3.168,312,3.168,313,2.409,314,2.409,315,2.409,316,2.409,317,2.409,318,2.409,319,2.087,320,2.409,321,2.409,322,2.409,323,2.409,324,2.409,325,2.409,326,2.409,327,2.409,328,2.409,329,2.409,330,2.409,331,2.409,332,2.409,333,2.409,334,2.409,335,2.409,336,2.409,337,2.514,338,2.514,339,2.514,340,2.514,341,1.147,342,2.514,343,2.514,344,2.514,345,2.514,346,2.514,347,2.514,348,2.514,349,2.514,350,2.514,351,2.514,352,2.514,353,2.514,354,2.514,355,2.514,356,2.514,357,2.514,358,2.514,359,2.514,360,2.514,361,4.782,362,2.514,363,2.514,364,2.514,365,2.514,366,2.514,367,2.514,368,2.514,369,2.514,370,2.514,371,2.514,372,2.514,373,2.514,374,2.514,375,2.514,376,2.514,377,2.514,378,2.514,379,2.514,380,2.514,381,2.409,382,2.409,383,2.409,384,4.505,385,4.505,386,4.505,387,4.505,388,4.505,389,2.316]],["title/entities/VideoFileMetadataEntity.html",[246,0.855,1530,3.576]],["body/entities/VideoFileMetadataEntity.html",[3,0.091,4,0.084,5,0.074,10,0.118,13,0.879,15,0.565,16,0.753,30,0.743,33,0.007,34,0.512,35,0.213,45,0.572,48,0.157,60,0.091,61,2.425,88,3.058,90,0.004,91,0.004,130,2.534,152,1.144,167,2.912,231,1.052,246,0.761,250,1.451,262,4.041,269,4.128,270,4.128,272,4.128,273,3.979,309,3.554,311,2.845,312,2.845,361,4.294,384,4.294,385,4.294,386,4.294,387,4.294,388,4.294,391,1.423,393,2.851,394,2.773,395,4.661,396,3.706,397,3.411,398,3.715,399,4.294,400,3.183,401,3.183,404,3.183,405,3.411,406,4.834,407,4.834,408,4.834,409,3.715,411,2.125,412,3.002,415,3.183,417,3.002,418,3.715,420,3.715,421,1.615,422,2.927,423,2.335,425,2.125,426,3.738,427,3.844,428,3.411,1530,4.512,3145,9.217,3146,5.92,3147,5.92,3148,5.92,3149,4.177,3150,5.92,3151,5.92,3152,4.177,3153,4.177]],["title/modules/WarlockModule.html",[445,1.295,2862,3.372]],["body/modules/WarlockModule.html",[3,0.106,4,0.098,5,0.053,10,0.137,21,3.377,24,1.733,33,0.007,45,0.299,48,0.243,50,1.065,55,1.599,60,0.106,62,1.599,66,1.846,77,1.951,90,0.005,91,0.005,114,1.104,220,2.413,248,3.181,341,1.452,440,2.793,445,2.061,447,2.118,458,1.664,459,1.664,460,1.631,461,1.631,462,1.664,463,2.545,464,1.631,465,2.882,466,1.631,467,2.203,468,1.568,469,1.664,470,1.664,471,1.664,472,1.664,473,1.664,474,1.664,475,1.568,476,1.664,477,1.664,478,1.664,479,1.664,480,2.248,481,1.664,482,1.631,483,1.664,484,1.664,485,1.664,486,1.664,487,1.664,488,1.631,489,1.508,490,1.664,491,1.664,492,1.664,501,3.087,511,3.496,514,4.297,522,3.008,523,2.484,526,3.008,660,2.729,661,2.931,662,2.931,663,2.931,667,5.443,668,3.959,669,2.931,670,2.825,673,3.509,674,3.048,675,3.509,676,3.509,679,5.098,681,3.986,682,3.332,683,3.332,684,3.332,685,3.986,686,3.509,687,3.986,688,3.721,689,3.986,690,3.721,691,3.986,692,3.986,759,3.048,1159,4.297,1911,4.297,2507,4.342,2526,3.509,2528,4.74,2529,4.342,2781,5.026,2811,6.187,2862,6.187,3154,4.882,3155,4.882,3156,4.882,3157,4.342,3158,4.882,3159,4.882,3160,6.595,3161,4.882,3162,4.882,3163,4.882,3164,4.882,3165,4.882,3166,6.595,3167,4.882,3168,4.882,3169,7.469]],["title/classes/XdbExportService.html",[10,0.132,3170,3.372]],["body/classes/XdbExportService.html",[3,0.086,4,0.08,5,0.032,9,2.381,10,0.161,15,0.244,23,1.34,24,2.029,30,0.323,32,0.793,33,0.007,34,0.229,35,0.093,36,0.712,38,0.915,39,1.412,45,0.244,48,0.194,60,0.188,61,1.843,62,3.098,71,1.909,77,2.296,88,2.975,90,0.004,91,0.004,93,1.039,114,1.752,117,2.085,127,2.441,131,1.205,206,3.247,231,1.002,248,3.724,289,0.822,540,1.835,584,1.814,755,4.09,773,1.966,856,2.858,862,3.308,874,3.026,942,3.432,959,5.576,1080,3.031,1159,5.049,1163,3.052,1225,2.826,1226,3.741,1239,3.092,1550,4.668,1911,4.36,2569,2.714,2579,2.591,2660,2.858,2973,3.031,3170,4.108,3171,3.724,3172,3.724,3173,3.247,3174,5.716,3175,5.084,3176,5.576,3177,3.977,3178,4.357,3179,5.576,3180,3.031,3181,5.1,3182,4.357,3183,2.858,3184,3.247,3185,4.668,3186,6.483,3187,3.537,3188,2.858,3189,3.537,3190,3.537,3191,3.247,3192,3.247,3193,3.537,3194,3.247,3195,3.247,3196,5.1,3197,3.537,3198,3.537,3199,3.537,3200,3.537,3201,3.537,3202,3.537,3203,6.328,3204,3.537,3205,5.464,3206,5.084,3207,3.537,3208,3.537,3209,3.537,3210,3.537,3211,5.464,3212,4.668,3213,5.084,3214,3.537,3215,3.537,3216,3.537,3217,5.084,3218,5.084,3219,3.537,3220,3.537,3221,3.537,3222,3.537,3223,3.537,3224,3.537,3225,3.537,3226,3.537,3227,3.247,3228,3.537,3229,3.537,3230,3.537,3231,3.537,3232,3.537,3233,3.537,3234,3.537,3235,3.537,3236,3.537,3237,3.537,3238,6.507,3239,5.952,3240,5.084,3241,3.537,3242,3.537,3243,3.537,3244,3.537,3245,3.537,3246,3.537,3247,3.537,3248,3.537]],["title/classes/XdbImportService.html",[10,0.132,3188,3.372]],["body/classes/XdbImportService.html",[3,0.084,4,0.078,5,0.031,9,2.465,10,0.158,15,0.238,23,1.314,24,1.991,30,0.455,32,1.119,33,0.007,34,0.323,35,0.131,36,1.004,38,1.291,39,1.375,45,0.238,48,0.191,60,0.187,61,1.82,62,3.088,71,1.873,77,2.283,88,2.931,90,0.004,91,0.004,93,1.011,114,1.808,117,2.03,127,2.597,131,1.173,206,3.162,231,0.975,248,3.653,289,0.801,540,1.801,584,1.766,755,4.039,856,2.783,862,3.245,874,2.989,942,3.366,959,5.508,1080,2.951,1159,4.997,1163,3.498,1225,2.772,1226,3.685,1239,3.033,1550,4.579,1911,4.295,2569,2.643,2579,2.523,2660,2.783,2973,2.951,3170,2.783,3171,4.295,3172,4.295,3173,3.162,3175,3.444,3176,4.274,3178,4.274,3179,5.508,3180,2.951,3181,5.845,3182,4.274,3183,4.03,3184,3.162,3185,4.579,3186,6.437,3187,3.444,3188,4.03,3189,4.987,3190,4.987,3191,3.162,3192,3.162,3193,3.444,3194,3.162,3195,3.162,3196,5.024,3197,3.444,3198,3.444,3199,3.444,3200,3.444,3201,3.444,3202,3.444,3203,6.263,3204,3.444,3205,5.383,3206,4.987,3207,3.444,3208,3.444,3209,3.444,3210,3.444,3211,5.383,3212,4.579,3213,4.987,3214,3.444,3215,3.444,3216,3.444,3217,4.987,3218,4.987,3219,3.444,3220,3.444,3221,3.444,3222,3.444,3223,3.444,3224,3.444,3225,3.444,3226,3.444,3227,3.162,3228,3.444,3229,3.444,3230,3.444,3231,3.444,3232,3.444,3233,3.444,3234,3.444,3235,3.444,3236,3.444,3237,3.444,3238,6.427,3239,5.863,3240,4.987,3241,3.444,3242,3.444,3243,3.444,3244,3.444,3245,3.444,3246,3.444,3247,3.444,3248,3.444,3249,5.608,3250,5.608,3251,3.872,3252,3.872,3253,3.872]],["title/interfaces/XdbRequest.html",[263,0.724,3254,4.173]],["body/interfaces/XdbRequest.html",[3,0.108,4,0.1,5,0.067,10,0.212,15,0.305,16,0.85,33,0.007,34,0.385,35,0.222,45,0.6,48,0.229,60,0.202,74,2.624,90,0.005,91,0.005,114,1.126,127,2.539,131,1.509,152,1.399,231,1.254,233,1.538,250,0.813,263,0.769,265,1.663,281,1.349,286,1.286,287,2.271,288,2.694,289,1.382,293,1.968,457,4.012,511,2.331,584,3.048,636,3.109,853,4.429,893,4.429,942,2.989,1225,4.28,1226,3.736,1232,2.611,1858,4.429,2569,5.149,2711,4.429,3170,3.579,3171,3.244,3172,3.244,3176,3.795,3178,5.094,3179,3.795,3180,3.795,3181,3.795,3182,3.795,3183,3.579,3188,3.579,3196,3.795,3203,4.066,3205,4.066,3211,4.066,3212,5.458,3254,5.944,3255,4.429,3256,4.98,3257,4.98,3258,6.684,3259,4.98,3260,4.98,3261,4.066,3262,6.71,3263,4.98,3264,4.98,3265,4.98,3266,4.429,3267,4.429,3268,4.98,3269,4.429,3270,4.066,3271,4.429,3272,4.429,3273,4.98,3274,4.98]],["title/injectables/XmlDataBridgeMiddleware.html",[429,1.422,3275,4.173]],["body/injectables/XmlDataBridgeMiddleware.html",[3,0.118,4,0.109,5,0.043,10,0.153,13,1.141,15,0.333,16,0.899,18,2.628,23,1.657,24,2.793,25,2.904,30,0.638,32,1.41,33,0.007,34,0.407,35,0.165,36,1.266,38,1.627,41,4.825,43,5.773,48,0.208,50,1.183,55,1.775,60,0.118,66,2.05,71,1.811,77,1.416,90,0.005,91,0.005,114,1.599,127,2.916,130,1.675,131,1.643,429,2.143,431,2.411,468,2.27,540,1.741,755,3.03,758,5.691,868,5.655,1208,6.809,1911,4.606,2579,3.532,2660,3.896,2664,4.822,2967,6.288,2973,4.132,3171,5.433,3172,5.433,3183,3.896,3186,5.996,3191,4.427,3194,5.773,3261,4.427,3275,6.288,3276,5.422,3277,7.07,3278,7.07,3279,5.422,3280,7.07,3281,8.338,3282,5.422,3283,7.07,3284,5.422,3285,7.07,3286,5.422,3287,5.422,3288,7.07,3289,5.422,3290,5.422,3291,5.422,3292,5.422,3293,5.422]],["title/modules/XmlDataBridgeModule.html",[445,1.295,3294,3.831]],["body/modules/XmlDataBridgeModule.html",[3,0.109,4,0.101,5,0.054,10,0.141,23,1.174,30,0.407,32,0.999,33,0.007,34,0.289,35,0.117,36,0.897,38,1.153,48,0.244,50,1.093,55,1.641,60,0.109,77,1.309,90,0.005,91,0.005,127,2.835,130,1.548,131,1.518,341,1.49,445,2.088,447,2.174,449,3.415,450,4.373,451,3.264,454,2.984,457,4.543,458,1.708,459,1.708,460,1.674,461,1.674,462,1.708,463,2.579,464,1.674,465,2.901,466,1.674,467,2.242,468,1.609,469,1.708,470,1.708,471,1.708,472,1.708,473,1.708,474,1.708,475,1.609,476,1.708,477,1.708,478,1.708,479,1.708,480,2.287,481,1.708,482,1.674,483,1.708,484,1.708,485,1.708,486,1.708,487,1.708,488,1.674,489,1.548,490,1.708,491,1.708,492,1.708,499,4.379,500,3.42,501,3.542,502,3.129,511,3.542,522,2.285,523,3.415,524,3.884,526,2.285,1400,3.819,1834,3.601,2442,3.819,2448,4.456,2449,5.969,3170,5.439,3171,4.373,3172,4.373,3183,5.809,3184,4.091,3188,5.439,3261,4.091,3270,6.6,3271,5.969,3272,5.969,3294,6.179,3295,5.011,3296,5.011,3297,7.568,3298,7.568,3299,6.711,3300,6.711,3301,5.969,3302,5.011,3303,5.011,3304,5.011,3305,5.011,3306,5.011,3307,5.011,3308,5.011]],["title/dependencies.html",[660,3.157,3309,3.478]],["body/dependencies.html",[5,0.049,10,0.214,33,0.007,35,0.142,50,1.33,90,0.005,91,0.005,196,4.81,231,1.535,232,5.421,262,6.118,293,3.011,298,3.527,449,3.101,494,5.421,496,5.421,540,1.957,660,3.407,679,4.16,746,3.806,794,2.164,1213,4.16,1552,5.421,1553,5.421,1554,6.777,2017,5.421,2068,5.421,2071,5.421,2084,7.393,2324,6.777,2328,6.335,2526,4.38,2654,4.645,2811,4.38,2869,4.977,2996,5.421,3157,5.421,3185,4.977,3310,6.095,3311,6.095,3312,6.095,3313,7.619,3314,6.095,3315,6.221,3316,6.095,3317,6.095,3318,6.095,3319,6.095,3320,6.095,3321,6.095,3322,6.095,3323,5.421,3324,8.312,3325,6.095,3326,7.393,3327,6.095,3328,6.095,3329,6.095,3330,6.095,3331,6.095,3332,6.095,3333,6.095]],["title/miscellaneous/enumerations.html",[3334,2.669,3335,5.023]],["body/miscellaneous/enumerations.html",[15,0.403,33,0.007,90,0.006,91,0.006,98,6.513,104,5.003,105,5.36,117,4.181,122,4.788,131,2.963,146,7.094,172,7.094,1003,6.079,2272,7.094,2275,7.094,2279,7.094,2280,7.094,2720,5.36,2731,6.513,2732,6.079,2815,6.513,2909,5.838,2916,5.838,3334,4.48,3335,5.838,3336,7.641,3337,6.564,3338,5.838,3339,6.564,3340,6.564,3341,6.564,3342,6.564,3343,7.976]],["title/index.html",[15,0.24,2954,3.193,3344,3.478]],["body/index.html",[33,0.006,90,0.006,91,0.006,3345,6.836]],["title/license.html",[465,1.28,2954,3.193,3344,3.478]],["body/license.html",[4,0.162,5,0.058,8,0.606,10,0.069,30,0.199,33,0.005,34,0.227,48,0.065,55,1.292,90,0.003,91,0.003,155,2,189,0.595,196,1.417,225,1.867,246,1.409,265,0.818,278,1.47,281,0.663,286,0.954,335,1.529,341,1.174,391,0.835,436,6.146,455,0.628,458,2.743,459,0.835,460,0.818,461,0.818,462,0.835,463,2.565,464,1.899,465,3.045,466,1.656,467,1.656,468,2.481,469,1.689,470,0.835,471,0.835,472,1.689,473,0.835,474,1.937,475,1.825,476,1.689,477,1.689,478,1.689,479,1.937,480,1.689,481,1.345,482,2.082,483,1.689,484,2.787,485,1.345,486,1.345,487,0.835,488,0.818,489,0.757,490,0.835,491,1.689,492,0.835,523,1.246,531,2.178,538,4.481,540,2.14,541,1.672,586,2.837,591,2,613,2.837,670,1.417,735,1.672,740,1.867,755,1.369,762,3.88,764,1.284,886,2.178,891,2.151,923,1.47,924,1.867,942,1.47,998,2.178,1009,2.178,1215,2.178,1269,1.325,1301,3.29,1308,1.867,1440,2,1874,2.178,2013,2.837,2060,5.057,2097,2.178,2215,7.691,2351,1.284,2939,5.927,2991,5.057,3057,3.51,3269,4.409,3326,2.178,3346,2.449,3347,2.449,3348,2.449,3349,7.527,3350,5.685,3351,6.235,3352,2.449,3353,8.398,3354,7.727,3355,2.449,3356,2.449,3357,2.449,3358,7.727,3359,6.235,3360,3.947,3361,2.449,3362,6.235,3363,2.449,3364,2.449,3365,2.449,3366,2,3367,5.685,3368,3.947,3369,3.947,3370,2.449,3371,4.958,3372,3.947,3373,3.947,3374,2.449,3375,2.449,3376,3.947,3377,2.449,3378,3.947,3379,2.449,3380,2.449,3381,2.449,3382,2.449,3383,2.449,3384,2.449,3385,2.449,3386,4.958,3387,2.449,3388,3.947,3389,8.179,3390,2.449,3391,2.449,3392,6.664,3393,5.685,3394,4.958,3395,2.449,3396,2.449,3397,2.449,3398,2.449,3399,2.449,3400,2.449,3401,9.299,3402,4.958,3403,2.178,3404,2.449,3405,7.527,3406,3.947,3407,2.449,3408,3.947,3409,2.449,3410,8.648,3411,8.716,3412,2.449,3413,2.449,3414,2.449,3415,2.449,3416,2.449,3417,3.947,3418,3.51,3419,2.449,3420,2.449,3421,2.449,3422,2.449,3423,2.449,3424,5.685,3425,6.235,3426,2.449,3427,3.947,3428,5.685,3429,3.947,3430,2.449,3431,6.235,3432,3.947,3433,2.449,3434,2.449,3435,4.958,3436,2.449,3437,2.449,3438,2.449,3439,2.449,3440,3.947,3441,2.449,3442,2.449,3443,4.958,3444,2.449,3445,2.449,3446,4.958,3447,2.449,3448,2.449,3449,2.449,3450,7.727,3451,2.449,3452,2.449,3453,3.947,3454,7.291,3455,4.958,3456,3.947,3457,5.685,3458,3.947,3459,3.947,3460,3.947,3461,3.947,3462,4.958,3463,3.947,3464,4.958,3465,3.947,3466,3.947,3467,3.947,3468,3.947,3469,2.449,3470,3.947,3471,3.947,3472,2.449,3473,2.449,3474,6.235,3475,7.008,3476,3.947,3477,3.947,3478,3.947,3479,2.449,3480,4.958,3481,3.947,3482,2.449,3483,2.449,3484,2.449,3485,4.958,3486,2.449,3487,2.449,3488,2.449,3489,3.947,3490,2.449,3491,2.449,3492,2.449,3493,2.449,3494,2.449,3495,2.449,3496,2.449,3497,3.947,3498,2.449,3499,2.449,3500,2.449,3501,2.449,3502,2.449,3503,2.449,3504,2.449,3505,4.958,3506,2.449,3507,2.449,3508,2.449,3509,2.449,3510,2.449,3511,7.291,3512,2.449,3513,2.449,3514,2.449,3515,2.449,3516,5.685,3517,3.947,3518,5.685,3519,2.449,3520,2.449,3521,2.449,3522,2.449,3523,2.449,3524,2.449,3525,2.449,3526,3.947,3527,3.947,3528,2.449,3529,2.449,3530,2.449,3531,2.449,3532,3.947,3533,3.947,3534,2.449,3535,2.449,3536,4.255,3537,2.449,3538,2.449,3539,2.449,3540,2.449,3541,2.449,3542,2.449,3543,4.958,3544,2.449,3545,2.449,3546,2.449,3547,2.449,3548,2.449,3549,2.449,3550,2.449,3551,2.449,3552,2.449,3553,2.449,3554,3.947,3555,2.449,3556,2.449,3557,3.947,3558,2.449,3559,2.449,3560,2.449,3561,2.449,3562,2.449,3563,2.449,3564,2.449,3565,2.449,3566,5.685,3567,3.947,3568,2.449,3569,2.449,3570,2.449,3571,2.449,3572,2.449,3573,2.449,3574,2.178,3575,3.947,3576,2.449,3577,2.449,3578,2.449,3579,6.235,3580,2.449,3581,2.449,3582,2.449,3583,2.449,3584,2.449,3585,2.449,3586,2.449,3587,2.449,3588,6.235,3589,2.449,3590,2.449,3591,2.449,3592,2.449,3593,2.449,3594,2.449,3595,2.449,3596,2.449,3597,2.449,3598,2.449,3599,2.449,3600,2.449,3601,2.449,3602,2.449,3603,2.449,3604,2.449,3605,2.449,3606,4.958,3607,2.449,3608,2.449,3609,2.449,3610,2.178,3611,2.449,3612,3.947,3613,2.449,3614,2.449,3615,2.449,3616,2.449,3617,2.449,3618,2.449,3619,2.449,3620,2.449,3621,2.449,3622,2.449,3623,2.449,3624,2.449,3625,2.449,3626,2.449,3627,3.947,3628,2.449,3629,2.449,3630,2.449,3631,3.947,3632,3.947,3633,2.449,3634,2.449,3635,2.449,3636,2.449,3637,2.449,3638,2.449,3639,2.449,3640,2.449,3641,2.449,3642,2.449,3643,2.449]],["title/modules.html",[447,2.785]],["body/modules.html",[33,0.006,90,0.006,91,0.006,446,5.317,447,2.825,499,3.768,501,3.048,503,4.963,667,4.242,719,5.317,816,4.963,877,4.963,1400,4.963,1834,4.68,2171,4.963,2442,4.963,2501,4.68,2685,4.963,2857,4.963,2862,4.68,3294,5.317,3403,8.507,3610,8.445,3644,9.565,3645,9.836,3646,9.495,3647,8.445]],["title/overview.html",[3648,5.709]],["body/overview.html",[2,4.51,19,4.151,33,0.007,90,0.005,91,0.005,93,1.442,112,5.911,265,1.845,391,1.882,431,2.456,445,1.524,447,2.396,499,5.321,501,4.246,522,2.519,526,2.519,660,3.087,661,3.316,662,3.316,663,3.316,664,4.912,665,4.912,666,4.912,667,5.668,668,4.296,669,3.316,670,3.196,816,6.914,817,4.912,819,4.912,820,4.912,821,6.914,877,7.083,878,4.912,880,4.912,881,4.912,882,6.52,2171,6.63,2172,4.912,2173,4.912,2174,4.912,2175,6.914,2501,6.252,2502,4.912,2685,6.4,2686,4.912,2857,7.274,2858,4.912,2859,4.912,2860,4.912,2861,4.912,2862,6.252,2863,6.05,3323,4.912,3648,4.912,3649,5.523,3650,5.523,3651,5.523,3652,5.523,3653,5.523]],["title/properties.html",[16,0.718,3309,3.478]],["body/properties.html",[8,2.122,16,0.944,33,0.007,90,0.006,91,0.006,460,2.479,461,2.479,464,2.479,465,2.43,466,2.479,467,2.479,3345,6.601,3654,7.422,3655,7.422]],["title/miscellaneous/typealiases.html",[3334,2.669,3656,5.647]],["body/miscellaneous/typealiases.html",[12,3.244,15,0.331,33,0.007,35,0.228,39,1.918,45,0.331,90,0.005,91,0.005,127,2.981,189,1.313,250,0.882,266,3.374,289,1.117,389,4.235,445,1.947,452,5.07,454,3.137,540,1.735,721,5.377,726,6.642,734,4.412,737,4.082,747,4.412,758,3.688,759,3.374,760,4.412,761,5.07,765,4.815,1159,3.52,1221,3.244,1233,4.235,1234,3.244,1268,4.235,1269,2.923,1274,4.235,1275,4.082,1289,4.118,2340,2.923,2366,3.699,2469,3.688,2470,3.883,2471,6.275,2478,5.377,2781,5.377,3064,3.52,3071,4.405,3171,3.52,3172,3.52,3176,5.377,3178,5.377,3179,5.377,3180,5.377,3181,5.377,3182,5.377,3255,8.367,3262,6.275,3266,6.275,3267,6.275,3270,5.761,3334,3.688,3657,5.403,3658,5.403,3659,7.055,3660,8.328,3661,5.403,3662,8.305,3663,5.403,3664,4.806,3665,5.403,3666,7.055,3667,4.806,3668,5.403,3669,4.806,3670,5.403]],["title/miscellaneous/variables.html",[3334,2.669,3671,5.023]],["body/miscellaneous/variables.html",[5,0.032,8,0.994,15,0.154,16,0.319,21,2.329,24,0.89,29,3.064,33,0.007,34,0.388,35,0.218,39,2.045,41,2.326,45,0.566,47,4.204,51,3.283,52,3.283,53,3.283,58,3.064,62,2.205,66,2.179,71,0.837,77,1.92,90,0.003,91,0.003,117,2.108,127,2.504,130,2.967,131,2.917,132,1.987,161,1.45,167,1.061,168,1.504,169,1.71,228,2.848,248,2.619,250,0.409,291,2.493,297,1.061,434,1.633,507,1.71,527,2.229,540,1.617,545,3.597,546,3.618,551,1.801,557,4.595,561,3.064,562,3.576,564,2.229,565,3.576,566,2.229,567,2.229,568,2.889,569,2.229,570,3.576,571,3.65,572,2.744,573,4.791,574,4.14,575,2.229,576,3.576,577,2.229,578,4.111,579,3.436,580,2.046,581,3.576,582,2.229,583,3.932,584,2.627,587,3.576,588,2.229,589,3.576,590,2.229,591,3.283,592,3.283,594,3.576,595,2.229,596,1.801,597,1.801,598,3.576,599,2.229,603,1.401,646,3.576,682,1.71,683,1.71,737,2.326,795,2.744,856,1.801,863,3.576,882,1.801,891,1.087,934,2.229,963,3.576,964,3.576,965,3.576,966,3.576,967,3.576,968,3.576,969,3.576,1142,2.229,1150,3.576,1151,2.229,1152,2.229,1212,3.283,1223,3.22,1237,2.913,1239,2.723,1245,1.45,1246,1.45,2072,3.576,2098,3.283,2349,1.314,2469,1.71,2470,1.801,2488,1.91,2489,1.633,2505,3.064,2528,2.889,2658,3.064,2690,3.576,2691,3.576,2811,2.889,2983,3.116,2984,2.229,2999,3.576,3065,1.565,3171,2.619,3172,2.619,3173,4.704,3186,3.064,3192,3.283,3195,3.283,3196,1.91,3227,2.046,3301,3.576,3334,1.71,3336,2.229,3338,2.229,3418,4.478,3647,4.478,3662,5.124,3664,3.576,3667,5.61,3669,2.229,3671,2.229,3672,7.952,3673,2.506,3674,4.02,3675,4.02,3676,5.035,3677,4.02,3678,4.02,3679,2.506,3680,2.506,3681,7.074,3682,2.506,3683,4.02,3684,4.02,3685,7.074,3686,4.02,3687,4.02,3688,2.506,3689,5.035,3690,4.02,3691,2.506,3692,4.02,3693,2.506,3694,4.02,3695,4.02,3696,2.506,3697,4.02,3698,5.035,3699,4.02,3700,2.506,3701,4.02,3702,2.506,3703,4.02,3704,4.02,3705,4.02,3706,4.02,3707,4.02,3708,5.035,3709,2.506,3710,2.506,3711,2.506,3712,4.02,3713,4.02,3714,2.506,3715,2.506,3716,2.506,3717,2.506,3718,2.506,3719,2.506,3720,2.506,3721,2.506,3722,2.506,3723,2.506,3724,2.506,3725,2.506,3726,6.307,3727,6.307,3728,6.307,3729,6.307,3730,6.307,3731,6.307,3732,6.733,3733,2.506,3734,2.046,3735,2.506,3736,2.506,3737,2.506,3738,1.91,3739,2.506,3740,2.506,3741,2.506,3742,2.506,3743,2.506,3744,2.506,3745,2.506,3746,2.506,3747,2.506,3748,4.02,3749,5.035,3750,5.035,3751,2.506,3752,2.506,3753,4.02,3754,4.02,3755,4.02,3756,4.02,3757,4.02,3758,4.02,3759,4.02,3760,4.02,3761,4.02,3762,4.02,3763,4.02,3764,4.02,3765,4.02,3766,5.035,3767,5.035,3768,5.035,3769,5.035,3770,2.506,3771,2.506,3772,2.506,3773,2.506,3774,2.506,3775,2.046,3776,2.506,3777,2.506,3778,2.506,3779,2.506,3780,2.506,3781,2.506,3782,2.506,3783,2.506,3784,2.506,3785,2.506,3786,2.506,3787,2.506,3788,2.506,3789,2.506,3790,2.506,3791,2.506,3792,2.506,3793,2.506,3794,2.506,3795,2.506,3796,2.506,3797,2.506,3798,2.506,3799,2.506,3800,2.506,3801,2.506,3802,2.506,3803,2.506,3804,2.506,3805,2.506,3806,2.506]],["title/additional-documentation/properties.html",[16,0.497,923,2.347,3536,2.669]],["body/additional-documentation/properties.html",[5,0.074,8,2.054,16,1.056,33,0.006,35,0.193,45,0.509,90,0.006,91,0.006,281,1.902,287,3.786,449,4.224,586,5.045,764,4.791,891,3.602,977,5.732,1301,4.805,3366,5.732,3734,5.732,3738,5.35,3775,5.732,3807,6.243,3808,6.243,3809,6.243,3810,6.243,3811,6.243,3812,6.243,3813,6.243,3814,6.243,3815,6.243]],["title/additional-documentation/properties/kp.properties.html",[923,2.347,3536,2.669,3738,2.98]],["body/additional-documentation/properties/kp.properties.html",[5,0.074,8,2.054,16,1.056,33,0.006,35,0.193,45,0.509,90,0.006,91,0.006,281,1.902,287,3.786,449,4.224,586,5.045,764,4.791,891,3.602,977,5.732,1301,4.805,3366,5.732,3734,5.732,3738,5.35,3775,5.732,3807,6.243,3808,6.243,3809,6.243,3810,6.243,3811,6.243,3812,6.243,3813,6.243,3814,6.243,3815,6.243]],["title/additional-documentation/properties/auth.properties.html",[923,2.347,3536,2.669,3816,3.478]],["body/additional-documentation/properties/auth.properties.html",[5,0.054,8,2.148,12,4.039,33,0.006,35,0.202,45,0.413,47,5.627,90,0.006,91,0.006,196,3.893,250,1.322,262,4.592,434,4.383,516,5.494,528,7.2,545,5.055,547,4.835,572,5.525,584,3.068,640,5.984,756,5.525,764,4.244,793,4.592,1290,4.592,1301,5.025,2562,5.818,3574,5.984,3816,5.984,3817,5.494,3818,6.728,3819,6.728,3820,6.728,3821,6.728,3822,6.728,3823,8.095,3824,8.684,3825,6.61,3826,5.494,3827,6.728,3828,6.728,3829,6.728,3830,6.728,3831,6.728]],["title/additional-documentation/properties/bruteforce.properties.html",[923,2.347,3536,2.669,3832,3.478]],["body/additional-documentation/properties/bruteforce.properties.html",[5,0.054,8,2.156,33,0.006,35,0.203,61,1.709,74,2.829,90,0.006,91,0.006,228,3.354,250,1.476,273,3.926,289,1.403,578,7.116,579,5.948,580,6.643,592,6.643,764,4.265,857,7.236,1290,4.63,1301,5.043,2013,4.876,2328,5.171,2562,4.876,3315,5.54,3817,5.54,3825,5.54,3826,5.54,3832,6.034,3833,6.784,3834,6.784,3835,6.784,3836,6.784,3837,6.784,3838,6.784,3839,6.784,3840,6.784,3841,6.784,3842,8.136,3843,6.784,3844,7.236]],["title/additional-documentation/properties/captcha.properties.html",[923,2.347,3536,2.669,3845,3.478]],["body/additional-documentation/properties/captcha.properties.html",[5,0.062,8,2.313,33,0.006,35,0.22,45,0.556,61,1.595,90,0.006,91,0.006,130,1.956,250,1.034,287,2.888,288,3.426,289,1.613,434,5.51,516,5.171,573,4.126,584,3.558,717,3.955,737,5.467,754,4.552,756,4.322,763,4.126,764,4.091,950,4.552,1173,5.171,1290,4.322,1301,5.412,2002,6.94,2003,6.94,2005,5.171,2036,6.94,2051,4.827,2053,6.94,2054,5.633,2562,4.552,3315,5.171,3817,5.171,3825,5.171,3826,5.171,3844,6.94,3845,5.633,3846,6.333,3847,6.333,3848,6.333,3849,6.333,3850,6.333,3851,6.333,3852,6.333,3853,6.333,3854,6.333,3855,7.803,3856,6.333]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["0",{"_index":799,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/NotEmptyPipe.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["0.0.1",{"_index":3654,"title":{},"body":{"properties.html":{}}}],["0.14",{"_index":3317,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":3329,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":3332,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":3331,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":3333,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":196,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10",{"_index":262,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"dependencies.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10000",{"_index":3161,"title":{},"body":{"modules/WarlockModule.html":{}}}],["15",{"_index":407,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["16",{"_index":3319,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3649,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3320,"title":{},"body":{"dependencies.html":{}}}],["192.168.0.1",{"_index":1305,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["2",{"_index":3323,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["2).join",{"_index":2330,"title":{},"body":{"classes/LogService.html":{}}}],["2.0",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["2.11",{"_index":3316,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2730,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["2004",{"_index":3347,"title":{},"body":{"license.html":{}}}],["2023",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["23",{"_index":3651,"title":{},"body":{"overview.html":{}}}],["27",{"_index":3650,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2328,"title":{},"body":{"classes/LogService.html":{},"injectables/ProcessManagerService.html":{},"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["300",{"_index":3844,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["30px",{"_index":2111,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["31",{"_index":3653,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":3828,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["4",{"_index":2324,"title":{},"body":{"classes/LogService.html":{},"dependencies.html":{}}}],["48",{"_index":3652,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3315,"title":{},"body":{"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["50",{"_index":2097,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["6",{"_index":3831,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["600",{"_index":3824,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["7",{"_index":2084,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["78",{"_index":3743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":3736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":3326,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["9]*$/.test(variablename",{"_index":1064,"title":{},"body":{"injectables/ConfigService.html":{}}}],["9_",{"_index":239,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["_a",{"_index":1062,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.localecompare(b",{"_index":1006,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a[sort",{"_index":1000,"title":{},"body":{"injectables/ConfigService.html":{}}}],["abc123456",{"_index":3855,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["abortable",{"_index":1148,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["above",{"_index":3547,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["abstractauthguard",{"_index":1,"title":{"guards/AbstractAuthGuard.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["abstractprocess",{"_index":92,"title":{"classes/AbstractProcess.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:121",{"_index":3028,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:125",{"_index":3029,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:129",{"_index":3027,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:133",{"_index":3026,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:137",{"_index":3030,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:28",{"_index":3017,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:29",{"_index":3019,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:30",{"_index":3018,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:36",{"_index":3020,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:38",{"_index":3031,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:71",{"_index":3032,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:79",{"_index":3033,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractusersubscriber",{"_index":211,"title":{"classes/AbstractUserSubscriber.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["acceptance",{"_index":3609,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":3606,"title":{},"body":{"license.html":{}}}],["access",{"_index":545,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["access_token",{"_index":575,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token_error_msg",{"_index":51,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":557,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["act",{"_index":3616,"title":{},"body":{"license.html":{}}}],["acting",{"_index":3364,"title":{},"body":{"license.html":{}}}],["action",{"_index":3205,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["action.entity",{"_index":1459,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["action.entity.ts",{"_index":1321,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:33",{"_index":1323,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:37",{"_index":1325,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:41",{"_index":1324,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:50",{"_index":1330,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:57",{"_index":1326,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:60",{"_index":1327,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action?.$?.content",{"_index":3210,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.read",{"_index":3209,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.target",{"_index":3208,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action[\"#name",{"_index":3207,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["actions",{"_index":1239,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["actions.description",{"_index":3768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.description.lang",{"_index":3769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name",{"_index":3766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name.lang",{"_index":3767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":650,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["acts",{"_index":3586,"title":{},"body":{"license.html":{}}}],["add",{"_index":3533,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":3535,"title":{},"body":{"license.html":{}}}],["additional",{"_index":3536,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}},"body":{"license.html":{}}}],["additions",{"_index":3426,"title":{},"body":{"license.html":{}}}],["address",{"_index":596,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":569,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["adm",{"_index":3311,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1303,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{}}}],["advised",{"_index":3604,"title":{},"body":{"license.html":{}}}],["affect",{"_index":2560,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{}}}],["afterremove",{"_index":2220,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["afterremove(event",{"_index":2227,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["again",{"_index":3059,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["against",{"_index":2013,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"license.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["agree",{"_index":3619,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":478,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["agreement",{"_index":3552,"title":{},"body":{"license.html":{}}}],["album",{"_index":267,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alexander",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["alias",{"_index":1434,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["aliases",{"_index":3657,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":3494,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":3721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedformetadatakey",{"_index":2999,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["allowfor",{"_index":830,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["alone",{"_index":3486,"title":{},"body":{"license.html":{}}}],["along",{"_index":1308,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["alongside",{"_index":3534,"title":{},"body":{"license.html":{}}}],["already",{"_index":2910,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["altitude",{"_index":383,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["always",{"_index":2557,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["analyzedatabase",{"_index":1277,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["and/or",{"_index":3613,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":3414,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":2333,"title":{},"body":{"classes/LogService.html":{}}}],["anything",{"_index":2561,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{}}}],["apache",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["aperture",{"_index":352,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["app",{"_index":3775,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["app.close",{"_index":3782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":3777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(configmodule).get(configservice",{"_index":3779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(logmodule).get(logger",{"_index":3778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appear",{"_index":3529,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":3408,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["application",{"_index":889,"title":{},"body":{"injectables/ConfigService.html":{}}}],["application/xml",{"_index":3287,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["applies",{"_index":3479,"title":{},"body":{"license.html":{}}}],["apply",{"_index":3627,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":3636,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":3573,"title":{},"body":{"license.html":{}}}],["archives",{"_index":3643,"title":{},"body":{"license.html":{}}}],["arg",{"_index":2979,"title":{},"body":{"modules/RedisModule.html":{}}}],["args",{"_index":732,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["args.find((arg",{"_index":2978,"title":{},"body":{"modules/RedisModule.html":{}}}],["argumentshost",{"_index":1133,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["arising",{"_index":3593,"title":{},"body":{"license.html":{}}}],["array",{"_index":2569,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["array.isarray(obj",{"_index":1583,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["array.isarray(value",{"_index":2240,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["array.reverse().foreach((obj",{"_index":3232,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["artist",{"_index":268,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asc",{"_index":1003,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["asserted",{"_index":3625,"title":{},"body":{"license.html":{}}}],["associated",{"_index":740,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"license.html":{}}}],["assume",{"_index":3576,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":2568,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["async",{"_index":24,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["atexp",{"_index":1311,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["attach",{"_index":3628,"title":{},"body":{"license.html":{}}}],["attached",{"_index":3407,"title":{},"body":{"license.html":{}}}],["attacks",{"_index":3834,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["attempts",{"_index":592,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attribution",{"_index":3516,"title":{},"body":{"license.html":{}}}],["attrs",{"_index":3212,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["audio",{"_index":307,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadata",{"_index":264,"title":{"interfaces/AudioFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadataentity",{"_index":390,"title":{"entities/AudioFileMetadataEntity.html":{}},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["audiomd",{"_index":1592,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.bit_rate",{"_index":1605,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.channels",{"_index":1603,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_long_name",{"_index":1599,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_name?.touppercase",{"_index":1597,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["auth.access.token.expiration",{"_index":3822,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.constants",{"_index":510,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["auth.guard",{"_index":441,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts",{"_index":7,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":2170,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:44",{"_index":31,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:64",{"_index":46,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:70",{"_index":42,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.jwt.secret",{"_index":3819,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.properties",{"_index":3816,"title":{"additional-documentation/properties/auth.properties.html":{}},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.refresh.token.expiration",{"_index":3827,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.types",{"_index":498,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["auth_access_token_prefix",{"_index":52,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix",{"_index":53,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${accesstoken",{"_index":588,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${token",{"_index":79,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth_jwt_cache_prefix}:${auth_refresh_token_prefix}:${accesstoken}:${refreshtoken",{"_index":590,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_refresh_token_prefix",{"_index":576,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":506,"title":{},"body":{"modules/AuthModule.html":{}}}],["authconfig.access_token_expiration",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":532,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticate(data",{"_index":535,"title":{},"body":{"classes/AuthService.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authguard",{"_index":430,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":446,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authmoduleoptions",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":3655,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":528,"title":{},"body":{"classes/AuthService.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authorization.service",{"_index":497,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorizationheader",{"_index":83,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationheader.match(/bearer\\s+(\\s+)\\s",{"_index":86,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationservice",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorized",{"_index":3360,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":3402,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":509,"title":{"classes/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["available",{"_index":3403,"title":{},"body":{"license.html":{},"modules.html":{}}}],["avalue",{"_index":999,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avalue.localecompare(bvalue",{"_index":1004,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avatar",{"_index":3065,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["avatar.files",{"_index":3799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.files.format",{"_index":3800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name",{"_index":3797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name.lang",{"_index":3798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type",{"_index":3801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type.ext",{"_index":3802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":998,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["b[sort",{"_index":1002,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bad",{"_index":609,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["badrequestexception",{"_index":229,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileService.html":{},"injectables/NotEmptyPipe.html":{}}}],["badrequestexception(`${this.fieldname",{"_index":2716,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["badrequestmsexception",{"_index":600,"title":{"classes/BadRequestMsException.html":{}},"body":{"classes/BadRequestMsException.html":{}}}],["base64",{"_index":2062,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["based",{"_index":924,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"license.html":{}}}],["basename(filepath",{"_index":1104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["basic",{"_index":1406,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["basic.service",{"_index":3113,"title":{},"body":{"modules/UserModule.html":{}}}],["basic.service.ts",{"_index":612,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basic.service.ts:29",{"_index":622,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basicexplorerservice",{"_index":1403,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["basicuserservice",{"_index":610,"title":{"injectables/BasicUserService.html":{}},"body":{"injectables/BasicUserService.html":{},"modules/UserModule.html":{}}}],["basis",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["bcrypt",{"_index":232,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":258,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["bcrypt.hash(password",{"_index":261,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["before",{"_index":3839,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["beforeinsert",{"_index":3131,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":3135,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":3132,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":3137,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["behalf",{"_index":3431,"title":{},"body":{"license.html":{}}}],["below",{"_index":3409,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":3385,"title":{},"body":{"license.html":{}}}],["between",{"_index":2604,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["bind",{"_index":3423,"title":{},"body":{"license.html":{}}}],["bitdepth",{"_index":316,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitrate",{"_index":269,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["blocked",{"_index":3842,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["blocking",{"_index":3840,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["body",{"_index":3227,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["body.schema",{"_index":3204,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["body_token",{"_index":3677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":3629,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":289,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MockCacheService.html":{},"classes/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["boolean(val",{"_index":2583,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["bootstrap",{"_index":663,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["bps",{"_index":310,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["brackets",{"_index":3632,"title":{},"body":{"license.html":{}}}],["break",{"_index":181,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["bridge",{"_index":3301,"title":{},"body":{"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants",{"_index":3261,"title":{},"body":{"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.constants.ts",{"_index":3173,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants.ts:30",{"_index":3253,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:32",{"_index":3251,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:36",{"_index":3177,"title":{},"body":{"classes/XdbExportService.html":{}}}],["bridge.middleware.ts",{"_index":3276,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:23",{"_index":3284,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:25",{"_index":3282,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:33",{"_index":3279,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.module.ts",{"_index":3295,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:33",{"_index":3296,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.types",{"_index":3184,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.types.ts",{"_index":3255,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["bridge/xml",{"_index":3172,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightness",{"_index":353,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["broker",{"_index":2782,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants",{"_index":2506,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants.ts",{"_index":3697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker.module",{"_index":2871,"title":{},"body":{"modules/ProcessModule.html":{}}}],["broker.module.ts",{"_index":2504,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["broker.service",{"_index":2509,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.service.ts",{"_index":2510,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:24",{"_index":2524,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:25",{"_index":2525,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:26",{"_index":2515,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:39",{"_index":2517,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:43",{"_index":2522,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:48",{"_index":2523,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:53",{"_index":2521,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:61",{"_index":2519,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.subscribe(command.register",{"_index":2893,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.start",{"_index":2897,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.stop",{"_index":2899,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.unregister",{"_index":2895,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.types",{"_index":2527,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["broker.types.ts",{"_index":2490,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:18",{"_index":2494,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:20",{"_index":2498,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:22",{"_index":2500,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker/messages",{"_index":2489,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":3645,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3646,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":578,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce",{"_index":582,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce.block.duration",{"_index":3841,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.enabled",{"_index":3835,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.max.attempts",{"_index":3838,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.properties",{"_index":3832,"title":{"additional-documentation/properties/bruteforce.properties.html":{}},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce_jwt_cache_prefix",{"_index":581,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:ip:${ipaddress",{"_index":599,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:login:${login",{"_index":595,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceipkey",{"_index":598,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceloginkey",{"_index":594,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["buf",{"_index":1516,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["buffer",{"_index":1163,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["builder",{"_index":1859,"title":{},"body":{"injectables/FileService.html":{}}}],["built",{"_index":2273,"title":{},"body":{"classes/LogService.html":{}}}],["bvalue",{"_index":1001,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bvalue.localecompare(avalue",{"_index":1005,"title":{},"body":{"injectables/ConfigService.html":{}}}],["c",{"_index":1440,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["c.process",{"_index":2927,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["c.target",{"_index":1441,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["cache",{"_index":573,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["cache.constants",{"_index":2950,"title":{},"body":{"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{}}}],["cache.service",{"_index":680,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.service.ts",{"_index":2549,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["cache.service.ts:101",{"_index":2573,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:102",{"_index":2938,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:120",{"_index":2558,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:121",{"_index":2948,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:130",{"_index":2567,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:139",{"_index":2940,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:157",{"_index":2944,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:25",{"_index":2555,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:27",{"_index":2937,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:34",{"_index":2563,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:39",{"_index":2942,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:47",{"_index":2565,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:54",{"_index":2943,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:58",{"_index":2572,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:65",{"_index":2946,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:71",{"_index":2577,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.service.ts:78",{"_index":2949,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:88",{"_index":2556,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["cache.types",{"_index":677,"title":{},"body":{"modules/CacheModule.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["cache/cache.constants",{"_index":2529,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{}}}],["cache/redis.module",{"_index":2507,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["cached",{"_index":2065,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["cachemodule",{"_index":499,"title":{"modules/CacheModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":19,"title":{"classes/CacheService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["callback",{"_index":206,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["caller",{"_index":3166,"title":{},"body":{"modules/WarlockModule.html":{}}}],["callhandler",{"_index":1209,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["calling",{"_index":2319,"title":{},"body":{"classes/LogService.html":{}}}],["can't",{"_index":156,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessRegisterService.html":{}}}],["canactivate",{"_index":14,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":28,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canread",{"_index":1245,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canread.name",{"_index":3770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canread.name.lang",{"_index":3771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":2071,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["canvas.getcontext(\"2d",{"_index":2099,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.height",{"_index":2109,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.width",{"_index":2108,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canwrite",{"_index":1246,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canwrite.name",{"_index":3772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canwrite.name.lang",{"_index":3773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capex",{"_index":2086,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontfamily",{"_index":2100,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontpath",{"_index":2102,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha",{"_index":737,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.constants",{"_index":2073,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.enabled",{"_index":3846,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.expiration",{"_index":3847,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.family",{"_index":3851,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.path",{"_index":3849,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.public.key",{"_index":3854,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.secret.key",{"_index":3856,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.properties",{"_index":3845,"title":{"additional-documentation/properties/captcha.properties.html":{}},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.service",{"_index":729,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.service.ts",{"_index":2000,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:129",{"_index":2046,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:137",{"_index":2050,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:145",{"_index":2052,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:153",{"_index":2055,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:33",{"_index":2009,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captcha.service.ts:39",{"_index":2043,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:96",{"_index":2059,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.type",{"_index":3853,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.types",{"_index":731,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha_cache_prefix",{"_index":2072,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["captcha_cache_prefix}:${request.id",{"_index":2091,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchabody",{"_index":749,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["captchaconfig",{"_index":2019,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.enabled",{"_index":2023,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.google_secret_key",{"_index":2026,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaenabled",{"_index":2021,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaid",{"_index":1306,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captchamodule",{"_index":719,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules.html":{}}}],["captchamoduleoptions",{"_index":721,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchapayload",{"_index":1307,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captcharequest",{"_index":733,"title":{"classes/CaptchaRequest.html":{}},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcharesponse",{"_index":761,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchas",{"_index":2037,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice",{"_index":730,"title":{"classes/CaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaservice:46",{"_index":2010,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:55",{"_index":2044,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice:62",{"_index":2012,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:76",{"_index":2064,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["carry",{"_index":3509,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":789,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["cascade'})@joincolumn",{"_index":1469,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["case",{"_index":179,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["cat",{"_index":861,"title":{},"body":{"injectables/CategoryService.html":{}}}],["catch",{"_index":168,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":1909,"title":{},"body":{"injectables/FileService.html":{}}}],["catch(exception",{"_index":1131,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1137,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catcherror",{"_index":2655,"title":{},"body":{"classes/MsClient.html":{}}}],["catcherror((error",{"_index":2672,"title":{},"body":{"classes/MsClient.html":{}}}],["categories",{"_index":845,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category",{"_index":831,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["category.constants",{"_index":864,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":839,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["category.service",{"_index":823,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category_relations",{"_index":863,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["categoryentity",{"_index":770,"title":{"entities/CategoryEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":816,"title":{"modules/CategoryModule.html":{}},"body":{"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrestrictionentity",{"_index":827,"title":{"entities/CategoryRestrictionEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["categoryservice",{"_index":821,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["catrep",{"_index":851,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cause",{"_index":3373,"title":{},"body":{"license.html":{}}}],["chanel",{"_index":2495,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["changed",{"_index":3513,"title":{},"body":{"license.html":{}}}],["changetarget",{"_index":1412,"title":{},"body":{"classes/ExplorerService.html":{}}}],["changetarget(target",{"_index":1287,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["character",{"_index":3592,"title":{},"body":{"license.html":{}}}],["charat(0",{"_index":1108,"title":{},"body":{"injectables/ConfigService.html":{}}}],["charge",{"_index":3464,"title":{},"body":{"license.html":{}}}],["checkuseraccess",{"_index":1273,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["child",{"_index":207,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["children",{"_index":772,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["choose",{"_index":3607,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":2967,"title":{},"body":{"injectables/RedisCacheService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["claim",{"_index":3491,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3481,"title":{},"body":{"license.html":{}}}],["class",{"_index":10,"title":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{}}}],["class\"]?.description",{"_index":1705,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["class\"]?.value",{"_index":1707,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["classes",{"_index":93,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"overview.html":{}}}],["cleaned",{"_index":3049,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts",{"_index":3014,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:27",{"_index":3016,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:52",{"_index":3022,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["client",{"_index":759,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["client.constants",{"_index":2692,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.constants.ts",{"_index":3698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.module.ts",{"_index":2688,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.ts",{"_index":2602,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["client.ts:24",{"_index":2606,"title":{},"body":{"classes/MockMsClient.html":{}}}],["client.ts:30",{"_index":2648,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:34",{"_index":2607,"title":{},"body":{"classes/MockMsClient.html":{}}}],["client.ts:43",{"_index":2649,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:52",{"_index":2613,"title":{},"body":{"classes/MockMsClient.html":{}}}],["client.ts:64",{"_index":2653,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:68",{"_index":2610,"title":{},"body":{"classes/MockMsClient.html":{}}}],["client.ts:80",{"_index":2650,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:89",{"_index":2652,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types",{"_index":2615,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["client.types.ts",{"_index":2471,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/typealiases.html":{}}}],["client.types.ts:24",{"_index":2479,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:30",{"_index":2485,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:36",{"_index":2482,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client/mock/mock",{"_index":2600,"title":{},"body":{"classes/MockMsClient.html":{}}}],["client/ms",{"_index":2470,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":2647,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["clientsmodule",{"_index":2689,"title":{},"body":{"modules/MsClientModule.html":{}}}],["clientsmodule.registerasync",{"_index":2693,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_cachemodule",{"_index":664,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":665,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_imports",{"_index":666,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":817,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_exports",{"_index":819,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":818,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":820,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":878,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":880,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_imports",{"_index":879,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cluster_configmodule_providers",{"_index":881,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_localemodule",{"_index":2172,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_exports",{"_index":2174,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_providers",{"_index":2173,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule",{"_index":2502,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule_imports",{"_index":2503,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["cluster_msclientmodule",{"_index":2686,"title":{},"body":{"modules/MsClientModule.html":{},"overview.html":{}}}],["cluster_msclientmodule_imports",{"_index":2687,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_processmodule",{"_index":2858,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_exports",{"_index":2860,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_imports",{"_index":2859,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_providers",{"_index":2861,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_warlockmodule",{"_index":3154,"title":{},"body":{"modules/WarlockModule.html":{}}}],["cluster_warlockmodule_imports",{"_index":3155,"title":{},"body":{"modules/WarlockModule.html":{}}}],["code",{"_index":286,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/MsException.html":{},"classes/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["codec",{"_index":270,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["codec_profile",{"_index":402,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["codecprofile",{"_index":271,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["code}_${language.id",{"_index":2201,"title":{},"body":{"injectables/LocaleService.html":{}}}],["color",{"_index":2049,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["color_components",{"_index":2142,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["color_range",{"_index":3146,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["color_space",{"_index":3147,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["colorcomponents",{"_index":313,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorrange",{"_index":386,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colorspace",{"_index":361,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colortype",{"_index":317,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["column",{"_index":421,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"boolean",{"_index":1387,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["column(\"date",{"_index":2140,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["column(\"decimal",{"_index":428,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"int",{"_index":427,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/FileEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"simple",{"_index":815,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column(\"smallint",{"_index":2419,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column(\"text",{"_index":1386,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column(\"varchar",{"_index":426,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column('boolean",{"_index":1474,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('int",{"_index":1476,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('simple",{"_index":792,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column('smallint",{"_index":2410,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column('text",{"_index":1378,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column('varchar",{"_index":802,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/UserEntity.html":{}}}],["column.entity",{"_index":1409,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["column.entity.ts",{"_index":1337,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:103",{"_index":1372,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:107",{"_index":1357,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:111",{"_index":1368,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:115",{"_index":1353,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:123",{"_index":1370,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:131",{"_index":1355,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:134",{"_index":1374,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:37",{"_index":1342,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:41",{"_index":1359,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:45",{"_index":1345,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:49",{"_index":1340,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:52",{"_index":1377,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:55",{"_index":1379,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:59",{"_index":1381,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:63",{"_index":1358,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:67",{"_index":1380,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:71",{"_index":1344,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:75",{"_index":1346,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:79",{"_index":1361,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:83",{"_index":1363,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:87",{"_index":1367,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:91",{"_index":1350,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:95",{"_index":1365,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:99",{"_index":1348,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["columndatatype",{"_index":1233,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":1237,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["columns.description",{"_index":3751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.description.lang",{"_index":3752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name",{"_index":3749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name.lang",{"_index":3750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer",{"_index":3753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description",{"_index":3756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description.lang",{"_index":3757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name",{"_index":3754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name.lang",{"_index":3755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer",{"_index":3758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description",{"_index":3761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description.lang",{"_index":3762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name",{"_index":3759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name.lang",{"_index":3760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab",{"_index":3763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name",{"_index":3764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name.lang",{"_index":3765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":3487,"title":{},"body":{"license.html":{}}}],["command",{"_index":2815,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["comment",{"_index":3637,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":3601,"title":{},"body":{"license.html":{}}}],["common",{"_index":3366,"title":{},"body":{"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["common/auth/auth.constants",{"_index":54,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["common/media/entity/media.entity",{"_index":812,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{}}}],["common/media/media.types",{"_index":2156,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["common/user/entity/user",{"_index":840,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["common/user/user.types",{"_index":57,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["communication",{"_index":3435,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":3398,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2231,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["compliance",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["complies",{"_index":3541,"title":{},"body":{"license.html":{}}}],["components\"]?.value",{"_index":1673,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["compositeimage",{"_index":378,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compression",{"_index":318,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["computer",{"_index":3598,"title":{},"body":{"license.html":{}}}],["concat(config_file_ext_pattern",{"_index":1105,"title":{},"body":{"injectables/ConfigService.html":{}}}],["conditions",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["config",{"_index":683,"title":{},"body":{"modules/CacheModule.html":{},"injectables/ConfigService.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["config.constants",{"_index":970,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service",{"_index":884,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.ts",{"_index":3734,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["config.types",{"_index":971,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix",{"_index":963,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["config_cache_prefix}:${!filter",{"_index":995,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${filenameprefix}.${keywithoutprefix",{"_index":1068,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${item.key",{"_index":1019,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${key",{"_index":1022,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_file_ext_pattern",{"_index":964,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configfilename",{"_index":1103,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configfilepath",{"_index":1106,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configitem",{"_index":875,"title":{"interfaces/ConfigItem.html":{}},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{}}}],["configmodule",{"_index":877,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":882,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.initwithpropertiesfiles(gencnfdir",{"_index":3781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":764,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["configurations",{"_index":888,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configuring",{"_index":765,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["connection",{"_index":2225,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["connection_space",{"_index":2118,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["connectionspace",{"_index":324,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["consequential",{"_index":3591,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3615,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":3447,"title":{},"body":{"license.html":{}}}],["const",{"_index":62,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":563,"title":{},"body":{"classes/AuthService.html":{}}}],["constants",{"_index":59,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"guards/RolesGuard.html":{}}}],["constitutes",{"_index":3495,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(@inject(redis_client",{"_index":2530,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(catrep",{"_index":848,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(code",{"_index":2701,"title":{},"body":{"classes/MsException.html":{}}}],["constructor(data",{"_index":2620,"title":{},"body":{"classes/MockStorage.html":{}}}],["constructor(fieldname",{"_index":2709,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["constructor(items",{"_index":2721,"title":{},"body":{"classes/PageableData.html":{}}}],["constructor(languagerep",{"_index":2185,"title":{},"body":{"injectables/LocaleService.html":{}}}],["constructor(lockexec",{"_index":2780,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["constructor(logger",{"_index":438,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["constructor(message",{"_index":604,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(private",{"_index":1216,"title":{},"body":{"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"injectables/NotEmptyPipe.html":{},"modules/ProcessModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(pubclient",{"_index":2514,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(reflector",{"_index":2992,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(serializer",{"_index":1204,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["constructor(storage",{"_index":2553,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{}}}],["constructor(userrep",{"_index":621,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["constructs",{"_index":1882,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["construed",{"_index":3537,"title":{},"body":{"license.html":{}}}],["contain",{"_index":241,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["contained",{"_index":3522,"title":{},"body":{"license.html":{}}}],["container",{"_index":272,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["containing",{"_index":544,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{}}}],["contains",{"_index":1290,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["content",{"_index":942,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["content.split(\"\\n",{"_index":1048,"title":{},"body":{"injectables/ConfigService.html":{}}}],["contents",{"_index":3530,"title":{},"body":{"license.html":{}}}],["context",{"_index":37,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"classes/LogService.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":3006,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":63,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["continue",{"_index":1052,"title":{},"body":{"injectables/ConfigService.html":{},"classes/MockStorage.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["contract",{"_index":3376,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":372,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["contribution",{"_index":3425,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":3485,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":3543,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3450,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":3496,"title":{},"body":{"license.html":{}}}],["control",{"_index":2991,"title":{},"body":{"guards/RolesGuard.html":{},"license.html":{}}}],["controlled",{"_index":3365,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":3399,"title":{},"body":{"license.html":{}}}],["convert",{"_index":3322,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":3502,"title":{},"body":{"license.html":{}}}],["copy",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright\"]?.description",{"_index":1737,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["corresponding",{"_index":1888,"title":{},"body":{"injectables/FileService.html":{}}}],["counterclaim",{"_index":3492,"title":{},"body":{"license.html":{}}}],["crashed",{"_index":172,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["create",{"_index":616,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/UserService.html":{}}}],["create(user",{"_index":624,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createbasicfindqb",{"_index":1847,"title":{},"body":{"injectables/FileService.html":{}}}],["createcanvas",{"_index":2069,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["createcanvas(200",{"_index":2096,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["created",{"_index":627,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{}}}],["createdatecolumn",{"_index":1482,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["createdirectoriesifnotexist",{"_index":1896,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(dir",{"_index":1989,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(directorypath",{"_index":1168,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["createfiledirectory",{"_index":1848,"title":{},"body":{"injectables/FileService.html":{}}}],["createfiledirectory(ispublic",{"_index":1861,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity",{"_index":1849,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity(ispublic",{"_index":1865,"title":{},"body":{"injectables/FileService.html":{}}}],["createfilemetadataentity",{"_index":1515,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createfilemetadataentity(buf",{"_index":1517,"title":{},"body":{"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createlocalizedstrings",{"_index":2184,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createlocalizedstrings(value",{"_index":2190,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createloginstance",{"_index":2768,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createloginstance(processcode",{"_index":2787,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createorupdatefile",{"_index":1490,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["createorupdatefile(file",{"_index":1496,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["createorupdatemedia",{"_index":2363,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createorupdatemedia(file",{"_index":2431,"title":{},"body":{"classes/MediaManager.html":{}}}],["createparamdecorator",{"_index":3712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(\"file",{"_index":1953,"title":{},"body":{"injectables/FileService.html":{}}}],["creates",{"_index":1870,"title":{},"body":{"injectables/FileService.html":{}}}],["creating",{"_index":11,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["creator\"]?.description",{"_index":1733,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["cron",{"_index":2834,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["cron/dist/job",{"_index":2890,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cron_tab",{"_index":2923,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["cronjob",{"_index":2889,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cronjob(processdata.crontab",{"_index":2912,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["crontab",{"_index":2750,"title":{},"body":{"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["cross",{"_index":3490,"title":{},"body":{"license.html":{}}}],["crutch",{"_index":1154,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto",{"_index":1145,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto.createhash(\"sha256",{"_index":1165,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["cs",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.get(authconfig.jwt_secret",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.getnumber",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{}}}],["ctx",{"_index":2098,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["ctx.fillrect(0",{"_index":2107,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.fillstyle",{"_index":2105,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.font",{"_index":2110,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.methodname",{"_index":2301,"title":{},"body":{"classes/LogService.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.textbaseline",{"_index":2112,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx?.filepath}:${ctx?.linenumber",{"_index":2308,"title":{},"body":{"classes/LogService.html":{}}}],["ctx?.methodname",{"_index":2309,"title":{},"body":{"classes/LogService.html":{}}}],["currentpage",{"_index":2722,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["currentpath",{"_index":1177,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["currentuser",{"_index":1223,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["currentuser.roles.find((v",{"_index":3105,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["custom",{"_index":3718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customary",{"_index":3561,"title":{},"body":{"license.html":{}}}],["customrendered",{"_index":367,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["d",{"_index":3519,"title":{},"body":{"license.html":{}}}],["d\\s()]*$/.test(processedvalue",{"_index":1077,"title":{},"body":{"injectables/ConfigService.html":{}}}],["damages",{"_index":3588,"title":{},"body":{"license.html":{}}}],["data",{"_index":127,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.tostring",{"_index":2545,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["data:image/png;base64,${image",{"_index":2090,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["database",{"_index":1872,"title":{},"body":{"injectables/FileService.html":{}}}],["datasource",{"_index":2221,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["datasource.manager.connection.subscribers.push(this",{"_index":2236,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["date",{"_index":189,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["date\"]?.value",{"_index":1714,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date(exifdata.icc[\"icc",{"_index":1712,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date.tolocalestring",{"_index":202,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["date_time",{"_index":2143,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["dates",{"_index":1309,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["datetime",{"_index":315,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["db",{"_index":688,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["dbexceptionfilter",{"_index":1127,"title":{"classes/DbExceptionFilter.html":{}},"body":{"classes/DbExceptionFilter.html":{}}}],["debug",{"_index":2275,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":2281,"title":{},"body":{"classes/LogService.html":{}}}],["declarations",{"_index":662,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["decorator",{"_index":3719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":394,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["decorators/for",{"_index":3000,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deepequal(obj1",{"_index":3237,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(obj1[key",{"_index":3247,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(uniqueobj",{"_index":3234,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["default_action_create",{"_index":1443,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_delete",{"_index":1445,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_duplicate",{"_index":1447,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_save",{"_index":1449,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_media_quality",{"_index":3684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_media_type",{"_index":3686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultactioncreate",{"_index":1241,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactiondelete",{"_index":1243,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionduplicate",{"_index":1244,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionsave",{"_index":1242,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defend",{"_index":3621,"title":{},"body":{"license.html":{}}}],["defined",{"_index":30,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["defines",{"_index":529,"title":{},"body":{"classes/AuthService.html":{}}}],["defining",{"_index":3720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":3368,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3352,"title":{},"body":{"license.html":{}}}],["del",{"_index":694,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["del(...keys",{"_index":701,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["delete",{"_index":253,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["deleteexistingconfigtsfiles",{"_index":899,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleteexistingconfigtsfiles(directory",{"_index":911,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletes",{"_index":1887,"title":{},"body":{"injectables/FileService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["deleting",{"_index":2959,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["deliberate",{"_index":3583,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":660,"title":{"dependencies.html":{}},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":853,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/XdbRequest.html":{}}}],["depth\"]?.value",{"_index":1680,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["derivative",{"_index":3410,"title":{},"body":{"license.html":{}}}],["derived",{"_index":531,"title":{},"body":{"classes/AuthService.html":{},"license.html":{}}}],["desc",{"_index":2732,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["descendants",{"_index":855,"title":{},"body":{"injectables/CategoryService.html":{}}}],["describing",{"_index":3562,"title":{},"body":{"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["description\"]?.description",{"_index":1735,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["description.lang",{"_index":3748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designated",{"_index":3449,"title":{},"body":{"license.html":{}}}],["determining",{"_index":3572,"title":{},"body":{"license.html":{}}}],["device_manufacturer",{"_index":2119,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["device_model_number",{"_index":2121,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["devicemanufacturer",{"_index":328,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["devicemodelnumber",{"_index":329,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["different",{"_index":3540,"title":{},"body":{"license.html":{}}}],["digitalzoomratio",{"_index":370,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dir",{"_index":1088,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["direct",{"_index":3371,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3374,"title":{},"body":{"license.html":{}}}],["directory",{"_index":913,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["directorystructure",{"_index":1141,"title":{"interfaces/DirectoryStructure.html":{}},"body":{"interfaces/DirectoryStructure.html":{}}}],["dirpath",{"_index":1099,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["dirs",{"_index":980,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dirstruct",{"_index":3023,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["dirstruct[key].length",{"_index":3050,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["disables",{"_index":3837,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["disclaimer",{"_index":3565,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":3444,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":2472,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["dispatch(pattern",{"_index":2475,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["dispatched",{"_index":2609,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["dispatches",{"_index":2608,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["dispatching",{"_index":2603,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["display",{"_index":3471,"title":{},"body":{"license.html":{}}}],["display_aspect_ratio",{"_index":3148,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["displayaspectratio",{"_index":385,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["distribute",{"_index":3474,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":480,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["distribution",{"_index":3351,"title":{},"body":{"license.html":{}}}],["document",{"_index":3357,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3394,"title":{},"body":{"license.html":{}}}],["don't",{"_index":3635,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":3318,"title":{},"body":{"dependencies.html":{}}}],["drawn",{"_index":2061,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["dto",{"_index":1202,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["dtointerceptor",{"_index":1194,"title":{"injectables/DtoInterceptor.html":{}},"body":{"injectables/DtoInterceptor.html":{}}}],["duration",{"_index":273,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["dynamicmodule",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["e",{"_index":169,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"entities/MediaTypeEntity.html":{},"injectables/MockCacheService.html":{},"miscellaneous/variables.html":{}}}],["e.code",{"_index":2459,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["each",{"_index":3457,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3642,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":3412,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":3415,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3432,"title":{},"body":{"license.html":{}}}],["email",{"_index":3066,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["emit",{"_index":2473,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["emit(chanel",{"_index":2493,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["emit(pattern",{"_index":2481,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["emits",{"_index":2611,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["emitted",{"_index":2612,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["empty",{"_index":2708,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts",{"_index":2705,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:23",{"_index":2710,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:26",{"_index":2713,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["enabled",{"_index":763,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["enables",{"_index":3836,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["enclosed",{"_index":3631,"title":{},"body":{"license.html":{}}}],["encoded",{"_index":2063,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["encoding",{"_index":1172,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["end",{"_index":1009,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["ensure",{"_index":2707,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["entities",{"_index":391,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{},"overview.html":{}}}],["entity",{"_index":246,"title":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{}}}],["entity(\"categories",{"_index":813,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity(\"category_restriction",{"_index":842,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["entity(\"explorer_actions",{"_index":1334,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["entity(\"explorer_column_renderers",{"_index":1399,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["entity(\"explorer_columns",{"_index":1385,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["entity(\"explorer_tabs",{"_index":1432,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["entity(\"explorer_targets",{"_index":1460,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["entity(\"file_metadata",{"_index":1532,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["entity(\"file_metadata_audio",{"_index":424,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["entity(\"file_metadata_gps",{"_index":2034,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["entity(\"file_metadata_icc",{"_index":2139,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["entity(\"file_metadata_image",{"_index":2144,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["entity(\"file_metadata_video",{"_index":3153,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["entity(\"files",{"_index":1487,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity(\"languages",{"_index":2166,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["entity(\"localized_medias",{"_index":2260,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["entity(\"localized_strings",{"_index":2266,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["entity(\"medias",{"_index":2391,"title":{},"body":{"entities/MediaEntity.html":{}}}],["entity(\"medias_ext",{"_index":2397,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["entity(\"medias_files",{"_index":2418,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["entity(\"medias_format",{"_index":2429,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["entity(\"medias_types",{"_index":2467,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["entity(\"process_logs",{"_index":2764,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["entity(\"process_units",{"_index":2932,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["entity(\"users",{"_index":3097,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity(\"users_roles",{"_index":3123,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["entity.code",{"_index":1920,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.constructor.name",{"_index":2245,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entity.id",{"_index":1927,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.id.tostring",{"_index":1906,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.metadata",{"_index":1922,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.name",{"_index":1919,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.path",{"_index":1918,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.public",{"_index":1903,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.size",{"_index":1916,"title":{},"body":{"injectables/FileService.html":{}}}],["entity/audio",{"_index":1557,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/category.entity",{"_index":825,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["entity/exif",{"_index":1561,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/explorer",{"_index":1408,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["entity/file",{"_index":1514,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["entity/file.entity",{"_index":1513,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["entity/gps",{"_index":1560,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/icc",{"_index":1562,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/image",{"_index":1559,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/language.entity",{"_index":2177,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/localized",{"_index":2178,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/media",{"_index":2447,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/media.entity",{"_index":2345,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entity/process.log.entity",{"_index":138,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/process.unit.entity",{"_index":2810,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/user.entity",{"_index":235,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["entity/video",{"_index":1558,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity_save_handler",{"_index":3687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityid",{"_index":1862,"title":{},"body":{"injectables/FileService.html":{}}}],["entityidforpatch",{"_index":2353,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitymanager.remove(myentity",{"_index":2218,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entityname",{"_index":2354,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitysavehandler",{"_index":1220,"title":{"interfaces/EntitySaveHandler.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entitysubscriber",{"_index":2210,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entitysubscriberinterface",{"_index":2232,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["entries",{"_index":3848,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["enum",{"_index":1329,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessUnitEntity.html":{}}}],["enumerations",{"_index":3335,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envloader",{"_index":675,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["envloader.loadenvironment(logger",{"_index":682,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1911,"title":{},"body":{"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["err.code",{"_index":2679,"title":{},"body":{"classes/MsClient.html":{}}}],["err.message",{"_index":2676,"title":{},"body":{"classes/MsClient.html":{}}}],["err.stack",{"_index":2677,"title":{},"body":{"classes/MsClient.html":{}}}],["err_token_a",{"_index":564,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["err_token_r",{"_index":566,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":117,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"interfaces/DirectoryStructure.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error().stack",{"_index":2317,"title":{},"body":{"classes/LogService.html":{}}}],["error(`invalid",{"_index":1066,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(message",{"_index":2283,"title":{},"body":{"classes/LogService.html":{}}}],["error.name",{"_index":2680,"title":{},"body":{"classes/MsClient.html":{}}}],["error?.type",{"_index":2673,"title":{},"body":{"classes/MsClient.html":{}}}],["errors",{"_index":562,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1155,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["etc",{"_index":3815,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["eval('import(\"file",{"_index":1157,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["eval(processedvalue",{"_index":1078,"title":{},"body":{"injectables/ConfigService.html":{}}}],["even",{"_index":3603,"title":{},"body":{"license.html":{}}}],["event",{"_index":225,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{},"license.html":{}}}],["event.entity",{"_index":2237,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.entity.login",{"_index":3144,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entityid",{"_index":2246,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.manager.remove(relatedentity",{"_index":2250,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["events",{"_index":2213,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["eventsubscriber",{"_index":2233,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["ex",{"_index":2956,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["example",{"_index":1301,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["exceeding",{"_index":3843,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["except",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["exception",{"_index":1129,"title":{},"body":{"classes/DbExceptionFilter.html":{},"classes/MsClient.html":{}}}],["exception.message",{"_index":1140,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["exceptions/ms.exception",{"_index":2659,"title":{},"body":{"classes/MsClient.html":{}}}],["exchange",{"_index":550,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchanged",{"_index":1291,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangetoken",{"_index":533,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetoken(refreshtoken",{"_index":548,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetokenpayload",{"_index":1288,"title":{"classes/ExchangeTokenPayload.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exclude",{"_index":2343,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["excludeproperties",{"_index":3274,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["excluding",{"_index":3446,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3463,"title":{},"body":{"license.html":{}}}],["execute",{"_index":98,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["executed",{"_index":155,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"license.html":{}}}],["executioncontext",{"_index":29,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3578,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3387,"title":{},"body":{"license.html":{}}}],["exif",{"_index":305,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifdata",{"_index":1657,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif",{"_index":1738,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.aperturevalue?.description",{"_index":1777,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.brightnessvalue?.description",{"_index":1779,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.colorspace?.description",{"_index":1795,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.contrast?.description",{"_index":1817,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.customrendered?.description",{"_index":1807,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.digitalzoomratio?.description",{"_index":1813,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exifversion?.description",{"_index":1771,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposurebiasvalue?.description",{"_index":1781,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuremode?.description",{"_index":1809,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposureprogram?.description",{"_index":1767,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuretime?.description",{"_index":1763,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flash?.description",{"_index":1789,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flashpixversion?.description",{"_index":1793,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.fnumber?.description",{"_index":1765,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.focallength?.description",{"_index":1791,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.interoperabilityindex?.description",{"_index":1831,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.isospeedratings?.description",{"_index":1769,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmake?.description",{"_index":1825,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmodel?.description",{"_index":1827,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.make?.description",{"_index":1741,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.maxaperturevalue?.description",{"_index":1783,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.meteringmode?.description",{"_index":1787,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.model?.description",{"_index":1743,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.offsettime?.description",{"_index":1773,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.orientation?.description",{"_index":1745,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelxdimension?.description",{"_index":1797,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelydimension?.description",{"_index":1799,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.resolutionunit?.description",{"_index":1751,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.saturation?.description",{"_index":1819,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenecapturetype?.description",{"_index":1815,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenetype?.description",{"_index":1805,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sensingmethod?.description",{"_index":1803,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sharpness?.description",{"_index":1821,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.shutterspeedvalue?.description",{"_index":1775,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.software?.description",{"_index":1753,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistance?.description",{"_index":1785,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistancerange?.description",{"_index":1823,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.whitebalance?.description",{"_index":1811,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.xresolution?.description",{"_index":1747,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.ycbcrpositioning?.description",{"_index":1755,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.yresolution?.description",{"_index":1749,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"compositeimage\"]?.description",{"_index":1829,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"exif",{"_index":1757,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"gps",{"_index":1761,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperability",{"_index":1801,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperabilityversion\"]?.description",{"_index":1833,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"bits",{"_index":1663,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"color",{"_index":1672,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"image",{"_index":1667,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"subsampling\"]?.description",{"_index":1675,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps",{"_index":1690,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.altitude",{"_index":1693,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.latitude",{"_index":1697,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.longitude",{"_index":1695,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc",{"_index":1698,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"connection",{"_index":1709,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"device",{"_index":1723,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"icc",{"_index":1715,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"primary",{"_index":1720,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile",{"_index":1701,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile/device",{"_index":1704,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"rendering",{"_index":1728,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png",{"_index":1676,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"bit",{"_index":1679,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"color",{"_index":1682,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"compression\"]?.description",{"_index":1685,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"filter\"]?.description",{"_index":1687,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"image",{"_index":1677,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"interlace\"]?.description",{"_index":1689,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exiffilemetadata",{"_index":306,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exiffilemetadataentity",{"_index":1521,"title":{},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["exififdpointer",{"_index":343,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifreader",{"_index":1553,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["exifreader.load(buf",{"_index":1658,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifversion",{"_index":349,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["existed",{"_index":2202,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existed?.id",{"_index":2205,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existedentityid",{"_index":1499,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["exists",{"_index":1902,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["expanded",{"_index":1659,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["expiration",{"_index":717,"title":{},"body":{"classes/CacheService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["expire",{"_index":695,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expire(key",{"_index":703,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expiresin",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["explicitarray",{"_index":3199,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitchildren",{"_index":3201,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitly",{"_index":3544,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":1230,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorer.constants",{"_index":1231,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer.service",{"_index":1407,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.types",{"_index":1331,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["explorer.variation",{"_index":1264,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer/explorer.module",{"_index":3304,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exploreraction",{"_index":1240,"title":{"classes/ExplorerAction.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["exploreractionentity",{"_index":1319,"title":{"entities/ExplorerActionEntity.html":{}},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumn",{"_index":1238,"title":{"interfaces/ExplorerColumn.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnentity",{"_index":1336,"title":{"entities/ExplorerColumnEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumnrenderer",{"_index":1260,"title":{"classes/ExplorerColumnRenderer.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnrendererentity",{"_index":1351,"title":{"entities/ExplorerColumnRendererEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{}}}],["explorermodule",{"_index":1400,"title":{"modules/ExplorerModule.html":{}},"body":{"modules/ExplorerModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["explorermodule.forroot",{"_index":3299,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["explorermoduleoptions",{"_index":1275,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerselectparams",{"_index":1274,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerservice",{"_index":1276,"title":{"classes/ExplorerService.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertab",{"_index":1263,"title":{"interfaces/ExplorerTab.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertabentity",{"_index":1373,"title":{"entities/ExplorerTabEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["explorertarget",{"_index":1235,"title":{"interfaces/ExplorerTarget.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorertargetentity",{"_index":1375,"title":{"entities/ExplorerTargetEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorertargetparams",{"_index":1268,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["export",{"_index":60,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["export.service",{"_index":3303,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exports",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["exportservice",{"_index":3272,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["exportxml",{"_index":3174,"title":{},"body":{"classes/XdbExportService.html":{}}}],["exportxml(params",{"_index":3175,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["expose",{"_index":1297,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["expose()@type(undefined",{"_index":2153,"title":{},"body":{"classes/JwtDto.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaTypeDto.html":{},"classes/UserDto.html":{}}}],["exposurebias",{"_index":354,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuremode",{"_index":368,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposureprogram",{"_index":347,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuretime",{"_index":345,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["express",{"_index":55,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["ext",{"_index":297,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["ext.entity",{"_index":2466,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["ext.entity.ts",{"_index":2394,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:12",{"_index":2396,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:8",{"_index":2395,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["extends",{"_index":433,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserSubscriber.html":{}}}],["extension",{"_index":1497,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["f",{"_index":2377,"title":{},"body":{"entities/MediaEntity.html":{}}}],["f.media",{"_index":2378,"title":{},"body":{"entities/MediaEntity.html":{}}}],["failed",{"_index":1910,"title":{},"body":{"injectables/FileService.html":{}}}],["failure",{"_index":3599,"title":{},"body":{"license.html":{}}}],["false",{"_index":874,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["family",{"_index":2054,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["fast",{"_index":894,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fee",{"_index":3608,"title":{},"body":{"license.html":{}}}],["fetching",{"_index":437,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["fetchuser",{"_index":20,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["ffprobe",{"_index":1554,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["ffprobe(filepath",{"_index":1590,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd",{"_index":1589,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd.streams.find((v",{"_index":1593,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic",{"_index":1555,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic.path",{"_index":1591,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["fieldname",{"_index":2711,"title":{},"body":{"injectables/NotEmptyPipe.html":{},"interfaces/XdbRequest.html":{}}}],["fields",{"_index":3630,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":3379,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["file's",{"_index":1871,"title":{},"body":{"injectables/FileService.html":{}}}],["file.constants",{"_index":285,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["file.entity",{"_index":2388,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["file.entity.ts",{"_index":2406,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:15",{"_index":2412,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:19",{"_index":2407,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:23",{"_index":2414,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:26",{"_index":2416,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:29",{"_index":2411,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:32",{"_index":2415,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:35",{"_index":2409,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:38",{"_index":2413,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.id.tostring",{"_index":1940,"title":{},"body":{"injectables/FileService.html":{}}}],["file.isdirectory",{"_index":1039,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.isfile",{"_index":1027,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.length",{"_index":1917,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata",{"_index":1941,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.audio",{"_index":1946,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.gps",{"_index":1944,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.image",{"_index":1942,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.video",{"_index":1948,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name",{"_index":1028,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.path",{"_index":1939,"title":{},"body":{"injectables/FileService.html":{}}}],["file.public",{"_index":1937,"title":{},"body":{"injectables/FileService.html":{}}}],["file.service",{"_index":1838,"title":{},"body":{"modules/FileModule.html":{}}}],["file.types",{"_index":423,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["file/entity/file",{"_index":2390,"title":{},"body":{"entities/MediaEntity.html":{}}}],["file/file.module",{"_index":2448,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["file/file.types",{"_index":2344,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["fileconfig",{"_index":1890,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.private_dir",{"_index":1893,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.public_dir",{"_index":1895,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent",{"_index":1042,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filed",{"_index":3500,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3252,"title":{},"body":{"classes/XdbImportService.html":{}}}],["fileentity",{"_index":1461,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filemanager",{"_index":283,"title":{"classes/FileManager.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemanager:131",{"_index":1878,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:148",{"_index":1876,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:159",{"_index":1880,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:168",{"_index":1879,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:177",{"_index":1881,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:187",{"_index":1886,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:66",{"_index":1867,"title":{},"body":{"injectables/FileService.html":{}}}],["filemd",{"_index":284,"title":{"classes/FileMd.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemd:36",{"_index":1540,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filemetadata",{"_index":294,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemetadataentity",{"_index":1466,"title":{"entities/FileMetadataEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["filemetadataservice",{"_index":1533,"title":{"injectables/FileMetadataService.html":{}},"body":{"injectables/FileMetadataService.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":1834,"title":{"modules/FileModule.html":{}},"body":{"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["filemodule.forroot",{"_index":2449,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["filemoduleoptions",{"_index":389,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":1915,"title":{},"body":{"injectables/FileService.html":{}}}],["filenameprefix",{"_index":943,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filepath",{"_index":945,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/LogService.html":{}}}],["filepromises",{"_index":1180,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filerep",{"_index":1852,"title":{},"body":{"injectables/FileService.html":{}}}],["filerow",{"_index":3267,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["files",{"_index":891,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["files.format",{"_index":3746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files.map(async",{"_index":1181,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["files_encoding",{"_index":965,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":3024,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fileservice",{"_index":1837,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filesutils",{"_index":1158,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["filesutils.createdirectoriesifnotexist",{"_index":1897,"title":{},"body":{"injectables/FileService.html":{}}}],["filesutils.filetype",{"_index":1565,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.gethashfrombuffer",{"_index":1564,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.readdirectoryrecursively",{"_index":3036,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["filetype",{"_index":1160,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{}}}],["filetype().filetypefrombuffer(buf",{"_index":1567,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata",{"_index":1566,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.ext",{"_index":1573,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.mime",{"_index":1571,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypemodule",{"_index":1150,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["filetypemodule.lib",{"_index":1161,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filter",{"_index":319,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/MockStorage.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filter(key",{"_index":2622,"title":{},"body":{"classes/MockStorage.html":{}}}],["filter.ts",{"_index":1130,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filter.ts:23",{"_index":1134,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filtering",{"_index":927,"title":{},"body":{"injectables/ConfigService.html":{}}}],["find",{"_index":630,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/MockStorage.html":{}}}],["find(key",{"_index":2624,"title":{},"body":{"classes/MockStorage.html":{}}}],["findbycode",{"_index":1491,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findbycode(code",{"_index":1501,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findbyid",{"_index":617,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbyid(id",{"_index":628,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findbylogin",{"_index":618,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbylogin(login",{"_index":632,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findfilebyid",{"_index":1492,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["findfilebyid(id",{"_index":1503,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["finding",{"_index":1845,"title":{},"body":{"injectables/FileService.html":{}}}],["findmediabyid",{"_index":2360,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findmediabyid(id",{"_index":2434,"title":{},"body":{"classes/MediaManager.html":{}}}],["findprivatebyid",{"_index":1493,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findprivatebyid(id",{"_index":1505,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findpublicbyid",{"_index":1494,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findpublicbyid(id",{"_index":1507,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["finds",{"_index":1877,"title":{},"body":{"injectables/FileService.html":{}}}],["finished",{"_index":166,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["first_name",{"_index":3087,"title":{},"body":{"entities/UserEntity.html":{}}}],["firstname",{"_index":2217,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["fitness",{"_index":3569,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1173,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["flash",{"_index":358,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpixversion",{"_index":360,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["fn.ts",{"_index":3692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fnumber",{"_index":346,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focallength",{"_index":359,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["folder",{"_index":3811,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["folders",{"_index":3046,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["folderscount",{"_index":3025,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["following",{"_index":3505,"title":{},"body":{"license.html":{}}}],["font",{"_index":2053,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["for_roles",{"_index":3716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":1997,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["forbiddenexception",{"_index":49,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenexception(access_token_error_msg",{"_index":72,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenmsexception",{"_index":1994,"title":{"classes/ForbiddenMsException.html":{}},"body":{"classes/ForbiddenMsException.html":{}}}],["force",{"_index":579,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["form",{"_index":3389,"title":{},"body":{"license.html":{}}}],["format",{"_index":2351,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["format.entity",{"_index":2417,"title":{},"body":{"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["format.entity.ts",{"_index":2424,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:12",{"_index":2427,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:15",{"_index":2428,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:18",{"_index":2426,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:8",{"_index":2425,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["formats",{"_index":2349,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["forroles",{"_index":3689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroot",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forroot(options",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forrootasync",{"_index":724,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":725,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forwardreference",{"_index":3258,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["found",{"_index":631,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/NotFoundMsException.html":{}}}],["founduser",{"_index":254,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["founduser.password",{"_index":259,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["fourth",{"_index":2321,"title":{},"body":{"classes/LogService.html":{}}}],["frame_rate",{"_index":3150,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["framerate",{"_index":387,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["free",{"_index":3466,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":3793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":962,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["fs.existssync(localpropertiespath",{"_index":1034,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.existssync(tmpdir",{"_index":3039,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises",{"_index":1907,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.access(directorypath",{"_index":1169,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(directorypath",{"_index":1170,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(gensrcpath",{"_index":1113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(currentpath",{"_index":1179,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.readdir(directory",{"_index":1024,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(fullpath",{"_index":1086,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile",{"_index":1036,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(fullpath",{"_index":1043,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(kppath",{"_index":1031,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(path",{"_index":1174,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.rm(tmpdir",{"_index":3047,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises.stat(filepath",{"_index":1184,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.unlink(path.join(fullpath",{"_index":1094,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.writefile(`${outputpath}/${filename",{"_index":1921,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.writefile(configfilepath",{"_index":1115,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ft",{"_index":1153,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ft.lib",{"_index":1156,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["full",{"_index":435,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{}}}],["fullkey",{"_index":1018,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullpath",{"_index":1038,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullrelations",{"_index":1270,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["fun",{"_index":2535,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["fun(this.safedeserialize(data",{"_index":2537,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["function",{"_index":1159,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2551,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gen",{"_index":507,"title":{},"body":{"modules/AuthModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["gen_src_dir",{"_index":966,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["gencnfdir",{"_index":934,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["generatecaptcha",{"_index":752,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["generatecolor",{"_index":2038,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generateconfigtsfiles",{"_index":900,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generated",{"_index":586,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["generatedcontent",{"_index":1079,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedfilecontent",{"_index":1111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedtsoutput",{"_index":896,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables",{"_index":901,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables(namespacename",{"_index":915,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generaterandomint",{"_index":2080,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring",{"_index":2078,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring(5",{"_index":2083,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generates",{"_index":583,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":751,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{}}}],["generation",{"_index":2005,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["genre",{"_index":274,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gensrcfile",{"_index":1089,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.isfile",{"_index":1090,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name",{"_index":1093,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name.endswith(config_file_ext_pattern",{"_index":1091,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfiles",{"_index":1085,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcpath",{"_index":1101,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(key",{"_index":705,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getaccesstokenfromrequest",{"_index":26,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getaccesstokenfromrequest(req",{"_index":40,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getboolean",{"_index":696,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getboolean(key",{"_index":707,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getcallingcontext",{"_index":2276,"title":{},"body":{"classes/LogService.html":{}}}],["getcaptchaexp",{"_index":2039,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontfamily",{"_index":2040,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontpath",{"_index":2041,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getdeletestats",{"_index":3015,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdeletestats(dirstruct",{"_index":3021,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdescendantsbycodeofroot",{"_index":846,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getdescendantsbycodeofroot(code",{"_index":852,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getentitydata",{"_index":1282,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata(target",{"_index":1415,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getfilepath",{"_index":1495,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["getfilepath(file",{"_index":1509,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["getfrompattern",{"_index":697,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getfrompattern(key",{"_index":2566,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["getfrompattern(pattern",{"_index":709,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gethashfrombuffer",{"_index":1563,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(buf",{"_index":1569,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(filebuffer",{"_index":1162,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["getlastlogsbyprocess",{"_index":2769,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlastlogsbyprocess(processcode",{"_index":2790,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getmediapath",{"_index":2364,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath(media",{"_index":2438,"title":{},"body":{"classes/MediaManager.html":{}}}],["getnumber",{"_index":698,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getnumber(key",{"_index":712,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getone",{"_index":1935,"title":{},"body":{"injectables/FileService.html":{}}}],["getpageableentitydata",{"_index":1278,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getpageableentitydata(target",{"_index":1417,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getprivatedir",{"_index":1850,"title":{},"body":{"injectables/FileService.html":{}}}],["getprocessdata",{"_index":2770,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessdata(code",{"_index":2792,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessinstance",{"_index":2891,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocessinstance(processdata.code",{"_index":2902,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocesslogbyid",{"_index":2771,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocesslogbyid(id",{"_index":2794,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus",{"_index":2772,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus(code",{"_index":2796,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getpropertiespage",{"_index":902,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpropertiespage(params",{"_index":919,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpublicdir",{"_index":1851,"title":{},"body":{"injectables/FileService.html":{}}}],["getstatus",{"_index":99,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["gettargetdata",{"_index":1285,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettargetdata(target",{"_index":1419,"title":{},"body":{"classes/ExplorerService.html":{}}}],["gettargetlist",{"_index":1286,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getting",{"_index":2954,"title":{"index.html":{},"license.html":{}},"body":{"injectables/RedisCacheService.html":{}}}],["getxmlparser",{"_index":3197,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["getxmlparser().parsestring(xmldata",{"_index":3226,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["give",{"_index":3506,"title":{},"body":{"license.html":{}}}],["given",{"_index":1883,"title":{},"body":{"injectables/FileService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["global",{"_index":2867,"title":{},"body":{"modules/ProcessModule.html":{}}}],["globalkpcontent",{"_index":954,"title":{},"body":{"injectables/ConfigService.html":{}}}],["goodwill",{"_index":3596,"title":{},"body":{"license.html":{}}}],["google",{"_index":2002,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["google's",{"_index":2014,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["googlecaptchaservice",{"_index":1998,"title":{"classes/GoogleCaptchaService.html":{}},"body":{"classes/GoogleCaptchaService.html":{}}}],["governing",{"_index":490,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["gps",{"_index":301,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadata",{"_index":302,"title":{"interfaces/GpsFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadataentity",{"_index":1523,"title":{"entities/GpsFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["gpsinfoifdpointer",{"_index":344,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["grant",{"_index":3455,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3388,"title":{},"body":{"license.html":{}}}],["granting",{"_index":3361,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3459,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3644,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":728,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["graphical",{"_index":2036,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["graphiccaptcharesponse",{"_index":2045,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["graphiccaptchaservice",{"_index":723,"title":{"classes/GraphicCaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["grossly",{"_index":3584,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":1217,"title":{},"body":{"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handle(target",{"_index":1222,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler",{"_index":2497,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["handler.ts",{"_index":3102,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler.ts:26",{"_index":3103,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handlerequest",{"_index":2645,"title":{},"body":{"classes/MsClient.html":{}}}],["handlerequest(source",{"_index":2651,"title":{},"body":{"classes/MsClient.html":{}}}],["harmless",{"_index":3623,"title":{},"body":{"license.html":{}}}],["hash",{"_index":298,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/MockStorage.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["hash(item.params",{"_index":2636,"title":{},"body":{"classes/MockStorage.html":{}}}],["hash(params",{"_index":2632,"title":{},"body":{"classes/MockStorage.html":{}}}],["hashpassword",{"_index":214,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpassword(password",{"_index":218,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded",{"_index":215,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded(event",{"_index":221,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashsum",{"_index":1164,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.digest(\"hex",{"_index":1167,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.update(filebuffer",{"_index":1166,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hasn't",{"_index":2833,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["hasprocessinstance",{"_index":2817,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hasprocessinstance(code",{"_index":2842,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hassomerole",{"_index":3003,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hassomerole(userroles",{"_index":3009,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heic",{"_index":3321,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":312,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["height\"]?.value",{"_index":1668,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["helper",{"_index":1856,"title":{},"body":{"injectables/FileService.html":{}}}],["hereby",{"_index":3458,"title":{},"body":{"license.html":{}}}],["herein",{"_index":3549,"title":{},"body":{"license.html":{}}}],["hold",{"_index":3622,"title":{},"body":{"license.html":{}}}],["host",{"_index":684,"title":{},"body":{"modules/CacheModule.html":{},"classes/DbExceptionFilter.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1138,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["hour",{"_index":3830,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["http",{"_index":2007,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["http://www.apache.org/licenses",{"_index":3348,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["httpexception",{"_index":2657,"title":{},"body":{"classes/MsClient.html":{}}}],["httpexception(err.message",{"_index":2678,"title":{},"body":{"classes/MsClient.html":{}}}],["https://www.google.com/recaptcha/api/siteverify?secret=${secretkey}&response=${request.data",{"_index":2028,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpservice",{"_index":2008,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpstatus",{"_index":606,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["httpstatus.request_timeout",{"_index":2683,"title":{},"body":{"classes/MsClient.html":{}}}],["httpstatus.too_many_requests",{"_index":3056,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["icc",{"_index":299,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icc_copyright",{"_index":2123,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_description",{"_index":2124,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_profile_date",{"_index":2127,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_signature",{"_index":2128,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icccopyright",{"_index":334,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccdescription",{"_index":333,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadata",{"_index":300,"title":{"interfaces/IccFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadataentity",{"_index":1526,"title":{"entities/IccFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/IccFileMetadataEntity.html":{}}}],["iccprofiledate",{"_index":325,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccsignature",{"_index":326,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icon",{"_index":291,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["icon.files",{"_index":3728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.files.format",{"_index":3729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name",{"_index":3726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name.lang",{"_index":3727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type",{"_index":3730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type.ext",{"_index":3731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfiles",{"_index":1969,"title":{},"body":{"injectables/FileService.html":{}}}],["iconfilesformat",{"_index":1971,"title":{},"body":{"injectables/FileService.html":{}}}],["iconlang",{"_index":1967,"title":{},"body":{"injectables/FileService.html":{}}}],["iconname",{"_index":1965,"title":{},"body":{"injectables/FileService.html":{}}}],["icontype",{"_index":1973,"title":{},"body":{"injectables/FileService.html":{}}}],["icontypeext",{"_index":1975,"title":{},"body":{"injectables/FileService.html":{}}}],["id",{"_index":152,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{}}}],["identification",{"_index":1874,"title":{},"body":{"injectables/FileService.html":{},"license.html":{}}}],["identifier",{"_index":744,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["identifying",{"_index":3634,"title":{},"body":{"license.html":{}}}],["ifd",{"_index":1758,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ii",{"_index":3377,"title":{},"body":{"license.html":{}}}],["iii",{"_index":3384,"title":{},"body":{"license.html":{}}}],["image",{"_index":303,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadata",{"_index":304,"title":{"interfaces/ImageFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadataentity",{"_index":1528,"title":{"entities/ImageFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["imagemin",{"_index":3324,"title":{},"body":{"dependencies.html":{}}}],["implement",{"_index":205,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["implemented",{"_index":530,"title":{},"body":{"classes/AuthService.html":{}}}],["implementing",{"_index":2552,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["implied",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import(\"file",{"_index":1152,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["import.service",{"_index":3302,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["importfromfile",{"_index":3249,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importfromfile(filedata",{"_index":3190,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["imports",{"_index":511,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importservice",{"_index":3271,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importxml",{"_index":3250,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importxml(xml",{"_index":3189,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["improving",{"_index":3445,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3594,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3590,"title":{},"body":{"license.html":{}}}],["include",{"_index":3269,"title":{},"body":{"interfaces/XdbRequest.html":{},"license.html":{}}}],["included",{"_index":3406,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3520,"title":{},"body":{"license.html":{}}}],["includeunknown",{"_index":1660,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["including",{"_index":436,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"license.html":{}}}],["inclusion",{"_index":3429,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3453,"title":{},"body":{"license.html":{}}}],["incr",{"_index":699,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incr(key",{"_index":714,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["increment",{"_index":2575,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incrementing",{"_index":2962,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["increments",{"_index":2574,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incurred",{"_index":3624,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":3620,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":3611,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column('boolean",{"_index":1343,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["index()@column('date",{"_index":2126,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["index()@column('decimal",{"_index":405,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('int",{"_index":399,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('varchar",{"_index":395,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column({type",{"_index":1328,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["index()@createdatecolumn({name",{"_index":1478,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["index()@manytoone(undefined",{"_index":1352,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["index()@updatedatecolumn({name",{"_index":2758,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["index({unique",{"_index":779,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["indexable",{"_index":1143,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["indicated",{"_index":3404,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":950,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["indirect",{"_index":3372,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3386,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["information",{"_index":541,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["informational",{"_index":3531,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3484,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3497,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":625,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["init",{"_index":2773,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["initconfig",{"_index":3690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial",{"_index":1082,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initializes",{"_index":931,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles",{"_index":903,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles(gencnfdir",{"_index":929,"title":{},"body":{"injectables/ConfigService.html":{}}}],["inject",{"_index":440,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{}}}],["inject(logger",{"_index":443,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["inject(messages_broker",{"_index":2820,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["inject(redis_client",{"_index":2951,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["inject(warlock",{"_index":2819,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["injectable",{"_index":429,"title":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["injectables",{"_index":431,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"overview.html":{}}}],["injectdatasource",{"_index":2234,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["injectrepository",{"_index":644,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["injectrepository(categoryentity",{"_index":866,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectrepository(fileentity",{"_index":1898,"title":{},"body":{"injectables/FileService.html":{}}}],["injectrepository(languageentity",{"_index":2192,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedmediaentity",{"_index":2194,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedstringentity",{"_index":2193,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(processlogentity",{"_index":2822,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(processunitentity",{"_index":2821,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(userentity",{"_index":648,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["insertevent",{"_index":222,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["insertupdate",{"_index":3268,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["inspect",{"_index":144,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["inspect(data",{"_index":197,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(message",{"_index":191,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(pattern",{"_index":2668,"title":{},"body":{"classes/MsClient.html":{}}}],["instance",{"_index":1860,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{}}}],["instanceof",{"_index":1585,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/LocaleSubscriber.html":{},"modules/RedisModule.html":{}}}],["instances",{"_index":1201,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/LocaleSubscriber.html":{}}}],["institute",{"_index":3488,"title":{},"body":{"license.html":{}}}],["intent\"]?.description",{"_index":1729,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intent\"]?.value",{"_index":1731,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intentionally",{"_index":3427,"title":{},"body":{"license.html":{}}}],["interact",{"_index":614,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["intercept",{"_index":1203,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["intercept(context",{"_index":1207,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interceptor",{"_index":1196,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interface",{"_index":263,"title":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MockCacheService.html":{},"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["interfaces",{"_index":265,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"overview.html":{}}}],["interlace",{"_index":320,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internalservererrorexception",{"_index":1889,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["internalservererrorexception(`process",{"_index":2843,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["interoperabilityifdpointer",{"_index":364,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityindex",{"_index":379,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityversion",{"_index":380,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["invalid",{"_index":2148,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["invalidate",{"_index":555,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidated",{"_index":558,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken",{"_index":534,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken(accesstoken",{"_index":553,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidtokenmsexception",{"_index":2145,"title":{"classes/InvalidTokenMsException.html":{}},"body":{"classes/InvalidTokenMsException.html":{}}}],["ioredis",{"_index":2526,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["ip",{"_index":568,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["ipaddress",{"_index":597,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":3467,"title":{},"body":{"license.html":{}}}],["isip",{"_index":1295,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isip()@isoptional",{"_index":2336,"title":{},"body":{"classes/LoginPayload.html":{}}}],["isnotempty",{"_index":738,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isoptional",{"_index":1296,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isospeedratings",{"_index":348,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ispublic",{"_index":1498,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["isstring",{"_index":745,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isnotempty",{"_index":741,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isoptional",{"_index":1293,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/LoginPayload.html":{}}}],["issue",{"_index":3441,"title":{},"body":{"license.html":{}}}],["item",{"_index":959,"title":{},"body":{"injectables/ConfigService.html":{},"classes/MockStorage.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$$.map((r",{"_index":3221,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$.key",{"_index":3219,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item._",{"_index":3218,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.key",{"_index":2635,"title":{},"body":{"classes/MockStorage.html":{}}}],["item.params",{"_index":2634,"title":{},"body":{"classes/MockStorage.html":{}}}],["item.value",{"_index":1021,"title":{},"body":{"injectables/ConfigService.html":{}}}],["item[\"#name",{"_index":3216,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["itemname",{"_index":3215,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["items",{"_index":2725,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["january",{"_index":3346,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1199,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["job",{"_index":2836,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["job.start",{"_index":2914,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["job.stop",{"_index":2918,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["join(\"_",{"_index":1061,"title":{},"body":{"injectables/ConfigService.html":{}}}],["joincolumn",{"_index":1483,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["jointable",{"_index":804,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["json",{"_index":793,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["json.parse(data",{"_index":2546,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.parse(processedvalue",{"_index":1076,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(value",{"_index":3794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":2544,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.transformer",{"_index":811,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["json.transformer.ts",{"_index":3703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":572,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["jwt_secret_key",{"_index":3821,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["jwtaccesstokenkey",{"_index":587,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwtdto",{"_index":543,"title":{"classes/JwtDto.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["jwtmodule",{"_index":493,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":513,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtokenkey",{"_index":589,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":3043,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key",{"_index":584,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["key.length",{"_index":3051,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key.replace(`${config_cache_prefix",{"_index":1016,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.slice(filenameprefix.length",{"_index":1056,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.split(\"*\").join",{"_index":2638,"title":{},"body":{"classes/MockStorage.html":{}}}],["key.startswith(filenameprefix",{"_index":1055,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keys",{"_index":574,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["keys.foreach((k",{"_index":2586,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["keys.join",{"_index":2960,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys.push(...chunk",{"_index":2968,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys1",{"_index":3240,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys1.length",{"_index":3244,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2",{"_index":3242,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.includes(key",{"_index":3246,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.length",{"_index":3245,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keystoretrieve",{"_index":1010,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keystoretrieve.map(async",{"_index":1014,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywithoutprefix",{"_index":1054,"title":{},"body":{"injectables/ConfigService.html":{}}}],["kind",{"_index":485,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["kiriliuk",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["kp.properties",{"_index":3738,"title":{"additional-documentation/properties/kp.properties.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.static.files",{"_index":3813,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.tmp.dir",{"_index":3809,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp_properties_file_name",{"_index":967,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kpconfig",{"_index":3034,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["kppath",{"_index":1029,"title":{},"body":{"injectables/ConfigService.html":{}}}],["label",{"_index":275,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lang",{"_index":2157,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{}}}],["language",{"_index":489,"title":{"interfaces/Language.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["language.entity",{"_index":2259,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languageentity",{"_index":2159,"title":{"entities/LanguageEntity.html":{}},"body":{"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languagerep",{"_index":2189,"title":{},"body":{"injectables/LocaleService.html":{}}}],["languages",{"_index":2195,"title":{},"body":{"injectables/LocaleService.html":{}}}],["last_name",{"_index":3090,"title":{},"body":{"entities/UserEntity.html":{}}}],["lastname",{"_index":3067,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["lastvaluefrom",{"_index":2018,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lastvaluefrom(response",{"_index":2029,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["later",{"_index":3060,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["latin",{"_index":242,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["latitude",{"_index":381,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["law",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["lawsuit",{"_index":3493,"title":{},"body":{"license.html":{}}}],["leftjoinandselect(\"file.icon",{"_index":1954,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.metadata",{"_index":1955,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.preview",{"_index":1976,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.files",{"_index":1968,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.name",{"_index":1964,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.type",{"_index":1972,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconfiles.format",{"_index":1970,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconname.lang",{"_index":1966,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icontype.ext",{"_index":1974,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.audio",{"_index":1960,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.gps",{"_index":1956,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.image",{"_index":1958,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.video",{"_index":1962,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.files",{"_index":1981,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.name",{"_index":1977,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.type",{"_index":1985,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewfiles.format",{"_index":1983,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewname.lang",{"_index":1979,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewtype.ext",{"_index":1987,"title":{},"body":{"injectables/FileService.html":{}}}],["legal",{"_index":3362,"title":{},"body":{"license.html":{}}}],["legend",{"_index":661,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["lensmake",{"_index":376,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmodel",{"_index":377,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["letters",{"_index":243,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["level",{"_index":128,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["liability",{"_index":3579,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3587,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1151,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/.../access",{"_index":3673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.constants.ts",{"_index":3672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.types.ts",{"_index":3658,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../cache.constants.ts",{"_index":3700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.constants.ts",{"_index":3679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.types.ts",{"_index":3659,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../category.constants.ts",{"_index":3680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.constants.ts",{"_index":3681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.init",{"_index":3691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../constants.ts",{"_index":3699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../current",{"_index":3682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../explorer.constants.ts",{"_index":3667,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../explorer.types.ts",{"_index":3660,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../file.types.ts",{"_index":3661,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../files.utils.ts",{"_index":3688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../for",{"_index":3675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../log.constants.ts",{"_index":3693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.constants.ts",{"_index":3685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.types.ts",{"_index":3663,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../messages",{"_index":3696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../ms",{"_index":3664,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../pageable.types.ts",{"_index":3337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../process.constants.ts",{"_index":3336,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/.../simple",{"_index":3702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.constants.ts",{"_index":3709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.types.ts",{"_index":3665,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../warlock.constants.ts",{"_index":3710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../warlock.types.ts",{"_index":3668,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../xml",{"_index":3662,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts",{"_index":527,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts:109",{"_index":537,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:116",{"_index":554,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:123",{"_index":549,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.module.ts",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.module.ts:31",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.types.ts",{"_index":1289,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/auth/auth.types.ts:103",{"_index":2149,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:109",{"_index":2151,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:115",{"_index":2150,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:121",{"_index":2152,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:36",{"_index":2338,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:45",{"_index":2339,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:55",{"_index":2337,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:63",{"_index":2334,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:71",{"_index":2335,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:84",{"_index":1294,"title":{},"body":{"classes/ExchangeTokenPayload.html":{}}}],["lib/common/auth/auth.types.ts:97",{"_index":2154,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/captcha/captcha.constants.ts",{"_index":3723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/captcha/captcha.module.ts",{"_index":720,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:25",{"_index":722,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:41",{"_index":727,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.types.ts",{"_index":734,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/captcha/captcha.types.ts:29",{"_index":768,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:36",{"_index":769,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:49",{"_index":742,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:55",{"_index":739,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/google",{"_index":1999,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lib/common/captcha/graphic",{"_index":2035,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["lib/common/captcha/montserrat.ttf",{"_index":3850,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["lib/common/config/config.constants.ts",{"_index":3733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.init",{"_index":3774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.module.ts",{"_index":883,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.service.ts",{"_index":885,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:113",{"_index":957,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:123",{"_index":947,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:128",{"_index":955,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:199",{"_index":944,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:234",{"_index":940,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:250",{"_index":917,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:263",{"_index":912,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:292",{"_index":914,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:321",{"_index":937,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:44",{"_index":960,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:46",{"_index":961,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:47",{"_index":910,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:57",{"_index":930,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:78",{"_index":921,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.types.ts",{"_index":876,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["lib/common/explorer/entity/explorer",{"_index":1320,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["lib/common/explorer/explorer.constants.ts",{"_index":3669,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/explorer/explorer.module.ts",{"_index":1401,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:27",{"_index":1402,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:50",{"_index":1405,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.types.ts",{"_index":1221,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/explorer/explorer.types.ts:100",{"_index":1317,"title":{},"body":{"classes/ExplorerAction.html":{}}}],["lib/common/explorer/explorer.types.ts:101",{"_index":1316,"title":{},"body":{"classes/ExplorerAction.html":{}}}],["lib/common/explorer/explorer.types.ts:130",{"_index":1224,"title":{},"body":{"interfaces/EntitySaveHandler.html":{}}}],["lib/common/explorer/explorer.types.ts:134",{"_index":1413,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:136",{"_index":1418,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:142",{"_index":1425,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:148",{"_index":1423,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:154",{"_index":1416,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:161",{"_index":1420,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:166",{"_index":1421,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:168",{"_index":1414,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:88",{"_index":1388,"title":{},"body":{"classes/ExplorerColumnRenderer.html":{}}}],["lib/common/explorer/explorer.types.ts:89",{"_index":1390,"title":{},"body":{"classes/ExplorerColumnRenderer.html":{}}}],["lib/common/explorer/explorer.types.ts:90",{"_index":1389,"title":{},"body":{"classes/ExplorerColumnRenderer.html":{}}}],["lib/common/explorer/explorer.types.ts:91",{"_index":1392,"title":{},"body":{"classes/ExplorerColumnRenderer.html":{}}}],["lib/common/explorer/explorer.types.ts:92",{"_index":1391,"title":{},"body":{"classes/ExplorerColumnRenderer.html":{}}}],["lib/common/explorer/explorer.types.ts:96",{"_index":1313,"title":{},"body":{"classes/ExplorerAction.html":{}}}],["lib/common/explorer/explorer.types.ts:97",{"_index":1315,"title":{},"body":{"classes/ExplorerAction.html":{}}}],["lib/common/explorer/explorer.types.ts:98",{"_index":1314,"title":{},"body":{"classes/ExplorerAction.html":{}}}],["lib/common/explorer/explorer.types.ts:99",{"_index":1318,"title":{},"body":{"classes/ExplorerAction.html":{}}}],["lib/common/explorer/handlers/user",{"_index":3099,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["lib/common/file/entity/audio",{"_index":392,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["lib/common/file/entity/file",{"_index":1519,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["lib/common/file/entity/file.entity.ts",{"_index":1462,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:22",{"_index":1465,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:26",{"_index":1463,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:29",{"_index":1471,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:32",{"_index":1472,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:35",{"_index":1475,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:38",{"_index":1477,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:41",{"_index":1464,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:44",{"_index":1473,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:51",{"_index":1470,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:55",{"_index":1481,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/gps",{"_index":2031,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["lib/common/file/entity/icc",{"_index":2117,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["lib/common/file/entity/image",{"_index":2141,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["lib/common/file/entity/video",{"_index":3145,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["lib/common/file/file",{"_index":1534,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["lib/common/file/file.constants.ts",{"_index":1489,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{}}}],["lib/common/file/file.constants.ts:22",{"_index":1500,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:31",{"_index":1502,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:33",{"_index":1504,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:35",{"_index":1508,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:37",{"_index":1506,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:39",{"_index":1510,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:41",{"_index":1512,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:45",{"_index":1518,"title":{},"body":{"classes/FileMd.html":{}}}],["lib/common/file/file.module.ts",{"_index":1835,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.module.ts:29",{"_index":1836,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.service.ts",{"_index":1843,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:226",{"_index":1855,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:256",{"_index":1863,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:273",{"_index":1866,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:279",{"_index":1885,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:284",{"_index":1884,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:44",{"_index":1854,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.types.ts",{"_index":266,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/entity/media",{"_index":2393,"title":{},"body":{"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["lib/common/media/entity/media.entity.ts",{"_index":2374,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:27",{"_index":2380,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:31",{"_index":2375,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:35",{"_index":2382,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:38",{"_index":2386,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:41",{"_index":2379,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:48",{"_index":2381,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:52",{"_index":2383,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/media.constants.ts",{"_index":3742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/media/media.module.ts",{"_index":2443,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.module.ts:31",{"_index":2444,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.types.ts",{"_index":2340,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/media.types.ts:100",{"_index":2420,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:103",{"_index":2421,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:106",{"_index":2422,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:109",{"_index":2423,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:114",{"_index":2369,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:117",{"_index":2367,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:120",{"_index":2371,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:124",{"_index":2373,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:128",{"_index":2368,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:131",{"_index":2370,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:134",{"_index":2372,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:139",{"_index":2401,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:142",{"_index":2398,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:146",{"_index":2399,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:149",{"_index":2400,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:152",{"_index":2402,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:155",{"_index":2403,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:158",{"_index":2404,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:161",{"_index":2405,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:165",{"_index":2433,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:167",{"_index":2435,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:172",{"_index":2437,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:174",{"_index":2436,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:176",{"_index":2441,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:178",{"_index":2440,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:180",{"_index":2432,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:188",{"_index":2439,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:76",{"_index":2450,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:79",{"_index":2451,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:83",{"_index":2452,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:86",{"_index":2453,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:89",{"_index":2454,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:92",{"_index":2456,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:95",{"_index":2455,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/process/abstract",{"_index":94,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["lib/common/process/default/tmp",{"_index":3013,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["lib/common/process/entity/process.log.entity.ts",{"_index":2752,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:32",{"_index":2754,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:35",{"_index":2753,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:39",{"_index":2757,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:43",{"_index":2760,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:46",{"_index":2756,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts",{"_index":2921,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:35",{"_index":2922,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:48",{"_index":2929,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:52",{"_index":2926,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:56",{"_index":2925,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:60",{"_index":2924,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:63",{"_index":2928,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:67",{"_index":2930,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/process",{"_index":2765,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lib/common/process/process.constants.ts",{"_index":3338,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/common/process/process.module.ts",{"_index":2864,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.module.ts:43",{"_index":2866,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.types.ts",{"_index":2742,"title":{},"body":{"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{}}}],["lib/common/process/process.types.ts:21",{"_index":2745,"title":{},"body":{"classes/ProcessLog.html":{}}}],["lib/common/process/process.types.ts:22",{"_index":2744,"title":{},"body":{"classes/ProcessLog.html":{}}}],["lib/common/process/process.types.ts:23",{"_index":2748,"title":{},"body":{"classes/ProcessLog.html":{}}}],["lib/common/process/process.types.ts:24",{"_index":2749,"title":{},"body":{"classes/ProcessLog.html":{}}}],["lib/common/process/process.types.ts:25",{"_index":2747,"title":{},"body":{"classes/ProcessLog.html":{}}}],["lib/common/user/abstract",{"_index":212,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["lib/common/user/entity/user",{"_index":3118,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["lib/common/user/entity/user.entity.ts",{"_index":3083,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:38",{"_index":3089,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:41",{"_index":3085,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:44",{"_index":3093,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:47",{"_index":3092,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:51",{"_index":3086,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:55",{"_index":3094,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:59",{"_index":3088,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:63",{"_index":3091,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:67",{"_index":3084,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:71",{"_index":3095,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:75",{"_index":3096,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.subscriber.ts",{"_index":3130,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:31",{"_index":3134,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:33",{"_index":3139,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:37",{"_index":3136,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:42",{"_index":3138,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/user",{"_index":611,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["lib/common/user/user.constants.ts",{"_index":3796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/user/user.module.ts",{"_index":3111,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.module.ts:25",{"_index":3112,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.types.ts",{"_index":3064,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/user/user.types.ts:100",{"_index":3128,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:102",{"_index":3124,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:104",{"_index":3127,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:45",{"_index":3115,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:48",{"_index":3116,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:51",{"_index":3117,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:56",{"_index":3076,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:59",{"_index":3078,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:62",{"_index":3074,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:65",{"_index":3075,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:68",{"_index":3077,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:71",{"_index":3079,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:75",{"_index":3081,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:78",{"_index":3072,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:81",{"_index":3073,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:84",{"_index":3080,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:87",{"_index":3082,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:96",{"_index":3126,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:98",{"_index":3125,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/xml",{"_index":3171,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts",{"_index":2984,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts:18",{"_index":2987,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:19",{"_index":2985,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:20",{"_index":2986,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/decorators/access",{"_index":3711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/current",{"_index":3740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/for",{"_index":3715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/exceptions/bad",{"_index":601,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["lib/shared/exceptions/forbidden",{"_index":1995,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["lib/shared/exceptions/invalid",{"_index":2146,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts",{"_index":2699,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts:20",{"_index":2702,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/not",{"_index":2718,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["lib/shared/exceptions/too",{"_index":3053,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["lib/shared/exceptions/unauthorized",{"_index":3062,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["lib/shared/filters/db",{"_index":1128,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["lib/shared/guards/abstract",{"_index":6,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts",{"_index":432,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts:28",{"_index":439,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/lite",{"_index":2168,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["lib/shared/guards/roles.guard.ts",{"_index":2989,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:30",{"_index":2994,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:33",{"_index":2995,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts",{"_index":1195,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:32",{"_index":1205,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:35",{"_index":1210,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/modules/cache/cache.constants.ts",{"_index":3789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/cache/cache.module.ts",{"_index":671,"title":{},"body":{"modules/CacheModule.html":{}}}],["lib/shared/modules/cache/cache.types.ts",{"_index":693,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:18",{"_index":706,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:20",{"_index":713,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:22",{"_index":708,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:24",{"_index":718,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:30",{"_index":702,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:32",{"_index":715,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:34",{"_index":704,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:36",{"_index":710,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/mock/mock",{"_index":2548,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["lib/shared/modules/cache/redis",{"_index":2936,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["lib/shared/modules/cache/redis.module.ts",{"_index":2974,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/cache/redis.module.ts:26",{"_index":2975,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/category/category.constants.ts",{"_index":3725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/category/category.module.ts",{"_index":822,"title":{},"body":{"modules/CategoryModule.html":{}}}],["lib/shared/modules/category/category.service.ts",{"_index":843,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:29",{"_index":850,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:42",{"_index":854,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:56",{"_index":860,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/entity/category",{"_index":828,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts",{"_index":771,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:37",{"_index":786,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:41",{"_index":781,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:44",{"_index":803,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:48",{"_index":791,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:55",{"_index":796,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:58",{"_index":785,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:62",{"_index":801,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:65",{"_index":798,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:68",{"_index":778,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts",{"_index":2160,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:25",{"_index":2163,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:29",{"_index":2161,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:33",{"_index":2164,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:36",{"_index":2162,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/locale",{"_index":2209,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["lib/shared/modules/locale/entity/localized",{"_index":2253,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["lib/shared/modules/locale/locale.module.ts",{"_index":2176,"title":{},"body":{"modules/LocaleModule.html":{}}}],["lib/shared/modules/locale/locale.service.ts",{"_index":2183,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:25",{"_index":2188,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:35",{"_index":2191,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.types.ts",{"_index":2155,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["lib/shared/modules/log/log.constants.ts",{"_index":3784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/log/log.module.ts",{"_index":2267,"title":{},"body":{"modules/LogModule.html":{}}}],["lib/shared/modules/log/log.service.ts",{"_index":2271,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:14",{"_index":2285,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:19",{"_index":2298,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:24",{"_index":2296,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:29",{"_index":2282,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:34",{"_index":2292,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:46",{"_index":2294,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:60",{"_index":2286,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:9",{"_index":2290,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/messages",{"_index":2488,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/mock/mock.storage.ts",{"_index":2618,"title":{},"body":{"classes/MockStorage.html":{}}}],["lib/shared/modules/mock/mock.storage.ts:22",{"_index":2621,"title":{},"body":{"classes/MockStorage.html":{}}}],["lib/shared/modules/mock/mock.storage.ts:27",{"_index":2625,"title":{},"body":{"classes/MockStorage.html":{}}}],["lib/shared/modules/mock/mock.storage.ts:43",{"_index":2623,"title":{},"body":{"classes/MockStorage.html":{}}}],["lib/shared/modules/mock/mock.storage.ts:49",{"_index":2628,"title":{},"body":{"classes/MockStorage.html":{}}}],["lib/shared/modules/mock/mock.storage.ts:54",{"_index":2627,"title":{},"body":{"classes/MockStorage.html":{}}}],["lib/shared/modules/ms",{"_index":2469,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts",{"_index":2720,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:12",{"_index":2739,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:15",{"_index":2740,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:18",{"_index":2737,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:21",{"_index":2734,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:24",{"_index":2724,"title":{},"body":{"classes/PageableData.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:8",{"_index":2736,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/warlock/warlock.constants.ts",{"_index":3805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/warlock/warlock.module.ts",{"_index":3156,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lib/shared/modules/warlock/warlock.types.ts",{"_index":3670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/shared/pipes/not",{"_index":2704,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["lib/shared/transformers/simple",{"_index":3791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts",{"_index":1142,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts:31",{"_index":1144,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["licensable",{"_index":3482,"title":{},"body":{"license.html":{}}}],["license",{"_index":465,"title":{"license.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["licenses",{"_index":3498,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":3358,"title":{},"body":{"license.html":{}}}],["lifetime",{"_index":3823,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["lightweight",{"_index":2169,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["limit",{"_index":991,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["limitation",{"_index":3567,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":492,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["limited",{"_index":3393,"title":{},"body":{"license.html":{}}}],["line",{"_index":1049,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["line.split",{"_index":1053,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().length",{"_index":1051,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().startswith",{"_index":1050,"title":{},"body":{"injectables/ConfigService.html":{}}}],["linenumber",{"_index":2288,"title":{},"body":{"classes/LogService.html":{}}}],["lines",{"_index":1047,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["lines.length",{"_index":2323,"title":{},"body":{"classes/LogService.html":{}}}],["lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d",{"_index":2326,"title":{},"body":{"classes/LogService.html":{}}}],["link",{"_index":3422,"title":{},"body":{"license.html":{}}}],["listens",{"_index":2211,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["listento",{"_index":3133,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lists",{"_index":3439,"title":{},"body":{"license.html":{}}}],["liteauthguard",{"_index":2167,"title":{"injectables/LiteAuthGuard.html":{}},"body":{"injectables/LiteAuthGuard.html":{}}}],["literal",{"_index":726,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/ConfigService.html":{},"classes/LogService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3489,"title":{},"body":{"license.html":{}}}],["local.properties",{"_index":3739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local_properties_file_name",{"_index":968,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localcontent",{"_index":936,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontent.split(\"\\n",{"_index":1120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontentlines",{"_index":1119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["locale.service",{"_index":2181,"title":{},"body":{"modules/LocaleModule.html":{}}}],["locale.types",{"_index":2165,"title":{},"body":{"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["locale/entity/localized",{"_index":808,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["localemodule",{"_index":2171,"title":{"modules/LocaleModule.html":{}},"body":{"modules/LocaleModule.html":{},"modules.html":{},"overview.html":{}}}],["localeservice",{"_index":2175,"title":{"injectables/LocaleService.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"overview.html":{}}}],["localesubscriber",{"_index":2208,"title":{"injectables/LocaleSubscriber.html":{}},"body":{"injectables/LocaleSubscriber.html":{}}}],["localized",{"_index":2235,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmedia",{"_index":2158,"title":{"interfaces/LocalizedMedia.html":{}},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmediaentity",{"_index":2179,"title":{"entities/LocalizedMediaEntity.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{}}}],["localizedmediaproperties",{"_index":2251,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediaproperties.length",{"_index":2252,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediarep",{"_index":2187,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localizedstring",{"_index":1227,"title":{"interfaces/LocalizedString.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["localizedstringentity",{"_index":787,"title":{"entities/LocalizedStringEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["localizedstringproperties",{"_index":2238,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringproperties.length",{"_index":2243,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringrep",{"_index":2186,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localkey",{"_index":1125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline",{"_index":1122,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.split",{"_index":1126,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().length",{"_index":1124,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().startswith",{"_index":1123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiescontent",{"_index":1035,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiespath",{"_index":1032,"title":{},"body":{"injectables/ConfigService.html":{}}}],["located",{"_index":2320,"title":{},"body":{"classes/LogService.html":{}}}],["lock",{"_index":3163,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockcode",{"_index":3165,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockexec",{"_index":2786,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lockkey",{"_index":3162,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockkey}:${lockcode",{"_index":3168,"title":{},"body":{"modules/WarlockModule.html":{}}}],["locklifetime",{"_index":3160,"title":{},"body":{"modules/WarlockModule.html":{}}}],["log",{"_index":2272,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":2289,"title":{},"body":{"classes/LogService.html":{}}}],["log.constants",{"_index":2270,"title":{},"body":{"modules/LogModule.html":{}}}],["log.service",{"_index":2269,"title":{},"body":{"modules/LogModule.html":{}}}],["log/log.constants",{"_index":674,"title":{},"body":{"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["log/log.module",{"_index":673,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/WarlockModule.html":{}}}],["logger",{"_index":21,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2223,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["login",{"_index":228,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["loginpayload",{"_index":536,"title":{"classes/LoginPayload.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["loginregex",{"_index":236,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginregex.test(login",{"_index":240,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginstance",{"_index":96,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel",{"_index":146,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":185,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.error",{"_index":173,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.log",{"_index":134,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel.verbose",{"_index":187,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.warn",{"_index":183,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["logmodule",{"_index":501,"title":{"modules/LogModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["logs",{"_index":2751,"title":{},"body":{"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["logservice",{"_index":2268,"title":{"classes/LogService.html":{}},"body":{"modules/LogModule.html":{},"classes/LogService.html":{}}}],["longitude",{"_index":382,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["loss",{"_index":3595,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3602,"title":{},"body":{"license.html":{}}}],["ls",{"_index":2197,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.code",{"_index":2200,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.id",{"_index":2204,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.lang",{"_index":2198,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.value",{"_index":2199,"title":{},"body":{"injectables/LocaleService.html":{}}}],["m",{"_index":2311,"title":{},"body":{"classes/LogService.html":{}}}],["m.endswith",{"_index":2313,"title":{},"body":{"classes/LogService.html":{}}}],["m.length",{"_index":2315,"title":{},"body":{"classes/LogService.html":{}}}],["m.startswith",{"_index":2312,"title":{},"body":{"classes/LogService.html":{}}}],["m.substring(1",{"_index":2314,"title":{},"body":{"classes/LogService.html":{}}}],["made",{"_index":3057,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"license.html":{}}}],["mailing",{"_index":3438,"title":{},"body":{"license.html":{}}}],["main",{"_index":3807,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["maincontent",{"_index":938,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontent.split(\"\\n",{"_index":1118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontentlines",{"_index":1117,"title":{},"body":{"injectables/ConfigService.html":{}}}],["make",{"_index":335,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["makeimagefromtext",{"_index":2042,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["makeimagefromtext(text",{"_index":2058,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["making",{"_index":3391,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":3600,"title":{},"body":{"license.html":{}}}],["managed",{"_index":3442,"title":{},"body":{"license.html":{}}}],["management",{"_index":3375,"title":{},"body":{"license.html":{}}}],["manager",{"_index":247,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{}}}],["manager.findone(this.type",{"_index":256,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["manager.service",{"_index":137,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["manager.service.ts",{"_index":2766,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:107",{"_index":2801,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:113",{"_index":2797,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:118",{"_index":2788,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:126",{"_index":2809,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:130",{"_index":2793,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:135",{"_index":2795,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:142",{"_index":2791,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:150",{"_index":2799,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:39",{"_index":2785,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:51",{"_index":2798,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:73",{"_index":2803,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:83",{"_index":2805,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:93",{"_index":2807,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manages",{"_index":2004,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["managing",{"_index":887,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["manufacturer\"]?.description",{"_index":1724,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["many",{"_index":3054,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["manytomany",{"_index":805,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined",{"_index":788,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":833,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":806,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":783,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":1212,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["map((part",{"_index":1059,"title":{},"body":{"injectables/ConfigService.html":{}}}],["marked",{"_index":3448,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3558,"title":{},"body":{"license.html":{}}}],["match",{"_index":2945,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["matches",{"_index":2325,"title":{},"body":{"classes/LogService.html":{}}}],["matches.length",{"_index":2327,"title":{},"body":{"classes/LogService.html":{}}}],["matches[1",{"_index":2331,"title":{},"body":{"classes/LogService.html":{}}}],["matches[2].split(\"/\").slice",{"_index":2329,"title":{},"body":{"classes/LogService.html":{}}}],["matches[3",{"_index":2332,"title":{},"body":{"classes/LogService.html":{}}}],["matching",{"_index":91,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["max",{"_index":2726,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["max(1000",{"_index":2729,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["maxaperture",{"_index":355,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["maxdepth",{"_index":1284,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["maximum",{"_index":857,"title":{},"body":{"injectables/CategoryService.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["md",{"_index":1543,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio",{"_index":1595,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.album",{"_index":1647,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.artist",{"_index":1649,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.bitrate",{"_index":1604,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codec",{"_index":1598,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codecprofile",{"_index":1640,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.container",{"_index":1596,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.duration",{"_index":1600,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.genre",{"_index":1653,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.label",{"_index":1655,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.numberofchannels",{"_index":1602,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.samplerate",{"_index":1636,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.title",{"_index":1645,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.tool",{"_index":1642,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.year",{"_index":1651,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif",{"_index":1739,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.aperture",{"_index":1776,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.brightness",{"_index":1778,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.colorspace",{"_index":1794,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.compositeimage",{"_index":1828,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.contrast",{"_index":1816,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.customrendered",{"_index":1806,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.digitalzoomratio",{"_index":1812,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exififdpointer",{"_index":1756,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exifversion",{"_index":1770,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposurebias",{"_index":1780,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuremode",{"_index":1808,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposureprogram",{"_index":1766,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuretime",{"_index":1762,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flash",{"_index":1788,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flashpixversion",{"_index":1792,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.fnumber",{"_index":1764,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.focallength",{"_index":1790,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.gpsinfoifdpointer",{"_index":1760,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityifdpointer",{"_index":1800,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityindex",{"_index":1830,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityversion",{"_index":1832,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.isospeedratings",{"_index":1768,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmake",{"_index":1824,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmodel",{"_index":1826,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.make",{"_index":1740,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.maxaperture",{"_index":1782,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.meteringmode",{"_index":1786,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.model",{"_index":1742,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.offsettime",{"_index":1772,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.orientation",{"_index":1744,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelxdimension",{"_index":1796,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelydimension",{"_index":1798,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionunit",{"_index":1750,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionx",{"_index":1746,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutiony",{"_index":1748,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.saturation",{"_index":1818,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenecapturetype",{"_index":1814,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenetype",{"_index":1804,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sensingmethod",{"_index":1802,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sharpness",{"_index":1820,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.shutterspeedvalue",{"_index":1774,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.software",{"_index":1752,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistance",{"_index":1784,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistancerange",{"_index":1822,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.whitebalance",{"_index":1810,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.ycbcrpositioning",{"_index":1754,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.ext",{"_index":1572,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps",{"_index":1691,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.altitude",{"_index":1692,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.latitude",{"_index":1696,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.longitude",{"_index":1694,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.hash",{"_index":1568,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc",{"_index":1699,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.connectionspace",{"_index":1708,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemanufacturer",{"_index":1722,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemodelnumber",{"_index":1725,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.icccopyright",{"_index":1736,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccdescription",{"_index":1734,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccprofiledate",{"_index":1711,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccsignature",{"_index":1717,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.primaryplatform",{"_index":1719,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassname",{"_index":1703,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassvalue",{"_index":1706,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profilecreator",{"_index":1732,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileversion",{"_index":1700,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentname",{"_index":1727,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentvalue",{"_index":1730,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image",{"_index":1661,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bitdepth",{"_index":1678,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bps",{"_index":1662,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colorcomponents",{"_index":1671,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colortype",{"_index":1681,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.compression",{"_index":1684,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.datetime",{"_index":1716,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.filter",{"_index":1686,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.height",{"_index":1666,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.interlace",{"_index":1688,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.subsampling",{"_index":1674,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.width",{"_index":1669,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime",{"_index":1570,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"audio",{"_index":1576,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"image",{"_index":1574,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"video",{"_index":1578,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video",{"_index":1607,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.bitrate",{"_index":1616,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.codec",{"_index":1608,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorrange",{"_index":1624,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorspace",{"_index":1626,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.container",{"_index":1610,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.displayaspectratio",{"_index":1622,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.duration",{"_index":1618,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.framerate",{"_index":1628,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.height",{"_index":1614,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.rotate",{"_index":1630,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.sampleaspectratio",{"_index":1620,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.width",{"_index":1612,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["mean",{"_index":3354,"title":{},"body":{"license.html":{}}}],["means",{"_index":3369,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":3396,"title":{},"body":{"license.html":{}}}],["media",{"_index":281,"title":{"interfaces/Media.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["media.entity",{"_index":2180,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaFileEntity.html":{}}}],["media.entity.ts",{"_index":2254,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:31",{"_index":2256,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:35",{"_index":2255,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:38",{"_index":2257,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:41",{"_index":2258,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.service",{"_index":2446,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.types",{"_index":2389,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["media/entity/media.entity",{"_index":1458,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/UserEntity.html":{}}}],["media/media.module",{"_index":3305,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["media/media.types",{"_index":282,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["media_relations",{"_index":3694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media_type_relations",{"_index":3695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediadto",{"_index":2357,"title":{"classes/MediaDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaentity",{"_index":782,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{}}}],["mediaext",{"_index":2348,"title":{"interfaces/MediaExt.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaextentity",{"_index":2392,"title":{"entities/MediaExtEntity.html":{}},"body":{"entities/MediaExtEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["mediafile",{"_index":2341,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafiledto",{"_index":2358,"title":{"classes/MediaFileDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafileentity",{"_index":2376,"title":{"entities/MediaFileEntity.html":{}},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{}}}],["mediaformat",{"_index":2350,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatdto",{"_index":2356,"title":{"classes/MediaFormatDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatentity",{"_index":2408,"title":{"entities/MediaFormatEntity.html":{}},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["mediamanager",{"_index":2359,"title":{"classes/MediaManager.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediamodule",{"_index":2442,"title":{"modules/MediaModule.html":{}},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["mediamodule.forroot",{"_index":3300,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["mediamoduleoptions",{"_index":2366,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediarow",{"_index":3266,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediaservice",{"_index":2445,"title":{},"body":{"modules/MediaModule.html":{}}}],["mediatype",{"_index":2342,"title":{"interfaces/MediaType.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypedto",{"_index":2355,"title":{"classes/MediaTypeDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypeentity",{"_index":2384,"title":{"entities/MediaTypeEntity.html":{}},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["medium",{"_index":3503,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3504,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3568,"title":{},"body":{"license.html":{}}}],["merely",{"_index":3421,"title":{},"body":{"license.html":{}}}],["mergedcontent",{"_index":1121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent",{"_index":904,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent(maincontent",{"_index":935,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":132,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/LogService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["messagebus",{"_index":2468,"title":{"interfaces/MessageBus.html":{}},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["messages",{"_index":2224,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["messages_broker",{"_index":2505,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["messagesbroker",{"_index":2487,"title":{"interfaces/MessagesBroker.html":{}},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["messagesbrokermodule",{"_index":2501,"title":{"modules/MessagesBrokerModule.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesbrokerservice",{"_index":2508,"title":{"injectables/MessagesBrokerService.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["metaaudio",{"_index":1961,"title":{},"body":{"injectables/FileService.html":{}}}],["metadata",{"_index":293,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{}}}],["metadata.entity",{"_index":1486,"title":{},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["metadata.entity.ts",{"_index":393,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:11",{"_index":404,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:15",{"_index":401,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:16",{"_index":2032,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:19",{"_index":417,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:22",{"_index":1529,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:23",{"_index":415,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:25",{"_index":1522,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:27",{"_index":400,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:28",{"_index":1525,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:31",{"_index":403,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:34",{"_index":2033,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:35",{"_index":419,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:36",{"_index":3149,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:39",{"_index":2120,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:40",{"_index":3152,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:42",{"_index":1524,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:43",{"_index":2122,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:44",{"_index":409,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:47",{"_index":2138,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:48",{"_index":418,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:49",{"_index":1527,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:51",{"_index":2136,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:52",{"_index":398,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:55",{"_index":2133,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:56",{"_index":397,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:59",{"_index":2125,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:60",{"_index":420,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:63",{"_index":1520,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:64",{"_index":410,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:68",{"_index":413,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:7",{"_index":412,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:70",{"_index":1531,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.service",{"_index":1839,"title":{},"body":{"modules/FileModule.html":{}}}],["metadata.service.ts",{"_index":1535,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:115",{"_index":1542,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:137",{"_index":1545,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:58",{"_index":1549,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:82",{"_index":1547,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadataservice",{"_index":1853,"title":{},"body":{"injectables/FileService.html":{}}}],["metagps",{"_index":1957,"title":{},"body":{"injectables/FileService.html":{}}}],["metaimage",{"_index":1959,"title":{},"body":{"injectables/FileService.html":{}}}],["metavideo",{"_index":1963,"title":{},"body":{"injectables/FileService.html":{}}}],["meteringmode",{"_index":357,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["method",{"_index":1857,"title":{},"body":{"injectables/FileService.html":{},"injectables/MockCacheService.html":{}}}],["methodname",{"_index":2287,"title":{},"body":{"classes/LogService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["microservice",{"_index":2675,"title":{},"body":{"classes/MsClient.html":{}}}],["microservices",{"_index":2605,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["middle",{"_index":2113,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["mime",{"_index":296,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["min",{"_index":2727,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1",{"_index":2728,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1)@max(1000)@type(undefined",{"_index":2735,"title":{},"body":{"classes/PageableParams.html":{}}}],["min(1)@type(undefined",{"_index":2738,"title":{},"body":{"classes/PageableParams.html":{}}}],["minutes",{"_index":3826,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["miscellaneous",{"_index":3334,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":2550,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{}}}],["mock/mock.storage",{"_index":2578,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{}}}],["mockcacheservice",{"_index":2547,"title":{"injectables/MockCacheService.html":{}},"body":{"injectables/MockCacheService.html":{}}}],["mocked",{"_index":2571,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["mockmsclient",{"_index":2599,"title":{"classes/MockMsClient.html":{}},"body":{"classes/MockMsClient.html":{}}}],["mockstorage",{"_index":2554,"title":{"classes/MockStorage.html":{}},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{}}}],["mode",{"_index":3264,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["model",{"_index":336,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["modifications",{"_index":3392,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3508,"title":{},"body":{"license.html":{}}}],["modify",{"_index":3532,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3538,"title":{},"body":{"license.html":{}}}],["module",{"_index":445,"title":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/DirectoryStructure.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["module.interface",{"_index":3257,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["modules",{"_index":447,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/cache/cache.types",{"_index":56,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["modules/log/log.constants",{"_index":442,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["montserrat",{"_index":3852,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["more",{"_index":3381,"title":{},"body":{"license.html":{}}}],["mozjpeg",{"_index":3325,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":2601,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["ms.exception",{"_index":607,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts",{"_index":602,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts:20",{"_index":605,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms_client",{"_index":2690,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["ms_exception_id",{"_index":2658,"title":{},"body":{"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["msclient",{"_index":2644,"title":{"classes/MsClient.html":{}},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["msclient(logger",{"_index":2698,"title":{},"body":{"modules/MsClientModule.html":{}}}],["msclientmodule",{"_index":2685,"title":{"modules/MsClientModule.html":{}},"body":{"modules/MsClientModule.html":{},"modules.html":{},"overview.html":{}}}],["msclientoptions",{"_index":2478,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"miscellaneous/typealiases.html":{}}}],["msexception",{"_index":603,"title":{"classes/MsException.html":{}},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":190,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.endswith",{"_index":193,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.length",{"_index":195,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/\\[/g",{"_index":198,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/]/g",{"_index":199,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.startswith",{"_index":192,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.substring(1",{"_index":194,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg_bus",{"_index":2691,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1249,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["music",{"_index":1552,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["musicmd",{"_index":1632,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.album",{"_index":1648,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.artists?.join",{"_index":1650,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.genre?.join",{"_index":1654,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.label?.join",{"_index":1656,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.title",{"_index":1646,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.year",{"_index":1652,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.bitrate",{"_index":1639,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codec",{"_index":1635,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codecprofile",{"_index":1641,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.container",{"_index":1634,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.duration",{"_index":1644,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.numberofchannels",{"_index":1638,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.samplerate",{"_index":1637,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.tool",{"_index":1643,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["myentity",{"_index":2216,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["n",{"_index":203,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["name",{"_index":34,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name.lang",{"_index":3732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["named",{"_index":1250,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["namedcolumn",{"_index":1267,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["names",{"_index":3557,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1080,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["namespacename",{"_index":918,"title":{},"body":{"injectables/ConfigService.html":{}}}],["necessarily",{"_index":3483,"title":{},"body":{"license.html":{}}}],["needs",{"_index":208,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["negligence",{"_index":3582,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":3585,"title":{},"body":{"license.html":{}}}],["nest",{"_index":2274,"title":{},"body":{"classes/LogService.html":{}}}],["nestfactory.createapplicationcontext(configmodule",{"_index":3776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1211,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["nestjs/axios",{"_index":2017,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":50,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/modules/dynamic",{"_index":3256,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/forward",{"_index":3259,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":233,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["nestjs/core",{"_index":2996,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":494,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":2654,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":2869,"title":{},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":645,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":3285,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["new",{"_index":71,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["newrelativepath",{"_index":1185,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["newuser",{"_index":655,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["next",{"_index":1208,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["nextfunction",{"_index":3281,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["node",{"_index":3157,"title":{},"body":{"modules/WarlockModule.html":{},"dependencies.html":{}}}],["node:events",{"_index":1149,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node:fs",{"_index":1147,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node_modules",{"_index":1084,"title":{},"body":{"injectables/ConfigService.html":{}}}],["non",{"_index":3462,"title":{},"body":{"license.html":{}}}],["normalized",{"_index":2057,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normalizes",{"_index":2056,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normally",{"_index":3528,"title":{},"body":{"license.html":{}}}],["note",{"_index":3825,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["notemptypipe",{"_index":2703,"title":{"injectables/NotEmptyPipe.html":{}},"body":{"injectables/NotEmptyPipe.html":{}}}],["notfoundexception",{"_index":642,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{}}}],["notfoundexception(`file",{"_index":1932,"title":{},"body":{"injectables/FileService.html":{}}}],["notfoundexception(`user",{"_index":658,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["notfoundmsexception",{"_index":2717,"title":{"classes/NotFoundMsException.html":{}},"body":{"classes/NotFoundMsException.html":{}}}],["nothing",{"_index":3548,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3405,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3511,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3546,"title":{},"body":{"license.html":{}}}],["now",{"_index":154,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["null",{"_index":88,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["nullable",{"_index":396,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["num",{"_index":2590,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["number",{"_index":250,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"classes/MsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["number\"]?.description",{"_index":1726,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["number_of_channels",{"_index":414,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["numberofchannels",{"_index":276,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["numbers",{"_index":244,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["numberutils",{"_index":2076,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numberutils.generaterandomint",{"_index":2081,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numeric",{"_index":2947,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["obj",{"_index":1550,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.indexof",{"_index":1582,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.map(this.trimproperties",{"_index":1584,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.rows.push(rowobj",{"_index":3223,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.trim",{"_index":1581,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj1",{"_index":3239,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2",{"_index":3238,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2[key",{"_index":3248,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object",{"_index":540,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj1",{"_index":3241,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(obj2",{"_index":3243,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(value).length",{"_index":2715,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["object.values(entity).filter((value",{"_index":2239,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["object_enabled",{"_index":1347,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_priority",{"_index":1349,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_renderer_params",{"_index":1354,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_visibility",{"_index":1356,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objectenabled",{"_index":1256,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectliteral",{"_index":1226,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["objectpriority",{"_index":1254,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrenderer",{"_index":1261,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrendererparams",{"_index":1338,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objects",{"_index":1200,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["objectutils",{"_index":139,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.inspect",{"_index":145,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.sort(cat.children",{"_index":873,"title":{},"body":{"injectables/CategoryService.html":{}}}],["objectvisibility",{"_index":1258,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["obligations",{"_index":3612,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2483,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["obtain",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["occurs",{"_index":2576,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["of(res?.data",{"_index":2617,"title":{},"body":{"classes/MockMsClient.html":{}}}],["offer",{"_index":3477,"title":{},"body":{"license.html":{}}}],["offsettime",{"_index":350,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["onapplicationbootstrap",{"_index":2865,"title":{},"body":{"modules/ProcessModule.html":{}}}],["oncrash",{"_index":100,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["oncrash(error",{"_index":116,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["ondelete",{"_index":1468,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["one",{"_index":3523,"title":{},"body":{"license.html":{}}}],["onetomany",{"_index":1457,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetomany(undefined",{"_index":1439,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetoone",{"_index":1484,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onetoone(undefined",{"_index":1467,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onfinish",{"_index":101,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["onmoduleinit",{"_index":1404,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["onstop",{"_index":102,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["openmode",{"_index":1146,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["operation",{"_index":951,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["optional",{"_index":36,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["options",{"_index":454,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["options.exportservice",{"_index":3308,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.filemanager",{"_index":1841,"title":{},"body":{"modules/FileModule.html":{}}}],["options.filemd",{"_index":1842,"title":{},"body":{"modules/FileModule.html":{}}}],["options.imports",{"_index":3306,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.importservice",{"_index":3307,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.service",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["opts",{"_index":2477,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["opts).subscribe",{"_index":2663,"title":{},"body":{"classes/MsClient.html":{}}}],["order",{"_index":992,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["orientation",{"_index":337,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["origin",{"_index":3563,"title":{},"body":{"license.html":{}}}],["original",{"_index":3418,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":2939,"title":{},"body":{"injectables/RedisCacheService.html":{},"license.html":{}}}],["out",{"_index":670,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"license.html":{},"overview.html":{}}}],["outputpath",{"_index":1913,"title":{},"body":{"injectables/FileService.html":{}}}],["outputpath}/${filename",{"_index":1924,"title":{},"body":{"injectables/FileService.html":{}}}],["outstanding",{"_index":3382,"title":{},"body":{"license.html":{}}}],["overrides",{"_index":3808,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["overview",{"_index":3648,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":3359,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":3378,"title":{},"body":{"license.html":{}}}],["p",{"_index":2307,"title":{},"body":{"classes/LogService.html":{}}}],["p@ssw0rd",{"_index":1304,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["package",{"_index":3309,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":923,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["pageable",{"_index":925,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageabledata",{"_index":973,"title":{"classes/PageableData.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pageabledata(propertieswithvalues",{"_index":1017,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageableparams",{"_index":920,"title":{"classes/PageableParams.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pagesize",{"_index":2723,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["pagination",{"_index":928,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pair",{"_index":1292,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["param",{"_index":585,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["params",{"_index":773,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/MockStorage.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{}}}],["paramshash",{"_index":2631,"title":{},"body":{"classes/MockStorage.html":{}}}],["parent",{"_index":774,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["parsebuffer",{"_index":1551,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsebuffer(buf",{"_index":1633,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(audiomd.duration",{"_index":1601,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(videomd.duration",{"_index":1619,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parseint(process.env.redis_db",{"_index":689,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.redis_port",{"_index":687,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.transport_port",{"_index":2697,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_timeout",{"_index":2671,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_type",{"_index":2695,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parser",{"_index":3186,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["parsestring",{"_index":3193,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsevalue",{"_index":905,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsevalue(value",{"_index":939,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsexmlbody(body",{"_index":3202,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlbody(result",{"_index":3228,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfile(xmldata",{"_index":3225,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfromrequest",{"_index":3277,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsexmlfromrequest(req",{"_index":3278,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["part",{"_index":3518,"title":{},"body":{"license.html":{}}}],["part.touppercase",{"_index":1060,"title":{},"body":{"injectables/ConfigService.html":{}}}],["partial",{"_index":552,"title":{},"body":{"classes/AuthService.html":{}}}],["particular",{"_index":3570,"title":{},"body":{"license.html":{}}}],["parts",{"_index":85,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts.length",{"_index":87,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts[1",{"_index":89,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["party",{"_index":3527,"title":{},"body":{"license.html":{}}}],["passportmodule",{"_index":495,"title":{},"body":{"modules/AuthModule.html":{}}}],["password",{"_index":220,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{}}}],["patch",{"_index":1875,"title":{},"body":{"injectables/FileService.html":{}}}],["patchfromctx",{"_index":2277,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx(ctx",{"_index":2291,"title":{},"body":{"classes/LogService.html":{}}}],["patent",{"_index":3475,"title":{},"body":{"license.html":{}}}],["path",{"_index":287,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["path.basename",{"_index":1044,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.basename(filepath",{"_index":1097,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.dirname(filepath",{"_index":1100,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.extname(file.name",{"_index":1041,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join",{"_index":1033,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["path.join(currentpath",{"_index":1182,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.join(directory",{"_index":1030,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(dirpath",{"_index":1102,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(gensrcpath",{"_index":1107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(relativepath",{"_index":1186,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.normalize(dir",{"_index":1992,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["pattern",{"_index":711,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["payload",{"_index":539,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.id",{"_index":3107,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.login",{"_index":3109,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.password",{"_index":3108,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.roles",{"_index":3110,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["peer",{"_index":3310,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":1664,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["percent",{"_index":3380,"title":{},"body":{"license.html":{}}}],["perform",{"_index":3472,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3555,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":491,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["perpetual",{"_index":3460,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":3517,"title":{},"body":{"license.html":{}}}],["phone",{"_index":3068,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["pipe",{"_index":2706,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pipe(map((data",{"_index":1218,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["pipetransform",{"_index":2714,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pixelxdimension",{"_index":362,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelydimension",{"_index":363,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["placeholder",{"_index":567,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":3524,"title":{},"body":{"license.html":{}}}],["plain",{"_index":1198,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance",{"_index":1214,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance(this.serializer",{"_index":1219,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["platform\"]?.description",{"_index":1721,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["please",{"_index":3058,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["pminitstatus",{"_index":2767,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["pmservice",{"_index":97,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["pngquant",{"_index":3327,"title":{},"body":{"dependencies.html":{}}}],["pointer\"]?.description",{"_index":1759,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["port",{"_index":686,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["possibility",{"_index":3605,"title":{},"body":{"license.html":{}}}],["power",{"_index":3370,"title":{},"body":{"license.html":{}}}],["precision",{"_index":406,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["preferred",{"_index":3390,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":571,"title":{},"body":{"classes/AuthService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["prepare",{"_index":3469,"title":{},"body":{"license.html":{}}}],["preparemessage",{"_index":2278,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage(message",{"_index":2293,"title":{},"body":{"classes/LogService.html":{}}}],["preservechildrenorder",{"_index":3200,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["preview",{"_index":292,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["previewfiles",{"_index":1982,"title":{},"body":{"injectables/FileService.html":{}}}],["previewfilesformat",{"_index":1984,"title":{},"body":{"injectables/FileService.html":{}}}],["previewlang",{"_index":1980,"title":{},"body":{"injectables/FileService.html":{}}}],["previewname",{"_index":1978,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtype",{"_index":1986,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtypeext",{"_index":1988,"title":{},"body":{"injectables/FileService.html":{}}}],["primary",{"_index":1247,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["primary_platform",{"_index":2129,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["primarycolumn",{"_index":1266,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn(\"varchar",{"_index":1335,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1322,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["primarygeneratedcolumn",{"_index":422,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primarygeneratedcolumn({zerofill",{"_index":411,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primaryplatform",{"_index":327,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["printed",{"_index":3641,"title":{},"body":{"license.html":{}}}],["priority",{"_index":775,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["private",{"_index":25,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["private_dir",{"_index":1892,"title":{},"body":{"injectables/FileService.html":{}}}],["privatemedia",{"_index":2361,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["process",{"_index":135,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.command",{"_index":2816,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["process.constants",{"_index":136,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.cwd",{"_index":1026,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.cwd()}/${process.env.config_src_dir",{"_index":3780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":685,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_password",{"_index":692,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_user",{"_index":691,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.transport_host",{"_index":2696,"title":{},"body":{"modules/MsClientModule.html":{}}}],["process.exit(0",{"_index":3783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.getprocessinstance",{"_index":2892,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["process.hasprocessinstance",{"_index":2818,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["process.log.entity",{"_index":2931,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.loglevel",{"_index":147,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.pid",{"_index":201,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.registerprocess",{"_index":142,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.status",{"_index":143,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.status.crashed",{"_index":2935,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.execute",{"_index":2934,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.ready",{"_index":2933,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.ts",{"_index":95,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:121",{"_index":119,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:125",{"_index":120,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:129",{"_index":118,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:133",{"_index":115,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:137",{"_index":123,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:28",{"_index":109,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:29",{"_index":113,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:30",{"_index":111,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:32",{"_index":108,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:38",{"_index":124,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:71",{"_index":125,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:79",{"_index":129,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.types",{"_index":2763,"title":{},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.unit.entity",{"_index":2762,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["process:register",{"_index":3339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:start",{"_index":3341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:stop",{"_index":3342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:unregister",{"_index":3340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processandvalidatepropertiescontent",{"_index":906,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processandvalidatepropertiescontent(filepath",{"_index":941,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processcode",{"_index":2789,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata",{"_index":2830,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.code",{"_index":2832,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.crontab?.length",{"_index":2831,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.enabled",{"_index":2845,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata.status",{"_index":2848,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processeddata",{"_index":916,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata[variablename",{"_index":1069,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue",{"_index":1074,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue};\\n",{"_index":1081,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processes",{"_index":2825,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processinstance",{"_index":2901,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.start",{"_index":2906,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.stop",{"_index":2907,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processlist",{"_index":2828,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processlog",{"_index":2741,"title":{"classes/ProcessLog.html":{}},"body":{"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{}}}],["processlogentity",{"_index":110,"title":{"entities/ProcessLogEntity.html":{}},"body":{"classes/AbstractProcess.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["processlogrep",{"_index":2784,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmanagerservice",{"_index":112,"title":{"injectables/ProcessManagerService.html":{}},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["processmanagerservice.pminitstatus",{"_index":2823,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmodule",{"_index":2857,"title":{"modules/ProcessModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["processregisterservice",{"_index":2863,"title":{"injectables/ProcessRegisterService.html":{}},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"overview.html":{}}}],["processunit",{"_index":2746,"title":{"interfaces/ProcessUnit.html":{}},"body":{"classes/ProcessLog.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitentity",{"_index":2755,"title":{"entities/ProcessUnitEntity.html":{}},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitrep",{"_index":2783,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["product",{"_index":3559,"title":{},"body":{"license.html":{}}}],["profile",{"_index":1713,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["profile_class_name",{"_index":2130,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_class_value",{"_index":2131,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_creator",{"_index":2132,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_version",{"_index":2134,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profileclassname",{"_index":323,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileclassvalue",{"_index":322,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profilecreator",{"_index":332,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileversion",{"_index":321,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["project",{"_index":977,"title":{},"body":{"injectables/ConfigService.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["prominent",{"_index":3510,"title":{},"body":{"license.html":{}}}],["promise",{"_index":114,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise((resolve",{"_index":2579,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise(async",{"_index":2588,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["promise.all",{"_index":1013,"title":{},"body":{"injectables/ConfigService.html":{}}}],["promise.all(filepromises",{"_index":1192,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{},"additional-documentation/properties.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["properties_file_ext_pattern",{"_index":969,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties_file_ext_pattern).slice(1",{"_index":1110,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertiesfiles",{"_index":897,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertieswithvalues",{"_index":1012,"title":{},"body":{"injectables/ConfigService.html":{}}}],["property",{"_index":949,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{}}}],["propertykey",{"_index":1067,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"kp",{"_index":1070,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"local",{"_index":1071,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys",{"_index":993,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys.sort((a",{"_index":997,"title":{},"body":{"injectables/ConfigService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["protecting",{"_index":3833,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["protection",{"_index":580,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["provide",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["provided",{"_index":538,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["providers",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["provides",{"_index":613,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"license.html":{}}}],["providing",{"_index":766,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["proxy",{"_index":2646,"title":{},"body":{"classes/MsClient.html":{}}}],["pubclient",{"_index":2516,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["public",{"_index":288,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["public/private",{"_index":1864,"title":{},"body":{"injectables/FileService.html":{}}}],["public_dir",{"_index":1894,"title":{},"body":{"injectables/FileService.html":{}}}],["publicly",{"_index":3470,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3443,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3367,"title":{},"body":{"license.html":{}}}],["push",{"_index":3265,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["pwd",{"_index":3100,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["qb",{"_index":1928,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.andwhere(`file.public",{"_index":1930,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.getone",{"_index":1931,"title":{},"body":{"injectables/FileService.html":{}}}],["quality",{"_index":2347,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["query",{"_index":1858,"title":{},"body":{"injectables/FileService.html":{},"interfaces/XdbRequest.html":{}}}],["queryfailederror",{"_index":1132,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["r._",{"_index":3222,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["random",{"_index":2047,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["read",{"_index":3196,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["readable",{"_index":3521,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":1176,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(dirpath",{"_index":1193,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(filepath",{"_index":1189,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdirectoryrecursively",{"_index":1175,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["readdirectoryrecursively(tmpdir",{"_index":3041,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["readfile",{"_index":1171,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["readoperatorre",{"_index":3195,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["readrequest",{"_index":1271,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reads",{"_index":890,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ready",{"_index":3343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reason",{"_index":3626,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3560,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":2003,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["recaptchas",{"_index":2006,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["received",{"_index":3451,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3507,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":3639,"title":{},"body":{"license.html":{}}}],["record",{"_index":1586,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["recreate",{"_index":2430,"title":{},"body":{"classes/MediaManager.html":{}}}],["recreate(id",{"_index":2362,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recursive",{"_index":1114,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["redis",{"_index":679,"title":{},"body":{"modules/CacheModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["redis(redisoptions",{"_index":2982,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.module",{"_index":672,"title":{},"body":{"modules/CacheModule.html":{}}}],["redis_client",{"_index":2528,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["rediscacheservice",{"_index":678,"title":{"injectables/RedisCacheService.html":{}},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["redisinstance",{"_index":2976,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":667,"title":{"modules/RedisModule.html":{}},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":681,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["redismodule.redisinstance",{"_index":2977,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisoptions",{"_index":2980,"title":{},"body":{"modules/RedisModule.html":{}}}],["redistributing",{"_index":3575,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":3501,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1234,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["reference.interface",{"_index":3260,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["referenced_entity_name",{"_index":1360,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referenced_table_name",{"_index":1362,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referencedentityname",{"_index":1252,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["referencedtablename",{"_index":1251,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reflect",{"_index":3328,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":2993,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":546,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":577,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_error_msg",{"_index":565,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":551,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":3553,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2639,"title":{},"body":{"classes/MockStorage.html":{}}}],["regex.test(v.key",{"_index":2642,"title":{},"body":{"classes/MockStorage.html":{}}}],["regexp(`^${regexpattern",{"_index":2640,"title":{},"body":{"classes/MockStorage.html":{}}}],["regexpattern",{"_index":2637,"title":{},"body":{"classes/MockStorage.html":{}}}],["register",{"_index":2909,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["register.service",{"_index":2870,"title":{},"body":{"modules/ProcessModule.html":{}}}],["register.service.ts",{"_index":2876,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:105",{"_index":2888,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:33",{"_index":2880,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:55",{"_index":2884,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:66",{"_index":2886,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:75",{"_index":2882,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob",{"_index":2877,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob(processdata",{"_index":2881,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered",{"_index":2904,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered_processes",{"_index":3701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerfont",{"_index":2070,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerfont(capfontpath",{"_index":2104,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerprocess",{"_index":141,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registerprocess(this",{"_index":148,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registration",{"_index":2837,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["reject",{"_index":2660,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(err",{"_index":2973,"title":{},"body":{"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(error",{"_index":2665,"title":{},"body":{"classes/MsClient.html":{}}}],["related",{"_index":561,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"miscellaneous/variables.html":{}}}],["relatedentities",{"_index":2247,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity",{"_index":2248,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity.id",{"_index":2249,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relations",{"_index":651,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ProcessManagerService.html":{}}}],["relationships",{"_index":2214,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relativepath",{"_index":1178,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["remain",{"_index":3419,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2212,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["remove",{"_index":636,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"classes/FileManager.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"classes/MediaManager.html":{},"classes/MockStorage.html":{},"interfaces/XdbRequest.html":{}}}],["remove(id",{"_index":1511,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["remove(key",{"_index":2626,"title":{},"body":{"classes/MockStorage.html":{}}}],["removebyid",{"_index":619,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["removebyid(id",{"_index":634,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removed",{"_index":637,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["removeduplicateobjects",{"_index":3230,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeentity",{"_index":1281,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeentity(target",{"_index":1422,"title":{},"body":{"classes/ExplorerService.html":{}}}],["removeevent",{"_index":2228,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["removeproperty",{"_index":907,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeproperty(key",{"_index":946,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removes",{"_index":948,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["removing",{"_index":1846,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["renderer.entity",{"_index":1383,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["renderer.entity.ts",{"_index":1393,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:33",{"_index":1394,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:37",{"_index":1396,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:41",{"_index":1395,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:50",{"_index":1398,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:57",{"_index":1397,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering_intent_name",{"_index":2135,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["rendering_intent_value",{"_index":2137,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["renderingintentname",{"_index":331,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["renderingintentvalue",{"_index":330,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["replaced",{"_index":3633,"title":{},"body":{"license.html":{}}}],["repository",{"_index":615,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["represent",{"_index":3416,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":3437,"title":{},"body":{"license.html":{}}}],["representing",{"_index":747,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["reproduce",{"_index":3468,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":3564,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":3350,"title":{},"body":{"license.html":{}}}],["req",{"_index":43,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.body",{"_index":3288,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.cookies.accesstoken",{"_index":81,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.cookies?.accesstoken",{"_index":80,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers.authorization",{"_index":84,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers?.authorization",{"_index":82,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers[\"content",{"_index":3286,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"data",{"_index":3291,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"end",{"_index":3292,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req[request_props.accesstoken",{"_index":68,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser",{"_index":76,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser]?.roles",{"_index":3008,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":41,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/BadRequestMsException.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{},"classes/UnauthorizedMsException.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.data",{"_index":2094,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.id",{"_index":2093,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request[request_props.accesstoken",{"_index":3714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request[request_props.currentuser",{"_index":3741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_props",{"_index":58,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":3055,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["required",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["res",{"_index":868,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/LocaleService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["res.children?.foreach((cat",{"_index":870,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.foreach((v",{"_index":2596,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["res.push(ls",{"_index":2207,"title":{},"body":{"injectables/LocaleService.html":{}}}],["reset",{"_index":669,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["resetallprocessstatuses",{"_index":2774,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resolutionunit",{"_index":340,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionx",{"_index":338,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutiony",{"_index":339,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolve",{"_index":2589,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["resolve(body",{"_index":3229,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["resolve(keys",{"_index":2970,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["resolve(null",{"_index":2594,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["resolve(num",{"_index":2593,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["resolve(res?.data",{"_index":2581,"title":{},"body":{"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{}}}],["resolve(result",{"_index":2664,"title":{},"body":{"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolve(result.length",{"_index":2598,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["resolve(true",{"_index":2585,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["resolves",{"_index":542,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["resolving",{"_index":2011,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["response",{"_index":758,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{}}}],["response.status(502).json",{"_index":1139,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["response?.data?.success",{"_index":2030,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["responsibility",{"_index":3618,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":886,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["restriction.entity.ts",{"_index":829,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:32",{"_index":838,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:36",{"_index":837,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:40",{"_index":834,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:43",{"_index":836,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["result",{"_index":755,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"license.html":{}}}],["result.push(v.key",{"_index":2597,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["result.schema.push(obj",{"_index":3224,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["result[key",{"_index":1588,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["result[newrelativepath",{"_index":1188,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["result[relativepath",{"_index":1190,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["resulting",{"_index":3395,"title":{},"body":{"license.html":{}}}],["results",{"_index":90,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["retain",{"_index":3514,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":895,"title":{},"body":{"injectables/ConfigService.html":{}}}],["retrieve",{"_index":2564,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["retrieves",{"_index":922,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["return",{"_index":77,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":750,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["returns",{"_index":38,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["revisions",{"_index":3413,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":2048,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rights",{"_index":3614,"title":{},"body":{"license.html":{}}}],["risks",{"_index":3577,"title":{},"body":{"license.html":{}}}],["rm(dir",{"_index":1908,"title":{},"body":{"injectables/FileService.html":{}}}],["role",{"_index":2990,"title":{},"body":{"guards/RolesGuard.html":{}}}],["role.entity",{"_index":841,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["role.entity.ts",{"_index":3119,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:32",{"_index":3120,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:36",{"_index":3121,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:40",{"_index":3122,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["roles",{"_index":2983,"title":{"classes/Roles.html":{}},"body":{"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["roles.decorator",{"_index":3001,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.decorator.ts",{"_index":3676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.indexof(role.code",{"_index":3011,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.name",{"_index":3803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.name.lang",{"_index":3804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.root",{"_index":3010,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["roles.save",{"_index":3101,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["rolesguard",{"_index":2988,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{}}}],["root",{"_index":856,"title":{},"body":{"injectables/CategoryService.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["roottoken",{"_index":3192,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":388,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["route",{"_index":3722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":3213,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowid",{"_index":1283,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["rowobj",{"_index":3214,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname",{"_index":3217,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname].values",{"_index":3220,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rows",{"_index":3211,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["royalty",{"_index":3465,"title":{},"body":{"license.html":{}}}],["rpcexception",{"_index":2700,"title":{},"body":{"classes/MsException.html":{}}}],["rtexp",{"_index":1312,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["rxjs",{"_index":1213,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{},"dependencies.html":{}}}],["safedeserialize",{"_index":2512,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safedeserialize(data",{"_index":2518,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize",{"_index":2513,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize(data",{"_index":2520,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["same",{"_index":3640,"title":{},"body":{"license.html":{}}}],["sample\"]?.value",{"_index":1665,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sample_aspect_ratio",{"_index":3151,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["sample_rate",{"_index":416,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["sampleaspectratio",{"_index":384,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["samplerate",{"_index":277,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saturation",{"_index":373,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saved",{"_index":1873,"title":{},"body":{"injectables/FileService.html":{}}}],["saveentitydata",{"_index":1280,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata(target",{"_index":1424,"title":{},"body":{"classes/ExplorerService.html":{}}}],["saves",{"_index":1869,"title":{},"body":{"injectables/FileService.html":{}}}],["scale",{"_index":408,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["scanforpropertiesfiles",{"_index":908,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles(directory",{"_index":953,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanning",{"_index":932,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scenecapturetype",{"_index":371,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenetype",{"_index":366,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["schedulemodule",{"_index":2868,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulemodule.forroot",{"_index":2874,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulerregistry",{"_index":2879,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["schema",{"_index":3203,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["schema.ts",{"_index":3678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":858,"title":{},"body":{"injectables/CategoryService.html":{}}}],["seconds",{"_index":2562,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secret",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secretkey",{"_index":2025,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["section",{"_index":1269,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["section_enabled",{"_index":1364,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_priority",{"_index":1366,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_renderer_params",{"_index":1369,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_visibility",{"_index":1371,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sectionenabled",{"_index":1255,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionpriority",{"_index":1253,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrenderer",{"_index":1259,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrendererparams",{"_index":1339,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sections",{"_index":3355,"title":{},"body":{"license.html":{}}}],["sectionvisibility",{"_index":1257,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["see",{"_index":487,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sell",{"_index":3478,"title":{},"body":{"license.html":{}}}],["send",{"_index":2474,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["send(pattern",{"_index":2484,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["sends",{"_index":2614,"title":{},"body":{"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["sensingmethod",{"_index":365,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sent",{"_index":3436,"title":{},"body":{"license.html":{}}}],["separable",{"_index":3420,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3551,"title":{},"body":{"license.html":{}}}],["serializer",{"_index":1206,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["service",{"_index":455,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"license.html":{}}}],["services",{"_index":2619,"title":{},"body":{"classes/MockStorage.html":{}}}],["set",{"_index":700,"title":{},"body":{"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"injectables/RedisCacheService.html":{}}}],["set(key",{"_index":716,"title":{},"body":{"classes/CacheService.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"injectables/RedisCacheService.html":{}}}],["setaudiomd",{"_index":1536,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setaudiomd(md",{"_index":1541,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd",{"_index":1537,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd(md",{"_index":1544,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setmetadata(allowedformetadatakey",{"_index":3717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprocessunitstatus",{"_index":2775,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setprocessunitstatus(code",{"_index":2800,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setproperty",{"_index":909,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setproperty(item",{"_index":956,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sets",{"_index":958,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["setstatus",{"_index":103,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus(status",{"_index":121,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setting",{"_index":2957,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["settings",{"_index":3817,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["setvideomd",{"_index":1538,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setvideomd(md",{"_index":1546,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["shall",{"_index":3353,"title":{},"body":{"license.html":{}}}],["shared/constants",{"_index":3104,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["shared/modules/cache/cache.module",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/cache/cache.types",{"_index":505,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/locale/entity/localized",{"_index":1332,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["shared/modules/locale/locale.types",{"_index":1228,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["shared/modules/log/log.constants",{"_index":972,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/log/log.module",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/messages",{"_index":2814,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/pageable/pageable.types",{"_index":974,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["shared/modules/warlock/warlock.constants",{"_index":2812,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/warlock/warlock.module",{"_index":2872,"title":{},"body":{"modules/ProcessModule.html":{}}}],["shared/modules/warlock/warlock.types",{"_index":2813,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/transformers/simple",{"_index":1333,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["shared/utils/files.utils",{"_index":1556,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/utils/number.utils",{"_index":2077,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/object.utils",{"_index":140,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["shared/utils/string.utils",{"_index":2075,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/transform.utils",{"_index":1300,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["shares",{"_index":3383,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":3330,"title":{},"body":{"dependencies.html":{}}}],["sharpness",{"_index":374,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutterspeedvalue",{"_index":351,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["side",{"_index":760,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":3820,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["signature\"]?.description",{"_index":1718,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["signoptions",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplejsontransformer",{"_index":795,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":290,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["skip",{"_index":2835,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["software",{"_index":341,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sole",{"_index":3617,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3571,"title":{},"body":{"license.html":{}}}],["sort",{"_index":847,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["sort(cat",{"_index":859,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sortedkeys",{"_index":996,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.length",{"_index":1008,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.slice(start",{"_index":1011,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sorting",{"_index":926,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortorder",{"_index":2731,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["source.pipe",{"_index":2669,"title":{},"body":{"classes/MsClient.html":{}}}],["space\"]?.description",{"_index":1710,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["special",{"_index":3589,"title":{},"body":{"license.html":{}}}],["specialization",{"_index":2001,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["specific",{"_index":488,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["specified",{"_index":556,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["split",{"_index":1058,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src",{"_index":3737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.config",{"_index":508,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/captcha.config",{"_index":2020,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["src/file.config",{"_index":1891,"title":{},"body":{"injectables/FileService.html":{}}}],["src/kp.config",{"_index":3035,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stack",{"_index":2322,"title":{},"body":{"classes/LogService.html":{},"classes/MsException.html":{}}}],["stacktrace",{"_index":2316,"title":{},"body":{"classes/LogService.html":{}}}],["stacktrace.split(\"\\n",{"_index":2318,"title":{},"body":{"classes/LogService.html":{}}}],["start",{"_index":104,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":3344,"title":{"index.html":{},"license.html":{}},"body":{}}],["startprocess",{"_index":2776,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["startprocess(code",{"_index":2802,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["startprocess(processdata",{"_index":2883,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["state",{"_index":3545,"title":{},"body":{"license.html":{}}}],["stated",{"_index":3476,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3539,"title":{},"body":{"license.html":{}}}],["static",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["static/tmp",{"_index":3812,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stating",{"_index":3512,"title":{},"body":{"license.html":{}}}],["stats",{"_index":1183,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["stats.filescount",{"_index":3044,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.folderscount",{"_index":3045,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.isdirectory",{"_index":1187,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["status",{"_index":122,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["status.execute",{"_index":150,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["status.ready",{"_index":2856,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stop",{"_index":105,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["stoppage",{"_index":3597,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":177,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["stopprocess",{"_index":2777,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stopprocess(code",{"_index":2804,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["stopprocess(processdata",{"_index":2885,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["storage",{"_index":982,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"injectables/RedisCacheService.html":{}}}],["store",{"_index":3814,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stores",{"_index":892,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["storing",{"_index":3724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stream",{"_index":2964,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"data",{"_index":2966,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"end",{"_index":2969,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"error",{"_index":2971,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["string",{"_index":45,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["string.entity",{"_index":809,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["string.entity.ts",{"_index":2261,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:30",{"_index":2263,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:34",{"_index":2262,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:37",{"_index":2264,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:40",{"_index":2265,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string[]).push(file",{"_index":1191,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["strings",{"_index":2570,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["stringutils",{"_index":2074,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stringutils.generaterandomstring",{"_index":2079,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stub",{"_index":2559,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["subclient",{"_index":2511,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["subject",{"_index":3456,"title":{},"body":{"license.html":{}}}],["subjectdistance",{"_index":356,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subjectdistancerange",{"_index":375,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sublicense",{"_index":3473,"title":{},"body":{"license.html":{}}}],["submission",{"_index":3542,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3430,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":3428,"title":{},"body":{"license.html":{}}}],["subsampling",{"_index":314,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subscribe",{"_index":2491,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribe(chanel",{"_index":2496,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscriber",{"_index":3141,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts",{"_index":213,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:25",{"_index":217,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:27",{"_index":227,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:36",{"_index":224,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:47",{"_index":2222,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:59",{"_index":219,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:69",{"_index":2229,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscribers",{"_index":2226,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{}}}],["subsequently",{"_index":3452,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":2941,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["successful",{"_index":952,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["successfully",{"_index":559,"title":{},"body":{"classes/AuthService.html":{}}}],["such",{"_index":2215,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"license.html":{}}}],["super",{"_index":444,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"classes/MsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{}}}],["super(httpstatus.bad_request",{"_index":608,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["super(httpstatus.forbidden",{"_index":1996,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["super(httpstatus.not_found",{"_index":2719,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["super(httpstatus.unauthorized",{"_index":2147,"title":{},"body":{"classes/InvalidTokenMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["super.debug(this.preparemessage(message",{"_index":2306,"title":{},"body":{"classes/LogService.html":{}}}],["super.error(this.preparemessage(message",{"_index":2302,"title":{},"body":{"classes/LogService.html":{}}}],["super.log(this.preparemessage(message",{"_index":2300,"title":{},"body":{"classes/LogService.html":{}}}],["super.verbose(this.preparemessage(message",{"_index":2305,"title":{},"body":{"classes/LogService.html":{}}}],["super.warn(this.preparemessage(message",{"_index":2304,"title":{},"body":{"classes/LogService.html":{}}}],["supersede",{"_index":3550,"title":{},"body":{"license.html":{}}}],["support",{"_index":3610,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":3647,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":178,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["symbol(\"entity_save_handler",{"_index":3747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"logger_service",{"_index":3785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"ms_client",{"_index":3787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_broker",{"_index":3786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_bus",{"_index":3788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"redis_client",{"_index":3790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"warlock",{"_index":3806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":990,"title":{},"body":{"injectables/ConfigService.html":{}}}],["synchronizing",{"_index":933,"title":{},"body":{"injectables/ConfigService.html":{}}}],["syntax",{"_index":3638,"title":{},"body":{"license.html":{}}}],["systems",{"_index":3440,"title":{},"body":{"license.html":{}}}],["t",{"_index":255,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"entities/MediaEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["t.code",{"_index":784,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["t.id",{"_index":835,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["t.target",{"_index":1376,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["tab",{"_index":1262,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{}}}],["tab.entity",{"_index":1384,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["tab.entity.ts",{"_index":1426,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:35",{"_index":1427,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:39",{"_index":1428,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:43",{"_index":1429,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:50",{"_index":1430,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:53",{"_index":1431,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["table_name",{"_index":1454,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["tableinheritance",{"_index":1485,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["tablename",{"_index":1236,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tagname",{"_index":3206,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["take",{"_index":2854,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["target",{"_index":1225,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["target.entity",{"_index":1382,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{}}}],["target.entity.ts",{"_index":1433,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:103",{"_index":1438,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:37",{"_index":1456,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:41",{"_index":1455,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:45",{"_index":1436,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:49",{"_index":1453,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:53",{"_index":1451,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:56",{"_index":1452,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:59",{"_index":1442,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:63",{"_index":1435,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:71",{"_index":1444,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:79",{"_index":1450,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:87",{"_index":1446,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:95",{"_index":1448,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:99",{"_index":1437,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target_relations_basic",{"_index":3704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_full",{"_index":3705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_object",{"_index":3706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_section",{"_index":3707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetdata",{"_index":1265,"title":{"interfaces/TargetData.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targetparams",{"_index":1279,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["template",{"_index":748,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/DtoInterceptor.html":{}}}],["temporary",{"_index":3810,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["terminate",{"_index":3499,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3349,"title":{},"body":{"license.html":{}}}],["text",{"_index":2060,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["theory",{"_index":3580,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":3424,"title":{},"body":{"license.html":{}}}],["third",{"_index":3526,"title":{},"body":{"license.html":{}}}],["this.broker.emit(command.register",{"_index":2838,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.start",{"_index":2840,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.stop",{"_index":2841,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.unregister",{"_index":2847,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.cacheservice.del(config_cache_prefix",{"_index":983,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(fullkey",{"_index":1023,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(key",{"_index":2092,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get",{"_index":78,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_family",{"_index":2115,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_path",{"_index":2116,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.google_public_key",{"_index":2024,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(key",{"_index":1015,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(kpconfig.tmp_dir",{"_index":3038,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.cacheservice.get(private_dir",{"_index":1993,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.get(public_dir",{"_index":1991,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.getboolean",{"_index":2022,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.getfrompattern",{"_index":994,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.getnumber(captchaconfig.expiration",{"_index":2114,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${captcha_cache_prefix}:${id",{"_index":2088,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${key",{"_index":987,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.set(fullkey",{"_index":1020,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.catrep.finddescendantstree(cat",{"_index":869,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.catrep.findone",{"_index":867,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.client.del(...keys",{"_index":2958,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.expire(key",{"_index":2963,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.get(key",{"_index":2952,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.incr(key",{"_index":2961,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.scanstream",{"_index":2965,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.set(key",{"_index":2955,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.constructor.name",{"_index":153,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.createbasicfindqb",{"_index":1933,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createbasicfindqb().where(\"file.id",{"_index":1929,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfiledirectory",{"_index":1914,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfileentity(ispublic",{"_index":1912,"title":{},"body":{"injectables/FileService.html":{}}}],["this.data",{"_index":2633,"title":{},"body":{"classes/MockStorage.html":{}}}],["this.data.filter((v",{"_index":2641,"title":{},"body":{"classes/MockStorage.html":{}}}],["this.data.find((v",{"_index":2629,"title":{},"body":{"classes/MockStorage.html":{}}}],["this.data.push",{"_index":2643,"title":{},"body":{"classes/MockStorage.html":{}}}],["this.deleteexistingconfigtsfiles(fullpath",{"_index":1095,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.deleteexistingconfigtsfiles(process.cwd",{"_index":981,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.execute",{"_index":162,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.fetchuser",{"_index":73,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.filerep",{"_index":1952,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.manager.transaction(async",{"_index":1899,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.save(entity",{"_index":1990,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findbyid(id",{"_index":654,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.findfilebyid(existedentityid",{"_index":1901,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findfilebyid(id",{"_index":1936,"title":{},"body":{"injectables/FileService.html":{}}}],["this.generatecolor",{"_index":2106,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.generateconfigtsfiles",{"_index":985,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatedtsoutput",{"_index":975,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatenamespacewithvariables",{"_index":1112,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.get(key",{"_index":2582,"title":{},"body":{"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["this.getaccesstokenfromrequest(req",{"_index":64,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.getcallingcontext",{"_index":2299,"title":{},"body":{"classes/LogService.html":{}}}],["this.getcaptchaexp",{"_index":2087,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontfamily",{"_index":2101,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontpath",{"_index":2103,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getdeletestats(dirstruct",{"_index":3042,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.getnumber(key",{"_index":2591,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["this.getprivatedir",{"_index":1904,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getprocessdata(code",{"_index":2839,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getprocessdata(processcode",{"_index":2849,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getpublicdir",{"_index":1905,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getpublicdir()}/${file.id",{"_index":1938,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getstatus",{"_index":149,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.handlerequest(source",{"_index":2662,"title":{},"body":{"classes/MsClient.html":{}}}],["this.hashpassword(user.password",{"_index":260,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["this.hashpasswordifneeded(event",{"_index":3143,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.http.post",{"_index":2027,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.languagerep.find",{"_index":2196,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.findone",{"_index":2203,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.save(ls",{"_index":2206,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.lockexec",{"_index":2913,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.lockexec(`${processdata.code}_start",{"_index":2905,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.debug(`generated",{"_index":2089,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.debug(`sending",{"_index":2667,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.debug(message",{"_index":186,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.error",{"_index":2674,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["this.logger.error(`error",{"_index":2953,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(`invalid",{"_index":1065,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.error(`process",{"_index":2903,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.error(err",{"_index":2972,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(message",{"_index":182,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.log",{"_index":1926,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(\"init",{"_index":2827,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.log(`clean",{"_index":979,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`config",{"_index":989,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`file",{"_index":1951,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(`generate",{"_index":984,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`scan",{"_index":976,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(message",{"_index":180,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.verbose",{"_index":2244,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["this.logger.verbose(`delete",{"_index":1092,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`generated",{"_index":1116,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`read",{"_index":1087,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(message",{"_index":188,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.warn",{"_index":151,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["this.logger.warn(\"autostart",{"_index":2824,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.warn(`incorrect",{"_index":2095,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`invalid",{"_index":69,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`request",{"_index":2682,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.warn(message",{"_index":184,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance",{"_index":157,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance.content",{"_index":200,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.makeimagefromtext(val",{"_index":2085,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.mergepropertiescontent",{"_index":1037,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.metadataservice.createfilemetadataentity",{"_index":1923,"title":{},"body":{"injectables/FileService.html":{}}}],["this.oncrash(e",{"_index":171,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onfinish",{"_index":164,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onstop",{"_index":175,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.parser.parsestring(xmldata",{"_index":3293,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.parsevalue(value.trim",{"_index":1073,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.parsexmlfromrequest(req",{"_index":3289,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.patchfromctx(ctx",{"_index":2303,"title":{},"body":{"classes/LogService.html":{}}}],["this.pmservice.createloginstance",{"_index":158,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.getprocessunitstatus(this.constructor.name",{"_index":209,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.init",{"_index":2875,"title":{},"body":{"modules/ProcessModule.html":{}}}],["this.pmservice.setprocessunitstatus(processdata.code",{"_index":2911,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.setprocessunitstatus(this.constructor.name",{"_index":210,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.stopprocess(processdata.code",{"_index":2920,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.updateloginstance(this.loginstance",{"_index":204,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.processandvalidatepropertiescontent",{"_index":1046,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.processlogrep.find",{"_index":2853,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.findone",{"_index":2852,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save",{"_index":2850,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save(loginstance",{"_index":2851,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.find",{"_index":2829,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.findone",{"_index":2844,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.save(processdata",{"_index":2846,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.propertiesfiles",{"_index":1096,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[filepath",{"_index":1098,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[fullpath",{"_index":1045,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.proxy.emit(pattern",{"_index":2666,"title":{},"body":{"classes/MsClient.html":{}}}],["this.proxy.send(pattern",{"_index":2661,"title":{},"body":{"classes/MsClient.html":{}}}],["this.pubclient.duplicate",{"_index":2532,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.pubclient.publish(chanel",{"_index":2538,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.reflector.get",{"_index":3005,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registercronjob(data",{"_index":2894,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.resetallprocessstatuses",{"_index":2826,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.safeserialize(data",{"_index":2539,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.scanforpropertiesfiles(fullpath",{"_index":1040,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.scanforpropertiesfiles(process.cwd",{"_index":978,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.schedulerregistry.addcronjob(processdata.code",{"_index":2915,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.deletecronjob(processdata.code",{"_index":2919,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.doesexist(\"cron",{"_index":2908,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.getcronjob(processdata.code",{"_index":2917,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.service.analyzedatabase",{"_index":1411,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["this.set(key",{"_index":2592,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["this.setaudiomd(md",{"_index":1577,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setimagemd(md",{"_index":1575,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setprocessunitstatus(processdata.code",{"_index":2855,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.setstatus(status.crashed",{"_index":170,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.execute",{"_index":160,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.ready",{"_index":163,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setvideomd(md",{"_index":1579,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.sort(cat",{"_index":871,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.sort(res",{"_index":872,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.startprocess(data",{"_index":2898,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.stopprocess(data",{"_index":2900,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.storage.filter(key",{"_index":2595,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["this.storage.find(key",{"_index":2580,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["this.storage.find(pattern",{"_index":2616,"title":{},"body":{"classes/MockMsClient.html":{}}}],["this.storage.remove(k",{"_index":2587,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["this.storage.set(key",{"_index":2584,"title":{},"body":{"injectables/MockCacheService.html":{}}}],["this.subclient",{"_index":2531,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.on(\"message",{"_index":2533,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.subscribe(chanel",{"_index":2540,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.unsubscribe(chanel",{"_index":2542,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.delete(chanel",{"_index":2543,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.get(chanel",{"_index":2536,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.has(chanel",{"_index":2534,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.set(chanel",{"_index":2541,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.trimproperties(md",{"_index":1580,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.trimproperties(obj[key",{"_index":1587,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.unregistercronjob(data",{"_index":2896,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.userrep.create(user",{"_index":656,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.findone",{"_index":649,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.remove(user",{"_index":659,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(newuser",{"_index":657,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(user",{"_index":653,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userservice.findbylogin(useridentity",{"_index":75,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.validatelogin(event.entity.login",{"_index":3142,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.validatetoken(token",{"_index":67,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.valuesofproperties",{"_index":986,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[key",{"_index":988,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[processedvalue.substring(1,processedvalue.length",{"_index":1083,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[propertykey",{"_index":1072,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.writelog",{"_index":165,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`nothing",{"_index":3040,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`process",{"_index":176,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`start",{"_index":159,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`tmp",{"_index":3048,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`try",{"_index":174,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["those",{"_index":3480,"title":{},"body":{"license.html":{}}}],["through",{"_index":3356,"title":{},"body":{"license.html":{}}}],["throw",{"_index":70,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{}}}],["throwerror",{"_index":2656,"title":{},"body":{"classes/MsClient.html":{}}}],["throwerror(error",{"_index":2684,"title":{},"body":{"classes/MsClient.html":{}}}],["throws",{"_index":560,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["thumb",{"_index":3708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2051,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["timeout",{"_index":2486,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["timeout(opts?.timeout",{"_index":2670,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouterror",{"_index":2681,"title":{},"body":{"classes/MsClient.html":{}}}],["timestamp",{"_index":1480,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["tinput",{"_index":2476,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["title",{"_index":278,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["tmpdir",{"_index":3037,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["tmpdircleanerprocess",{"_index":3012,"title":{"classes/TmpDirCleanerProcess.html":{}},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["to(value",{"_index":3795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":3345,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toggleprocess",{"_index":2778,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess(code",{"_index":2806,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["token",{"_index":47,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["token.decorator.ts",{"_index":3674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokens",{"_index":547,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["tool",{"_index":279,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toomanyrequestsmsexception",{"_index":3052,"title":{"classes/TooManyRequestsMsException.html":{}},"body":{"classes/TooManyRequestsMsException.html":{}}}],["tort",{"_index":3581,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1007,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["touppercase",{"_index":1109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["trace",{"_index":2284,"title":{},"body":{"classes/LogService.html":{}}}],["tracking",{"_index":591,"title":{},"body":{"classes/AuthService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trade",{"_index":3556,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3515,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3554,"title":{},"body":{"license.html":{}}}],["transactionmanager",{"_index":1900,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file",{"_index":1950,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.audio",{"_index":1947,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.gps",{"_index":1945,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.image",{"_index":1943,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.video",{"_index":1949,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.save(entity",{"_index":1925,"title":{},"body":{"injectables/FileService.html":{}}}],["transfer",{"_index":735,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["transform",{"_index":1197,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/NotEmptyPipe.html":{}}}],["transform(transformutils.datetotime",{"_index":1310,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["transform(value",{"_index":2712,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["transformation",{"_index":1215,"title":{},"body":{"injectables/DtoInterceptor.html":{},"license.html":{}}}],["transformer",{"_index":794,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"dependencies.html":{}}}],["transformers/simple",{"_index":810,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["transformutils",{"_index":1299,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["translation",{"_index":3397,"title":{},"body":{"license.html":{}}}],["transport",{"_index":2694,"title":{},"body":{"modules/MsClientModule.html":{}}}],["tree",{"_index":807,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["tree(\"nested",{"_index":814,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treechildren",{"_index":777,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treeparent",{"_index":797,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treerepository",{"_index":849,"title":{},"body":{"injectables/CategoryService.html":{}}}],["tresult",{"_index":2480,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MockMsClient.html":{},"classes/MsClient.html":{}}}],["trigger",{"_index":2219,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["triggered",{"_index":2230,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["trimproperties",{"_index":1539,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties(obj",{"_index":1548,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["true",{"_index":61,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/MockCacheService.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["true})@column('varchar",{"_index":780,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":790,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["true})@primarycolumn('varchar",{"_index":1341,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserRoleEntity.html":{}}}],["try",{"_index":161,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"miscellaneous/variables.html":{}}}],["ts_created",{"_index":1479,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["ts_updated",{"_index":2759,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["tscreated",{"_index":295,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tsupdated",{"_index":2743,"title":{},"body":{"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["type",{"_index":35,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["type\"]?.description",{"_index":1683,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["type(undefined",{"_index":2733,"title":{},"body":{"classes/PageableParams.html":{}}}],["type.code",{"_index":2385,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{}}}],["type.entity",{"_index":2387,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["type.entity.ts",{"_index":2457,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:18",{"_index":2458,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:22",{"_index":2462,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:25",{"_index":2465,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:28",{"_index":2463,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:31",{"_index":2464,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:34",{"_index":2460,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:38",{"_index":2461,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.ext",{"_index":3745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type.formats",{"_index":3744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3656,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":248,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":231,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{}}}],["typeorm/error/typeormerror",{"_index":1136,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeorm/subscriber/event/insertevent",{"_index":230,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["typeormerror",{"_index":1135,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeormmodule",{"_index":824,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":2182,"title":{},"body":{"modules/LocaleModule.html":{},"modules/MediaModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":826,"title":{},"body":{"modules/CategoryModule.html":{}}}],["typeormmodule.forfeature([explorertargetentity",{"_index":1410,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":1840,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([processunitentity",{"_index":2873,"title":{},"body":{"modules/ProcessModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3114,"title":{},"body":{"modules/UserModule.html":{}}}],["types",{"_index":3400,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1302,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["unauthorized",{"_index":3063,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["unauthorizedmsexception",{"_index":3061,"title":{"classes/UnauthorizedMsException.html":{}},"body":{"classes/UnauthorizedMsException.html":{}}}],["undefined",{"_index":167,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/LogService.html":{},"injectables/MockCacheService.html":{},"classes/MsException.html":{},"entities/ProcessUnitEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["undefined:undefined",{"_index":2310,"title":{},"body":{"classes/LogService.html":{}}}],["under",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["underscores",{"_index":245,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["union",{"_index":3363,"title":{},"body":{"license.html":{}}}],["unique",{"_index":743,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["uniqueobjects",{"_index":3231,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.push(obj",{"_index":3235,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.reverse",{"_index":3236,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.some((uniqueobj",{"_index":3233,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["unknown",{"_index":39,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"injectables/MockCacheService.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unknown_ip",{"_index":570,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["unlock",{"_index":3169,"title":{},"body":{"modules/WarlockModule.html":{}}}],["unregister",{"_index":2916,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["unregistercronjob",{"_index":2878,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistercronjob(processdata",{"_index":2887,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unsigned",{"_index":800,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["unsubscribe",{"_index":2492,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribe(chanel",{"_index":2499,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["update",{"_index":640,"title":{},"body":{"injectables/BasicUserService.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["updatebyid",{"_index":620,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["updatebyid(id",{"_index":638,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updated",{"_index":641,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{}}}],["updatedatecolumn",{"_index":2761,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["updateevent",{"_index":223,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["updateloginstance",{"_index":2779,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updateloginstance(loginstance",{"_index":2808,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["upgrade",{"_index":3829,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["uploading",{"_index":1844,"title":{},"body":{"injectables/FileService.html":{}}}],["uploads",{"_index":1868,"title":{},"body":{"injectables/FileService.html":{}}}],["upsertmediarequest",{"_index":2352,"title":{"interfaces/UpsertMediaRequest.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["uri",{"_index":3263,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["url",{"_index":776,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["use",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["use(req",{"_index":3280,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["useclass",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["used",{"_index":434,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MockStorage.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["usefactory",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["usefactory(...args).config",{"_index":2981,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefiles",{"_index":3273,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["user",{"_index":74,"title":{"interfaces/User.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["user's",{"_index":593,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["user.constants",{"_index":647,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.decorator.ts",{"_index":3683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.entity",{"_index":3140,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.id",{"_index":257,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{}}}],["user.login",{"_index":652,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.password",{"_index":249,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password.tostring",{"_index":251,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password?.length",{"_index":252,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.types",{"_index":643,"title":{},"body":{"injectables/BasicUserService.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["user/entity/user",{"_index":1229,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["user/user.module",{"_index":504,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.types",{"_index":1232,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/XdbRequest.html":{}}}],["user_relations",{"_index":646,"title":{},"body":{"injectables/BasicUserService.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":1298,"title":{"classes/UserDto.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentity",{"_index":234,"title":{"entities/UserEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentitypwdandrolessavehandler",{"_index":3098,"title":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["useridentity",{"_index":65,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["usermodule",{"_index":503,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{}}}],["usermodule.forroot",{"_index":512,"title":{},"body":{"modules/AuthModule.html":{}}}],["usermoduleoptions",{"_index":3071,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":690,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["userrep",{"_index":623,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userrole",{"_index":3002,"title":{"interfaces/UserRole.html":{}},"body":{"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroledto",{"_index":3069,"title":{"classes/UserRoleDto.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroleentity",{"_index":832,"title":{"entities/UserRoleEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["userroles",{"_index":3007,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userservice",{"_index":22,"title":{"classes/UserService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userservice:43",{"_index":633,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:56",{"_index":629,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:70",{"_index":639,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:85",{"_index":626,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:97",{"_index":635,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["usersubscriber",{"_index":3129,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{}}}],["userupdaterequest",{"_index":3070,"title":{"interfaces/UserUpdateRequest.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userutils",{"_index":2997,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userutils.hassomerole",{"_index":3004,"title":{},"body":{"guards/RolesGuard.html":{}}}],["using",{"_index":3574,"title":{},"body":{"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["utf",{"_index":3735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/env.loader",{"_index":676,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["utils/object.utils",{"_index":865,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["utils/user.utils",{"_index":2998,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uuid",{"_index":2068,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2067,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["v.code",{"_index":3106,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["v.codec_type",{"_index":1594,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["v.key",{"_index":2630,"title":{},"body":{"classes/MockStorage.html":{}}}],["v4",{"_index":2066,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["val",{"_index":2082,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/MockCacheService.html":{},"injectables/RedisCacheService.html":{}}}],["valid",{"_index":756,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validate",{"_index":736,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha",{"_index":767,"title":{},"body":{"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatecaptcha(request",{"_index":757,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validated",{"_index":2016,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatelogin",{"_index":216,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validatelogin(login",{"_index":226,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validates",{"_index":753,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatetoken",{"_index":27,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validatetoken(token",{"_index":44,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validation",{"_index":754,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validator",{"_index":746,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"dependencies.html":{}}}],["value",{"_index":131,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/AuthModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/Language.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/MockCacheService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2241,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["value.trim",{"_index":1075,"title":{},"body":{"injectables/ConfigService.html":{}}}],["value[0",{"_index":2242,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["values",{"_index":893,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/XdbRequest.html":{}}}],["valuesofproperties",{"_index":898,"title":{},"body":{"injectables/ConfigService.html":{}}}],["valuetransformer",{"_index":3792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":1488,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["variablename",{"_index":1057,"title":{},"body":{"injectables/ConfigService.html":{}}}],["variables",{"_index":3671,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variation",{"_index":3666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["verbal",{"_index":3433,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2279,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":2295,"title":{},"body":{"classes/LogService.html":{}}}],["verification",{"_index":2015,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["version",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["version\"]?.description",{"_index":1702,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["video",{"_index":308,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["videofilemetadata",{"_index":309,"title":{"interfaces/VideoFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadataentity",{"_index":1530,"title":{"entities/VideoFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videomd",{"_index":1606,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.bit_rate",{"_index":1617,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_long_name",{"_index":1611,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_name?.touppercase",{"_index":1609,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_range",{"_index":1625,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_space",{"_index":1627,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.display_aspect_ratio",{"_index":1623,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.height",{"_index":1615,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.r_frame_rate",{"_index":1629,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.sample_aspect_ratio",{"_index":1621,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.tags?.rotate",{"_index":1631,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.width",{"_index":1613,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["virtual",{"_index":1248,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["void",{"_index":862,"title":{},"body":{"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MockStorage.html":{},"injectables/ProcessRegisterService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["vp6",{"_index":2346,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["warlock",{"_index":2811,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["warlock(client",{"_index":3164,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.constants",{"_index":3158,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.lock",{"_index":3167,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.types",{"_index":3159,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlockfn",{"_index":2781,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["warlockmodule",{"_index":2862,"title":{"modules/WarlockModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["warn",{"_index":2280,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":2297,"title":{},"body":{"classes/LogService.html":{}}}],["warranties",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["warranty",{"_index":3566,"title":{},"body":{"license.html":{}}}],["web",{"_index":3818,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["webpsupport",{"_index":2365,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["where(\"file.code",{"_index":1934,"title":{},"body":{"injectables/FileService.html":{}}}],["wherever",{"_index":3525,"title":{},"body":{"license.html":{}}}],["whether",{"_index":762,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["whitebalance",{"_index":369,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whole",{"_index":3417,"title":{},"body":{"license.html":{}}}],["width",{"_index":311,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["width\"]?.value",{"_index":1670,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["withfiletypes",{"_index":1025,"title":{},"body":{"injectables/ConfigService.html":{}}}],["within",{"_index":3454,"title":{},"body":{"license.html":{}}}],["without",{"_index":482,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["work",{"_index":3401,"title":{},"body":{"license.html":{}}}],["working",{"_index":844,"title":{},"body":{"injectables/CategoryService.html":{}}}],["works",{"_index":3411,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3461,"title":{},"body":{"license.html":{}}}],["writelog",{"_index":106,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writelog(message",{"_index":126,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writerequest",{"_index":1272,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"classes/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["writing",{"_index":479,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["written",{"_index":3434,"title":{},"body":{"license.html":{}}}],["xdb",{"_index":3191,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.getxmlparser",{"_index":3283,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.parsexmlbody(req.body",{"_index":3290,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdbaction",{"_index":3178,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbdecomposedentity",{"_index":3179,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportdto",{"_index":3180,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportparams",{"_index":3176,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportservice",{"_index":3170,"title":{"classes/XdbExportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbimportservice",{"_index":3188,"title":{"classes/XdbImportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbmoduleoptions",{"_index":3270,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["xdbobject",{"_index":3181,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrequest",{"_index":3254,"title":{"interfaces/XdbRequest.html":{}},"body":{"interfaces/XdbRequest.html":{}}}],["xdbrowdata",{"_index":3182,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrowdatavalue",{"_index":3262,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xml",{"_index":3183,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xml2js",{"_index":3185,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{}}}],["xml2js.parser",{"_index":3198,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["xmldata",{"_index":3194,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgeexportservice",{"_index":3298,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeimportservice",{"_index":3297,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemiddleware",{"_index":3275,"title":{"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgemodule",{"_index":3294,"title":{"modules/XmlDataBridgeModule.html":{}},"body":{"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["yargs",{"_index":3187,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["ycbcrpositioning",{"_index":342,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["year",{"_index":280,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yes",{"_index":133,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"interfaces/MessageBus.html":{},"injectables/MockCacheService.html":{},"classes/MockMsClient.html":{},"classes/MockStorage.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["z0",{"_index":238,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["z][_a",{"_index":1063,"title":{},"body":{"injectables/ConfigService.html":{}}}],["za",{"_index":237,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["zerofill",{"_index":425,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["zip",{"_index":3312,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":668,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbstractAuthGuard.html":{"url":"guards/AbstractAuthGuard.html","title":"guard - AbstractAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbstractAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/abstract-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    An abstract class for creating authentication guards.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                cacheService\n                            \n                            \n                                    Protected\n                                fetchUser\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getAccessTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAccessTokenFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ACCESS_TOKEN_ERROR_MSG,\n  AUTH_ACCESS_TOKEN_PREFIX,\n  AUTH_JWT_CACHE_PREFIX,\n} from \"../../common/auth/auth.constants\";\nimport { Request } from \"express\";\nimport { CacheService } from \"../modules/cache/cache.types\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS } from \"../constants\";\n\n/**\n * @abstract\n * @class AbstractAuthGuard\n * An abstract class for creating authentication guards.\n */\nexport abstract class AbstractAuthGuard implements CanActivate {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly cacheService: CacheService;\n  protected abstract readonly userService: UserService;\n  protected fetchUser = true;\n\n  async canActivate(context: ExecutionContext) {\n    const req = context.switchToHttp().getRequest();\n    const token = this.getAccessTokenFromRequest(req);\n    const userIdentity = await this.validateToken(token);\n    if (userIdentity) {\n      req[REQUEST_PROPS.accessToken] = token;\n    } else {\n      this.logger.warn(`Invalid token: ${token}`);\n      throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n    }\n    if (this.fetchUser) {\n      const user = await this.userService.findByLogin(userIdentity);\n      if (!user) {\n        throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n      }\n      req[REQUEST_PROPS.currentUser] = user;\n    }\n    return true;\n  }\n\n  private async validateToken(token: string) {\n    return this.cacheService.get(\n      `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${token}`,\n    );\n  }\n\n  private getAccessTokenFromRequest(req: Request) {\n    if (req.cookies?.accessToken) {\n      return req.cookies.accessToken;\n    }\n    if (req.headers?.authorization) {\n      const authorizationHeader = req.headers.authorization;\n      const parts = authorizationHeader.match(/Bearer\\s+(\\S+)\\s*(.+)?/);\n      if (!parts.length) {\n        return null;\n      }\n      return parts[1];\n    }\n    return null;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractProcess.html":{"url":"classes/AbstractProcess.html","title":"class - AbstractProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/abstract-process.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/abstract-process.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:29\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { ObjectUtils } from \"../../shared/utils/object.utils\";\nimport registerProcess = Process.registerProcess;\nimport Status = Process.Status;\nimport inspect = ObjectUtils.inspect;\nimport LogLevel = Process.LogLevel;\n\nexport abstract class AbstractProcess {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly pmService: ProcessManagerService;\n  private logInstance: ProcessLogEntity;\n\n  protected abstract execute(): Promise;\n\n  protected constructor() {\n    registerProcess(this);\n  }\n\n  async start() {\n    const status = await this.getStatus();\n    if (status === Status.Execute) {\n      this.logger.warn(\n        `Process with id ${this.constructor.name} now executed, can't start that`,\n      );\n      return;\n    }\n    this.logInstance = await this.pmService.createLogInstance(\n      this.constructor.name,\n    );\n    await this.writeLog(`Start process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Execute);\n    try {\n      await this.execute();\n      await this.setStatus(Status.Ready);\n      await this.onFinish();\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was finished`,\n      );\n      this.logInstance = undefined;\n    } catch (e) {\n      await this.setStatus(Status.Crashed);\n      await this.onCrash(e);\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was crashed`,\n        e,\n        LogLevel.Error,\n      );\n      this.logInstance = undefined;\n    }\n  }\n\n  async stop() {\n    await this.writeLog(`Try to stop process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Ready);\n    await this.onStop();\n    await this.writeLog(`Process with id ${this.constructor.name} was stopped`);\n    this.logInstance = undefined;\n  }\n\n  protected async writeLog(\n    message: string,\n    data?: unknown,\n    level = LogLevel.Log,\n  ) {\n    switch (level) {\n      case LogLevel.Log:\n        this.logger.log(message, data);\n        break;\n      case LogLevel.Error:\n        this.logger.error(message, data);\n        break;\n      case LogLevel.Warn:\n        this.logger.warn(message, data);\n        break;\n      case LogLevel.Debug:\n        this.logger.debug(message, data);\n        break;\n      case LogLevel.Verbose:\n        this.logger.verbose(message, data);\n        break;\n    }\n    if (!this.logInstance) {\n      return;\n    }\n    const date = new Date();\n    let msg = inspect(message);\n    if (\n      (msg.startsWith(`'`) && msg.endsWith(`'`)) ||\n      (msg.startsWith(`\"`) && msg.endsWith(`\"`))\n    ) {\n      msg = msg.substring(1, msg.length - 1);\n    }\n    if (data) {\n      msg += inspect(data);\n    }\n    msg = msg.replace(/\\[/g, \"{\");\n    msg = msg.replace(/]/g, \"}\");\n    this.logInstance.content += `[${process.pid} | ${date.toLocaleString()} | ${level}] ${msg} >>>\\n`;\n    await this.pmService.updateLogInstance(this.logInstance);\n  }\n\n  protected async onFinish() {\n    // implement callback in child class if it needs\n  }\n\n  protected async onStop() {\n    // implement callback in child class if it needs\n  }\n\n  protected async onCrash(error: Error) {\n    // implement callback in child class if it needs\n  }\n\n  private async getStatus() {\n    return await this.pmService.getProcessUnitStatus(this.constructor.name);\n  }\n\n  private async setStatus(status: Status) {\n    await this.pmService.setProcessUnitStatus(this.constructor.name, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUserSubscriber.html":{"url":"classes/AbstractUserSubscriber.html","title":"class - AbstractUserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/abstract-user-subscriber.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Protected\n                                    Async\n                                hashPasswordIfNeeded\n                            \n                            \n                                    Protected\n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/abstract-user-subscriber.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPasswordIfNeeded\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPasswordIfNeeded(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InsertEvent | UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { UpdateEvent } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport abstract class AbstractUserSubscriber {\n  protected abstract readonly type: Type;\n\n  protected async validateLogin(login: string) {\n    const loginRegex = /^[A-Za-z0-9_]+$/;\n    if (!loginRegex.test(login)) {\n      throw new BadRequestException(\n        \"Login must contain only Latin letters, numbers, and underscores.\",\n      );\n    }\n  }\n\n  protected async hashPasswordIfNeeded(event: InsertEvent | UpdateEvent) {\n    const { entity: user, manager } = event;\n    if (typeof user.password === \"number\") {\n      user.password = user.password.toString();\n    }\n    if (!user.password?.length) {\n      delete user.password;\n      return;\n    }\n    const foundUser: T = await manager.findOne(this.type, {\n      where: { id: user.id },\n    });\n    if (foundUser) {\n      if (await bcrypt.compare(user.password, foundUser.password)) {\n        user.password = foundUser.password;\n      } else {\n        user.password = await this.hashPassword(user.password);\n      }\n    } else {\n      user.password = await this.hashPassword(user.password);\n    }\n  }\n\n  protected async hashPassword(password: string) {\n    return await bcrypt.hash(password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioFileMetadata.html":{"url":"interfaces/AudioFileMetadata.html","title":"interface - AudioFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            codecProfile\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            numberOfChannels\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tool\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codecProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codecProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AudioFileMetadataEntity.html":{"url":"entities/AudioFileMetadataEntity.html","title":"entity - AudioFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AudioFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/audio-file-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                album\n                            \n                            \n                                    \n                                    \n                                artist\n                            \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                codecProfile\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                numberOfChannels\n                            \n                            \n                                    \n                                    \n                                sampleRate\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                tool\n                            \n                            \n                                    \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codecProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'codec_profile', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'number_of_channels', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'sample_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { AudioFileMetadata } from \"../file.types\";\n\n@Entity(\"file_metadata_audio\")\nexport class AudioFileMetadataEntity implements AudioFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"int\", { name: \"sample_rate\", nullable: true })\n  sampleRate: number;\n\n  @Index()\n  @Column(\"int\", { name: \"number_of_channels\", nullable: true })\n  numberOfChannels: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"codec_profile\", nullable: true })\n  codecProfile: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  tool: string;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  title: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  artist: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  album: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  year: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  genre: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/auth.guard.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class AuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n */\n@Injectable()\nexport class AuthGuard extends AbstractAuthGuard {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AuthModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.module.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: AuthorizationService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { AuthModuleOptions } from \"./auth.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { AuthConfig } from \"../../../gen-src/auth.config\";\nimport { AuthService } from \"./auth.constants\";\n\n@Module({})\nexport class AuthModule {\n  static forRoot(\n    options: AuthModuleOptions = { service: AuthorizationService },\n  ): DynamicModule {\n    return {\n      module: AuthModule,\n      imports: [\n        PassportModule,\n        CacheModule,\n        LogModule,\n        UserModule.forRoot(),\n        JwtModule.registerAsync({\n          imports: [CacheModule],\n          inject: [CacheService],\n          useFactory: async (cs: CacheService) => {\n            return {\n              secret: await cs.get(AuthConfig.JWT_SECRET),\n              signOptions: {\n                expiresIn: await cs.getNumber(\n                  AuthConfig.ACCESS_TOKEN_EXPIRATION,\n                ),\n              },\n            };\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: AuthService,\n          useClass: options.service,\n        },\n      ],\n      exports: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract service class for authentication and authorization.\nDefines the methods that must be implemented by any derived service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                authenticate\n                            \n                            \n                                    Abstract\n                                exchangeToken\n                            \n                            \n                                    Abstract\n                                invalidateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: LoginPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:109\n                        \n                    \n\n\n            \n                \n                        Authenticate the user with the provided login payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLoginPayload object with user login information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a JwtDto containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:123\n                        \n                    \n\n\n            \n                \n                        Exchange the provided refresh token for a new access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe refresh token to exchange.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A Promise that resolves to a Partial containing new access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    invalidateToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:116\n                        \n                    \n\n\n            \n                \n                        Invalidate the specified access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to invalidate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtDto, LoginPayload } from \"./auth.types\";\n\n/**\n * Error message for access token related errors.\n * @constant\n */\nexport const ACCESS_TOKEN_ERROR_MSG = \"ERR_TOKEN_A\";\n\n/**\n * Error message for refresh token related errors.\n * @constant\n */\nexport const REFRESH_TOKEN_ERROR_MSG = \"ERR_TOKEN_R\";\n\n/**\n * Placeholder for unknown IP addresses.\n * @constant\n */\nexport const UNKNOWN_IP = \"unknown\";\n\n/**\n * Prefix for JWT cache keys.\n * @constant\n */\nexport const AUTH_JWT_CACHE_PREFIX = \"jwt\";\n\n/**\n * Prefix for access token cache keys.\n * @constant\n */\nexport const AUTH_ACCESS_TOKEN_PREFIX = \"access_token\";\n\n/**\n * Prefix for refresh token cache keys.\n * @constant\n */\nexport const AUTH_REFRESH_TOKEN_PREFIX = \"refresh_token\";\n\n/**\n * Prefix for brute force protection cache keys.\n * @constant\n */\nexport const BRUTEFORCE_JWT_CACHE_PREFIX = \"bruteforce\";\n\n/**\n * Generates a cache key for an access token.\n * @param accessToken - The access token.\n * @returns The generated cache key.\n */\nexport const jwtAccessTokenKey = (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n};\n\n/**\n * Generates a cache key for a refresh token.\n * @param accessToken - The access token.\n * @param refreshToken - The refresh token.\n * @returns The generated cache key.\n */\nexport const jwtRefreshTokenKey = (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n};\n\n/**\n * Generates a cache key for tracking brute force login attempts by login.\n * @param login - The user's login.\n * @returns The generated cache key.\n */\nexport const bruteForceLoginKey = (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`;\n\n/**\n * Generates a cache key for tracking brute force login attempts by IP address.\n * @param ipAddress - The IP address of the user.\n * @returns The generated cache key.\n */\nexport const bruteForceIPKey = (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`;\n\n/**\n * Abstract service class for authentication and authorization.\n * Defines the methods that must be implemented by any derived service.\n */\nexport abstract class AuthService {\n  /**\n   * Authenticate the user with the provided login payload.\n   * @param data - LoginPayload object with user login information.\n   * @returns A Promise that resolves to a JwtDto containing access and refresh tokens.\n   */\n  abstract authenticate(data: LoginPayload): Promise;\n\n  /**\n   * Invalidate the specified access token.\n   * @param accessToken - The access token to invalidate.\n   * @returns A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n   */\n  abstract invalidateToken(accessToken: string);\n\n  /**\n   * Exchange the provided refresh token for a new access token.\n   * @param refreshToken - The refresh token to exchange.\n   * @returns A Promise that resolves to a Partial containing new access and refresh tokens.\n   */\n  abstract exchangeToken(refreshToken: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestMsException.html":{"url":"classes/BadRequestMsException.html","title":"class - BadRequestMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/bad-request-ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/bad-request-ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\nexport class BadRequestMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.BAD_REQUEST, message || \"Bad request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicUserService.html":{"url":"injectables/BasicUserService.html","title":"injectable - BasicUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user-service-basic.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides methods to interact with the UserEntity repository.\n\n            \n\n            \n                Extends\n            \n            \n                            UserService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/user/user-service-basic.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:85\n\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:56\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:43\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:97\n\n                        \n                    \n\n\n            \n                \n                        Remove a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:70\n\n                        \n                    \n\n\n            \n                \n                        Update a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object with updated properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { User, UserService } from \"./user.types\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { USER_RELATIONS } from \"./user.constants\";\n\n/**\n * @class BasicUserService\n * Provides methods to interact with the UserEntity repository.\n */\n@Injectable()\nexport class BasicUserService extends UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRep: Repository,\n  ) {\n    super();\n  }\n\n  /**\n   * Find a user by their login.\n   * @async\n   * @param {string} login - The user's login.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findByLogin(login: string): Promise {\n    return await this.userRep.findOne({\n      where: { login, active: true },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Find a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findById(id: string): Promise {\n    return await this.userRep.findOne({\n      where: { id },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Update a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @param {User} user - The user object with updated properties.\n   * @returns {Promise} The updated user.\n   */\n  async updateById(id: string, user: User): Promise {\n    user.id = id;\n    if (user.login) {\n      delete user.login;\n    }\n    await this.userRep.save(user);\n    return await this.findById(id);\n  }\n\n  /**\n   * Create a new user.\n   * @async\n   * @param {User} user - The user object to create.\n   * @returns {Promise} The created user.\n   */\n  async create(user: User): Promise {\n    const newUser = this.userRep.create(user);\n    return await this.userRep.save(newUser);\n  }\n\n  /**\n   * Remove a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The removed user.\n   * @throws {NotFoundException} If the user with the specified ID is not found.\n   */\n  async removeById(id: string): Promise {\n    const user = await this.findById(id);\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.userRep.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CacheModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { RedisModule } from \"./redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { CacheService } from \"./cache.types\";\nimport { RedisCacheService } from \"./redis-cache.service\";\n\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n    LogModule,\n  ],\n  providers: [\n    {\n      provide: CacheService,\n      useClass: RedisCacheService,\n    },\n  ],\n  exports: [CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                del\n                            \n                            \n                                    Abstract\n                                expire\n                            \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                getBoolean\n                            \n                            \n                                    Abstract\n                                getFromPattern\n                            \n                            \n                                    Abstract\n                                getNumber\n                            \n                            \n                                    Abstract\n                                incr\n                            \n                            \n                                    Abstract\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CacheService {\n  abstract get(key: string): Promise;\n\n  abstract getNumber(key: string): Promise;\n\n  abstract getBoolean(key: string): Promise;\n\n  abstract set(\n    key: string,\n    value: string | number,\n    expiration?: number,\n  ): Promise;\n\n  abstract del(...keys: string[]): Promise;\n\n  abstract incr(key: string): Promise;\n\n  abstract expire(key: string, expiresIn: number): Promise;\n\n  abstract getFromPattern(pattern: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/captcha/captcha.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: CaptchaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CaptchaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: GraphicCaptchaService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { GraphicCaptchaService } from \"./graphic-captcha.service\";\nimport { CaptchaModuleOptions, CaptchaService } from \"./captcha.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n@Module({})\nexport class CaptchaModule {\n  static forRoot(\n    options: CaptchaModuleOptions = { service: GraphicCaptchaService },\n  ): DynamicModule {\n    return {\n      module: CaptchaModule,\n      imports: [CacheModule, LogModule],\n      providers: [\n        {\n          provide: CaptchaService,\n          useClass: options.service,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => Promise | CaptchaService;\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: CaptchaModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: CaptchaService,\n          useFactory,\n          inject,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaRequest.html":{"url":"classes/CaptchaRequest.html","title":"class - CaptchaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for validate the CAPTCHA.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:55\n                        \n                    \n\n            \n                \n                    The data associated with the CAPTCHA request.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:49\n                        \n                    \n\n            \n                \n                    The unique identifier for the CAPTCHA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaService.html":{"url":"classes/CaptchaService.html","title":"class - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a CAPTCHA service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                generateCaptcha\n                            \n                            \n                                    Abstract\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:29\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the CAPTCHA data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:36\n                        \n                    \n\n\n            \n                \n                        Validates a CAPTCHA.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data for validate the CAPTCHA.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the validation result (true if the CAPTCHA is valid).\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n} from \"typeorm\";\nimport { LocalizedStringEntity } from \"../../locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../transformers/simple-json.transformer\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n@Entity(\"categories\")\n@Tree(\"nested-set\")\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  url: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @TreeParent()\n  parent: CategoryEntity;\n\n  @TreeChildren()\n  children: CategoryEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_imports\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { CategoryService } from \"./category.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LogModule } from \"../log/log.module\";\n\n@Module({\n  imports: [LogModule, TypeOrmModule.forFeature([CategoryEntity])],\n  providers: [CategoryService],\n  exports: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryRestrictionEntity.html":{"url":"entities/CategoryRestrictionEntity.html","title":"entity - CategoryRestrictionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryRestrictionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category-restriction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowFor\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { CategoryEntity } from \"./category.entity\";\nimport { UserRoleEntity } from \"../../../../common/user/entity/user-role.entity\";\n\n@Entity(\"category_restriction\")\nexport class CategoryRestrictionEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  allowFor: UserRoleEntity[];\n\n  @ManyToOne(() => CategoryEntity, (t) => t.id)\n  category: CategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for working with tree-categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDescendantsByCodeOfRoot\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRep: TreeRepository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/category/category.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRep\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescendantsByCodeOfRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescendantsByCodeOfRoot(code: string, depth?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Get descendants of a category by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the root category.\n\n                                            \n                                        \n                                        \n                                                depth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The maximum depth for the search (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the tree of descendants of the category.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(cat: CategoryEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoryEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TreeRepository } from \"typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { CATEGORY_RELATIONS } from \"./category.constants\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\n\n/**\n * Service for working with tree-categories.\n */\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly catRep: TreeRepository,\n    @Inject(LOGGER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Get descendants of a category by its code.\n   * @param code The code of the root category.\n   * @param depth The maximum depth for the search (optional).\n   * @returns A promise that resolves to the tree of descendants of the category.\n   */\n  async getDescendantsByCodeOfRoot(code: string, depth?: number) {\n    const cat = await this.catRep.findOne({\n      where: { code },\n      relations: CATEGORY_RELATIONS,\n    });\n    const res = await this.catRep.findDescendantsTree(cat, {\n      depth,\n      relations: CATEGORY_RELATIONS,\n    });\n    res.children?.forEach((cat) => this.sort(cat));\n    this.sort(res);\n    return res;\n  }\n\n  private sort(cat: CategoryEntity) {\n    ObjectUtils.sort(cat.children, \"priority\", false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigItem.html":{"url":"interfaces/ConfigItem.html","title":"interface - ConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigItem {\n  key: string;\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n@Module({\n  imports: [LogModule, CacheModule],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService is a service responsible for managing configurations in your application.\nIt reads configuration properties from .properties files and stores the values in a cache for fast retrieval.\nThe service provides methods to get, set, and remove configuration properties.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatedTsOutput\n                            \n                            \n                                    Private\n                                    Readonly\n                                propertiesFiles\n                            \n                            \n                                    Private\n                                    Readonly\n                                valuesOfProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteExistingConfigTsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                generateConfigTsFiles\n                            \n                            \n                                    Private\n                                generateNamespaceWithVariables\n                            \n                            \n                                    Async\n                                getPropertiesPage\n                            \n                            \n                                    Async\n                                initWithPropertiesFiles\n                            \n                            \n                                    Private\n                                mergePropertiesContent\n                            \n                            \n                                    Private\n                                parseValue\n                            \n                            \n                                    Private\n                                    Async\n                                processAndValidatePropertiesContent\n                            \n                            \n                                    Async\n                                removeProperty\n                            \n                            \n                                    Private\n                                    Async\n                                scanForPropertiesFiles\n                            \n                            \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/config/config.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteExistingConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteExistingConfigTsFiles(directory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateConfigTsFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:292\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateNamespaceWithVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNamespaceWithVariables(namespaceName: string, processedData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:250\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespaceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                processedData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPropertiesPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPropertiesPage(params: PageableParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Retrieves a page of configuration properties based on the provided pageable parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPageable parameters for sorting, filtering, and pagination.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to an object containing the pageable data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initWithPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    initWithPropertiesFiles(genCnfDir?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genCnfDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergePropertiesContent(mainContent: string, localContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:321\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mainContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                localContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processAndValidatePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndValidatePropertiesContent(filePath: string, content: string, fileNamePrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileNamePrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Removes a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the configuration property to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        scanForPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    scanForPropertiesFiles(directory: string, globalKpContent: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                globalKpContent\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(item: ConfigItem)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the key and value of the configuration property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generatedTsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        propertiesFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        valuesOfProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  CONFIG_CACHE_PREFIX,\n  CONFIG_FILE_EXT_PATTERN,\n  FILES_ENCODING,\n  GEN_SRC_DIR,\n  KP_PROPERTIES_FILE_NAME,\n  LOCAL_PROPERTIES_FILE_NAME,\n  PROPERTIES_FILE_EXT_PATTERN,\n} from \"./config.constants\";\nimport { ConfigItem } from \"./config.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * ConfigService is a service responsible for managing configurations in your application.\n * It reads configuration properties from .properties files and stores the values in a cache for fast retrieval.\n * The service provides methods to get, set, and remove configuration properties.\n */\n@Injectable()\nexport class ConfigService {\n  private readonly propertiesFiles: { [path: string]: { [key: string]: any } } =\n    {};\n  private readonly valuesOfProperties: { [key: string]: any } = {};\n  private generatedTsOutput: string;\n\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {}\n\n  /**\n   * Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n   */\n  async initWithPropertiesFiles(genCnfDir?: string) {\n    this.generatedTsOutput = genCnfDir;\n    this.logger.log(`Scan project`);\n    await this.scanForPropertiesFiles(process.cwd());\n    this.logger.log(`Clean generated source dirs`);\n    await this.deleteExistingConfigTsFiles(process.cwd());\n    this.logger.log(`Clean config storage`);\n    await this.cacheService.del(CONFIG_CACHE_PREFIX + \":*\");\n    this.logger.log(`Generate config files`);\n    await this.generateConfigTsFiles();\n    for (const key in this.valuesOfProperties) {\n      await this.cacheService.set(`${key}`, this.valuesOfProperties[key]);\n    }\n    this.logger.log(`Config files was synchronize`);\n  }\n\n  /**\n   * Retrieves a page of configuration properties based on the provided pageable parameters.\n   * @param params - Pageable parameters for sorting, filtering, and pagination.\n   * @returns A promise that resolves to an object containing the pageable data.\n   */\n  async getPropertiesPage(\n    params: PageableParams,\n  ): Promise> {\n    const { limit, page, sort, order, filter } = params;\n    const propertyKeys = await this.cacheService.getFromPattern(\n      `${CONFIG_CACHE_PREFIX}:${!filter ? \"*\" : filter}`,\n    );\n    const sortedKeys = propertyKeys.sort((a, b) => {\n      if (sort && order) {\n        const aValue = a[sort] || \"\";\n        const bValue = b[sort] || \"\";\n        return order === \"ASC\"\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      return a.localeCompare(b);\n    });\n    const totalCount = sortedKeys.length;\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    const keysToRetrieve = sortedKeys.slice(start, end);\n    const propertiesWithValues: ConfigItem[] = await Promise.all(\n      keysToRetrieve.map(async (key) => {\n        const value = await this.cacheService.get(key);\n        return { key: key.replace(`${CONFIG_CACHE_PREFIX}:`, ``), value };\n      }),\n    );\n    return new PageableData(propertiesWithValues, totalCount, page, limit);\n  }\n\n  /**\n   * Sets a configuration property.\n   * @param item - An object containing the key and value of the configuration property.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async setProperty(item: ConfigItem): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${item.key}`;\n    return await this.cacheService.set(fullKey, item.value);\n  }\n\n  /**\n   * Removes a configuration property.\n   * @param key - The key of the configuration property to remove.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async removeProperty(key: string): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${key}`;\n    return await this.cacheService.del(fullKey);\n  }\n\n  private async scanForPropertiesFiles(\n    directory: string,\n    globalKpContent: string | null = null,\n  ) {\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    if (directory === process.cwd()) {\n      for (const file of files) {\n        if (file.isFile() && file.name === KP_PROPERTIES_FILE_NAME) {\n          const kpPath = path.join(directory, file.name);\n          globalKpContent = await fs.promises.readFile(kpPath, FILES_ENCODING);\n          const localPropertiesPath = path.join(\n            directory,\n            LOCAL_PROPERTIES_FILE_NAME,\n          );\n          if (fs.existsSync(localPropertiesPath)) {\n            const localPropertiesContent = await fs.promises.readFile(\n              localPropertiesPath,\n              FILES_ENCODING,\n            );\n            globalKpContent = this.mergePropertiesContent(\n              globalKpContent,\n              localPropertiesContent,\n            );\n          }\n          break;\n        }\n      }\n    }\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        await this.scanForPropertiesFiles(fullPath, globalKpContent);\n      } else if (\n        file.isFile() &&\n        path.extname(file.name) === PROPERTIES_FILE_EXT_PATTERN\n      ) {\n        let fileContent = await fs.promises.readFile(fullPath, FILES_ENCODING);\n        const localPropertiesPath = path.join(\n          directory,\n          LOCAL_PROPERTIES_FILE_NAME,\n        );\n        if (fs.existsSync(localPropertiesPath)) {\n          const localPropertiesContent = await fs.promises.readFile(\n            localPropertiesPath,\n            FILES_ENCODING,\n          );\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            localPropertiesContent,\n          );\n        }\n        if (globalKpContent) {\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            globalKpContent,\n          );\n        }\n        const fileNamePrefix = path.basename(\n          fullPath,\n          PROPERTIES_FILE_EXT_PATTERN,\n        );\n        this.propertiesFiles[fullPath] =\n          await this.processAndValidatePropertiesContent(\n            fullPath,\n            fileContent,\n            fileNamePrefix,\n          );\n      }\n    }\n  }\n\n  private async processAndValidatePropertiesContent(\n    filePath: string,\n    content: string,\n    fileNamePrefix: string,\n  ) {\n    const lines = content.split(\"\\n\");\n    const processedData: { [key: string]: any } = {};\n    for (const line of lines) {\n      if (line.trim().startsWith(\"#\") || line.trim().length === 0) {\n        continue;\n      }\n      const [key, value] = line.split(\"=\");\n      let keyWithoutPrefix = key;\n      if (key.startsWith(fileNamePrefix + \".\")) {\n        keyWithoutPrefix = key.slice(fileNamePrefix.length + 1);\n      } else {\n        continue;\n      }\n      const variableName = keyWithoutPrefix\n        .split(\".\")\n        .map((part) => part.toUpperCase())\n        .join(\"_\");\n      if (!/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(variableName)) {\n        this.logger.error(`Invalid line found: \"${line}\" in file ${filePath}`);\n        throw new Error(`Invalid content in file: \"${filePath}\"`);\n      }\n      const propertyKey = `${CONFIG_CACHE_PREFIX}:${fileNamePrefix}.${keyWithoutPrefix}`;\n      processedData[variableName] = `\"${propertyKey}\"`;\n      if (!propertyKey.startsWith(\"kp.\") && !propertyKey.startsWith(\"local.\")) {\n        this.valuesOfProperties[propertyKey] = this.parseValue(value.trim());\n      }\n    }\n    return processedData;\n  }\n\n  private parseValue(value: string) {\n    let processedValue = value.trim();\n    if (processedValue === \"true\" || processedValue === \"false\") {\n      processedValue = JSON.parse(processedValue);\n    } else if (processedValue === \"null\") {\n      processedValue = null;\n    } else if (/^[-+*/\\d\\s()]*$/.test(processedValue)) {\n      try {\n        processedValue = eval(processedValue);\n      } catch (e) {\n        return processedValue;\n      }\n    }\n    return processedValue;\n  }\n\n  private generateNamespaceWithVariables(\n    namespaceName: string,\n    processedData: { [key: string]: string },\n  ) {\n    let generatedContent = `export namespace ${namespaceName} {\\n`;\n    for (const variableName in processedData) {\n      const processedValue = processedData[variableName];\n      generatedContent += `  export const ${variableName} = ${processedValue};\\n`; // initial value: ${this.valuesOfProperties[processedValue.substring(1,processedValue.length-1)]}\n    }\n    generatedContent += \"}\\n\";\n    return generatedContent;\n  }\n\n  private async deleteExistingConfigTsFiles(directory: string) {\n    if (directory === process.cwd() + \"/node_modules\") {\n      return;\n    }\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        if (file.name === GEN_SRC_DIR) {\n          const genSrcFiles = await fs.promises.readdir(fullPath, {\n            withFileTypes: true,\n          });\n          this.logger.verbose(`Read dir: ${fullPath}`);\n          for (const genSrcFile of genSrcFiles) {\n            if (\n              genSrcFile.isFile() &&\n              genSrcFile.name.endsWith(CONFIG_FILE_EXT_PATTERN)\n            ) {\n              this.logger.verbose(`Delete file: ${genSrcFile.name}`);\n              await fs.promises.unlink(path.join(fullPath, genSrcFile.name));\n            }\n          }\n        } else {\n          await this.deleteExistingConfigTsFiles(fullPath);\n        }\n      }\n    }\n  }\n\n  private async generateConfigTsFiles() {\n    for (const filePath in this.propertiesFiles) {\n      if (path.basename(filePath) === LOCAL_PROPERTIES_FILE_NAME) {\n        continue;\n      }\n      const fileContent = this.propertiesFiles[filePath];\n      const dirPath = this.generatedTsOutput ?? path.dirname(filePath);\n      const genSrcPath = path.join(dirPath, GEN_SRC_DIR);\n      const configFileName = path\n        .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n        .concat(CONFIG_FILE_EXT_PATTERN);\n      const configFilePath = path.join(genSrcPath, configFileName);\n      const namespaceName =\n        path\n          .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n          .charAt(0)\n          .toUpperCase() +\n        path.basename(filePath, PROPERTIES_FILE_EXT_PATTERN).slice(1) +\n        \"Config\";\n      const generatedFileContent = this.generateNamespaceWithVariables(\n        namespaceName,\n        fileContent,\n      );\n      await fs.promises.mkdir(genSrcPath, { recursive: true });\n      await fs.promises.writeFile(configFilePath, generatedFileContent);\n      this.logger.verbose(`Generated ${configFilePath}`);\n    }\n  }\n\n  private mergePropertiesContent(\n    mainContent: string,\n    localContent: string,\n  ): string {\n    const mainContentLines = mainContent.split(\"\\n\");\n    const localContentLines = localContent.split(\"\\n\");\n    const mergedContent = [...mainContentLines];\n    for (const localLine of localContentLines) {\n      if (localLine.trim().startsWith(\"#\") || localLine.trim().length === 0) {\n        continue;\n      }\n      const [localKey] = localLine.split(\"=\");\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbExceptionFilter.html":{"url":"classes/DbExceptionFilter.html","title":"class - DbExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/filters/db-exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DbExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/filters/db-exception-filter.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        QueryFailedError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from \"@nestjs/common\";\nimport { QueryFailedError } from \"typeorm\";\nimport { TypeORMError } from \"typeorm/error/TypeORMError\";\n\n@Catch(TypeORMError)\nexport class DbExceptionFilter implements DbExceptionFilter {\n  catch(exception: QueryFailedError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.status(502).json({ message: exception.message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryStructure.html":{"url":"interfaces/DirectoryStructure.html","title":"interface - DirectoryStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirectoryStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/utils/files.utils.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        [] | DirectoryStructure\n\n                    \n                \n                        \n                            \n                                Defined in lib/shared/utils/files.utils.ts:31\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as crypto from \"crypto\";\nimport { OpenMode } from \"node:fs\";\nimport { Abortable } from \"node:events\";\nimport * as path from \"path\";\n\nconst fileTypeModule = {} as { lib: typeof import(\"file-type\") };\n(async (ft) => {\n  // crutch for import ES module\n  ft.lib = await (eval('import(\"file-type\")') as Promise);\n})(fileTypeModule);\n\ninterface DirectoryStructure {\n  [key: string]: string[] | DirectoryStructure;\n}\n\nexport namespace FilesUtils {\n  export function fileType() {\n    return fileTypeModule.lib;\n  }\n\n  export function getHashFromBuffer(fileBuffer: Buffer) {\n    const hashSum = crypto.createHash(\"sha256\");\n    hashSum.update(fileBuffer);\n    return hashSum.digest(\"hex\");\n  }\n\n  export async function createDirectoriesIfNotExist(directoryPath: string) {\n    try {\n      await fs.promises.access(directoryPath);\n    } catch (error) {\n      await fs.promises.mkdir(directoryPath, { recursive: true });\n    }\n  }\n\n  export async function readFile(\n    path: string,\n    options?:\n      | ({\n          encoding?: null | undefined;\n          flag?: OpenMode | undefined;\n        } & Abortable)\n      | null,\n  ) {\n    return await fs.promises.readFile(path);\n  }\n\n  export async function readDirectoryRecursively(\n    dirPath: string,\n  ): Promise {\n    const result: DirectoryStructure = {};\n\n    async function readDir(\n      currentPath: string,\n      relativePath: string,\n    ): Promise {\n      const files = await fs.promises.readdir(currentPath);\n      const filePromises = files.map(async (file) => {\n        const filePath = path.join(currentPath, file);\n        const stats = await fs.promises.stat(filePath);\n        const newRelativePath = path.join(relativePath, file);\n        if (stats.isDirectory()) {\n          result[newRelativePath] = await readDir(filePath, newRelativePath);\n        } else {\n          if (!result[relativePath]) {\n            result[relativePath] = [];\n          }\n          (result[relativePath] as string[]).push(file);\n        }\n      });\n      await Promise.all(filePromises);\n      return result[relativePath] || [];\n    }\n\n    await readDir(dirPath, \"\");\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoInterceptor.html":{"url":"injectables/DtoInterceptor.html","title":"injectable - DtoInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/interceptors/dto.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializer)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/interceptors/dto.interceptor.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/interceptors/dto.interceptor.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map } from \"rxjs\";\nimport { plainToInstance } from \"class-transformer\";\n\n/**\n * @class DtoInterceptor\n * An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n * @template T - The DTO class to use for transformation.\n */\n@Injectable()\nexport class DtoInterceptor implements NestInterceptor {\n  constructor(private readonly serializer: new () => T) {}\n\n  intercept(context: ExecutionContext, next: CallHandler) {\n    return next\n      .handle()\n      .pipe(map((data) => plainToInstance(this.serializer, data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitySaveHandler.html":{"url":"interfaces/EntitySaveHandler.html","title":"interface - EntitySaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitySaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, data: T, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExchangeTokenPayload.html":{"url":"classes/ExchangeTokenPayload.html","title":"class - ExchangeTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExchangeTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for token exchange payload.\nContains the token to be exchanged for a new token pair JwtDto.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:84\n                        \n                    \n\n            \n                \n                    The refresh token to be exchanged.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerAction.html":{"url":"classes/ExplorerAction.html","title":"class - ExplorerAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                params\n                            \n                            \n                                priority\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerActionEntity.html":{"url":"entities/ExplorerActionEntity.html","title":"entity - ExplorerActionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerActionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-action.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerAction } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { Explorer } from \"../explorer.constants\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\n\n@Entity(\"explorer_actions\")\nexport class ExplorerActionEntity implements ExplorerAction {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumn.html":{"url":"interfaces/ExplorerColumn.html","title":"interface - ExplorerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            named\n                                        \n                                \n                                \n                                        \n                                            objectEnabled\n                                        \n                                \n                                \n                                        \n                                            objectPriority\n                                        \n                                \n                                \n                                        \n                                            objectRenderer\n                                        \n                                \n                                \n                                        \n                                            objectVisibility\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            referencedEntityName\n                                        \n                                \n                                \n                                        \n                                            referencedTableName\n                                        \n                                \n                                \n                                        \n                                            sectionEnabled\n                                        \n                                \n                                \n                                        \n                                            sectionPriority\n                                        \n                                \n                                \n                                        \n                                            sectionRenderer\n                                        \n                                \n                                \n                                        \n                                            sectionVisibility\n                                        \n                                \n                                \n                                        \n                                            tab\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unique\n                                        \n                                \n                                \n                                        \n                                            virtual\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        named\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        named:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedEntityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedEntityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedTableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedTableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ExplorerTab\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTab\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnDataType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnDataType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnEntity.html":{"url":"entities/ExplorerColumnEntity.html","title":"entity - ExplorerColumnEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                multiple\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                named\n                            \n                            \n                                    \n                                    \n                                objectEnabled\n                            \n                            \n                                    \n                                    \n                                objectPriority\n                            \n                            \n                                    \n                                    \n                                objectRenderer\n                            \n                            \n                                    \n                                objectRendererParams\n                            \n                            \n                                    \n                                    \n                                objectVisibility\n                            \n                            \n                                    \n                                    \n                                primary\n                            \n                            \n                                    \n                                    \n                                property\n                            \n                            \n                                    \n                                    \n                                referencedEntityName\n                            \n                            \n                                    \n                                    \n                                referencedTableName\n                            \n                            \n                                    \n                                    \n                                sectionEnabled\n                            \n                            \n                                    \n                                    \n                                sectionPriority\n                            \n                            \n                                    \n                                    \n                                sectionRenderer\n                            \n                            \n                                    \n                                sectionRendererParams\n                            \n                            \n                                    \n                                    \n                                sectionVisibility\n                            \n                            \n                                    \n                                tab\n                            \n                            \n                                    \n                                target\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                unique\n                            \n                            \n                                    \n                                    \n                                virtual\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        named\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'object_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'object_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_entity_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedTableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_table_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'section_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sectionRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'section_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTabEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        virtual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:59\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\nimport { ExplorerColumn } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { ExplorerColumnRendererEntity } from \"./explorer-column-renderer.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTabEntity } from \"./explorer-tab.entity\";\n\n@Entity(\"explorer_columns\")\nexport class ExplorerColumnEntity implements ExplorerColumn {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  property: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n\n  @Column(\"text\", { nullable: false })\n  type: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  virtual: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  primary: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  unique: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  multiple: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  named: boolean;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_entity_name\", nullable: true })\n  referencedEntityName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_table_name\", nullable: true })\n  referencedTableName: string;\n\n  @Index()\n  @Column(\"int\", { name: \"section_priority\", default: 0, unsigned: true })\n  sectionPriority: number;\n\n  @Index()\n  @Column(\"int\", { name: \"object_priority\", default: 0, unsigned: true })\n  objectPriority: number;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_enabled\", default: true })\n  sectionEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_enabled\", default: true })\n  objectEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_visibility\", default: true })\n  sectionVisibility: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_visibility\", default: true })\n  objectVisibility: boolean;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  sectionRenderer: ExplorerColumnRendererEntity;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  objectRenderer: ExplorerColumnRendererEntity;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"section_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  sectionRendererParams: object;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"object_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  objectRendererParams: object;\n\n  @ManyToOne(() => ExplorerTabEntity, (t) => t.id)\n  tab: ExplorerTabEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerColumnRenderer.html":{"url":"classes/ExplorerColumnRenderer.html","title":"class - ExplorerColumnRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerColumnRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                params\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/explorer.types.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnRendererEntity.html":{"url":"entities/ExplorerColumnRendererEntity.html","title":"entity - ExplorerColumnRendererEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnRendererEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column-renderer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnRenderer } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { Explorer } from \"../explorer.constants\";\n\n@Entity(\"explorer_column_renderers\")\nexport class ExplorerColumnRendererEntity implements ExplorerColumnRenderer {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerModule.html":{"url":"modules/ExplorerModule.html","title":"module - ExplorerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/explorer/explorer.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: ExplorerModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExplorerModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicExplorerService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module, OnModuleInit } from \"@nestjs/common\";\nimport { BasicExplorerService } from \"./basic-explorer.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ExplorerTargetEntity } from \"./entity/explorer-target.entity\";\nimport { ExplorerColumnEntity } from \"./entity/explorer-column.entity\";\nimport { ExplorerModuleOptions, ExplorerService } from \"./explorer.types\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n@Module({})\nexport class ExplorerModule implements OnModuleInit {\n  static forRoot(\n    options: ExplorerModuleOptions = {\n      service: BasicExplorerService,\n    },\n  ): DynamicModule {\n    return {\n      module: ExplorerModule,\n      imports: [\n        TypeOrmModule.forFeature([ExplorerTargetEntity, ExplorerColumnEntity]),\n        LogModule,\n      ],\n      providers: [\n        {\n          provide: ExplorerService,\n          useClass: options.service,\n        },\n      ],\n      exports: [ExplorerService],\n    };\n  }\n\n  constructor(private readonly service: ExplorerService) {}\n\n  async onModuleInit() {\n    await this.service.analyzeDatabase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerService.html":{"url":"classes/ExplorerService.html","title":"class - ExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                analyzeDatabase\n                            \n                            \n                                    Abstract\n                                changeTarget\n                            \n                            \n                                    Abstract\n                                getEntityData\n                            \n                            \n                                    Abstract\n                                getPageableEntityData\n                            \n                            \n                                    Abstract\n                                getTargetData\n                            \n                            \n                                    Abstract\n                                getTargetList\n                            \n                            \n                                    Abstract\n                                removeEntity\n                            \n                            \n                                    Abstract\n                                saveEntityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        analyzeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        changeTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityData(target: string, rowId: string | number, maxDepth?: number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rowId\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getPageableEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPageableEntityData(target: string, params?: PageableParams, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetData(target: string, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string | number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        saveEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntityData(target: string, entity: T, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:142\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTab.html":{"url":"interfaces/ExplorerTab.html","title":"interface - ExplorerTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTabEntity.html":{"url":"entities/ExplorerTabEntity.html","title":"entity - ExplorerTabEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTabEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-tab.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTab } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\n\n@Entity(\"explorer_tabs\")\nexport class ExplorerTabEntity implements ExplorerTab {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  size: object;\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTarget.html":{"url":"interfaces/ExplorerTarget.html","title":"interface - ExplorerTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            canRead\n                                        \n                                \n                                \n                                        \n                                            canWrite\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            defaultActionCreate\n                                        \n                                \n                                \n                                        \n                                            defaultActionDelete\n                                        \n                                \n                                \n                                        \n                                            defaultActionDuplicate\n                                        \n                                \n                                \n                                        \n                                            defaultActionSave\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tableName\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ExplorerAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerAction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRead:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canWrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canWrite:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         ExplorerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionSave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTargetEntity.html":{"url":"entities/ExplorerTargetEntity.html","title":"entity - ExplorerTargetEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTargetEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-target.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actions\n                            \n                            \n                                    \n                                    \n                                alias\n                            \n                            \n                                    \n                                    \n                                canRead\n                            \n                            \n                                    \n                                    \n                                canWrite\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                defaultActionCreate\n                            \n                            \n                                    \n                                    \n                                defaultActionDelete\n                            \n                            \n                                    \n                                    \n                                defaultActionDuplicate\n                            \n                            \n                                    \n                                    \n                                defaultActionSave\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tableName\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerAction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.target, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_create', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_delete', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_duplicate', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_save', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {name: 'table_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnEntity } from \"./explorer-column.entity\";\nimport { ExplorerAction, ExplorerTarget } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { ExplorerActionEntity } from \"./explorer-action.entity\";\nimport { UserRoleEntity } from \"../../user/entity/user-role.entity\";\n\n@Entity(\"explorer_targets\")\nexport class ExplorerTargetEntity implements ExplorerTarget {\n  @PrimaryColumn(\"varchar\")\n  target: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { name: \"table_name\", nullable: false })\n  tableName: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  alias: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @OneToMany(() => ExplorerColumnEntity, (c) => c.target, { cascade: true })\n  columns: ExplorerColumnEntity[];\n\n  @ManyToMany(() => ExplorerActionEntity)\n  @JoinTable()\n  actions: ExplorerAction[];\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_create\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionCreate: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_save\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionSave: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_delete\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDelete: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_duplicate\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDuplicate: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canRead: UserRoleEntity[];\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canWrite: UserRoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            preview\n                                        \n                                \n                                \n                                        \n                                            public\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preview:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                preview\n                            \n                            \n                                    \n                                public\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { File } from \"../file.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { FileMetadataEntity } from \"./file-metadata.entity\";\n\n@Entity(\"files\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class FileEntity implements File {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"varchar\", { nullable: true })\n  path: string;\n\n  @Column(\"boolean\", { default: false })\n  public: boolean;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  preview: MediaEntity;\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileManager.html":{"url":"classes/FileManager.html","title":"class - FileManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateFile\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getFilePath\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic: boolean, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMd.html":{"url":"classes/FileMd.html","title":"class - FileMd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFileMetadataEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            exif\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            gps\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            icc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exif:         ExifFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExifFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gps:         GpsFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GpsFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icc:         IccFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IccFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         ImageFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         VideoFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileMetadataEntity.html":{"url":"entities/FileMetadataEntity.html","title":"entity - FileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                audio\n                            \n                            \n                                    \n                                    \n                                exif\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                gps\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                icc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                mime\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExifFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IccFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { FileMetadata } from \"../file.types\";\nimport { ImageFileMetadataEntity } from \"./image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./gps-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./icc-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./exif-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./video-file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./audio-file-metadata.entity\";\n\n@Entity(\"file_metadata\")\nexport class FileMetadataEntity implements FileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"varchar\", { nullable: true })\n  mime: string;\n\n  @Column(\"varchar\", { nullable: true })\n  ext: string;\n\n  @Column(\"varchar\", { nullable: true })\n  hash: string;\n\n  @OneToOne(() => ImageFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  image: ImageFileMetadataEntity;\n\n  @OneToOne(() => GpsFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  gps: GpsFileMetadataEntity;\n\n  @OneToOne(() => IccFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  icc: IccFileMetadataEntity;\n\n  @OneToOne(() => ExifFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  exif: ExifFileMetadataEntity;\n\n  @OneToOne(() => AudioFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  audio: AudioFileMetadataEntity;\n\n  @OneToOne(() => VideoFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  video: VideoFileMetadataEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileMetadataService.html":{"url":"injectables/FileMetadataService.html","title":"injectable - FileMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file-metadata.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FileMd\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFileMetadataEntity\n                            \n                            \n                                    Private\n                                    Async\n                                setAudioMd\n                            \n                            \n                                    Private\n                                setImageMd\n                            \n                            \n                                    Private\n                                    Async\n                                setVideoMd\n                            \n                            \n                                    Private\n                                trimProperties\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileMd\n\n                        \n                    \n                    \n                        \n                                Defined in         FileMd:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setAudioMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAudioMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setVideoMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setVideoMd(md: FileMetadataEntity, filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        trimProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    trimProperties(obj: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:58\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { parseBuffer } from \"music-metadata\";\nimport * as ExifReader from \"exifreader\";\nimport * as ffprobe from \"ffprobe\";\nimport * as ffprobeStatic from \"ffprobe-static\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileMd } from \"./file.constants\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./entity/audio-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./entity/video-file-metadata.entity\";\nimport { ImageFileMetadataEntity } from \"./entity/image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./entity/gps-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./entity/exif-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./entity/icc-file-metadata.entity\";\nimport getHashFromBuffer = FilesUtils.getHashFromBuffer;\nimport fileType = FilesUtils.fileType;\n\n@Injectable()\nexport class FileMetadataService extends FileMd {\n  async createFileMetadataEntity(buf: Buffer, filePath?: string) {\n    const fileTypeData = await fileType().fileTypeFromBuffer(buf);\n    const md = new FileMetadataEntity();\n    md.hash = getHashFromBuffer(buf);\n    if (fileTypeData) {\n      md.mime = fileTypeData.mime;\n      md.ext = fileTypeData.ext;\n    } else {\n      return md;\n    }\n    try {\n      if (md.mime.startsWith(\"image\")) {\n        this.setImageMd(md, buf);\n      } else if (md.mime.startsWith(\"audio\")) {\n        await this.setAudioMd(md, buf);\n      } else if (md.mime.startsWith(\"video\")) {\n        await this.setVideoMd(md, filePath);\n      }\n    } catch (e) {}\n    return this.trimProperties(md);\n  }\n\n  private trimProperties(obj: T): T {\n    if (typeof obj === \"string\") {\n      return obj.trim() === \"\" || obj.indexOf(\"\") !== -1\n        ? undefined\n        : (obj.trim() as T);\n    } else if (Array.isArray(obj)) {\n      return obj.map(this.trimProperties) as T;\n    } else if (typeof obj === \"object\") {\n      if (obj instanceof Date) {\n        return obj as T;\n      }\n      const result: Record = {};\n      for (const key in obj) {\n        const value = this.trimProperties(obj[key]);\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      }\n      return result as T;\n    } else {\n      return obj;\n    }\n  }\n\n  private async setVideoMd(md: FileMetadataEntity, filePath: string) {\n    if (filePath) {\n      const ffProbeMd = await ffprobe(filePath, { path: ffprobeStatic.path });\n      if (ffProbeMd) {\n        const audioMd = ffProbeMd.streams.find((v) => v.codec_type === \"audio\");\n        if (audioMd) {\n          md.audio = new AudioFileMetadataEntity();\n          md.audio.container = audioMd.codec_name?.toUpperCase();\n          md.audio.codec = audioMd.codec_long_name;\n          md.audio.duration = parseFloat(audioMd.duration || 0);\n          md.audio.numberOfChannels = audioMd.channels;\n          md.audio.bitrate = audioMd.bit_rate;\n        }\n        const videoMd = ffProbeMd.streams.find((v) => v.codec_type === \"video\");\n        if (videoMd) {\n          md.video = new VideoFileMetadataEntity();\n          md.video.codec = videoMd.codec_name?.toUpperCase();\n          md.video.container = videoMd.codec_long_name;\n          md.video.width = videoMd.width;\n          md.video.height = videoMd.height;\n          md.video.bitrate = videoMd.bit_rate;\n          md.video.duration = parseFloat(videoMd.duration || 0);\n          md.video.sampleAspectRatio = videoMd.sample_aspect_ratio;\n          md.video.displayAspectRatio = videoMd.display_aspect_ratio;\n          md.video.colorRange = videoMd.color_range;\n          md.video.colorSpace = videoMd.color_space;\n          md.video.frameRate = videoMd.r_frame_rate;\n          md.video.rotate = videoMd.tags?.rotate;\n        }\n      }\n    }\n  }\n\n  private async setAudioMd(md: FileMetadataEntity, buf: Buffer) {\n    const musicMd = await parseBuffer(buf);\n    if (!musicMd) {\n      return;\n    }\n    md.audio = new AudioFileMetadataEntity();\n    md.audio.container = musicMd.format.container;\n    md.audio.codec = musicMd.format.codec;\n    md.audio.sampleRate = musicMd.format.sampleRate;\n    md.audio.numberOfChannels = musicMd.format.numberOfChannels;\n    md.audio.bitrate = musicMd.format.bitrate;\n    md.audio.codecProfile = musicMd.format.codecProfile;\n    md.audio.tool = musicMd.format.tool;\n    md.audio.duration = musicMd.format.duration;\n    md.audio.title = musicMd.common.title;\n    md.audio.album = musicMd.common.album;\n    md.audio.artist = musicMd.common.artists?.join(\", \");\n    md.audio.year = musicMd.common.year;\n    md.audio.genre = musicMd.common.genre?.join(\", \");\n    md.audio.label = musicMd.common.label?.join(\", \");\n  }\n\n  private setImageMd(md: FileMetadataEntity, buf: Buffer) {\n    const exifData = ExifReader.load(buf, {\n      expanded: true,\n      includeUnknown: true,\n    });\n    if (!exifData) {\n      return;\n    }\n    md.image = new ImageFileMetadataEntity();\n    md.image.bps = exifData.file[\"Bits Per Sample\"]?.value;\n    md.image.height = exifData.file[\"Image Height\"]?.value;\n    md.image.width = exifData.file[\"Image Width\"]?.value;\n    md.image.colorComponents = exifData.file[\"Color Components\"]?.value;\n    md.image.subsampling = exifData.file[\"Subsampling\"]?.description;\n    if (exifData.png) {\n      md.image.height = exifData.png[\"Image Height\"]?.value;\n      md.image.width = exifData.png[\"Image Width\"]?.value;\n      md.image.bitDepth = exifData.png[\"Bit Depth\"]?.value;\n      md.image.colorType = exifData.png[\"Color Type\"]?.description;\n      md.image.compression = exifData.png[\"Compression\"]?.description;\n      md.image.filter = exifData.png[\"Filter\"]?.description;\n      md.image.interlace = exifData.png[\"Interlace\"]?.description;\n    }\n    if (exifData.gps) {\n      md.gps = new GpsFileMetadataEntity();\n      md.gps.altitude = exifData.gps?.Altitude;\n      md.gps.longitude = exifData.gps?.Longitude;\n      md.gps.latitude = exifData.gps?.Latitude;\n    }\n    if (exifData.icc) {\n      md.icc = new IccFileMetadataEntity();\n      md.icc.profileVersion = exifData.icc[\"Profile Version\"]?.description;\n      md.icc.profileClassName =\n        exifData.icc[\"Profile/Device class\"]?.description;\n      md.icc.profileClassValue = exifData.icc[\"Profile/Device class\"]?.value;\n      md.icc.connectionSpace = exifData.icc[\"Connection Space\"]?.description;\n      md.icc.iccProfileDate = new Date(exifData.icc[\"ICC Profile Date\"]?.value);\n      if (exifData.icc[\"ICC Profile Date\"]?.value) {\n        md.image.dateTime = md.icc.iccProfileDate;\n      }\n      md.icc.iccSignature = exifData.icc[\"ICC Signature\"]?.description;\n      md.icc.primaryPlatform = exifData.icc[\"Primary Platform\"]?.description;\n      md.icc.deviceManufacturer =\n        exifData.icc[\"Device Manufacturer\"]?.description;\n      md.icc.deviceModelNumber =\n        exifData.icc[\"Device Model Number\"]?.description;\n      md.icc.renderingIntentName =\n        exifData.icc[\"Rendering Intent\"]?.description;\n      md.icc.renderingIntentValue = exifData.icc[\"Rendering Intent\"]?.value;\n      md.icc.profileCreator = exifData.icc[\"Profile Creator\"]?.description;\n      md.icc.iccDescription = exifData.icc[\"ICC Description\"]?.description;\n      md.icc.iccCopyright = exifData.icc[\"ICC Copyright\"]?.description;\n    }\n    if (exifData.exif) {\n      md.exif = new ExifFileMetadataEntity();\n      md.exif.make = exifData.exif.Make?.description;\n      md.exif.model = exifData.exif.Model?.description;\n      md.exif.orientation = exifData.exif.Orientation?.description;\n      md.exif.resolutionX = exifData.exif.XResolution?.description;\n      md.exif.resolutionY = exifData.exif.YResolution?.description;\n      md.exif.resolutionUnit = exifData.exif.ResolutionUnit?.description;\n      md.exif.software = exifData.exif.Software?.description;\n      md.exif.ycbCrPositioning = exifData.exif.YCbCrPositioning?.description;\n      md.exif.exifIfdPointer = exifData.exif[\"Exif IFD Pointer\"]?.description;\n      md.exif.gpsInfoIfdPointer =\n        exifData.exif[\"GPS Info IFD Pointer\"]?.description;\n      md.exif.exposureTime = exifData.exif.ExposureTime?.description;\n      md.exif.fNumber = exifData.exif.FNumber?.description;\n      md.exif.exposureProgram = exifData.exif.ExposureProgram?.description;\n      md.exif.isoSpeedRatings = exifData.exif.ISOSpeedRatings?.description;\n      md.exif.exifVersion = exifData.exif.ExifVersion?.description;\n      md.exif.offsetTime = exifData.exif.OffsetTime?.description;\n      md.exif.shutterSpeedValue = exifData.exif.ShutterSpeedValue?.description;\n      md.exif.aperture = exifData.exif.ApertureValue?.description;\n      md.exif.brightness = exifData.exif.BrightnessValue?.description;\n      md.exif.exposureBias = exifData.exif.ExposureBiasValue?.description;\n      md.exif.maxAperture = exifData.exif.MaxApertureValue?.description;\n      md.exif.subjectDistance = exifData.exif.SubjectDistance?.description;\n      md.exif.meteringMode = exifData.exif.MeteringMode?.description;\n      md.exif.flash = exifData.exif.Flash?.description;\n      md.exif.focalLength = exifData.exif.FocalLength?.description;\n      md.exif.flashpixVersion = exifData.exif.FlashpixVersion?.description;\n      md.exif.colorSpace = exifData.exif.ColorSpace?.description;\n      md.exif.pixelXDimension = exifData.exif.PixelXDimension?.description;\n      md.exif.pixelYDimension = exifData.exif.PixelYDimension?.description;\n      md.exif.interoperabilityIfdPointer =\n        exifData.exif[\"Interoperability IFD Pointer\"]?.description;\n      md.exif.sensingMethod = exifData.exif.SensingMethod?.description;\n      md.exif.sceneType = exifData.exif.SceneType?.description;\n      md.exif.customRendered = exifData.exif.CustomRendered?.description;\n      md.exif.exposureMode = exifData.exif.ExposureMode?.description;\n      md.exif.whiteBalance = exifData.exif.WhiteBalance?.description;\n      md.exif.digitalZoomRatio = exifData.exif.DigitalZoomRatio?.description;\n      md.exif.sceneCaptureType = exifData.exif.SceneCaptureType?.description;\n      md.exif.contrast = exifData.exif.Contrast?.description;\n      md.exif.saturation = exifData.exif.Saturation?.description;\n      md.exif.sharpness = exifData.exif.Sharpness?.description;\n      md.exif.subjectDistanceRange =\n        exifData.exif.SubjectDistanceRange?.description;\n      md.exif.lensMake = exifData.exif.LensMake?.description;\n      md.exif.lensModel = exifData.exif.LensModel?.description;\n      md.exif.compositeImage = exifData.exif[\"CompositeImage\"]?.description;\n      md.exif.interoperabilityIndex =\n        exifData.exif.InteroperabilityIndex?.description;\n      md.exif.interoperabilityVersion =\n        exifData.exif[\"InteroperabilityVersion\"]?.description;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FileModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FileModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { FileService } from \"./file.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport { FileModuleOptions } from \"./file.types\";\nimport { FileMetadataService } from \"./file-metadata.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n@Module({})\nexport class FileModule {\n  static forRoot(\n    options: FileModuleOptions = {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    },\n  ): DynamicModule {\n    return {\n      module: FileModule,\n      imports: [TypeOrmModule.forFeature([FileEntity]), LogModule, CacheModule],\n      providers: [\n        {\n          provide: FileManager,\n          useClass: options.fileManager,\n        },\n        {\n          provide: FileMd,\n          useClass: options.fileMd,\n        },\n      ],\n      exports: [FileManager, FileMd],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable service for managing files, including uploading, finding, and removing files.\n\n            \n\n            \n                Extends\n            \n            \n                            FileManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBasicFindQb\n                            \n                            \n                                    Private\n                                    Async\n                                createFileDirectory\n                            \n                            \n                                    Private\n                                    Async\n                                createFileEntity\n                            \n                            \n                                    Async\n                                createOrUpdateFile\n                            \n                            \n                                    Async\n                                findByCode\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                findPrivateById\n                            \n                            \n                                    Async\n                                findPublicById\n                            \n                            \n                                    Async\n                                getFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                getPrivateDir\n                            \n                            \n                                    Private\n                                    Async\n                                getPublicDir\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, fileRep: Repository, cacheService: CacheService, metadataService: FileMd)\n                    \n                \n                        \n                            \n                                Defined in lib/common/file/file.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataService\n                                                  \n                                                        \n                                                                        FileMd\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBasicFindQb\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBasicFindQb()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a query builder for finding files with their related entities.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A query builder instance for finding files.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileDirectory(isPublic: boolean, entityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a file directory for the specified public/private status and entity ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the directory is for public files (true) or private files (false).\n\n\n                                            \n                                        \n                                        \n                                                entityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity ID to use as the directory name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the created directory path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileEntity(isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a new FileEntity with the specified public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:66\n\n                        \n                    \n\n\n            \n                \n                        Uploads a file and saves it to the specified directory (public or private).\nAlso creates a FileEntity and saves the file's metadata in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nBuffer of file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nfile extension (based of file name).\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSpecific identification code for file entity.\n\n\n                                            \n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nID of file entity for patch.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nname for file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:148\n\n                        \n                    \n\n\n            \n                \n                        Finds a file entity by code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number, isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:131\n\n                        \n                    \n\n\n            \n                \n                        Private helper method to find a file by its ID and public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file is public (true) or private (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:168\n\n                        \n                    \n\n\n            \n                \n                        Finds a private file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:159\n\n                        \n                    \n\n\n            \n                \n                        Finds a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:177\n\n                        \n                    \n\n\n            \n                \n                        Constructs the full file path for the given File object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA File object containing the file's metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The full file path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPrivateDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:284\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPublicDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:279\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:187\n\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID and deletes its corresponding directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed FileEntity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { File } from \"./file.types\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileConfig } from \"../../../gen-src/file.config\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport PRIVATE_DIR = FileConfig.PRIVATE_DIR;\nimport PUBLIC_DIR = FileConfig.PUBLIC_DIR;\nimport createDirectoriesIfNotExist = FilesUtils.createDirectoriesIfNotExist;\n\n/**\n * Injectable service for managing files, including uploading, finding, and removing files.\n */\n@Injectable()\nexport class FileService extends FileManager {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectRepository(FileEntity)\n    private readonly fileRep: Repository,\n    private readonly cacheService: CacheService,\n    private readonly metadataService: FileMd,\n  ) {\n    super();\n  }\n\n  /**\n   * Uploads a file and saves it to the specified directory (public or private).\n   * Also creates a FileEntity and saves the file's metadata in the database.\n   * @param file - Buffer of file.\n   * @param extension - file extension (based of file name).\n   * @param isPublic - A boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n   * @param code - Specific identification code for file entity.\n   * @param existedEntityId - ID of file entity for patch.\n   * @param name - name for file entity.\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  async createOrUpdateFile(\n    file: Buffer,\n    extension = \"\",\n    isPublic = true,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise {\n    let entity: FileEntity = undefined;\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (existedEntityId) {\n        entity = await this.findFileById(existedEntityId, isPublic);\n        if (!entity) {\n          throw new BadRequestException(\n            `Cannot patch file with ID ${existedEntityId}, because than not exists`,\n          );\n        }\n        const dir = path.join(\n          !entity.public\n            ? await this.getPrivateDir()\n            : await this.getPublicDir(),\n          entity.id.toString(),\n        );\n        await fs.promises\n          .rm(dir, { recursive: true, force: true })\n          .catch((err) => {\n            throw new InternalServerErrorException(\n              `Failed to delete directory: ${dir}`,\n              err,\n            );\n          });\n      } else {\n        entity = await this.createFileEntity(isPublic);\n      }\n      const outputPath = await this.createFileDirectory(\n        entity.public,\n        entity.id.toString(),\n      );\n      const fileName =\n        entity.id.toString() + (extension ? `.${extension}` : extension);\n      entity.size = file.length;\n      entity.path = fileName;\n      entity.name = name;\n      entity.code = code;\n      await fs.promises.writeFile(`${outputPath}/${fileName}`, file);\n      if (!existedEntityId) {\n        entity.metadata = await this.metadataService.createFileMetadataEntity(\n          file,\n          `${outputPath}/${fileName}`,\n        );\n      }\n      await transactionManager.save(entity);\n    });\n    this.logger.log(\n      `${!existedEntityId ? `Created` : `Updated`} file with ID ${entity.id}`,\n    );\n    return entity;\n  }\n\n  /**\n   * Private helper method to find a file by its ID and public/private status.\n   * @param id - The ID of the file to find.\n   * @param isPublic - A boolean flag indicating if the file is public (true) or private (false).\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findFileById(id: number, isPublic: boolean = undefined) {\n    const qb = this.createBasicFindQb().where(\"file.id = :id\", { id });\n    if (isPublic !== undefined) {\n      qb.andWhere(`file.public = :isPublic`, { isPublic });\n    }\n    const entity = await qb.getOne();\n    if (!entity) {\n      throw new NotFoundException(`File with ID ${id} not found`);\n    }\n    return entity;\n  }\n\n  /**\n   * Finds a file entity by code.\n   * @param code - The code of the file entity.\n   * @returns The found file entity.\n   */\n  async findByCode(code: string): Promise {\n    return await this.createBasicFindQb()\n      .where(\"file.code = :code\", { code })\n      .getOne();\n  }\n\n  /**\n   * Finds a public file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPublicById(id: number): Promise {\n    return this.findFileById(id, true);\n  }\n\n  /**\n   * Finds a private file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPrivateById(id: number): Promise {\n    return this.findFileById(id);\n  }\n\n  /**\n   * Constructs the full file path for the given File object.\n   * @param file - A File object containing the file's metadata.\n   * @returns The full file path as a string.\n   */\n  async getFilePath(file: File): Promise {\n    const filePath = `${!file.public ? await this.getPrivateDir() : await this.getPublicDir()}/${file.id}/`;\n    return filePath + file.path;\n  }\n\n  /**\n   * Removes a file by its ID and deletes its corresponding directory.\n   * @param id - The ID of the file to remove.\n   * @returns A promise that resolves to the removed FileEntity.\n   */\n  async remove(id: number): Promise {\n    const file = await this.findFileById(id);\n    const dir = path.join(\n      !file.public ? await this.getPrivateDir() : await this.getPublicDir(),\n      file.id.toString(),\n    );\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (file.metadata) {\n        if (file.metadata.image) {\n          await transactionManager.remove(file.metadata.image);\n        }\n        if (file.metadata.gps) {\n          await transactionManager.remove(file.metadata.gps);\n        }\n        if (file.metadata.audio) {\n          await transactionManager.remove(file.metadata.audio);\n        }\n        if (file.metadata.video) {\n          await transactionManager.remove(file.metadata.video);\n        }\n      }\n      await transactionManager.remove(file);\n      await fs.promises\n        .rm(dir, { recursive: true, force: true })\n        .catch((err) => {\n          throw new InternalServerErrorException(\n            `Failed to delete directory: ${dir}`,\n            err,\n          );\n        });\n    });\n    this.logger.log(`File with ID ${id} removed`);\n    return file;\n  }\n\n  /**\n   * Private helper method to create a query builder for finding files with their related entities.\n   * @returns A query builder instance for finding files.\n   */\n  private createBasicFindQb() {\n    return this.fileRep\n      .createQueryBuilder(\"file\")\n      .leftJoinAndSelect(\"file.icon\", \"icon\")\n      .leftJoinAndSelect(\"file.metadata\", \"metadata\")\n      .leftJoinAndSelect(\"metadata.gps\", \"metaGps\")\n      .leftJoinAndSelect(\"metadata.image\", \"metaImage\")\n      .leftJoinAndSelect(\"metadata.audio\", \"metaAudio\")\n      .leftJoinAndSelect(\"metadata.video\", \"metaVideo\")\n      .leftJoinAndSelect(\"icon.name\", \"iconName\")\n      .leftJoinAndSelect(\"iconName.lang\", \"iconLang\")\n      .leftJoinAndSelect(\"icon.files\", \"iconFiles\")\n      .leftJoinAndSelect(\"iconFiles.format\", \"iconFilesFormat\")\n      .leftJoinAndSelect(\"icon.type\", \"iconType\")\n      .leftJoinAndSelect(\"iconType.ext\", \"iconTypeExt\")\n      .leftJoinAndSelect(\"file.preview\", \"preview\")\n      .leftJoinAndSelect(\"preview.name\", \"previewName\")\n      .leftJoinAndSelect(\"previewName.lang\", \"previewLang\")\n      .leftJoinAndSelect(\"preview.files\", \"previewFiles\")\n      .leftJoinAndSelect(\"previewFiles.format\", \"previewFilesFormat\")\n      .leftJoinAndSelect(\"preview.type\", \"previewType\")\n      .leftJoinAndSelect(\"previewType.ext\", \"previewTypeExt\");\n  }\n\n  /**\n   * Private helper method to create a file directory for the specified public/private status and entity ID.\n   * @param isPublic - A boolean flag indicating if the directory is for public files (true) or private files (false).\n   * @param entityId - The entity ID to use as the directory name.\n   * @returns A promise that resolves to the created directory path as a string.\n   */\n  private async createFileDirectory(\n    isPublic: boolean,\n    entityId: string,\n  ): Promise {\n    const dir = path.join(\n      !isPublic ? await this.getPrivateDir() : await this.getPublicDir(),\n      entityId,\n    );\n    await createDirectoriesIfNotExist(dir);\n    return dir;\n  }\n\n  /**\n   * Private helper method to create a new FileEntity with the specified public/private status.\n   * @param isPublic - A boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  private async createFileEntity(isPublic: boolean) {\n    const entity = new FileEntity();\n    entity.public = isPublic;\n    return this.fileRep.save(entity);\n  }\n\n  private async getPublicDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PUBLIC_DIR));\n    return path.normalize(dir);\n  }\n\n  private async getPrivateDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PRIVATE_DIR));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenMsException.html":{"url":"classes/ForbiddenMsException.html","title":"class - ForbiddenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/forbidden-ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/forbidden-ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\nexport class ForbiddenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.FORBIDDEN, message || \"Forbidden\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCaptchaService.html":{"url":"classes/GoogleCaptchaService.html","title":"class - GoogleCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/google-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\nIt manages the generation and validation of Google reCAPTCHAs.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/google-captcha.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:46\n\n                        \n                    \n\n\n            \n                \n                        Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a CaptchaResponse object containing the captcha id and type.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:62\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against Google's reCAPTCHA verification service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { lastValueFrom } from \"rxjs\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\n\n/**\n * The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\n * It manages the generation and validation of Google reCAPTCHAs.\n */\nexport class GoogleCaptchaService extends CaptchaService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n    private readonly http: HttpService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n   * @returns {Promise} - A promise resolving to a CaptchaResponse object containing the captcha id and type.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = await this.cacheService.get(CaptchaConfig.GOOGLE_PUBLIC_KEY);\n    return { id, type: \"google\" };\n  }\n\n  /**\n   * Validates the provided captcha request against Google's reCAPTCHA verification service.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const secretKey = await this.cacheService.get(\n      CaptchaConfig.GOOGLE_SECRET_KEY,\n    );\n    const response$ = await this.http.post(\n      `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${request.data}`,\n    );\n    const response = await lastValueFrom(response$);\n    return response?.data?.success;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GpsFileMetadata.html":{"url":"interfaces/GpsFileMetadata.html","title":"interface - GpsFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GpsFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitude\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GpsFileMetadataEntity.html":{"url":"entities/GpsFileMetadataEntity.html","title":"entity - GpsFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GpsFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/gps-file-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                altitude\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        altitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { GpsFileMetadata } from \"../file.types\";\n\n@Entity(\"file_metadata_gps\")\nexport class GpsFileMetadataEntity implements GpsFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  altitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  latitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphicCaptchaService.html":{"url":"classes/GraphicCaptchaService.html","title":"class - GraphicCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphicCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/graphic-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\nIt manages the generation and validation of graphic captchas.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Private\n                                generateColor\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaExp\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontFamily\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontPath\n                            \n                            \n                                    Private\n                                    Async\n                                makeImageFromText\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/graphic-captcha.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of Logger.\n\n\n                                                        \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of CacheService.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:55\n\n                        \n                    \n\n\n            \n                \n                        Generates a new graphical captcha and stores it in the cache.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Generates a random RGB color.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nAn RGB color string.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaExp()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha expiration time defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontFamily\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontFamily()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font family defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha font family.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontPath()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font path defined in configuration and normalizes it.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the normalized captcha font path.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeImageFromText\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeImageFromText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Generates an image from the provided text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text to be drawn on the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to a base64 encoded image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:76\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against the cached value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { createCanvas, registerFont } from \"canvas\";\nimport { CAPTCHA_CACHE_PREFIX } from \"./captcha.constants\";\nimport * as path from \"path\";\nimport { StringUtils } from \"../../shared/utils/string.utils\";\nimport { NumberUtils } from \"../../shared/utils/number.utils\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport generateRandomString = StringUtils.generateRandomString;\nimport generateRandomInt = NumberUtils.generateRandomInt;\n\n/**\n * The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\n * It manages the generation and validation of graphic captchas.\n */\nexport class GraphicCaptchaService extends CaptchaService {\n  /**\n   * @param {Logger} logger - An instance of Logger.\n   * @param {CacheService} cacheService - An instance of CacheService.\n   */\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new graphical captcha and stores it in the cache.\n   * @returns {Promise} - A promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = uuidv4();\n    const val = generateRandomString(5, 7);\n    const image = await this.makeImageFromText(val);\n    const capEx = await this.getCaptchaExp();\n    await this.cacheService.set(`${CAPTCHA_CACHE_PREFIX}:${id}`, val, capEx);\n    this.logger.debug(`Generated captcha with id: ${id} and value: ${val}`);\n    return { id, image: `data:image/png;base64,${image}`, type: \"default\" };\n  }\n\n  /**\n   * Validates the provided captcha request against the cached value.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const key = `${CAPTCHA_CACHE_PREFIX}:${request.id}`;\n    const val = await this.cacheService.get(key);\n    this.cacheService.del(key);\n    if (!val) {\n      this.logger.warn(`Invalid captcha id: ${request.id}`);\n      return false;\n    }\n    if (val !== request.data) {\n      this.logger.warn(`Incorrect captcha value for id: ${request.id}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Generates an image from the provided text.\n   * @param {string} text - The text to be drawn on the image.\n   * @returns {Promise} - A promise resolving to a base64 encoded image.\n   */\n  private async makeImageFromText(text: string) {\n    const canvas = createCanvas(200, 50);\n    const ctx = canvas.getContext(\"2d\");\n    const capFontFamily = await this.getCaptchaFontFamily();\n    const capFontPath = await this.getCaptchaFontPath();\n    registerFont(capFontPath, { family: capFontFamily });\n    ctx.fillStyle = this.generateColor();\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = `30px ${capFontFamily}`;\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i } - A promise resolving to the captcha expiration time.\n   */\n  private async getCaptchaExp() {\n    return await this.cacheService.getNumber(CaptchaConfig.EXPIRATION);\n  }\n\n  /**\n   * Retrieves the captcha font family defined in configuration.\n   * @returns {Promise} - A promise resolving to the captcha font family.\n   */\n  private async getCaptchaFontFamily() {\n    return await this.cacheService.get(CaptchaConfig.FONT_FAMILY);\n  }\n\n  /**\n   * Retrieves the captcha font path defined in configuration and normalizes it.\n   * @returns {Promise} - A promise resolving to the normalized captcha font path.\n   */\n  private async getCaptchaFontPath() {\n    const dir =\n      process.cwd() + (await this.cacheService.get(CaptchaConfig.FONT_PATH));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IccFileMetadata.html":{"url":"interfaces/IccFileMetadata.html","title":"interface - IccFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IccFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectionSpace\n                                        \n                                \n                                \n                                        \n                                            deviceManufacturer\n                                        \n                                \n                                \n                                        \n                                            deviceModelNumber\n                                        \n                                \n                                \n                                        \n                                            iccCopyright\n                                        \n                                \n                                \n                                        \n                                            iccDescription\n                                        \n                                \n                                \n                                        \n                                            iccProfileDate\n                                        \n                                \n                                \n                                        \n                                            iccSignature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            primaryPlatform\n                                        \n                                \n                                \n                                        \n                                            profileClassName\n                                        \n                                \n                                \n                                        \n                                            profileClassValue\n                                        \n                                \n                                \n                                        \n                                            profileCreator\n                                        \n                                \n                                \n                                        \n                                            profileVersion\n                                        \n                                \n                                \n                                        \n                                            renderingIntentName\n                                        \n                                \n                                \n                                        \n                                            renderingIntentValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceManufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceManufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceModelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceModelNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccCopyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccCopyright:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccProfileDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccProfileDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPlatform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPlatform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/IccFileMetadataEntity.html":{"url":"entities/IccFileMetadataEntity.html","title":"entity - IccFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  IccFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/icc-file-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectionSpace\n                            \n                            \n                                    \n                                    \n                                deviceManufacturer\n                            \n                            \n                                    \n                                    \n                                deviceModelNumber\n                            \n                            \n                                    \n                                    \n                                iccCopyright\n                            \n                            \n                                    \n                                    \n                                iccDescription\n                            \n                            \n                                    \n                                    \n                                iccProfileDate\n                            \n                            \n                                    \n                                    \n                                iccSignature\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                primaryPlatform\n                            \n                            \n                                    \n                                    \n                                profileClassName\n                            \n                            \n                                    \n                                    \n                                profileClassValue\n                            \n                            \n                                    \n                                    \n                                profileCreator\n                            \n                            \n                                    \n                                    \n                                profileVersion\n                            \n                            \n                                    \n                                    \n                                renderingIntentName\n                            \n                            \n                                    \n                                    \n                                renderingIntentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectionSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'connection_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceManufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_manufacturer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceModelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_model_number', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccCopyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_copyright', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccProfileDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'icc_profile_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccSignature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_signature', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'primary_platform', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_creator', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_version', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'rendering_intent_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'rendering_intent_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IccFileMetadata } from \"../file.types\";\n\n@Entity(\"file_metadata_icc\")\nexport class IccFileMetadataEntity implements IccFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_version\", nullable: true })\n  profileVersion: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_value\", nullable: true })\n  profileClassValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_name\", nullable: true })\n  profileClassName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"connection_space\", nullable: true })\n  connectionSpace: string;\n\n  @Index()\n  @Column(\"date\", { name: \"icc_profile_date\", nullable: true })\n  iccProfileDate: Date;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_signature\", nullable: true })\n  iccSignature: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"primary_platform\", nullable: true })\n  primaryPlatform: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_manufacturer\", nullable: true })\n  deviceManufacturer: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_model_number\", nullable: true })\n  deviceModelNumber: string;\n\n  @Index()\n  @Column(\"int\", { name: \"rendering_intent_value\", nullable: true })\n  renderingIntentValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"rendering_intent_name\", nullable: true })\n  renderingIntentName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_creator\", nullable: true })\n  profileCreator: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_description\", nullable: true })\n  iccDescription: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_copyright\", nullable: true })\n  iccCopyright: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFileMetadata.html":{"url":"interfaces/ImageFileMetadata.html","title":"interface - ImageFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitDepth\n                                        \n                                \n                                \n                                        \n                                            bps\n                                        \n                                \n                                \n                                        \n                                            colorComponents\n                                        \n                                \n                                \n                                        \n                                            colorType\n                                        \n                                \n                                \n                                        \n                                            compression\n                                        \n                                \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interlace\n                                        \n                                \n                                \n                                        \n                                            subsampling\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitDepth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitDepth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bps:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorComponents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interlace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subsampling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subsampling:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImageFileMetadataEntity.html":{"url":"entities/ImageFileMetadataEntity.html","title":"entity - ImageFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImageFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/image-file-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitDepth\n                            \n                            \n                                    \n                                    \n                                bps\n                            \n                            \n                                    \n                                    \n                                colorComponents\n                            \n                            \n                                    \n                                    \n                                colorType\n                            \n                            \n                                    \n                                    \n                                compression\n                            \n                            \n                                    \n                                    \n                                dateTime\n                            \n                            \n                                    \n                                    \n                                filter\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interlace\n                            \n                            \n                                    \n                                    \n                                subsampling\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'color_components', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        compression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'date_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interlace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subsampling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ImageFileMetadata } from \"../file.types\";\n\n@Entity(\"file_metadata_image\")\nexport class ImageFileMetadataEntity implements ImageFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  bps: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { name: \"color_components\", nullable: true, default: null })\n  colorComponents: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  subsampling: string;\n\n  @Index()\n  @Column(\"date\", { name: \"date_time\", nullable: true })\n  dateTime: Date;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  bitDepth: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  colorType: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  compression: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  filter: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  interlace: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenMsException.html":{"url":"classes/InvalidTokenMsException.html","title":"class - InvalidTokenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/invalid-token-ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/invalid-token-ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\nexport class InvalidTokenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Invalid token\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtDto.html":{"url":"classes/JwtDto.html","title":"class - JwtDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for JWT tokens.\nContains access and refresh tokens along with their expiration dates and user information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                atExp\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                rtExp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:103\n                        \n                    \n\n            \n                \n                    The access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:115\n                        \n                    \n\n            \n                \n                    The expiration date of the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:109\n                        \n                    \n\n            \n                \n                    The refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rtExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:121\n                        \n                    \n\n            \n                \n                    The expiration date of the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:97\n                        \n                    \n\n            \n                \n                    The user-data object.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LanguageEntity.html":{"url":"entities/LanguageEntity.html","title":"entity - LanguageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LanguageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/language.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Column, Entity, Index, ManyToOne, PrimaryColumn } from \"typeorm\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\nimport { Language } from \"../locale.types\";\n\n@Entity(\"languages\")\nexport class LanguageEntity implements Language {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiteAuthGuard.html":{"url":"injectables/LiteAuthGuard.html","title":"injectable - LiteAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiteAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/lite-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                fetchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fetchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class LiteAuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n */\n@Injectable()\nexport class LiteAuthGuard extends AbstractAuthGuard {\n  protected fetchUser = false;\n\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocaleModule.html":{"url":"modules/LocaleModule.html","title":"module - LocaleModule","body":"\n                   \n\n\n\n\n    Modules\n    LocaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_LocaleModule_exports\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\nimport { LocaleService } from \"./locale.service\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      LanguageEntity,\n      LocalizedStringEntity,\n      LocalizedMediaEntity,\n    ]),\n  ],\n  providers: [LocaleService],\n  exports: [LocaleService],\n})\nexport class LocaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLocalizedStrings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRep: Repository, localizedStringRep: Repository, localizedMediaRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/locale.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedStringRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMediaRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLocalizedStrings\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocalizedStrings(value: string, code?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/locale.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\n\n@Injectable()\nexport class LocaleService {\n  constructor(\n    @InjectRepository(LanguageEntity)\n    private readonly languageRep: Repository,\n    @InjectRepository(LocalizedStringEntity)\n    private readonly localizedStringRep: Repository,\n    @InjectRepository(LocalizedMediaEntity)\n    private readonly localizedMediaRep: Repository,\n  ) {}\n\n  async createLocalizedStrings(\n    value: string,\n    code?: string,\n  ): Promise {\n    const languages = await this.languageRep.find();\n    const res: LocalizedStringEntity[] = [];\n    for (const language of languages) {\n      const ls = new LocalizedStringEntity();\n      ls.lang = language;\n      ls.value = value;\n      if (code) {\n        ls.code = `${code}_${language.id}`;\n        const existed = await this.localizedStringRep.findOne({\n          where: { code: ls.code },\n        });\n        ls.id = existed?.id;\n      }\n      await this.localizedStringRep.save(ls);\n      res.push(ls);\n    }\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleSubscriber.html":{"url":"injectables/LocaleSubscriber.html","title":"injectable - LocaleSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/locale-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                LocaleSubscriber is an EntitySubscriber that listens to removal events\nfor entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\nWhen such an entity is removed, LocaleSubscriber will also remove\nthe associated LocalizedStringEntity or LocalizedMediaEntity instances.\nExample :class MyEntity {\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  firstName: LocalizedStringEntity[];\n}const myEntity = new MyEntity();\nentityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs a new LocaleSubscriber instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Logger instance used for logging messages.\n\n\n                                                        \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe DataSource instance used to access the connection and its subscribers.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterRemove\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterRemove(event: RemoveEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:69\n                        \n                    \n\n\n            \n                \n                        The afterRemove event is triggered when an entity is removed.\nIf the removed entity has relationships with LocalizedStringEntity instances,\nthe related LocalizedStringEntity instances will also be removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        RemoveEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe RemoveEvent instance containing information about the removed entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  DataSource,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  RemoveEvent,\n} from \"typeorm\";\nimport { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectDataSource } from \"@nestjs/typeorm\";\nimport { LOGGER } from \"../../log/log.constants\";\nimport { LocalizedStringEntity } from \"./localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./localized-media.entity\";\n\n/**\n * LocaleSubscriber is an EntitySubscriber that listens to removal events\n * for entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\n * When such an entity is removed, LocaleSubscriber will also remove\n * the associated LocalizedStringEntity or LocalizedMediaEntity instances.\n *\n * @example\n * class MyEntity {\n *   @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n *   @JoinTable()\n *   firstName: LocalizedStringEntity[];\n * }\n *\n * const myEntity = new MyEntity();\n * entityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n */\n@Injectable()\n@EventSubscriber()\nexport class LocaleSubscriber implements EntitySubscriberInterface {\n  /**\n   * Constructs a new LocaleSubscriber instance.\n   *\n   * @param logger - The Logger instance used for logging messages.\n   * @param dataSource - The DataSource instance used to access the connection and its subscribers.\n   */\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    dataSource.manager.connection.subscribers.push(this);\n  }\n\n  /**\n   * The afterRemove event is triggered when an entity is removed.\n   * If the removed entity has relationships with LocalizedStringEntity instances,\n   * the related LocalizedStringEntity instances will also be removed.\n   *\n   * @param event - The RemoveEvent instance containing information about the removed entity.\n   * @returns A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n   */\n  async afterRemove(event: RemoveEvent): Promise {\n    const entity = event.entity;\n    if (!entity) {\n      return;\n    }\n    const localizedStringProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedStringEntity\n      );\n    });\n    if (localizedStringProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedStringEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedStringProperties as LocalizedStringEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedStringEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedStringEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n\n    const localizedMediaProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedMediaEntity\n      );\n    });\n    if (localizedMediaProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedMediaEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedMediaProperties as LocalizedMediaEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedMediaEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedMediaEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedMedia.html":{"url":"interfaces/LocalizedMedia.html","title":"interface - LocalizedMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedMediaEntity.html":{"url":"entities/LocalizedMediaEntity.html","title":"entity - LocalizedMediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedMediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedMedia } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n@Entity(\"localized_medias\")\nexport class LocalizedMediaEntity implements LocalizedMedia {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: false })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  value: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedString.html":{"url":"interfaces/LocalizedString.html","title":"interface - LocalizedString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedStringEntity.html":{"url":"entities/LocalizedStringEntity.html","title":"entity - LocalizedStringEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedStringEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-string.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedString } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\n\n@Entity(\"localized_strings\")\nexport class LocalizedStringEntity implements LocalizedString {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @Column(\"text\", { nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/log/log.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogService } from \"./log.service\";\nimport { LOGGER } from \"./log.constants\";\n\n@Module({\n  providers: [\n    {\n      provide: LOGGER,\n      useClass: LogService,\n    },\n  ],\n  exports: [LOGGER],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogService.html":{"url":"classes/LogService.html","title":"class - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log service that extends the built-in Nest Logger.\n\n            \n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                getCallingContext\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                patchFromCtx\n                            \n                            \n                                    Private\n                                prepareMessage\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:29\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCallingContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCallingContext()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { filePath: any; methodName: any; lineNumber: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchFromCtx\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchFromCtx(ctx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareMessage(message: string, data?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:46\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:19\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Log service that extends the built-in Nest Logger.\n */\nexport class LogService extends Logger {\n  log(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.log(this.prepareMessage(message, data), ctx.methodName);\n  }\n\n  error(message: string, trace?: string) {\n    const ctx = this.getCallingContext();\n    super.error(this.prepareMessage(message), trace, this.patchFromCtx(ctx));\n  }\n\n  warn(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.warn(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  verbose(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.verbose(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  debug(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.debug(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  private patchFromCtx(ctx: {\n    filePath: string;\n    methodName: string;\n    lineNumber: string;\n  }) {\n    let p = `${ctx?.filePath}:${ctx?.lineNumber} > ${ctx?.methodName}`;\n    if (p === \"undefined:undefined > undefined\") {\n      p = \"unknown\";\n    }\n    return p;\n  }\n\n  private prepareMessage(message: string, data?: T) {\n    let m = inspect(message);\n    if (\n      (m.startsWith(`'`) && m.endsWith(`'`)) ||\n      (m.startsWith(`\"`) && m.endsWith(`\"`))\n    ) {\n      m = m.substring(1, m.length - 1);\n    }\n    if (data) {\n      m += inspect(data);\n    }\n    return m;\n  }\n\n  private getCallingContext() {\n    const stackTrace = new Error().stack;\n    if (stackTrace) {\n      const lines = stackTrace.split(\"\\n\");\n      // The calling context is located in the fourth line of the stack trace\n      if (lines.length >= 4) {\n        const matches = lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d+\\)/);\n        if (matches && matches.length > 3) {\n          const filePath = matches[2].split(\"/\").slice(-2).join(\"/\");\n          const methodName = matches[1];\n          const lineNumber = matches[3];\n          return { filePath, methodName, lineNumber };\n        }\n      }\n    }\n    return {\n      filePath: \"Unknown path\",\n      methodName: \"Anonymous context\",\n      lineNumber: \"Unknown line\",\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for login payload.\nContains user login information required for authentication.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                captchaId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                captchaPayload\n                            \n                            \n                                    \n                                    \n                                ipAddress\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:63\n                        \n                    \n\n            \n                \n                    The ID of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaPayload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:71\n                        \n                    \n\n            \n                \n                    The payload of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIP()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:55\n                        \n                    \n\n            \n                \n                    The IP address of the user.\nOptional.\nExample :\"192.168.0.1\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:36\n                        \n                    \n\n            \n                \n                    The login of the user.\nExample :\"admin\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:45\n                        \n                    \n\n            \n                \n                    The password of the user.\nExample :\"P@ssw0rd!\"\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     MediaFile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaDto.html":{"url":"classes/MediaDto.html","title":"class - MediaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Media\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:124\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, f => f.media, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { MediaTypeEntity } from \"./media-type.entity\";\nimport { MediaFileEntity } from \"./media-file.entity\";\nimport { Media } from \"../media.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { FileMetadataEntity } from \"../../file/entity/file-metadata.entity\";\n\n@Entity(\"medias\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class MediaEntity implements Media {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaTypeEntity, (type) => type.code)\n  type: MediaTypeEntity;\n\n  @OneToMany(() => MediaFileEntity, (f) => f.media, { cascade: true })\n  files: MediaFileEntity[];\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaExt.html":{"url":"interfaces/MediaExt.html","title":"interface - MediaExt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaExt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaExtEntity.html":{"url":"entities/MediaExtEntity.html","title":"entity - MediaExtEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaExtEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-ext.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaExt } from \"../media.types\";\n\n@Entity(\"medias_ext\")\nexport class MediaExtEntity implements MediaExt {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFileDto.html":{"url":"classes/MediaFileDto.html","title":"class - MediaFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MediaFile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:142\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:161\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFileEntity.html":{"url":"entities/MediaFileEntity.html","title":"entity - MediaFileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { MediaEntity } from \"./media.entity\";\nimport { MediaFile } from \"../media.types\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\n\n@Entity(\"medias_files\")\nexport class MediaFileEntity implements MediaFile {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: number;\n\n  @Column(\"smallint\", { nullable: true })\n  height: number;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaFormatEntity, (type) => type.code)\n  format: MediaFormatEntity;\n\n  @ManyToOne(() => MediaEntity)\n  media: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFormatDto.html":{"url":"classes/MediaFormatDto.html","title":"class - MediaFormatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFormatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MediaFormat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:109\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFormatEntity.html":{"url":"entities/MediaFormatEntity.html","title":"entity - MediaFormatEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFormatEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-format.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaFormat } from \"../media.types\";\n\n@Entity(\"medias_format\")\nexport class MediaFormatEntity implements MediaFormat {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: string;\n\n  @Column(\"smallint\", { nullable: true })\n  height: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaManager.html":{"url":"classes/MediaManager.html","title":"class - MediaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateMedia\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findMediaById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getMediaPath\n                            \n                            \n                                    Abstract\n                                recreate\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateMedia(file: Buffer, type: string, code?: string, existedEntityId?: number, name?: LocalizedString[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            LocalizedString[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findMediaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMediaById(id: number, privateMedia?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                privateMedia\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getMediaPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPath(media: Media, format?: string, webpSupport?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                media\n                                            \n                                                            Media\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                webpSupport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        recreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/media/media.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: MediaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.module.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MediaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: MediaService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { MediaService } from \"./media.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { MediaEntity } from \"./entity/media.entity\";\nimport { MediaTypeEntity } from \"./entity/media-type.entity\";\nimport { MediaFileEntity } from \"./entity/media-file.entity\";\nimport { MediaFormatEntity } from \"./entity/media-format.entity\";\nimport { MediaManager, MediaModuleOptions } from \"./media.types\";\nimport { FileModule } from \"../file/file.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n@Module({})\nexport class MediaModule {\n  static forRoot(\n    options: MediaModuleOptions = {\n      service: MediaService,\n    },\n  ): DynamicModule {\n    return {\n      module: MediaModule,\n      imports: [\n        TypeOrmModule.forFeature([\n          MediaEntity,\n          MediaTypeEntity,\n          MediaFileEntity,\n          MediaFormatEntity,\n        ]),\n        FileModule.forRoot(),\n        LogModule,\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: MediaManager,\n          useClass: options.service,\n        },\n      ],\n      exports: [MediaManager],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaType.html":{"url":"interfaces/MediaType.html","title":"interface - MediaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            vp6\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         MediaExt\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaExt\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:     MediaFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vp6\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vp6:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaTypeDto.html":{"url":"classes/MediaTypeDto.html","title":"class - MediaTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            MediaType\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaTypeEntity.html":{"url":"entities/MediaTypeEntity.html","title":"entity - MediaTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-type.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExtEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, e => e.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\nimport { MediaType } from \"../media.types\";\nimport { MediaExtEntity } from \"./media-ext.entity\";\n\n@Entity(\"medias_types\")\nexport class MediaTypeEntity implements MediaType {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"boolean\", { default: false })\n  vp6: boolean;\n\n  @Column(\"boolean\", { default: false })\n  private: boolean;\n\n  @Column(\"int\", { nullable: true })\n  quality: number;\n\n  @ManyToOne(() => MediaExtEntity, (e) => e.code)\n  ext: MediaExtEntity;\n\n  @ManyToMany(() => MediaFormatEntity)\n  @JoinTable()\n  formats: MediaFormatEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageBus.html":{"url":"interfaces/MessageBus.html","title":"interface - MessageBus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageBus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dispatch\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport type MsClientOptions = {\n  timeout: number;\n};\n\nexport interface MessageBus {\n  dispatch(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Promise;\n\n  send(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n\n  emit(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesBroker.html":{"url":"interfaces/MessagesBroker.html","title":"interface - MessagesBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessagesBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:20\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MessagesBroker {\n  emit(chanel: string, data: T): Promise;\n\n  subscribe(chanel: string, handler: (data: T) => void);\n\n  unsubscribe(chanel: string);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesBrokerModule.html":{"url":"modules/MessagesBrokerModule.html","title":"module - MessagesBrokerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesBrokerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MessagesBrokerModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { MESSAGES_BROKER } from \"./messages-broker.constants\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MessagesBrokerService } from \"./messages-broker.service\";\n\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: MESSAGES_BROKER,\n      useClass: MessagesBrokerService,\n    },\n  ],\n  exports: [MESSAGES_BROKER],\n})\nexport class MessagesBrokerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesBrokerService.html":{"url":"injectables/MessagesBrokerService.html","title":"injectable - MessagesBrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesBrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Private\n                                safeDeSerialize\n                            \n                            \n                                    Private\n                                safeSerialize\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pubClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pubClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:39\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDeSerialize(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeSerialize(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { MessagesBroker } from \"./messages-broker.types\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\n\n@Injectable()\nexport class MessagesBrokerService implements MessagesBroker {\n  private readonly subClient: Redis;\n  private readonly subscribers: Map void> =\n    new Map();\n\n  constructor(@Inject(REDIS_CLIENT) private readonly pubClient: Redis) {\n    this.subClient = this.pubClient.duplicate();\n    this.subClient.on(\"message\", (chanel, data) => {\n      if (!this.subscribers.has(chanel)) {\n        return;\n      }\n      const fun = this.subscribers.get(chanel);\n      fun(this.safeDeSerialize(data));\n    });\n  }\n\n  async emit(chanel: string, data: T) {\n    await this.pubClient.publish(chanel, this.safeSerialize(data));\n  }\n\n  subscribe(chanel: string, handler: (data: T) => void) {\n    this.subClient.subscribe(chanel);\n    this.subscribers.set(chanel, handler);\n  }\n\n  unsubscribe(chanel: string) {\n    this.subClient.unsubscribe(chanel);\n    this.subscribers.delete(chanel);\n  }\n\n  private safeSerialize(data: T) {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      return data.toString();\n    }\n  }\n\n  private safeDeSerialize(data: string) {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockCacheService.html":{"url":"injectables/MockCacheService.html","title":"injectable - MockCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/mock/mock-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A mock service class that provides cache storage functionality implementing the CacheService interface\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: MockStorage)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        MockStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the mock storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the mock storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A true value always.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the mock storage (this method is a stub).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for (not affect to anything).\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds (not affect to anything).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A true value always.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the mock storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the mock storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the mock storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the mock storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key-pattern from the mock storage,\nit is assumed that an array of strings will be mocked as data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key-pattern to retrieve from the mock storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Retrieves the number value of the specified key from the mock storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the mock storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the number value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the mock storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/mock/mock-cache.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the mock storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds (not affect to anything).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A true value always.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { CacheService } from \"../cache.types\";\nimport { MockStorage } from \"../../mock/mock.storage\";\n\n/**\n * A mock service class that provides cache storage functionality implementing the CacheService interface\n */\n@Injectable()\nexport class MockCacheService implements CacheService {\n  constructor(private readonly storage: MockStorage) {}\n\n  /**\n   * Retrieves the value of the specified key from the mock storage.\n   *\n   * @param key - The key to retrieve from the mock storage.\n   * @returns A Promise that resolves to the value of the key or null.\n   */\n  async get(key: string): Promise {\n    return new Promise((resolve) => {\n      const res = this.storage.find(key);\n      resolve(res?.data as string);\n    });\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the mock storage.\n   *\n   * @param key - The key to retrieve from the mock storage.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return Boolean(val);\n  }\n\n  /**\n   * Retrieves the number value of the specified key from the mock storage.\n   *\n   * @param key - The key to retrieve from the mock storage.\n   * @returns A Promise that resolves to the number value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the mock storage.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds (not affect to anything).\n   * @returns A true value always.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    return new Promise((resolve) => {\n      this.storage.set(key, value);\n      resolve(true);\n    });\n  }\n\n  /**\n   * Deletes the specified keys from the mock storage.\n   *\n   * @param keys - The keys to delete from the mock storage.\n   * @returns A true value always.\n   */\n  async del(...keys: string[]): Promise {\n    return new Promise((resolve) => {\n      keys.forEach((k) => this.storage.remove(k));\n      resolve(true);\n    });\n  }\n\n  /**\n   * Increments the value of the specified key in the mock storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    return new Promise(async (resolve) => {\n      try {\n        let num = await this.getNumber(key);\n        num++;\n        await this.set(key, num);\n        resolve(num);\n      } catch (e) {\n        resolve(null);\n      }\n    });\n  }\n\n  /**\n   * Sets the expiration time for the given key in the mock storage (this method is a stub).\n   * @param key - The key to set the expiration time for (not affect to anything).\n   * @param expiresIn - The expiration time in seconds (not affect to anything).\n   * @returns A true value always.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    return new Promise((resolve) => resolve(true));\n  }\n\n  /**\n   * Retrieves the value of the specified key-pattern from the mock storage,\n   * it is assumed that an array of strings will be mocked as data\n   * @param key - The key-pattern to retrieve from the mock storage.\n   * @returns An array of data.\n   */\n  getFromPattern(key: string): Promise {\n    return new Promise((resolve) => {\n      const res = this.storage.filter(key);\n      const result = [];\n      res.forEach((v) => result.push(v.key));\n      return resolve(result.length ? result : undefined);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockMsClient.html":{"url":"classes/MockMsClient.html","title":"class - MockMsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockMsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/mock/mock-ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                A mock service client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: MockStorage)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/mock/mock-ms-client.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        MockStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/mock/mock-ms-client.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nOptional message data\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client (not affect to anything).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/mock/mock-ms-client.ts:68\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nOptional message data\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client (not affect to anything).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/mock/mock-ms-client.ts:52\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nOptional message data\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client (not affect to anything).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from \"rxjs\";\nimport { MessageBus, MsClientOptions } from \"../ms-client.types\";\nimport { MockStorage } from \"../../mock/mock.storage\";\n\n/**\n * A mock service client for dispatching messages between microservices.\n */\nexport class MockMsClient implements MessageBus {\n  constructor(private readonly storage: MockStorage) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - Optional message data\n   * @param opts - Optional configuration options for the client (not affect to anything).\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve) => {\n      const res = this.storage.find(pattern, data);\n      resolve(res?.data as TResult);\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - Optional message data\n   * @param opts - Optional configuration options for the client (not affect to anything).\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ): Observable {\n    const res = this.storage.find(pattern, data);\n    return of(res?.data as TResult);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - Optional message data\n   * @param opts - Optional configuration options for the client (not affect to anything).\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ): Observable {\n    const res = this.storage.find(pattern, data);\n    return of(res?.data as TResult);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockStorage.html":{"url":"classes/MockStorage.html","title":"class - MockStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/mock/mock.storage.ts\n        \n\n\n            \n                Description\n            \n            \n                A mock storage object, used for mock services\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                find\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Array)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/mock/mock.storage.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/mock/mock.storage.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(key: string, params?)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/mock/mock.storage.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/mock/mock.storage.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, data: string | number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/mock/mock.storage.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as hash from \"object-hash\";\n\n/**\n * A mock storage object, used for mock services\n */\nexport class MockStorage {\n  constructor(\n    private data: Array,\n  ) {}\n\n  find(key: string, params?: unknown) {\n    if (!params) {\n      return this.data.find((v) => v.key === key);\n    }\n    const paramsHash = hash(params);\n    for (const item of this.data) {\n      if (!item.params || item.key !== key) {\n        continue;\n      }\n      if (paramsHash === hash(item.params)) {\n        return item;\n      }\n    }\n    return null;\n  }\n\n  filter(key: string) {\n    const regexPattern = key.split(\"*\").join(\".+\");\n    const regex = new RegExp(`^${regexPattern}$`);\n    return this.data.filter((v) => regex.test(v.key));\n  }\n\n  set(key: string, data: string | number) {\n    this.data = this.data.filter((v) => v.key !== key);\n    this.data.push({ key, data });\n  }\n\n  remove(key: string) {\n    this.data = this.data.filter((v) => v.key !== key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsClient.html":{"url":"classes/MsClient.html","title":"class - MsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                Microservices client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                    Private\n                                handleRequest\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, proxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/ms-client.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Object()\n                                            \n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:80\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRequest(source: Observable, pattern: any, data: any, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:89\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, throwError, timeout } from \"rxjs\";\nimport { HttpException, HttpStatus, Inject, Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport { MessageBus, MsClientOptions } from \"./ms-client.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_EXCEPTION_ID } from \"../../constants\";\nimport { MsException } from \"../../exceptions/ms.exception\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Microservices client for dispatching messages between microservices.\n */\nexport class MsClient implements MessageBus {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly proxy: ClientProxy,\n  ) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput = Object(),\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const source = this.proxy.send(pattern, data);\n      this.handleRequest(source, pattern, data, opts).subscribe({\n        next: (result) => resolve(result),\n        error: (error) => reject(error),\n      });\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.send(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.emit(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  private handleRequest(\n    source: Observable,\n    pattern: any,\n    data: any,\n    opts?: MsClientOptions,\n  ): Observable {\n    this.logger.debug(`Sending request with pattern: ${inspect(pattern)}`);\n    return source.pipe(\n      timeout(opts?.timeout || parseInt(process.env.TRANSPORT_TIMEOUT)),\n      catchError((error) => {\n        if (error?.type === MS_EXCEPTION_ID) {\n          const err = error as MsException;\n          this.logger.error(\n            `Microservice exception: ${err.message}`,\n            err.stack,\n          );\n          throw new HttpException(err.message, err.code);\n        }\n        if (error.name === \"TimeoutError\") {\n          this.logger.warn(`Request timeout for pattern: ${inspect(pattern)}`);\n          throw new HttpException(\n            \"Request Timeout\",\n            HttpStatus.REQUEST_TIMEOUT,\n          );\n        }\n        this.logger.error(\n          `Unknown error for pattern: ${inspect(pattern)}`,\n          error,\n        );\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MsClientModule.html":{"url":"modules/MsClientModule.html","title":"module - MsClientModule","body":"\n                   \n\n\n\n\n    Modules\n    MsClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MsClientModule\n\n\n\ncluster_MsClientModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { ClientProxy, ClientsModule } from \"@nestjs/microservices\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_CLIENT, MSG_BUS } from \"./ms-client.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MsClient } from \"./ms-client\";\n\n@Module({\n  imports: [\n    LogModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [LogModule],\n        inject: [LOGGER],\n        name: MS_CLIENT,\n        useFactory: (logger: Logger) => {\n          EnvLoader.loadEnvironment(logger);\n          return {\n            transport: parseInt(process.env.TRANSPORT_TYPE),\n            options: {\n              host: process.env.TRANSPORT_HOST,\n              port: parseInt(process.env.TRANSPORT_PORT),\n              timeout: parseInt(process.env.TRANSPORT_TIMEOUT),\n            },\n          };\n        },\n      },\n    ]),\n  ],\n  providers: [\n    {\n      provide: MSG_BUS,\n      useFactory: (logger: Logger, client: ClientProxy) =>\n        new MsClient(logger, client),\n      inject: [LOGGER, MS_CLIENT],\n    },\n  ],\n  exports: [MSG_BUS],\n})\nexport class MsClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsException.html":{"url":"classes/MsException.html","title":"class - MsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RpcException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, message: string, stack?: any)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RpcException } from \"@nestjs/microservices\";\nimport { MS_EXCEPTION_ID } from \"../constants\";\n\nexport class MsException extends RpcException {\n  constructor(\n    readonly code: number,\n    readonly message: string = undefined,\n    readonly stack?: any,\n  ) {\n    super({ type: MS_EXCEPTION_ID, message, code, stack });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotEmptyPipe.html":{"url":"injectables/NotEmptyPipe.html","title":"injectable - NotEmptyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotEmptyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/pipes/not-empty.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to ensure a value is not empty.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fieldName: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/pipes/not-empty.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/pipes/not-empty.pipe.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\n\n/**\n * Pipe to ensure a value is not empty.\n */\n@Injectable()\nexport class NotEmptyPipe implements PipeTransform {\n  constructor(private readonly fieldName: string) {}\n\n  transform(value: any) {\n    if (!value || Object.keys(value).length === 0) {\n      throw new BadRequestException(`${this.fieldName} cannot be empty`);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundMsException.html":{"url":"classes/NotFoundMsException.html","title":"class - NotFoundMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/not-found-ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/not-found-ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\nexport class NotFoundMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.NOT_FOUND, message || \"Not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableData.html":{"url":"classes/PageableData.html","title":"class - PageableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], totalCount: number, currentPage: number, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currentPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  page = 1;\n\n  @Type(() => String)\n  sort?: string;\n\n  @Type(() => String)\n  order?: SortOrder;\n\n  @Type(() => String)\n  filter?: string;\n}\n\nexport class PageableData {\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableParams.html":{"url":"classes/PageableParams.html","title":"class - PageableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Max(1000)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  page = 1;\n\n  @Type(() => String)\n  sort?: string;\n\n  @Type(() => String)\n  order?: SortOrder;\n\n  @Type(() => String)\n  filter?: string;\n}\n\nexport class PageableData {\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessLog.html":{"url":"classes/ProcessLog.html","title":"class - ProcessLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                id\n                            \n                            \n                                process\n                            \n                            \n                                tsCreated\n                            \n                            \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process.types.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process.types.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnit\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process.types.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process.types.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process.types.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\nexport class ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessLogEntity.html":{"url":"entities/ProcessLogEntity.html","title":"entity - ProcessLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                process\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnitEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@UpdateDateColumn({name: 'ts_updated', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ProcessUnitEntity } from \"./process.unit.entity\";\nimport { ProcessLog } from \"../process.types\";\n\n@Entity(\"process_logs\")\nexport class ProcessLogEntity implements ProcessLog {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"text\", { nullable: true })\n  content: string;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n\n  @Index()\n  @UpdateDateColumn({ name: \"ts_updated\", type: \"timestamp\" })\n  tsUpdated: Date;\n\n  @ManyToOne(() => ProcessUnitEntity, (t) => t.code)\n  process: ProcessUnitEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessManagerService.html":{"url":"injectables/ProcessManagerService.html","title":"injectable - ProcessManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pmInitStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogInstance\n                            \n                            \n                                getLastLogsByProcess\n                            \n                            \n                                getProcessData\n                            \n                            \n                                getProcessLogById\n                            \n                            \n                                    Async\n                                getProcessUnitStatus\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                resetAllProcessStatuses\n                            \n                            \n                                    Async\n                                setProcessUnitStatus\n                            \n                            \n                                    Async\n                                startProcess\n                            \n                            \n                                    Async\n                                stopProcess\n                            \n                            \n                                    Async\n                                toggleProcess\n                            \n                            \n                                updateLogInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lockExec: WarlockFn, logger: Logger, broker: MessagesBroker, processUnitRep: Repository, processLogRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-manager.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBroker\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processUnitRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processLogRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogInstance(processCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastLogsByProcess\n                        \n                    \n                \n            \n            \n                \ngetLastLogsByProcess(processCode: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessData\n                        \n                    \n                \n            \n            \n                \ngetProcessData(code: string, force)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                force\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessLogById\n                        \n                    \n                \n            \n            \n                \ngetProcessLogById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProcessUnitStatus(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        resetAllProcessStatuses\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetAllProcessStatuses()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProcessUnitStatus(code: string, status: Process.Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            Process.Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLogInstance\n                        \n                    \n                \n            \n            \n                \nupdateLogInstance(logInstance: ProcessLogEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                logInstance\n                                            \n                                                            ProcessLogEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pmInitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process-manager.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { Process } from \"./process.constants\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBroker } from \"../../shared/modules/messages-broker/messages-broker.types\";\nimport Status = Process.Status;\nimport Command = Process.Command;\nimport hasProcessInstance = Process.hasProcessInstance;\n\n@Injectable()\nexport class ProcessManagerService {\n  private static pmInitStatus: boolean;\n\n  constructor(\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBroker,\n    @InjectRepository(ProcessUnitEntity)\n    private readonly processUnitRep: Repository,\n    @InjectRepository(ProcessLogEntity)\n    private readonly processLogRep: Repository,\n  ) {}\n\n  async init() {\n    if (ProcessManagerService.pmInitStatus) {\n      this.logger.warn(\"Autostart processes has been executed\");\n      return;\n    }\n    await this.resetAllProcessStatuses();\n    this.logger.log(\"Init process manager\");\n    ProcessManagerService.pmInitStatus = true;\n    const processList = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of processList) {\n      if (!processData.cronTab?.length) {\n        this.logger.warn(\n          `Process ${processData.code} hasn't cron-tab, skip job registration`,\n        );\n        continue;\n      }\n      this.broker.emit(Command.Register, processData);\n    }\n  }\n\n  async startProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Start, processData);\n  }\n\n  async stopProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Stop, processData);\n  }\n\n  async toggleProcess(code: string) {\n    if (!hasProcessInstance(code)) {\n      throw new InternalServerErrorException(`Process ${code} not exists`);\n    }\n    const processData = await this.processUnitRep.findOne({ where: { code } });\n    processData.enabled = !processData.enabled;\n    await this.processUnitRep.save(processData);\n    if (processData.enabled) {\n      this.broker.emit(Command.Register, processData);\n    } else {\n      this.broker.emit(Command.Unregister, processData);\n    }\n  }\n\n  async setProcessUnitStatus(code: string, status: Process.Status) {\n    const processData = await this.getProcessData(code, true);\n    processData.status = status;\n    return this.processUnitRep.save(processData);\n  }\n\n  async getProcessUnitStatus(code: string) {\n    const processData = await this.getProcessData(code, true);\n    return processData.status;\n  }\n\n  async createLogInstance(processCode: string) {\n    const process = await this.getProcessData(processCode);\n    return this.processLogRep.save({\n      process,\n      content: \"\",\n    } as ProcessLogEntity);\n  }\n\n  updateLogInstance(logInstance: ProcessLogEntity) {\n    return this.processLogRep.save(logInstance);\n  }\n\n  getProcessData(code: string, force = false) {\n    const params = { code, enabled: true };\n    return this.processUnitRep.findOne({ where: force ? { code } : params });\n  }\n\n  getProcessLogById(id: number) {\n    return this.processLogRep.findOne({\n      where: { id },\n      relations: [\"process\"],\n    });\n  }\n\n  getLastLogsByProcess(processCode: string, limit = 3) {\n    return this.processLogRep.find({\n      where: { process: { code: processCode } },\n      take: limit,\n      order: { tsUpdated: \"DESC\" },\n    });\n  }\n\n  private async resetAllProcessStatuses() {\n    const entities = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of entities) {\n      await this.setProcessUnitStatus(processData.code, Status.Ready);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessModule.html":{"url":"modules/ProcessModule.html","title":"module - ProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/process/process.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessManagerService\n                        \n                        \n                            ProcessRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            MessagesBrokerModule\n                        \n                        \n                            WarlockModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProcessManagerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process.module.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Global, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ScheduleModule } from \"@nestjs/schedule\";\nimport { ProcessRegisterService } from \"./process-register.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { MessagesBrokerModule } from \"../../shared/modules/messages-broker/messages-broker.module\";\nimport { WarlockModule } from \"../../shared/modules/warlock/warlock.module\";\n\n@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProcessUnitEntity, ProcessLogEntity]),\n    ScheduleModule.forRoot(),\n    LogModule,\n    MessagesBrokerModule,\n    WarlockModule,\n  ],\n  providers: [ProcessManagerService, ProcessRegisterService],\n  exports: [ProcessManagerService],\n})\nexport class ProcessModule implements OnApplicationBootstrap {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  async onApplicationBootstrap() {\n    await this.pmService.init();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessRegisterService.html":{"url":"injectables/ProcessRegisterService.html","title":"injectable - ProcessRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-register.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerCronJob\n                            \n                            \n                                    Private\n                                startProcess\n                            \n                            \n                                    Private\n                                stopProcess\n                            \n                            \n                                    Private\n                                    Async\n                                unregisterCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, lockExec: WarlockFn, broker: MessagesBrokerService, pmService: ProcessManagerService, schedulerRegistry: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-register.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBrokerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        registerCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        unregisterCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { SchedulerRegistry } from \"@nestjs/schedule\";\nimport { CronJob } from \"cron/dist/job\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { Process } from \"./process.constants\";\nimport { ProcessUnit } from \"./process.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBrokerService } from \"../../shared/modules/messages-broker/messages-broker.service\";\nimport getProcessInstance = Process.getProcessInstance;\nimport Command = Process.Command;\nimport Status = Process.Status;\n\n@Injectable()\nexport class ProcessRegisterService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBrokerService,\n    private readonly pmService: ProcessManagerService,\n    private readonly schedulerRegistry: SchedulerRegistry,\n  ) {\n    broker.subscribe(Command.Register, (data) =>\n      this.registerCronJob(data),\n    );\n    broker.subscribe(Command.Unregister, (data) =>\n      this.unregisterCronJob(data),\n    );\n    broker.subscribe(Command.Start, (data) =>\n      this.startProcess(data),\n    );\n    broker.subscribe(Command.Stop, (data) =>\n      this.stopProcess(data),\n    );\n  }\n\n  private startProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    this.lockExec(`${processData.code}_start`, async () =>\n      processInstance.start(),\n    );\n  }\n\n  private stopProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    processInstance.stop();\n  }\n\n  private async registerCronJob(processData: ProcessUnit) {\n    if (this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't register cron job with code ${processData.code}, that already exists`,\n      );\n      return false;\n    }\n    await this.pmService.setProcessUnitStatus(processData.code, Status.Ready);\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    if (!processData.cronTab?.length) {\n      this.logger.warn(\n        `Process ${processData.code} hasn't cron-tab, skip job registration`,\n      );\n      return false;\n    }\n    const job = new CronJob(processData.cronTab, () => {\n      this.lockExec(\n        processData.code,\n        async () => await processInstance.start(),\n      );\n    });\n    job.start();\n    this.schedulerRegistry.addCronJob(processData.code, job);\n    return true;\n  }\n\n  private async unregisterCronJob(processData: ProcessUnit) {\n    if (!this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't unregister cron job with code ${processData.code}`,\n      );\n      return false;\n    }\n    const job = this.schedulerRegistry.getCronJob(processData.code);\n    job.stop();\n    this.schedulerRegistry.deleteCronJob(processData.code);\n    this.pmService.stopProcess(processData.code);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessUnit.html":{"url":"interfaces/ProcessUnit.html","title":"interface - ProcessUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            cronTab\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cronTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cronTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         ProcessLog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessLog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Process.Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Process.Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\nexport class ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessUnitEntity.html":{"url":"entities/ProcessUnitEntity.html","title":"entity - ProcessUnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessUnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.unit.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                cronTab\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cronTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'cron_tab', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.process, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Process.Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:67\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { Process } from \"../process.constants\";\nimport { ProcessUnit } from \"../process.types\";\nimport { ProcessLogEntity } from \"./process.log.entity\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n@Entity(\"process_units\")\nexport class ProcessUnitEntity implements ProcessUnit {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\n      Process.Status.Ready,\n      Process.Status.Execute,\n      Process.Status.Crashed,\n    ],\n    default: null,\n    nullable: true,\n  })\n  status: Process.Status;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  enabled: boolean;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"varchar\", { name: \"cron_tab\", nullable: true })\n  cronTab: string;\n\n  @OneToMany(() => ProcessLogEntity, (c) => c.process, { cascade: true })\n  logs: ProcessLogEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisCacheService.html":{"url":"injectables/RedisCacheService.html","title":"injectable - RedisCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/redis-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service class that provides cache storage functionality implementing the CacheService interface.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, client: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/redis-cache.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True if the operation succeeded, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Retrieves keys that match a given pattern from the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pattern to match keys against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of matching keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the numeric value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the numeric value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the cache storage with an optional expiration time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { CacheService } from \"./cache.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\n\n/**\n * A service class that provides cache storage functionality implementing the CacheService interface.\n */\n@Injectable()\nexport class RedisCacheService implements CacheService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(REDIS_CLIENT) private readonly client: Redis,\n  ) {}\n\n  /**\n   * Retrieves the value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the value of the key or null if an error occurs.\n   */\n  async get(key: string): Promise {\n    try {\n      return await this.client.get(key);\n    } catch (error) {\n      this.logger.error(`Error while getting key \"${key}\" from Redis:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return val === \"true\";\n  }\n\n  /**\n   * Retrieves the numeric value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the numeric value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the cache storage with an optional expiration time.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    try {\n      if (expiresIn) {\n        await this.client.set(key, value, \"EX\", expiresIn);\n      } else {\n        await this.client.set(key, value);\n      }\n      return true;\n    } catch (error) {\n      this.logger.error(`Error while setting key \"${key}\" in Redis:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Deletes the specified keys from the cache storage.\n   *\n   * @param keys - The keys to delete from the cache.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async del(...keys: string[]): Promise {\n    try {\n      await this.client.del(...keys);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while deleting keys \"${keys.join(\", \")}\" from Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Increments the value of the specified key in the cache storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    try {\n      return await this.client.incr(key);\n    } catch (error) {\n      this.logger.error(\n        `Error while incrementing key \"${key}\" in Redis:`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Sets the expiration time for the given key in the Redis cache.\n   * @param key - The key to set the expiration time for.\n   * @param expiresIn - The expiration time in seconds.\n   * @returns True if the operation succeeded, false otherwise.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    try {\n      await this.client.expire(key, expiresIn);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while setting expiration for key \"${key}\" in Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves keys that match a given pattern from the Redis cache.\n   * @param pattern - The pattern to match keys against.\n   * @returns An array of matching keys.\n   */\n  getFromPattern(pattern: string): Promise {\n    return new Promise((resolve, reject) => {\n      const keys: string[] = [];\n      const stream = this.client.scanStream({ match: pattern });\n      stream.on(\"data\", (chunk: string[]) => {\n        keys.push(...chunk);\n      });\n      stream.on(\"end\", () => {\n        resolve(keys);\n      });\n      stream.on(\"error\", (err: Error) => {\n        this.logger.error(err);\n        reject(err);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/redis.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis.module.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Logger, Module } from \"@nestjs/common\";\nimport { Redis } from \"ioredis\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\n\n@Module({})\nexport class RedisModule {\n  private static redisInstance: Redis | null = null;\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => {\n      config: {\n        host: string;\n        port: number;\n        db: number;\n        username: string;\n        password: string;\n      };\n    };\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: RedisModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: REDIS_CLIENT,\n          useFactory: async (...args: any[]) => {\n            if (!RedisModule.redisInstance) {\n              const logger = args.find((arg) => arg instanceof Logger);\n              EnvLoader.loadEnvironment(logger);\n              const redisOptions = useFactory(...args).config;\n              RedisModule.redisInstance = new Redis(redisOptions);\n            }\n            return RedisModule.redisInstance;\n          },\n          inject,\n        },\n      ],\n      exports: [REDIS_CLIENT],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Roles.html":{"url":"classes/Roles.html","title":"class - Roles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Roles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MANAGER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROOT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"admin\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"manager\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"root\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Roles {\n  static readonly ROOT = \"root\";\n  static readonly ADMIN = \"admin\";\n  static readonly MANAGER = \"manager\";\n}\n\nexport const REQUEST_PROPS = {\n  accessToken: \"accessToken\",\n  currentUser: \"currentUser\",\n};\n\nexport const MS_EXCEPTION_ID = \"MsException\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    A guard for role-based access control.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/roles.guard.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserUtils } from \"../utils/user.utils\";\nimport { AllowedForMetadataKey } from \"../decorators/for-roles.decorator\";\nimport { UserRole } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS, Roles } from \"../constants\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n/**\n * @class RolesGuard\n * A guard for role-based access control.\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      AllowedForMetadataKey,\n      context.getHandler(),\n    );\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const userRoles: UserRole[] = req[REQUEST_PROPS.currentUser]?.roles || [];\n    if (hasSomeRole(userRoles, Roles.ROOT)) {\n      return true;\n    }\n    for (const role of userRoles) {\n      if (roles.indexOf(role.code) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetData.html":{"url":"interfaces/TargetData.html","title":"interface - TargetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TargetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            namedColumn\n                                        \n                                \n                                \n                                        \n                                            primaryColumn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namedColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namedColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\nexport class ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\nexport class ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\nexport abstract class ExplorerService {\n  abstract analyzeDatabase(): Promise;\n\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  abstract getTargetList(): Promise;\n\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmpDirCleanerProcess.html":{"url":"classes/TmpDirCleanerProcess.html","title":"class - TmpDirCleanerProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmpDirCleanerProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/default/tmp-dir-cleaner.process.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractProcess\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                getDeleteStats\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pmService: ProcessManagerService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:29\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDeleteStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeleteStats(dirStruct: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dirStruct\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filesCount: number; foldersCount: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:133\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:129\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:121\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:125\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:137\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:38\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:71\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:79\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractProcess } from \"../abstract-process\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"../process-manager.service\";\nimport * as fs from \"fs\";\nimport { KpConfig } from \"../../../../gen-src/kp.config\";\nimport { FilesUtils } from \"../../../shared/utils/files.utils\";\nimport { LOGGER } from \"../../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../../shared/modules/cache/cache.types\";\nimport readDirectoryRecursively = FilesUtils.readDirectoryRecursively;\n\nexport class TmpDirCleanerProcess extends AbstractProcess {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly pmService: ProcessManagerService,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  protected async execute() {\n    const tmpDir =\n      process.cwd() + (await this.cacheService.get(KpConfig.TMP_DIR));\n    if (!fs.existsSync(tmpDir)) {\n      await this.writeLog(`Nothing to delete`);\n      return;\n    }\n    const dirStruct = await readDirectoryRecursively(tmpDir);\n    const stats = this.getDeleteStats(dirStruct as { [k: string]: string[] });\n    await this.writeLog(\n      `Try to delete ${stats.filesCount} files and ${stats.foldersCount} folders...`,\n    );\n    await fs.promises.rm(tmpDir, { recursive: true, force: true });\n    await this.writeLog(`Tmp dir was cleaned`);\n  }\n\n  private getDeleteStats(dirStruct: { [k: string]: string[] }) {\n    let filesCount = 0;\n    let foldersCount = 0;\n    for (const key in dirStruct) {\n      filesCount += dirStruct[key].length;\n      if (!key.length) {\n        continue;\n      }\n      foldersCount++;\n    }\n    return { filesCount, foldersCount };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyRequestsMsException.html":{"url":"classes/TooManyRequestsMsException.html","title":"class - TooManyRequestsMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyRequestsMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/too-many-requests-ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/too-many-requests-ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\nexport class TooManyRequestsMsException extends MsException {\n  constructor(message?: string) {\n    super(\n      HttpStatus.TOO_MANY_REQUESTS,\n      message || \"You have made too many requests. Please try again later.\",\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedMsException.html":{"url":"classes/UnauthorizedMsException.html","title":"class - UnauthorizedMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/unauthorized-ms.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/unauthorized-ms.exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\nexport class UnauthorizedMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Unauthorized request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpsertMediaRequest.html":{"url":"interfaces/UpsertMediaRequest.html","title":"interface - UpsertMediaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpsertMediaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityIdForPatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityName\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityIdForPatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityIdForPatch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityName:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'first_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'last_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { UserRoleEntity } from \"./user-role.entity\";\nimport { User } from \"../user.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\n\n@Entity(\"users\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class UserEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  avatar: MediaEntity;\n\n  @Column(\"varchar\", { nullable: false })\n  password: string;\n\n  @Column(\"varchar\", { nullable: false, unique: true })\n  login: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  email: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  phone: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"first_name\", nullable: true })\n  firstName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"last_name\", nullable: true })\n  lastName: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  active: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  roles: UserRoleEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityPwdAndRolesSaveHandler.html":{"url":"injectables/UserEntityPwdAndRolesSaveHandler.html","title":"injectable - UserEntityPwdAndRolesSaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityPwdAndRolesSaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, payload: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { EntitySaveHandler } from \"../explorer.types\";\nimport { User } from \"../../user/user.types\";\nimport { Roles } from \"../../../shared/constants\";\n\n@Injectable()\nexport class UserEntityPwdAndRolesSaveHandler\n  implements EntitySaveHandler\n{\n  handle(target: string, payload: User, currentUser: User) {\n    if (!currentUser.roles.find((v) => v.code === Roles.ROOT)) {\n      if (payload.id) {\n        delete payload.password;\n        delete payload.login;\n      }\n      delete payload.roles;\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: UserModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.module.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UserModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicUserService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { BasicUserService } from \"./user-service-basic.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { UserModuleOptions, UserService } from \"./user.types\";\n\n@Module({})\nexport class UserModule {\n  static forRoot(\n    options: UserModuleOptions = {\n      service: BasicUserService,\n    },\n  ): DynamicModule {\n    return {\n      module: UserModule,\n      imports: [TypeOrmModule.forFeature([UserEntity])],\n      providers: [\n        {\n          provide: UserService,\n          useClass: options.service,\n        },\n      ],\n      exports: [UserService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRole.html":{"url":"interfaces/UserRole.html","title":"interface - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoleEntity.html":{"url":"entities/UserRoleEntity.html","title":"entity - UserRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user-role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { UserRole } from \"../user.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n@Entity(\"users_roles\")\nexport class UserRoleEntity implements UserRole {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByLogin\n                            \n                            \n                                    Abstract\n                                removeById\n                            \n                            \n                                    Abstract\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.subscriber.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserEntity\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.subscriber.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            InsertEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  EventSubscriber,\n  UpdateEvent,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { AbstractUserSubscriber } from \"../abstract-user-subscriber\";\n\n@EventSubscriber()\nexport class UserSubscriber\n  extends AbstractUserSubscriber\n  implements EntitySubscriberInterface\n{\n  protected readonly type = UserEntity;\n\n  listenTo() {\n    return UserEntity;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this.validateLogin(event.entity.login);\n    await this.hashPasswordIfNeeded(event);\n  }\n\n  async beforeUpdate(event: UpdateEvent) {\n    if (event.entity.login) {\n      await this.validateLogin(event.entity.login);\n    }\n    await this.hashPasswordIfNeeded(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateRequest.html":{"url":"interfaces/UserUpdateRequest.html","title":"interface - UserUpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoFileMetadata.html":{"url":"interfaces/VideoFileMetadata.html","title":"interface - VideoFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            colorRange\n                                        \n                                \n                                \n                                        \n                                            colorSpace\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            displayAspectRatio\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            frameRate\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rotate\n                                        \n                                \n                                \n                                        \n                                            sampleAspectRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frameRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frameRate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VideoFileMetadataEntity.html":{"url":"entities/VideoFileMetadataEntity.html","title":"entity - VideoFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VideoFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/video-file-metadata.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                colorRange\n                            \n                            \n                                    \n                                    \n                                colorSpace\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                displayAspectRatio\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                frameRate\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                rotate\n                            \n                            \n                                    \n                                    \n                                sampleAspectRatio\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_range', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'display_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        frameRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'frame_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rotate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'sample_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { VideoFileMetadata } from \"../file.types\";\n\n@Entity(\"file_metadata_video\")\nexport class VideoFileMetadataEntity implements VideoFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"sample_aspect_ratio\", nullable: true })\n  sampleAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"display_aspect_ratio\", nullable: true })\n  displayAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_range\", nullable: true })\n  colorRange: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_space\", nullable: true })\n  colorSpace: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"frame_rate\", nullable: true })\n  frameRate: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  rotate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WarlockModule.html":{"url":"modules/WarlockModule.html","title":"module - WarlockModule","body":"\n                   \n\n\n\n\n    Modules\n    WarlockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WarlockModule\n\n\n\ncluster_WarlockModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/warlock/warlock.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport * as Warlock from \"node-redis-warlock\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { WARLOCK } from \"./warlock.constants\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\nimport { WarlockFn } from \"./warlock.types\";\n\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: WARLOCK,\n      inject: [REDIS_CLIENT],\n      useFactory: (\n        client: Redis,\n        lockLifeTime = 10000,\n        lockKey = \"lock\",\n      ): WarlockFn => {\n        const warlock = Warlock(client);\n        return function (lockCode: string, caller: () => Promise) {\n          warlock.lock(\n            `${lockKey}:${lockCode}`,\n            lockLifeTime,\n            async (err, unlock) => {\n              if (err) {\n                return;\n              }\n              if (typeof unlock === \"function\") {\n                await caller();\n                unlock();\n              }\n            },\n          );\n        };\n      },\n    },\n  ],\n  exports: [WARLOCK],\n})\nexport class WarlockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbExportService.html":{"url":"classes/XdbExportService.html","title":"class - XdbExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exportXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exportXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportXml(params: XdbExportParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  export const rootToken = \"@root\";\n\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbImportService.html":{"url":"classes/XdbImportService.html","title":"class - XdbImportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                importFromFile\n                            \n                            \n                                    Abstract\n                                importXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFromFile(fileData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    importXml(xml: XdbObject)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  export const rootToken = \"@root\";\n\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XdbRequest.html":{"url":"interfaces/XdbRequest.html","title":"interface - XdbRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XdbRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type, Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { DynamicModule } from \"@nestjs/common/interfaces/modules/dynamic-module.interface\";\nimport { ForwardReference } from \"@nestjs/common/interfaces/modules/forward-reference.interface\";\nimport { ObjectLiteral } from \"typeorm\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { User } from \"../user/user.types\";\n\nexport interface XdbRequest {\n  target: string;\n  id: string;\n}\n\nexport type XdbRowDataValue = {\n  attrs?: {\n    key?: string;\n    uri?: string;\n    mode?: \"push\";\n  };\n  value?: string;\n  values?: string[];\n};\n\nexport type XdbRowData = {\n  [key: string]: XdbRowDataValue;\n};\n\nexport type MediaRow = {\n  name: XdbRowDataValue;\n  code: string;\n  type: string;\n  file: string;\n};\n\nexport type FileRow = {\n  name: string;\n  code: string;\n  public: boolean;\n  file: string;\n};\n\nexport type XdbAction = {\n  action: \"InsertUpdate\" | \"Media\" | \"File\" | \"Remove\" | \"Include\" | \"Query\";\n  attrs: {\n    target?: string;\n    read?: string;\n    content?: string;\n  };\n  rows: Array;\n};\n\nexport type XdbObject = {\n  schema: XdbAction[];\n};\n\nexport type XdbModuleOptions = {\n  importService: Class;\n  exportService: Class;\n  imports: Array | DynamicModule | Promise | ForwardReference\n  >;\n};\n\nexport type XdbExportParams = {\n  target: string;\n  id: string;\n  depth: number;\n  useFiles: boolean;\n  excludeProperties: string[];\n  user: User;\n};\n\nexport type XdbExportDto = {\n  file: string;\n};\n\nexport type XdbDecomposedEntity = {\n  metadata: { type: string; fieldName: string; path: string };\n  data: ObjectLiteral | Array;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlDataBridgeMiddleware.html":{"url":"injectables/XmlDataBridgeMiddleware.html","title":"injectable - XmlDataBridgeMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlDataBridgeMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseXMLFromRequest\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseXMLFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseXMLFromRequest(req)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Xdb.getXmlParser()\n                    \n                \n                    \n                        \n                                Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { Xdb } from \"./xml-data-bridge.constants\";\n\n@Injectable()\nexport class XmlDataBridgeMiddleware implements NestMiddleware {\n  private readonly parser = Xdb.getXmlParser();\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[\"content-type\"] === \"application/xml\") {\n      req.body = await this.parseXMLFromRequest(req);\n      req.body = Xdb.parseXmlBody(req.body);\n    }\n    next();\n  }\n\n  private parseXMLFromRequest(req): Promise {\n    return new Promise((resolve, reject) => {\n      let xmlData = \"\";\n      req.on(\"data\", (chunk) => {\n        xmlData += chunk;\n      });\n      req.on(\"end\", () => {\n        this.parser.parseString(xmlData, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result as object);\n          }\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XmlDataBridgeModule.html":{"url":"modules/XmlDataBridgeModule.html","title":"module - XmlDataBridgeModule","body":"\n                   \n\n\n\n\n    Modules\n    XmlDataBridgeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: XdbModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            XdbModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { XdbModuleOptions } from \"./xml-data-bridge.types\";\nimport { XmlDataBridgeImportService } from \"./xml-data-bridge-import.service\";\nimport { XmlDataBridgeExportService } from \"./xml-data-bridge-export.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { ExplorerModule } from \"../explorer/explorer.module\";\nimport { FileModule } from \"../file/file.module\";\nimport { MediaModule } from \"../media/media.module\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\n\n@Module({})\nexport class XmlDataBridgeModule {\n  static forRoot(\n    options: XdbModuleOptions = {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    },\n  ): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: options.imports,\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: options.importService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: options.exportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/axios : 3.*\n        \n            @nestjs/common : 10.*\n        \n            @nestjs/core : 10.*\n        \n            @nestjs/jwt : 10.*\n        \n            @nestjs/microservices : 10.*\n        \n            @nestjs/passport : 10.*\n        \n            @nestjs/schedule : 4.*\n        \n            adm-zip : 0.5.*\n        \n            axios : 1.*\n        \n            bcrypt : 5.*\n        \n            canvas : 2.11.*\n        \n            class-transformer : 0.5.*\n        \n            class-validator : 0.14.*\n        \n            dotenv : 16.*\n        \n            exifreader : 4.*\n        \n            ffprobe : 1.*\n        \n            ffprobe-static : 3.*\n        \n            file-type : 19.*\n        \n            heic-convert : 2.*\n        \n            imagemin : 7.*\n        \n            imagemin-mozjpeg : 9.*\n        \n            imagemin-pngquant : 9.*\n        \n            ioredis : 5.*\n        \n            music-metadata : 7.*\n        \n            node-redis-warlock : 1.*\n        \n            object-hash : 3.*\n        \n            reflect-metadata : 0.2.*\n        \n            rxjs : 7.*\n        \n            sharp : 0.33.*\n        \n            typeorm : 0.3.*\n        \n            uuid : 9.*\n        \n            xml2js : 0.6.*\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (lib/.../process.constants.ts)\n                        \n                        \n                            LogLevel   (lib/.../process.constants.ts)\n                        \n                        \n                            SortOrder   (lib/.../pageable.types.ts)\n                        \n                        \n                            Status   (lib/.../process.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/process/process.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                        \n                            \n                                 Register\n                            \n                        \n                        \n                            \n                                Value : process:register\n                            \n                        \n                        \n                            \n                                 Unregister\n                            \n                        \n                        \n                            \n                                Value : process:unregister\n                            \n                        \n                        \n                            \n                                 Start\n                            \n                        \n                        \n                            \n                                Value : process:start\n                            \n                        \n                        \n                            \n                                 Stop\n                            \n                        \n                        \n                            \n                                Value : process:stop\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 Log\n                            \n                        \n                        \n                            \n                                Value : LOG\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 Verbose\n                            \n                        \n                        \n                            \n                                Value : VERBOSE\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 Execute\n                            \n                        \n                        \n                            \n                                Value : execute\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : ready\n                            \n                        \n                        \n                            \n                                 Crashed\n                            \n                        \n                        \n                            \n                                Value : crashed\n                            \n                        \n            \n        \n\n    lib/shared/modules/pageable/pageable.types.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTODO\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2023 Alexander Kiriliuk\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesBrokerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MsClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WarlockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XmlDataBridgeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MsClientModule\n\n\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    48 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    31 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : todo description\n        \n            License : Apache-2.0\n        \n            Author : Alexander Kiriliuk\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthModuleOptions   (lib/.../auth.types.ts)\n                        \n                        \n                            CaptchaModuleOptions   (lib/.../captcha.types.ts)\n                        \n                        \n                            CaptchaResponse   (lib/.../captcha.types.ts)\n                        \n                        \n                            ColumnDataType   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerModuleOptions   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerSelectParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerTargetParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            FileModuleOptions   (lib/.../file.types.ts)\n                        \n                        \n                            FileRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MediaModuleOptions   (lib/.../media.types.ts)\n                        \n                        \n                            MediaRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MsClientOptions   (lib/.../ms-client.types.ts)\n                        \n                        \n                            UserModuleOptions   (lib/.../user.types.ts)\n                        \n                        \n                            Variation   (lib/.../explorer.constants.ts)\n                        \n                        \n                            WarlockFn   (lib/.../warlock.types.ts)\n                        \n                        \n                            XdbAction   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbDecomposedEntity   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportDto   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportParams   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbModuleOptions   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbObject   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowData   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowDataValue   (lib/.../xml-data-bridge.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.types.ts\n    \n    \n        \n            \n                \n                    \n                    AuthModuleOptions\n                \n            \n            \n                \n                    Options for configuring the authentication module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/captcha/captcha.types.ts\n    \n    \n        \n            \n                \n                    \n                    CaptchaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the CAPTCHA module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaptchaResponse\n                \n            \n            \n                \n                    Type representing a CAPTCHA response for client side.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.types.ts\n    \n    \n        \n            \n                \n                    \n                    ColumnDataType\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"date\" | \"reference\" | \"unknown\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerSelectParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerTargetParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/file/file.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/xml-data-bridge/xml-data-bridge.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileRow\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaRow\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbAction\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbDecomposedEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowDataValue\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/media/media.types.ts\n    \n    \n        \n            \n                \n                    \n                    MediaModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/shared/modules/ms-client/ms-client.types.ts\n    \n    \n        \n            \n                \n                    \n                    MsClientOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/user/user.types.ts\n    \n    \n        \n            \n                \n                    \n                    UserModuleOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Variation\n                \n            \n            \n                \n                        \"section\" | \"object\"\n\n                \n            \n        \n    \n    lib/shared/modules/warlock/warlock.types.ts\n    \n    \n        \n            \n                \n                    \n                    WarlockFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            AccessToken   (lib/.../access-token.decorator.ts)\n                        \n                        \n                            AllowedForMetadataKey   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            AUTH_ACCESS_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_REFRESH_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            BODY_TOKEN   (lib/.../xml-data-bridge-file-schema.ts)\n                        \n                        \n                            BRUTEFORCE_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceIPKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceLoginKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            CAPTCHA_CACHE_PREFIX   (lib/.../captcha.constants.ts)\n                        \n                        \n                            CATEGORY_RELATIONS   (lib/.../category.constants.ts)\n                        \n                        \n                            CONFIG_CACHE_PREFIX   (lib/.../config.constants.ts)\n                        \n                        \n                            CONFIG_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            CurrentUser   (lib/.../current-user.decorator.ts)\n                        \n                        \n                            DEFAULT_MEDIA_QUALITY   (lib/.../media.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_TYPE   (lib/.../media.constants.ts)\n                        \n                        \n                            ENTITY_SAVE_HANDLER   (lib/.../explorer.constants.ts)\n                        \n                        \n                            FILES_ENCODING   (lib/.../config.constants.ts)\n                        \n                        \n                            fileTypeModule   (lib/.../files.utils.ts)\n                        \n                        \n                            ForRoles   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            GEN_SRC_DIR   (lib/.../config.constants.ts)\n                        \n                        \n                            InitConfig   (lib/.../config.init-fn.ts)\n                        \n                        \n                            jwtAccessTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            jwtRefreshTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            KP_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOCAL_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOGGER   (lib/.../log.constants.ts)\n                        \n                        \n                            MEDIA_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MEDIA_TYPE_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MESSAGES_BROKER   (lib/.../messages-broker.constants.ts)\n                        \n                        \n                            MS_CLIENT   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            MS_EXCEPTION_ID   (lib/.../constants.ts)\n                        \n                        \n                            MSG_BUS   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            ORIGINAL   (lib/.../media.constants.ts)\n                        \n                        \n                            parser   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            PROPERTIES_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            ReadOperatorRe   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            REDIS_CLIENT   (lib/.../cache.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            REGISTERED_PROCESSES   (lib/.../process.constants.ts)\n                        \n                        \n                            REQUEST_PROPS   (lib/.../constants.ts)\n                        \n                        \n                            rootToken   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            SimpleJsonTransformer   (lib/.../simple-json.transformer.ts)\n                        \n                        \n                            SVG   (lib/.../media.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_BASIC   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_FULL   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_OBJECT   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_SECTION   (lib/.../explorer.constants.ts)\n                        \n                        \n                            THUMB   (lib/.../media.constants.ts)\n                        \n                        \n                            UNKNOWN_IP   (lib/.../auth.constants.ts)\n                        \n                        \n                            USER_RELATIONS   (lib/.../user.constants.ts)\n                        \n                        \n                            WARLOCK   (lib/.../warlock.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_A\"\n                    \n                \n\n            \n                \n                    Error message for access token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"access_token\"\n                    \n                \n\n            \n                \n                    Prefix for access token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt\"\n                    \n                \n\n            \n                \n                    Prefix for JWT cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refresh_token\"\n                    \n                \n\n            \n                \n                    Prefix for refresh token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BRUTEFORCE_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bruteforce\"\n                    \n                \n\n            \n                \n                    Prefix for brute force protection cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceIPKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by IP address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtAccessTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for an access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtRefreshTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for a refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_R\"\n                    \n                \n\n            \n                \n                    Error message for refresh token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNKNOWN_IP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"unknown\"\n                    \n                \n\n            \n                \n                    Placeholder for unknown IP addresses.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/access-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.accessToken];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    lib/shared/decorators/for-roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedForMetadataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"for_roles\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) =>\n  SetMetadata(AllowedForMetadataKey, roles)\n                    \n                \n\n            \n                \n                    ForRoles custom decorator for defining roles allowed to access a route.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge-file-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BODY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `%%%body%%%`\n                    \n                \n\n\n        \n    \n\n    lib/common/captcha/captcha.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CAPTCHA_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"captcha\"\n                    \n                \n\n            \n                \n                    The prefix used for storing CAPTCHA data.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/category/category.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"icon\",\n  \"icon.name\",\n  \"icon.name.lang\",\n  \"icon.files\",\n  \"icon.files.format\",\n  \"icon.type\",\n  \"icon.type.ext\",\n  \"name\",\n  \"name.lang\",\n]\n                    \n                \n\n\n        \n    \n\n    lib/common/config/config.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"config\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".config.ts\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_ENCODING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"utf-8\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GEN_SRC_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"gen-src\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KP_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"kp.properties\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"local.properties\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROPERTIES_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".properties\"\n                    \n                \n\n\n        \n    \n\n    lib/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.currentUser];\n  },\n)\n                    \n                \n\n\n        \n    \n\n    lib/common/media/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_QUALITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 78\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"name\",\n  \"name.lang\",\n  \"type\",\n  \"type.formats\",\n  \"type.ext\",\n  \"files\",\n  \"files.format\",\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_TYPE_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"ext\", \"formats\"]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORIGINAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"original\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"svg\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THUMB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"thumb\"\n                    \n                \n\n\n        \n    \n\n    lib/common/explorer/explorer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTITY_SAVE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"ENTITY_SAVE_HANDLER\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_BASIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n  ]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_FULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.description\",\n    \"columns.description.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n    \"canRead\",\n    \"canRead.name\",\n    \"canRead.name.lang\",\n    \"canWrite\",\n    \"canWrite.name\",\n    \"canWrite.name.lang\",\n  ]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_SECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n\n        \n    \n\n    lib/shared/utils/files.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileTypeModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as { lib: typeof import(\"file-type\") }\n                    \n                \n\n\n        \n    \n\n    lib/common/config/config.init-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InitConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(ConfigModule);\n  await app.init();\n  const logger: Logger = app.select(LogModule).get(LOGGER);\n  EnvLoader.loadEnvironment(logger);\n  const configService = app.select(ConfigModule).get(ConfigService);\n  const genCnfDir = `${process.cwd()}/${process.env.CONFIG_SRC_DIR}`;\n  await configService.initWithPropertiesFiles(genCnfDir);\n  await app.close();\n  process.exit(0);\n}\n                    \n                \n\n\n        \n    \n\n    lib/shared/modules/log/log.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOGGER_SERVICE\")\n                    \n                \n\n\n        \n    \n\n    lib/shared/modules/messages-broker/messages-broker.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES_BROKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BROKER\")\n                    \n                \n\n\n        \n    \n\n    lib/shared/modules/ms-client/ms-client.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MS_CLIENT\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MSG_BUS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BUS\")\n                    \n                \n\n\n        \n    \n\n    lib/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_EXCEPTION_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"MsException\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  accessToken: \"accessToken\",\n  currentUser: \"currentUser\",\n}\n                    \n                \n\n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReadOperatorRe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\$\\{@read:([^}]*)}/\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"@root\"\n                    \n                \n\n\n        \n    \n\n    lib/shared/modules/cache/cache.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"REDIS_CLIENT\")\n                    \n                \n\n\n        \n    \n\n    lib/common/process/process.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTERED_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n\n        \n    \n\n    lib/shared/transformers/simple-json.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SimpleJsonTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValueTransformer\n\n                    \n                \n                \n                    \n                        Default value : {\n  from(value: string | object) {\n    if (typeof value === \"string\") {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return undefined;\n      }\n    }\n    return value;\n  },\n  to(value: object) {\n    return value;\n  },\n}\n                    \n                \n\n\n        \n    \n\n    lib/common/user/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"avatar\",\n  \"avatar.name\",\n  \"avatar.name.lang\",\n  \"avatar.files\",\n  \"avatar.files.format\",\n  \"avatar.type\",\n  \"avatar.type.ext\",\n  \"roles\",\n  \"roles.name\",\n  \"roles.name.lang\",\n]\n                    \n                \n\n\n        \n    \n\n    lib/shared/modules/warlock/warlock.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WARLOCK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"WARLOCK\")\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties.html":{"url":"additional-documentation/properties.html","title":"additional-page - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/kp.properties.html":{"url":"additional-documentation/properties/kp.properties.html","title":"additional-page - kp.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/auth.properties.html":{"url":"additional-documentation/properties/auth.properties.html","title":"additional-page - auth.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization configuration\nThe auth.properties configuration file contains settings for authentication and authorization using JSON Web Tokens (JWT).\n\nauth.jwt.secret\n\nDescription: The secret key used to sign the JWT.\nType: string\nExample: jwt_secret_key\n\n\nauth.access.token.expiration\n\nDescription: The lifetime of the access token.\nType: number\nExample: 600\n\n\nNote: The access token will be valid for 10 minutes (600 seconds).\n\nauth.refresh.token.expiration\n\nDescription: The lifetime of the update token.\nType: number\nExample: 3600\n\n\nNote: The upgrade token will be valid for 1 hour (600 seconds * 6).\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/bruteforce.properties.html":{"url":"additional-documentation/properties/bruteforce.properties.html","title":"additional-page - bruteforce.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrute force protection configuration\nThe bruteforce.properties configuration file contains settings for protecting against brute force attacks.\n\nbruteforce.enabled\n\nDescription: Enables or disables brute force protection.\nType: boolean\nExample: true\n\n\nbruteforce.max.attempts\n\nDescription: Maximum number of login attempts before blocking.\nType: number\nExample: 3\n\n\nbruteforce.block.duration\n\nDescription: Duration for which a user is blocked after exceeding the maximum number of attempts.\nType: number\nExample: 300\nNote: The user will be blocked for 5 minutes (300 seconds).\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/captcha.properties.html":{"url":"additional-documentation/properties/captcha.properties.html","title":"additional-page - captcha.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCAPTCHA Configuration\nThe captcha.properties configuration file contains settings for CAPTCHA generation and validation.\n\ncaptcha.enabled\n\nDescription: Boolean flag indicating if CAPTCHA is enabled.\nType: boolean\nExample: true\n\n\ncaptcha.expiration\n\nDescription: Expiration time for CAPTCHA entries in the cache.\nType: number\nExample: 300\nNote: The CAPTCHA will be valid for 5 minutes (300 seconds).\n\n\ncaptcha.font.path\n\nDescription: Path to the font file used for graphical CAPTCHA.\nType: string\nExample: /lib/common/captcha/montserrat.ttf\n\n\ncaptcha.font.family\n\nDescription: Font family used for graphical CAPTCHA.\nType: string\nExample: Montserrat\n\n\ncaptcha.type\n\nDescription: Type of CAPTCHA to be used.\nType: string\nExample: default\n\n\ncaptcha.google.public.key\n\nDescription: Public key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\ncaptcha.google.secret.key\n\nDescription: Secret key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
